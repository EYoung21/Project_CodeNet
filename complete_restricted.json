{
  "problems": [
    {
      "basicInfo": {
        "questionId": "p00001",
        "title": "List of Top 3 Hills",
        "description": "There is a data which provides heights (in meter) of mountains. The data is only for ten mountains. Write a program which prints heights of the top three mountains in descending order. 0 ≤ height of mountain (integer) ≤ 10,000",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "array",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00001.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0 ≤ height of mountain (integer) ≤ 10,000",
          "ranges": "0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1819\n2003\n876\n2840\n1723\n1673\n3776\n2848\n1592\n922",
            "output": "Height of the 1st mountain\nHeight of the 2nd mountain\nHeight of the 3rd mountain",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00001.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00001"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00002",
        "title": "Digit Number",
        "description": "Write a program which computes the digit number of sum of two integers a and b. There are several test cases. Each test case consists of two non-negative integers a and b which are separeted by a space in a line. The input terminates with EOF. Print the number of digits of a + b for each data set.",
        "difficulty": "Easy",
        "category": "Math & Logic",
        "tags": [
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00002.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0 ≤ a, b ≤ 1,000,000\nThe number of datasets ≤ 200",
          "ranges": "1; 200; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 7\n1 99\n1000 999",
            "output": "Print the number of digits of a + b for each data set.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00002.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00002"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00003",
        "title": "Is it a Right Triangle?",
        "description": "Write a program which judges wheather given length of three side form a right triangle. Print \"YES\" if the given sides (integers) form a right triangle, \"NO\" if not so. For each data set, print \"YES\" or \"NO\".",
        "difficulty": "Easy",
        "category": "Geometry",
        "tags": [
          "geometry",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00003.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ length of the side ≤ 1,000\n N ≤ 1,000",
          "ranges": "1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n4 3 5\n4 3 6\n8 8 8",
            "output": "For each data set, print \"YES\" or \"NO\".",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00003.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00003"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00005",
        "title": "GCD and LCM",
        "description": "Write a program which computes the greatest common divisor (GCD) and the least common multiple (LCM) of given a and b. For each data set, print GCD and LCM separated by a single space in a line.",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00005.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0 < a, b ≤ 2,000,000,000\n LCM(a, b) ≤ 2,000,000,000\n The number of data sets ≤ 50",
          "ranges": "2; 50; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "8 6\n50000000 30000000",
            "output": "For each data set, print GCD and LCM separated by a single space in a line.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00005.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00005"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00115",
        "title": "宇宙船 UAZ アドバンス号",
        "description": "恒星歴 2005.11.5。あなたは宇宙船 UAZ アドバンス号の艦長として敵の宇宙船と交戦しようとしています。 幸い敵の宇宙船はまだこちらに気付かずに静止しています。また、すでに敵の宇宙座標は判明しており強力な直線のビームを放つ「フェザー砲」は発射準備を完了しています。あとは、発射命令を出すばかりです。 ところが、宇宙空間には、敵の設置したエネルギーバリアが存在しています。バリアは三角形をしており「フェザー砲」のビームをはね返してしまいます。また、ビームがバリアに当たれば敵に気付かれて逃げられてしまいます。事前に命中すると判定できなければ、発射命令は出せません。 そこで、UAZ アドバンス号、敵、バリアの位置の宇宙座標(3次元座標 x, y, z) を入力して、ビームがバリアをさけて敵に命中する場合は \"HIT\"、バリアに当たってしまう場合\"MISS\"と出力するプログラムを作成してください。 ただし、バリアはアドバンス号から 3 角形に見えるものだけが対象であり、線分につぶれて見えるものはないものとします。また、バリアは 3 角形の頂点を含む境界でも有効であり、ビームをはね返すものとします。また、敵がバリア内にいる場合は\"MISS\"と出力して下さい。 入力データの形式は以下のとおりです：\n\n1 行目は、UAZ アドバンス号の座標 (x, y, z) (整数、半角空白区切り)\n2 行目は、敵の座標 (x, y, z) (整数、半角空白区切り)\n3 行目は、バリアの頂点 1 の座標 (x, y, z) (整数、半角空白区切り)\n4 行目は、バリアの頂点 2 の座標 (x, y, z ) (整数、半角空白区切り)\n5 行目は、バリアの頂点 3 の座標 (x, y, z ) (整数、半角空白区切り) HIT または MISS と１行に出力してください。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00115.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "-100 ≤ x, y, z ≤ 100\nUAZ アドバンス号と敵が同じ位置にいることはない。",
          "ranges": "100; 100"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "-10 0 0\n10 0 0\n0 10 0\n0 10 10\n0 0 10",
            "output": "HIT または MISS と１行に出力してください。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00115.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00115"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00559",
        "title": "Foehn Phenomena",
        "description": "In the Kingdom of IOI, the wind always blows from sea to land. There are $N + 1$ spots numbered from $0$ to $N$. The wind from Spot $0$ to Spot $N$ in order. Mr. JOI has a house at Spot $N$. The altitude of Spot $0$ is $A_0 = 0$, and the altitude of Spot $i$ ($1 \\leq i \\leq N$) is $A_i$. The wind blows on the surface of the ground. The temperature of the wind changes according to the change of the altitude. The temperature of the wind at Spot $0$, which is closest to the sea, is $0$ degree. For each $i$ ($0 \\leq i \\leq N - 1$), the change of the temperature of the wind from Spot $i$ to Spot $i + 1$ depends only on the values of $A_i$ and $A_{i+1}$ in the following way: The tectonic movement is active in the land of the Kingdom of IOI. You have the data of tectonic movements for $Q$ days. In the $j$-th ($1 \\leq j \\leq Q$) day, the change of the altitude of Spot $k$ for $L_j \\leq k \\leq R_j$ ($1 \\leq L_j \\leq R_j \\leq N$) is described by $X_j$. If $X_j$ is not negative, the altitude increases by $X_j$. If $X_j$ is negative, the altitude decreases by $|X_j|$. Your task is to calculate the temperature of the wind at the house of Mr. JOI after each tectonic movement. Given the data of tectonic movements, write a program which calculates, for each $j$ ($1 \\leq j \\leq Q$), the temperature of the wind at the house of Mr. JOI after the tectonic movement on the $j$-th day. Read the following data from the standard input. Write $Q$ lines to the standard output. The $j$-th line ($1 \\leq j \\leq Q$) of output contains the temperature of the wind\nat the house of Mr. JOI after the tectonic movement on the $j$-th day. All input data satisfy the following conditions. Initially, the altitudes of the Spot 0, 1, 2, 3 are 0, 4, 1, 8, respectively. After the tectonic movement on the first day, the altitudes become 0, 6, 3, 8, respectively. At that moment, the temperatures of the wind are 0, -6, 0, -5,respectively. The 16th Japanese Olympiad in Informatics (JOI 2016/2017)\nFinal Round The 16th Japanese Olympiad in Informatics (JOI 2016/2017)\nFinal Round",
        "difficulty": "Easy",
        "category": "Math & Logic",
        "tags": [
          "math",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00559.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "All input data satisfy the following conditions. $1 \\leq N \\leq 200 000．$\n$1 \\leq Q \\leq 200 000．$\n$1 \\leq S \\leq 1 000 000．$\n$1 \\leq T \\leq 1 000 000．$\n$A_0 = 0．$\n$-1 000 000 \\leq A_i \\leq 1 000 000 (1 \\leq i \\leq N)．$\n$1 \\leq L_j \\leq R_j \\leq N (1 \\leq j \\leq Q)．$\n$ -1 000 000 \\leq X_j \\leq 1 000 000 (1 \\leq j \\leq Q)．$",
          "ranges": "0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 5 1 2\n0\n4\n1\n8\n1 2 2\n1 1 -2\n2 3 5\n1 2 -1\n1 3 5",
            "output": "-5\n-7\n-13\n-13\n-18 Initially, the altitudes of the Spot 0, 1, 2, 3 are 0, 4, 1, 8, respectively. After the tectonic movement on the first day, the altitudes become 0, 6, 3, 8, respectively. At that moment, the temperatures of the wind are 0, -6, 0, -5,respectively.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00559.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00559"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00560",
        "title": "Semiexpress",
        "description": "The JOI Railways is the only railway company in the Kingdom of JOI. There are $N$ stations numbered from $1$ to $N$ along a railway. Currently, two kinds of trains are operated; one is express and the other one is local. A local train stops at every station. For each $i$ ($1 \\leq i < N$), by a local train, it takes $A$ minutes from the station $i$ to the station ($i + 1$). An express train stops only at the stations $S_1, S_2, ..., S_M$ ($1 = S_1 < S_2 < ... < S_M = N$). For each $i$ ($1 \\leq i < N$), by an express train, it takes $B$ minutes from the station $i$ to the station ($i + 1$). The JOI Railways plans to operate another kind of trains called \"semiexpress.\" For each $i$ ($1 \\leq i < N$), by a semiexpress train, it takes $C$ minutes from the station $i$ to the station ($i + 1$). The stops of semiexpress trains are not yet determined. But they must satisfy the following conditions: The JOI Railways wants to maximize the number of stations (except for the station 1) to which we can travel from the station 1 within $T$ minutes. The JOI Railways plans to determine the stops of semiexpress trains so that this number is maximized. We do not count the standing time of trains. When we travel from the station 1 to another station, we can take trains only to the direction where the numbers of stations increase. If several kinds of trains stop at the station $i$ ($2 \\leq i \\leq N - 1$), you can transfer between any trains which stop at that station. When the stops of semiexpress trains are determined appropriately, what is the maximum number of stations (except for the station 1) to which we can travel from the station 1 within $T$ minutes? Given the number of stations of the JOI Railways, the stops of express trains, the speeds of the trains, and maximum travel time, write a program which calculates the maximum number of stations which satisfy the condition on the travel time. Read the following data from the standard input. Write one line to the standard output. The output contains the maximum number of stations satisfying the condition on the travel time. All input data satisfy the following conditions. In this sample input, there are 10 stations of the JOI Railways. An express train stops at three stations 1, 6, 10. Assume that the stops of an semiexpress train are 1, 5, 6, 8, 10. Then, among the stations 2, 3, ...10, we can travel from the station 1 to every station except for the station 9 within 30 minutes. For some $i$, the travel time and the route from the station 1 to the station $i$ are as follows: The 16th Japanese Olympiad in Informatics (JOI 2016/2017)\nFinal Round The 16th Japanese Olympiad in Informatics (JOI 2016/2017)\nFinal Round",
        "difficulty": "Easy",
        "category": "Math & Logic",
        "tags": [
          "math",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00560.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "All input data satisfy the following conditions. $2 \\leq N \\leq 1 000 000 000．$\n$2 \\leq M \\leq K \\leq 3 000．$\n$K \\leq N．$\n$1 \\leq B < C < A \\leq 1 000 000 000．$\n$1 \\leq T \\leq 10^{18}$\n$1 = S_1 < S_2 < ... < S_M = N$",
          "ranges": "1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "10 3 5\n10 3 5\n30\n1\n6\n10",
            "output": "8 In this sample input, there are 10 stations of the JOI Railways. An express train stops at three stations 1, 6, 10. Assume that the stops of an semiexpress train are 1, 5, 6, 8, 10. Then, among the stations 2, 3, ...10, we can travel from the station 1 to every station except for the station 9 within 30 minutes. For some $i$, the travel time and the route from the station 1 to the station $i$ are as follows: From the station 1 to the station 3, we can travel using a local train only. The travel time is 20 minutes.\n From the station 1 to the station 7, we travel from the station 1 to the station 6 by an express train, and transfer to a local train. The travel time is 25 minutes.\n From the station 1 to the station 8, we travel from the station 1 to the station 6 by an express train, and transfer to a semiexpress train. The travel time is 25 minutes.\n From the station 1 to the station 9, we travel from the station 1 to the station 6 by an express train, from the station 6 to the station 8 by a semiexpress train, and from the station 8 to the station 9 by a local train. In total, the travel time is 35 minutes.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00560.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00560"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00576",
        "title": "すごろくと駒 (Sugoroku and Pieces)",
        "description": "JOI 君はすごろくを持っている．このすごろくは 2019 個のマスが横一列に並んだ形をしている．これらのマスには，左端のスタートマスから右端のゴールマスへと順に 1 から 2019 までの番号がついている． 現在このすごろくの上には，N 個の駒が置かれている．これらの駒には，スタートに近い順に 1 から N までの番号がついている．駒 i (1 ≦ i ≦ N) は，マス X_i に置かれている．すべての駒は異なるマスに置かれている． JOI 君はこれから M 回の操作を行う．j 回目 (1 ≦ j ≦ M) の操作では，駒 A_j を 1 マス先へ進める．ただし，移動元のマスがゴールマスであった場合，もしくは移動先のマスに別の駒が置かれている場合，駒 A_j は進まず，位置は変わらない． すべての操作が終了した時点で，各駒が置かれているマスを求めよ． 入力\n入力は以下の形式で標準入力から与えられる．\nN\nX_1 X_2 ... X_N\nM\nA_1 A_2 ... A_M 出力\nN 行出力せよ．i 行目 (1 ≦ i ≦ N) には，すべての操作が終了した時点で駒 i が置かれているマスの番号を出力せよ． 1 回目の操作では，駒 1 をマス 2 からマス 3 へと進めようする．しかし，駒 2 がすでにマス 3 に置かれているため，駒 1 は進まない． 2 回目の操作では，駒 3 をマス 6 からマス 7 へと進める． すべての操作が終了した時点で，駒 1 はマス 2 に，駒 2 はマス 3 に，駒 3 はマス 7 に置かれている． 3 回目の操作が完了した時点で，駒 2 はマス 2019 に置かれている．そのため，4 回目の操作では駒 2 は進まない． 情報オリンピック日本委員会作 『第 18 回日本情報オリンピック JOI 2018/2019 予選競技課題』 情報オリンピック日本委員会作 『第 18 回日本情報オリンピック JOI 2018/2019 予選競技課題』",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00576.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≦ N ≦ 100\n1 ≦ X_1 < X_2 < ... < X_N ≦ 2019\n1 ≦ M ≦ 100\n1 ≦ A_j ≦ N (1 ≦ j ≦ M)",
          "ranges": "1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n2 3 6\n2\n1 3",
            "output": "入力\n入力は以下の形式で標準入力から与えられる．\nN\nX_1 X_2 ... X_N\nM\nA_1 A_2 ... A_M 出力\nN 行出力せよ．i 行目 (1 ≦ i ≦ N) には，すべての操作が終了した時点で駒 i が置かれているマスの番号を出力せよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00576.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00576"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00586",
        "title": "A + B Problem",
        "description": "Compute A + B. The input will consist of a series of pairs of integers A and B separated by a space, one pair of integers per line. The input will be terminated by EOF. For each pair of input integers A and B, you must output the sum of A and B in one line.",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00586.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "-1000 ≤ A, B ≤ 1000",
          "ranges": "1000; 1000"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1 2\n10 5\n100 20",
            "output": "For each pair of input integers A and B, you must output the sum of A and B in one line.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00586.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00586"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00602",
        "title": "Problem H: Fibonacci Sets",
        "description": "Fibonacci number f(i) appear in a variety of puzzles in nature and math, including packing problems, family trees or Pythagorean triangles. They obey the rule f(i) = f(i - 1) + f(i - 2), where we set f(0) = 1 = f(-1). Let V and d be two certain positive integers and be N ≡ 1001 a constant. Consider a set of V nodes, each node i having a Fibonacci label F[i] = (f(i) mod N) assigned for i = 1,..., V ≤ N. If |F(i) - F(j)| < d, then the nodes i and j are connected. Given V and d, how many connected subsets of nodes will you obtain? Figure 1: There are 4 connected subsets for V = 20 and d = 100. Each data set is defined as one line with two integers as follows: Line 1: Number of nodes V and the distance d.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00602.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ V ≤ 1000\n1 ≤ d ≤ 150",
          "ranges": "1 1000; 1 150; 1000; 150; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 5\n50 1\n13 13",
            "output": "Output line contains one integer - the number of connected subsets - for each input line.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00602.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00602"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00605",
        "title": "Problem A: Vampirish Night",
        "description": "There is a vampire family of N members.  Vampires are also known as extreme gourmets.  Of course vampires' foods are human blood.  However, not all kinds of blood is acceptable for them.  Vampires drink blood that K blood types of ones are mixed, and each vampire has his/her favorite amount for each blood type. You, cook of the family, are looking inside a fridge to prepare dinner.  Your first task is to write a program that judges if all family members' dinner can be prepared using blood in the fridge. N and K indicate the number of family members and the number of blood types respectively. Si is an integer that indicates the amount of blood of the i-th blood type that is in a fridge. Bij is an integer that indicates the amount of blood of the j-th blood type that the i-th vampire uses. The end of input is indicated by a case where N = K = 0.  You should print nothing for this data set. For each set, print \"Yes\" if everyone's dinner can be prepared using blood in a fridge, \"No\" otherwise (without quotes).",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00605.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "Judge data includes at most 100 data sets.\n1 ≤ N ≤ 100\n1 ≤ K ≤ 100\n0 ≤ Si ≤ 100000\n0 ≤ Bij ≤ 1000",
          "ranges": "1 100; 1 100; 0 100000; 0 1000; 100; 100; 100000; 1000; 1; 1; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 3\n5 4 5\n1 2 3\n3 2 1\n3 5\n1 2 3 4 5\n0 1 0 1 2\n0 1 1 2 2\n1 0 3 1 1\n0 0",
            "output": "For each set, print \"Yes\" if everyone's dinner can be prepared using blood in a fridge, \"No\" otherwise (without quotes).",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00605.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00605"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00606",
        "title": "Problem B: Cleaning Robot",
        "description": "Dr. Asimov, a robotics researcher, loves to research, but hates houseworks and his house were really dirty. So, he has developed a cleaning robot. As shown in the following figure, his house has 9 rooms, where each room is identified by an alphabet: The robot he developed operates as follows: A battery charger for the robot is in a room. It would be convenient for Dr. Asimov if the robot stops at the battery room when its battery run down. Your task is to write a program which computes the probability of the robot stopping at the battery room. The input consists of several datasets. Each dataset consists of: n is an integer that indicates the initial battery point. s, t, b are alphabets respectively represent the room where the robot is initially, the battery room, and the junk room. The input ends with a dataset which consists of single 0 for n. Your program should not output for this dataset. For each dataset, print the probability as a floating point number in a line. The answer may not have an error greater than 0.000001.",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00606.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "Judge data includes at most 100 data sets.\nn ≤ 15\ns, t, b are distinct.",
          "ranges": "15"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1\nE A C\n1\nE B C\n2\nE A B\n0",
            "output": "For each dataset, print the probability as a floating point number in a line. The answer may not have an error greater than 0.000001.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00606.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00606"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00607",
        "title": "Problem C: Emacs-like Editor",
        "description": "Emacs is a text editor which is widely used by many programmers. The advantage of Emacs is that we can move a cursor without arrow keys and the mice. For example, the cursor can be moved right, left, down, and up by pushing f, b, n, p with the Control Key respectively. In addition, cut-and-paste can be performed without the mouse. Your task is to write a program which simulates key operations in the Emacs-like editor. The program should read a text and print the corresponding edited text. The text consists of several lines and each line consists of zero or more alphabets and space characters. A line, which does not have any character, is a blank line. The editor has a cursor which can point out a character or the end-of-line in the corresponding line. The cursor can also point out the end-of-line in a blank line. In addition, the editor has a buffer which can hold either a string (a sequence of characters) or a linefeed. The editor accepts the following set of commands (If the corresponding line is a blank line, the word \"the first character\" should be \"the end-of-line\"): The cursor position just after reading the text is the beginning of the first line, and the initial buffer is empty. This line should not be included in the text. Next part gives a series of commands. Each command is given in a line. The end of the commands is indicated by a character '-'. For the input text, print the text edited by the commands.",
        "difficulty": "Easy",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "string",
          "simulation",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00607.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "The number of lines in the text given as input ≤ 10\nThe number of characters in a line given as input ≤ 20 \nThe number of commands ≤ 300 \nThe maximum possible number of lines in the text during operations ≤ 100 \nThe maximum possible number of characters in a line during operations ≤ 1000",
          "ranges": "10; 20; 300; 100; 1000"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "hyo\nni\nEND_OF_TEXT\nf\nd\nf\nf\nk\np\np\ne\ny\na\nk\ny\ny\nn\ny\n-",
            "output": "For the input text, print the text edited by the commands.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00607.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00607"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00608",
        "title": "Problem D: Indian Puzzle",
        "description": "In the Indian Puzzle, one is intended to fill out blanks with numbers and operators in a n by n grid in order to make equalities in the grid true (See Figure 1). Figure 1 A blank cell should be filled out with a number (from 0 to 9 inclusive) or an operator (+, -, ×, ÷, =), and black cells split equalities. Initially, some cells are already filled with numbers or operators. The objective of this puzzle is to fill out all the blank cells with numbers (from 0 to 9 inclusive) and operators (+, -, ×, ÷) in a given list. All the numbers and operators in the list must be used to fill out the blank cells. A equality is organized by more than 2 consecutive left-to-right or top-to-bottom white cells. You can assume that a equality contains exactly one cell with '=' which connects two expressions. The expressions conform to the order of operations and semantics of conventional four arithmetic operations. First, do all multiplication and division, starting from the left (top). Then, do all addition and subtraction, starting from the left (top). In addition, this puzzle has the following rules: In a formal description, the equality must conform the syntax in the following BNF: Of course, puzzle creators must make solvable puzzle.\nYour task is to write a program which verifies whether given puzzle is solvable or not. The integers H and W are the numbers of rows and columns of the grid, respectively. H × W characters denote the grid which contains '.' representing a blank cell, '#' representing a black cell, numbers (from 0 to 9 inclusive), operators('+','-', '*', '/', '=')(× is represented by '*' and ÷ is represented by '/'). The integer n is the number of characters in the list. The last line of a dataset contains n characters indicating numbers and operators for the blank cells. The end of input is indicated by a line containing two zeros separated by a space. For each dataset, print \"Yes\" if the given puzzle is solvable, \"No\" if not.",
        "difficulty": "Easy",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "string",
          "math",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00608.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "Judge data includes at most 100 data sets.\nH, W ≤ 10\nn ≤ 10",
          "ranges": "10; 10"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 5\n4=..2\n+#=#+\n.-2=.\n=#*#=\n.-.=3\n6\n7 3 1 4 / 8\n1 6\n8..3=2\n2\n2 +\n0 0",
            "output": "For each dataset, print \"Yes\" if the given puzzle is solvable, \"No\" if not.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00608.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00608"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00609",
        "title": "Problem E: Amazing Graze",
        "description": "In 2215 A.D., a war between two planets, ACM and ICPC, is being more and more intense. ACM introduced new combat planes.  These planes have a special system that is called Graze, and fighting power of a plane increases when it is close to energy bullets that ICPC combat planes shoot. Both combat planes and energy bullets have a shape of a sphere with a radius of R.  Precisely, fighting power of a plane is equivalent to the number of energy bullet where distance from the plane is less than or equals to 2R. You, helper of captain of intelligence units, are asked to analyze a war situation.  The information given to you is coordinates of AN combat planes and BN energy bullets.  Additionally, you know following things: Your task is to write a program that outputs total fighting power of all combat planes. AN, BN, R are integers that describe the number of combat planes, energy bullets, and their radius respectively. Following AN lines indicate coordinates of the center of combat planes.  Each line has two integers that describe x-coordinate and y-coordinate. Following BN lines indicate coordinates of the center of energy bullets, in the same format as that of combat planes. For each data set, output the total fighting power.",
        "difficulty": "Easy",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00609.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "Jude data includes at most 20 data sets.\n1 ≤ AN, BN ≤ 100000\n0 < R ≤ 10 \n0 ≤ (coordinate values) < 10000",
          "ranges": "0 10; 100000; 10; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 2 1\n0 0\n0 4\n2 2\n2 8\n0 0 0",
            "output": "For each data set, output the total fighting power.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00609.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00609"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00610",
        "title": "Problem F: Cleaning Robot 2.0",
        "description": "Dr. Asimov, a robotics researcher, released cleaning robots he developed (see Problem B).  His robots soon became very popular and he got much income.  Now he is pretty rich.  Wonderful. First, he renovated his house.  Once his house had 9 rooms that were arranged in a square, but now his house has N × N rooms arranged in a square likewise.  Then he laid either black or white carpet on each room. Since still enough money remained, he decided to spend them for development of a new robot.  And finally he completed. The new robot operates as follows: Figure 1. An example of the room Doctor's house has become larger by the renovation.  Therefore, it is not efficient to let only one robot clean.  Fortunately, he still has enough budget.  So he decided to make a number of same robots and let them clean simultaneously. The robots interacts as follows: On every room dust stacks slowly but constantly.  To keep his house pure, he wants his robots to work so that dust that stacked on any room at any time will eventually be cleaned. After thinking deeply, he realized that there exists a carpet layout such that no matter how initial placements of robots are, this condition never can be satisfied.  Your task is to output carpet layout that there exists at least one initial placements of robots that meets above condition.  Since there may be two or more such layouts, please output the K-th one lexicographically. Here, N and K are integers that are explained in the problem description. The end of input is described by a case where N = K = 0.  You should output nothing for this case. Print the K-th carpet layout if exists, \"No\" (without quotes) otherwise. The carpet layout is denoted by N lines of string that each has exactly N letters.  A room with black carpet and a room with white carpet is denoted by a letter 'E' and '.' respectively. Lexicographically order of carpet layout is defined as that of a string that is obtained by concatenating the first row, the second row, ..., and the N-th row in this order.",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "string",
          "math",
          "sorting",
          "graph",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00610.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "Judge data consists of at most 100 data sets.\n1 ≤ N < 64\n1 ≤ K <  263",
          "ranges": "1 64; 1 263; 64; 263; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 1\n2 3\n6 4\n0 0",
            "output": "Print the K-th carpet layout if exists, \"No\" (without quotes) otherwise. The carpet layout is denoted by N lines of string that each has exactly N letters.  A room with black carpet and a room with white carpet is denoted by a letter 'E' and '.' respectively. Lexicographically order of carpet layout is defined as that of a string that is obtained by concatenating the first row, the second row, ..., and the N-th row in this order. Output a blank line after each data set.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00610.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00610"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00611",
        "title": "Problem G: Building Water Ways",
        "description": "In ancient times, Romans constructed numerous water ways to supply water to cities and industrial sites. These water ways were amongst the greatest engineering feats of the ancient world. These water ways contributed to social infrastructures which improved people's quality of life. On the other hand, problems related to the water control and the water facilities are still interesting as a lot of games of water ways construction have been developed. Your task is to write a program which reads a map and computes the minimum possible cost of constructing water ways from sources to all the cities. As shown in Figure 1, the map is represented by H × W grid cells, where each cell represents source, city, flatland, or obstacle. You can construct only one water way from a source, but there are no limitations on the length of that water way and it can provide water to any number of cities located on its path. You can not construct water ways on the obstacles. Your objective is to bring water to all the city and minimize the number of cells which represent water ways. In the Figure 1, water ways are constructed in 14 cells which is the minimum cost. The water ways must satisfy the following conditions: The input consists of multiple datasets. Each dataset consists of: The integers H and W are the numbers of rows and columns of the map. H × W characters denote the cells which contain: The end of input is indicated by a line containing two zeros separated by a space. For each dataset, print the minimum cost to construct the water ways.",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "string",
          "math",
          "sorting",
          "graph",
          "simulation",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00611.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "Judge data contains at most 60 data sets.\n3 ≤ H, W ≤ 10\n1 ≤ the number of sources, the number of cities ≤ 8\nThe map is surrounded by obstacles.\nSources are not adjacent each other(on the left, right, top and bottom)\nThere is a solution.",
          "ranges": "10; 8; 3; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 8\n########\n#P....*#\n########\n10 10\n##########\n#P.......#\n#..#*....#\n#..#*.#.*#\n#.....#*.#\n#*.......#\n#..##....#\n#...#.P..#\n#P......P#\n##########\n0 0",
            "output": "For each dataset, print the minimum cost to construct the water ways.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00611.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00611"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00612",
        "title": "Problem H: Hedro's Hexahedron",
        "description": "Dr. Hedro is astonished.  According to his theory, we can make sludge that can dissolve almost everything on the earth.  Now he's trying to produce the sludge to verify his theory. The sludge is produced in a rectangular solid shaped tank whose size is N × N × 2.  Let coordinate of two corner points of tank be (-N/2, -N/2, -1), (N/2, N/2, 1) as shown in Figure 1. Figure 1 Doctor pours liquid that is ingredient of the sludge until height of the liquid becomes 1.  Next, he get a lid on a tank and rotates slowly, without ruffling, with respect to z axis (Figure 2).  After rotating enough long time, sludge is produced.  Volume of liquid never changes through this operation. Figure 2 Needless to say, ordinary materials cannot be the tank.  According to Doctor's theory, there is only one material that is not dissolved by the sludge on the earth.  Doctor named it finaldefenceproblem (for short, FDP).  To attach FDP tiles inside the tank allows to produce the sludge. Since to produce FDP is very difficult, the size of FDP tiles are limited to 1 * 1.  At first, doctor tried to cover entire the entire inside of the tank.  However, it turned out that to make enough number FDP tiles that can cover completely is impossible because it takes too long time.  Therefore, he decided to replace FDP tiles where an area the sludge touches is zero with those of ordinary materials.  All tiles are very thin, so never affects height of the sludge. How many number of FDP tiles does doctor need?  He has imposed this tough problem on you, his helper. For each data set, print the number of tiles in a line.",
        "difficulty": "Easy",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00612.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "Judge data consists of at most 150 datasets.\n2 ≤ N ≤ 1012\nN is even number",
          "ranges": "2 1012; 1012; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\n4\n0",
            "output": "For each data set, print the number of tiles in a line.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00612.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00612"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00613",
        "title": "Problem I: A Piece of Cake",
        "description": "In the city, there are two pastry shops.  One shop was very popular because its cakes are pretty tasty.  \nHowever, there was a man who is displeased at the shop.  He was an owner of another shop.  Although cause of his shop's unpopularity is incredibly awful taste of its cakes, he never improved it.  He was just growing hate, ill, envy, and jealousy. Finally, he decided to vandalize the rival. His vandalize is to mess up sales record of cakes. The rival shop sells K kinds of cakes and sales quantity is recorded for each kind. He calculates sum of sales quantities for all pairs of cakes. Getting K(K-1)/2 numbers, then he rearranges them randomly, and replace an original sales record with them. An owner of the rival shop is bothered.  Could you write, at least, a program that finds total sales quantity of all cakes for the pitiful owner? K is an integer that denotes how many kinds of cakes are sold.  ci is an integer that denotes a number written on the card. The end of input is denoted by a case where K = 0.  You should output nothing for this case. For each data set, output the total sales quantity in one line.",
        "difficulty": "Easy",
        "category": "Math & Logic",
        "tags": [
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00613.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "Judge data contains at most 100 data sets.\n2 ≤ K ≤ 100\n0 ≤ ci ≤ 100",
          "ranges": "2 100; 0 100; 100; 100; 2; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\n2\n3\n5 4 3\n0",
            "output": "For each data set, output the total sales quantity in one line.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00613.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00613"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00614",
        "title": "Problem J: ICPC: Ideal Coin Payment and Change",
        "description": "Taro, a boy who hates any inefficiencies, pays coins so that the number of coins to be returned as change is minimized in order to do smoothly when he buys something. One day, however, he doubt if this way is really efficient.  When he pays more number of coins, a clerk consumes longer time to find the total value.  Maybe he should pay with least possible number of coins. Thinking for a while, he has decided to take the middle course.  So he tries to minimize total number of paid coins and returned coins as change. Now he is going to buy a product of P yen having several coins.  Since he is not good at calculation, please write a program that computes the minimal number of coins. You may assume following things: Ni is an integer and is the number of coins of i yen that he have. The end of input is denoted by a case where P = 0.  You should output nothing for this data set.",
        "difficulty": "Easy",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00614.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "Judge data contains at most 100 data sets.\n0 ≤ Ni ≤ 1000",
          "ranges": "0 1000; 1000; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "123 3 0 2 0 1 1\n999 9 9 9 9 9 9\n0 0 0 0 0 0 0",
            "output": "Output total number of coins that are paid and are returned.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00614.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00614"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00633",
        "title": "Problem 07: Crop Circle",
        "description": "アルゼンチンの広大な農地に突如ミステリーサークルが出没した。ミステリーサークルは重なっているもの、ポツンとあるもの、大きいもの、小さいものと合計 n 個確認された。 あるミステリーハンターが空中からミステリーサークルの全体像を撮影しようと試みたところ、各円の輪郭がはっきりしていなかったため、映像にその美しい模様を映し出すことが難しいことが分かった。 そこで、そのミステリーハンターは輪郭に沿って特殊素材の紐を設置し、輪郭を強調する提案をした。 紐を設置する部分は、あるミステリーサークルの円周上で、他のどのミステリーサークルにも含まれない部分である。 撮影隊は必要な紐の長さを計測するために、プログラムの作成をあなたに依頼した。各ミステリーサークルの中心座標と半径を入力し、設置する紐の長さを報告するプログラムを作成せよ。 参考として入出力例の１つ目と２つ目のケースをそれぞれ図１、図２に示す。紐の部分が太い線で示されている。 図１ 図２ 入力として複数のデータセットが与えられる。各データセットは以下の形式で与えられる：\n\nn　（ミステリーサークルの数：整数）\nx1 y1 r1 　（1 個目のサークルの中心座標と半径：空白区切りの実数）\nx2 y2 r2 　（2 個目のサークルの中心座標と半径：空白区切りの実数）\n.\n.\nxn yn rn 　（n 個目のサークルの中心座標と半径：空白区切りの実数） n が 0 のとき、入力の終わりを示す。 各データセットに対して、紐の長さを１行に出力せよ。出力は 0.000001 以下の誤差を含んでもよい。",
        "difficulty": "Easy",
        "category": "Geometry",
        "tags": [
          "geometry"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00633.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "n ≤ 100\n-1000 ≤ xi, yi  ≤ 1000\n0 < ri  ≤ 100",
          "ranges": "0 100; 100; 1000; 100; 1000; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n6 4 2\n4 7 3\n7 10 3\n13 6 1\n4\n7 4 2\n4 7 3\n7 10 3\n11 6 3\n0",
            "output": "各データセットに対して、紐の長さを１行に出力せよ。出力は 0.000001 以下の誤差を含んでもよい。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00633.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00633"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00637",
        "title": "Problem A: Citation Format",
        "description": "To write a research paper, you should definitely follow the structured format. This format, in many cases, is strictly defined, and students who try to write their papers have a hard time with it. One of such formats is related to citations. If you refer several pages of a material, you should enumerate their page numbers in ascending order. However, enumerating many page numbers waste space, so you should use the following abbreviated notation: When you refer all pages between page a and page b (a < b), you must use the notation \"a-b\". For example, when you refer pages 1, 2, 3, 4, you must write \"1-4\" not \"1 2 3 4\". You must not write, for example, \"1-2 3-4\", \"1-3 4\", \"1-3 2-4\" and so on. When you refer one page and do not refer the previous and the next page of that page, you can write just the number of that page, but you must follow the notation when you refer successive pages (more than or equal to 2). Typically, commas are used to separate page numbers, in this problem we use space to separate the page numbers. You, a kind senior, decided to write a program which generates the abbreviated notation for your junior who struggle with the citation. The first line of the dataset indicates the number of pages n. Next line consists of n integers. These integers are arranged in ascending order and they are differ from each other. For each dataset, output the abbreviated notation in a line. Your program should not print extra space. Especially, be careful about the space at the end of line.",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "math",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00637.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 50",
          "ranges": "1 50; 50; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n1 2 3 5 6\n3\n7 8 9\n0",
            "output": "For each dataset, output the abbreviated notation in a line. Your program should not print extra space. Especially, be careful about the space at the end of line.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00637.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00637"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00638",
        "title": "Problem B: Old Bridges",
        "description": "Long long ago, there was a thief. Looking for treasures, he was running about all over the world. One day, he heard a rumor that there were islands that had large amount of treasures, so he decided to head for there. Finally he found n islands that had treasures and one island that had nothing. Most of islands had seashore and he can land only on an island which had nothing. He walked around the island and found that there was an old bridge between this island and each of all other n islands. He tries to visit all islands one by one and pick all the treasures up. Since he is afraid to be stolen, he visits with bringing all treasures that he has picked up. He is a strong man and can bring all the treasures at a time, but the old bridges will break if he cross it with taking certain or more amount of treasures. Please write a program that judges if he can collect all the treasures and can be back to the island where he land on by properly selecting an order of his visit. The first line of each dataset contains an integer n.\nNext n lines represents information of the islands. Each line has two integers, which means the amount of treasures of the island and the maximal amount that he can take when he crosses the bridge to the islands, respectively. The end of input is represented by a case with n = 0. For each dataset, if he can collect all the treasures and can be back, print \"Yes\" Otherwise print \"No\"",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00638.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1  ≤ n ≤ 25",
          "ranges": "1 25; 25; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n2 3\n3 6\n1 2\n3\n2 3\n3 5\n1 2\n0",
            "output": "For each dataset, if he can collect all the treasures and can be back, print \"Yes\" Otherwise print \"No\"",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00638.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00638"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00639",
        "title": "Problem C: Accelerated Railgun",
        "description": "She catched the thrown coin that draws parabolic curve with her sparkling fingers. She is an ESPer. Yes, she is an electro-master who has the third strongest power among more than one million ESPers in the city. Being flicked by her thumb, the coin is accelerated by electromagnetic force and is shot as Fleming's right-hand rule. Even if she holds back the initial velocity of the coin exceeds three times of the speed of sound. The coin that is shot in such velocity is heated because of air friction and adiabatic compression. As a result coin melts and shines in orange. This is her special ability, called railgun. The strength of railgun can make a hole of two meters in diameter on a concrete wall. She had defeated criminals such as post office robberies and bank robberies in the city with her ability. And today, she decided to destroy a laboratory that is suspected to making some inhumane experiments on human body. Only her railgun can shoot it. The railgun with a coin cannot destroy the laboratory because of lack of power. Since she have found a powered-suit nearby, so she decided to use it as a projectile. However, in this case it is difficult to take sight properly because the suit is much bigger and heavier than coins. Therefore she only can shoot the suit with certain velocity vector from her current position. Depending on the position of the laboratory, her railgun may not hit it and become a firework. Therefore she asked cooperation to the strongest ESPer in the city. He can change direction of a moving object as one of uncountable application of his ESP. Let's consider a 2-dimensional plane where the laboratory is on the origin (0, 0). She shoots a projectile from P = (px, py) with velocity vector V = (vx, vy). His ESP makes a virtual wall of radius R (= 1.0) centered on the origin. When projectile collides with the wall, it is reflected so that incident angle will be equal to reflection angle. Range of railgun is limited to D, because air friction decreases velocity of projectile and heat may melts projectile completely. Under these conditions, please write a program that judges if the railgun hits the laboratory. Size of the laboratory and the suit is ignorablly small. After the railgun is shot, it is allowed to pass through P again. The first line of each dataset contains a real number D. Next line contains 4 real numbers, which means px, py, vx, vy, respectively. For each dataset, if the railgun hits, output the distance it moved until hits. Otherwise output 'impossible' (without quotes). You can print any number of digits and answer with an error less than 1.0e-6 will be accepted.",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00639.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "Judge data never include dataset where the answer is (D - 1.0e-3) or bigger. \n0.0001 ≤ |V| ≤ 0.9999\n0.0001 ≤ |P| ≤ 0.9999\nD ≤ 50",
          "ranges": "50"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "10.0\n0.5 0.0 -0.2 0.0\n1.0\n0.1 0.0 0.2 0.2\n0",
            "output": "For each dataset, if the railgun hits, output the distance it moved until hits. Otherwise output 'impossible' (without quotes). You can print any number of digits and answer with an error less than 1.0e-6 will be accepted.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00639.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00639"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00640",
        "title": "Problem D: Distorted Love",
        "description": "Saying that it is not surprising that people want to know about their love, she has checked up his address, name, age, phone number, hometown, medical history, political party and even his sleeping position, every piece of his personal information. The word \"privacy\" is not in her dictionary. A person like her is called \"stoker\" or \"yandere\", but it doesn't mean much to her. To know about him, she set up spyware to his PC. This spyware can record his mouse operations while he is browsing websites. After a while, she could successfully obtain the record from the spyware in absolute secrecy. Well, we want you to write a program which extracts web pages he visited from the records. All pages have the same size H × W where upper-left corner is (0, 0) and lower right corner is (W, H). A page includes several (or many) rectangular buttons (parallel to the page). Each button has a link to another page, and when a button is clicked the browser leads you to the corresponding page. His browser manages history and the current page in the following way: The browser has a buffer of 1-dimensional array with enough capacity to store pages, and a pointer to indicate a page in the buffer. A page indicated by the pointer is shown on the browser. At first, a predetermined page is stored and the pointer indicates that page. When the link button is clicked, all pages recorded in the right side from the pointer are removed from the buffer. Then, the page indicated by the link button is stored into the right-most position of the buffer, and the pointer moves to right. As a result, the user browse the page indicated by the button. The browser also has special buttons 'back to the previous page' (back button) and 'forward to the next page' (forward button). When the user clicks the back button, the pointer moves to left, and the user clicks the forward button, the pointer moves to right. But in both cases, if there are no such pages in the buffer, nothing happen. The record consists of the following operations: It means to click (x, y). If there is a button on the point (x, y), he moved to the corresponding page. If there is nothing in the point, nothing happen. The button is clicked if x1 ≤ x ≤ x2 and y1 ≤ y ≤ y2 where x1, x2 means the leftmost and rightmost coordinate and y1, y2 means the topmost and bottommost coordinate of the corresponding button respectively. It means to click the Back button. It means to click the Forward button. In addition, there is a special operation show. Your program should print the name of current page for each show operation. By the way, setting spyware into computers of others may conflict with the law. Do not attempt, or you will be reprimanded by great men. Each dataset starts with an integer n which represents the number of pages in the dataset. Next line contains two integers W and H. Next, information of each page are given. Each page starts with a string of characters and b[i], the number of buttons the page has. Following b[i] lines give information of buttons. Each button consists of four integers representing the coordinate (x1, y1) of upper left corner and the coordinate (x2, y2) of lower right corner of the button and a string of characters, which represents the name of page that the link of the button represents. Next, the number of operation m is given. Following m lines represent the record of operations. Please see the above description for the operation. The first page is stored in the buffer at first. For each dataset, output the name of current page for each show operation.",
        "difficulty": "Easy",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "string",
          "math",
          "geometry",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00640.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 100\nb[i] ≤ 100\n1 ≤ the number of characters in the name ≤ 20\nButtons are not touch, overlapped nor run over from the browser.",
          "ranges": "1 100; 100; 20; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n800 600\nindex 1\n500 100 700 200 profile\nprofile 2\n100 100 400 200 index\n100 400 400 500 link\nlink 1\n100 100 300 200 index\n9\nclick 600 150\nshow\nclick 200 450\nshow\nback\nback\nshow\nforward\nshow\n0",
            "output": "For each dataset, output the name of current page for each show operation.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00640.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00640"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00641",
        "title": "Problem E: Huge Family",
        "description": "Mr. Dango's family has extremely huge number of members. Once it had about 100 members, and now it has as many as population of a city. It is jokingly guessed that the member might fill this planet in near future. They all have warm and gracious personality and are close each other. They usually communicate by a phone. Of course, They are all taking a family plan. This family plan is such a thing: when a choose b, and b choose a as a partner, a family plan can be applied between them and then the calling fee per unit time between them discounted to f(a, b), which is cheaper than a default fee. Each person can apply a family plan at most 2 times, but no same pair of persons can apply twice. Now, choosing their partner appropriately, all members of Mr. Dango's family applied twice. Since there are huge number of people, it is very difficult to send a message to all family members by a phone call. Mr. Dang have decided to make a phone calling network that is named 'clan' using the family plan. Let us present a definition of clan. Let S be an any subset of all phone calls that family plan is applied. Clan is S such that:\n\n For any two persons (let them be i and j), if i can send a message to j through phone calls that family plan is applied (directly or indirectly), then i can send a message to j through only phone calls in S (directly or indirectly).\n Meets condition 1 and a sum of the calling fee per unit time in S is minimized. Clan allows to send a message efficiently. For example, we suppose that one have sent a message through all calls related to him in the clan. Additionaly we suppose that every people follow a rule, \"when he/she receives a message through a call in clan, he/she relays the message all other neibors in respect to clan.\" Then, we can prove that this message will surely be derivered to every people that is connected by all discounted calls, and that the message will never be derivered two or more times to same person. By the way, you are given information about application of family plan of Mr. Dango's family. Please write a program that calculates that in how many ways a different clan can be constructed. You should output the answer modulo 10007 because it may be very big. The input consists of several datasets. The first line of each dataset contains an integer n, which indicates the number of members in the family. Next n lines represents information of the i-th member with four integers. The first two integers respectively represent b[0] (the partner of i) and f(i, b[0]) (the calling fee per unit time between i and b[0]). The following two integers represent b[1] and f(i, b[1]) in the same manner. For each dataset, output the number of clan modulo 10007.",
        "difficulty": "Easy",
        "category": "Math & Logic",
        "tags": [
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00641.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3 ≤ n ≤ 100,000",
          "ranges": "3 100; 100; 3"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n1 1 2 3\n0 1 2 2\n1 2 0 3\n7\n1 2 2 1\n0 2 3 2\n0 1 3 1\n2 1 1 2\n5 3 6 2\n4 3 6 1\n4 2 5 1\n0",
            "output": "For each dataset, output the number of clan modulo 10007.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00641.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00641"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00642",
        "title": "Problem F: Ben Toh",
        "description": "As usual, those who called wolves get together on 8 p.m. at the supermarket. The thing they want is only one, a box lunch that is labeled half price. Scrambling for a few discounted box lunch, they fiercely fight every day. And those who are blessed by hunger and appetite the best can acquire the box lunch, while others have to have cup ramen or something with tear in their eyes. A senior high school student, Sato, is one of wolves. A dormitry he lives doesn't serve a dinner, and his parents don't send so much money. Therefore he absolutely acquire the half-priced box lunch and save his money. Otherwise he have to give up comic books and video games, or begin part-time job. Since Sato is an excellent wolf, he can acquire the discounted box lunch in 100% probability on the first day. But on the next day, many other wolves cooperate to block him and the probability to get a box lunch will be 50%. Even though he can get, the probability to get will be 25% on the next day of the day. Likewise, if he gets a box lunch on a certain day, the probability to get on the next day will be half. Once he failed to get a box lunch, probability to get would be back to 100%. He continue to go to supermaket and try to get the discounted box lunch for n days. Please write a program to computes the expected value of the number of the discounted box lunches he can acquire. For each dataset, write a line that contains an expected value. You may print any number of digits after the decimal point. Answers that have an error less than 1.0e-2 will be accepted.",
        "difficulty": "Easy",
        "category": "Math & Logic",
        "tags": [
          "math",
          "simulation",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00642.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 100,000",
          "ranges": "1 100; 100; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1\n2\n3\n0",
            "output": "For each dataset, write a line that contains an expected value. You may print any number of digits after the decimal point. Answers that have an error less than 1.0e-2 will be accepted.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00642.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00642"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00643",
        "title": "Problem G: Rolling Dice",
        "description": "The north country is conquered by the great shogun-sama (which means\nking). Recently many beautiful dice which were made by order of the\ngreat shogun-sama were given to all citizens of the country. All\ncitizens received the beautiful dice with a tear of delight. Now they\nare enthusiastically playing a game with the dice. The game is played on grid of h * w cells that each of which has a\nnumber, which is designed by the great shogun-sama's noble philosophy.\nA player put his die on a starting cell and move it to a destination\ncell with rolling the die. After rolling the die once, he takes a\npenalty which is multiple of the number written on current cell and\nthe number printed on a bottom face of the die, because of malicious\nconspiracy of an enemy country. Since the great shogun-sama strongly\nwishes, it is decided that the beautiful dice are initially put so\nthat 1 faces top, 2 faces south, and 3 faces east. You will find that\nthe number initially faces north is 5, as sum of numbers on opposite\nfaces of a die is always 7. Needless to say, idiots those who move his\ndie outside the grid are punished immediately. The great shogun-sama is pleased if some citizens can move the\nbeautiful dice with the least penalty when a grid and a starting cell\nand a destination cell is given. Other citizens should be sent to coal\nmine (which may imply labor as slaves). Write a program so that\ncitizens can deal with the great shogun-sama's expectations. The first line of each data set has two numbers h and w, which stands\nfor the number of rows and columns of the grid. Next h line has w integers, which stands for the number printed on the\ngrid. Top-left corner corresponds to northwest corner. Row number and column number of the starting cell are given in the\nfollowing line, and those of the destination cell are given in the next\nline. Rows and columns are numbered 0 to h-1, 0 to w-1, respectively. For each dataset, output the least penalty.",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "math",
          "sorting",
          "simulation",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00643.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ h, w ≤ 10\n0 ≤ number assinged to a cell ≤ 9\nthe start point and the goal point are different.",
          "ranges": "10; 9; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1 2\n8 8\n0 0\n0 1\n3 3\n1 2 5\n2 8 3\n0 1 2\n0 0\n2 2\n3 3\n1 2 5\n2 8 3\n0 1 2\n0 0\n1 2\n2 2\n1 2\n3 4\n0 0\n0 1\n2 3\n1 2 3\n4 5 6\n0 0\n1 2\n0 0",
            "output": "For each dataset, output the least penalty.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00643.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00643"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00644",
        "title": "Problem H: Winter Bells",
        "description": "The best night ever in the world has come! It's 8 p.m. of December 24th, yes, the night of Cristmas Eve. Santa Clause comes to a silent city with ringing bells. Overtaking north wind, from a sleigh a reindeer pulls she shoot presents to soxes hanged near windows for children. The sleigh she is on departs from a big christmas tree on the fringe of the city. Miracle power that the christmas tree spread over the sky like a web and form a paths that the sleigh can go on. Since the paths with thicker miracle power is easier to go, these paths can be expressed as undirected weighted graph. Derivering the present is very strict about time. When it begins dawning the miracle power rapidly weakens and Santa Clause can not continue derivering any more. Her pride as a Santa Clause never excuses such a thing, so she have to finish derivering before dawning. The sleigh a reindeer pulls departs from christmas tree (which corresponds to 0th node), and go across the city to the opposite fringe (n-1 th node) along the shortest path. Santa Clause create presents from the miracle power and shoot them from the sleigh the reindeer pulls at his full power. If there are two or more shortest paths, the reindeer selects one of all shortest paths with equal probability and go along it. By the way, in this city there are p children that wish to see Santa Clause and are looking up the starlit sky from their home. Above the i-th child's home there is a cross point of the miracle power that corresponds to c[i]-th node of the graph. The child can see Santa Clause if (and only if) Santa Clause go through the node. Please find the probability that each child can see Santa Clause. The first line of each dataset contains three integers n, m, p, which means the number of nodes and edges of the graph, and the number of the children. Each node are numbered 0 to n-1. Following m lines contains information about edges. Each line has three integers. The first two integers means nodes on two endpoints of the edge. The third one is weight of the edge. Next p lines represent c[i] respectively. For each dataset, output p decimal values in same order as input. Write a blank line after that. You may output any number of digit and may contain an error less than 1.0e-6.",
        "difficulty": "Easy",
        "category": "Trees & Graphs",
        "tags": [
          "math",
          "sorting",
          "graph",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00644.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3 ≤ n ≤ 100\nThere are no parallel edges and a edge whose end points are identical.\n 0 < weight of the edge < 10000",
          "ranges": "3 100; 100; 10000; 3; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 2 1\n0 1 2\n1 2 3\n1\n4 5 2\n0 1 1\n0 2 1\n1 2 1\n1 3 1\n2 3 1\n1\n2\n0 0 0",
            "output": "For each dataset, output p decimal values in same order as input. Write a blank line after that. You may output any number of digit and may contain an error less than 1.0e-6.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00644.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00644"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00645",
        "title": "Problem I: Mysterious Onslaught",
        "description": "In 2012, human beings have been exposed to fierce onslaught of unidentified mysterious extra-terrestrial creatures. We have exhaused because of the long war and can't regist against them any longer. Only you, an excellent wizard, can save us. Yes, it's time to stand up! The enemies are dispatched to the earth with being aligned like an n * n square. Appearently some of them have already lost their fighting capabilities for some unexpected reason. You have invented a highest grade magic spell 'MYON' to defeat them all. An attack of this magic covers any rectangles (which is parallel to axis). Once you cast a spell \"myon,\" then all the enemies which the magic covers will lose their fighting capabilities because of tremendous power of the magic. However, the magic seems to activate enemies' self-repairing circuit. Therefore if any enemy which have already lost its fighting capability is exposed to the magic, the enemy repossesses its fighting capability. You will win the war when all the enemies will lose their fighting capabilities. Let me show an example. An array of enemies below have dispatched: Here, '0' means an enemy that doesn't possess fighting capability, and '1' means an enemy that possesses.\nFirst, you cast a spell \"myon\" with covering all the enemies, which results in; Next, cast once again with covering central 3 * 3 enemies. Now you can defeat them all by casting a spell covers remaining one. Therefore you can cast \"myonmyonmyon,\" which is the shortest spell for this case. You are given the information of the array. Please write a program that generates the shortest spell that can defeat them all. The first line of each test case has an integer n. Following n lines are information of an array of enemies. The format is same as described in the problem statement. For each dataset, output the shortest spell.",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "array",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00645.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 5",
          "ranges": "1 5; 5; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n1 1 1 1 1\n1 0 0 0 1\n1 0 1 0 1\n1 0 0 0 1\n1 1 1 1 1\n3\n1 1 1\n1 1 1\n1 1 1\n5\n1 1 1 1 0\n1 1 1 1 0\n1 0 0 0 1\n0 1 1 1 1\n0 1 1 1 1\n0",
            "output": "For each dataset, output the shortest spell.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00645.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00645"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00646",
        "title": "Problem J: No Story",
        "description": "Since I got tired to write long problem statements, I decided to make this problem statement short. For given positive integer L, how many pairs of positive integers a, b (a ≤ b) such that LCM(a, b) = L are there? Here, LCM(a, b) stands for the least common multiple of a and b. For each dataset, output the number of pairs of a and b.",
        "difficulty": "Easy",
        "category": "Math & Logic",
        "tags": [
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00646.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ L ≤ 1012",
          "ranges": "1 1012; 1012; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "12\n9\n2\n0",
            "output": "For each dataset, output the number of pairs of a and b.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00646.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00646"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00648",
        "title": "Problem B: Watchin' TVA",
        "description": "Animation is one of methods for making movies and in Japan, it is popular to broadcast as a television program or perform as a movie. Many people, especially the young, love one. And here is an anime lover called Jack. We say he is an mysterious guy with uncertain age. He likes anime which are broadcasted in midnight and early morning especially. In his room, there is a huge piece of paper on the wall. He writes a timetable of TV anime on it. In his house, he can watch all Japanese TV anime programs that are broadcasted in Japan using a secret and countrywide live system. However he can not watch all anime and must give up to watch some programs because they are \"broadcasted at the same time\" in a season. Here, programs are \"broadcasted at the same time\" means that two or more programs have one or more common minutes in broadcasting time. Increasing the number of anime programs in recent makes him nervous. Actually, some people buy DVDs after the program series ends or visit a web site called vhefoo. Anyway, he loves to watch programs on his live system. Of course, he is not able to watch two or more programs at the same time. However, as described above, he must give up some programs broadcasted at the same time. Therefore, he has a set of programs F and he watches programs in a set F absolutely. Your task is to write a program that reads a timetable and outputs the maximum number of watchable programs, keeping that Jack watches all programs in the set F. Of course, there are multiple choices of programs, so we want the number of programs he can watch. If two or more programs in a set F are broadcasted at the same time, you must give Jack an unfortunate announcement. In this case, your program outputs -1. In addition, each anime program is a program of 30 minutes. N is the number of programs in a season.\nPROGRAMi(1≤i≤N)is a string which has the following format. P is an integer and represents the number of elements in the set F.  And FAVi(1≤i≤P≤N) is a string for a program name which Jack watches absolutely. You can assume names which are not given in program descriptions will not appear in the set F.\nThe last line contains a single 0 which represents the end of input. The number of datasets is less than or equal to 400.\n1≤N≤500 For each dataset, output an integer S that represents maximum number of programs Jack can watch in the following format. Second dataset: He can watch program E after watching B. Then he can choose a program either I or J after watching H. Therefore he can watch maximum 4 programs.",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "string",
          "math",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00648.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "The number of datasets is less than or equal to 400.\n1≤N≤500",
          "ranges": "1 500; 500; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1\ngalaxy_angel 0 600\n1\ngalaxy_angel\n11\nA 0 600\nB 0 610\nC 0 610\nD 0 610\nE 0 640\nEE 0 700\nF 0 710\nG 0 710\nH 0 710\nI 0 740\nJ 0 750\n2\nB\nH\n42\nnchj 6 2620\nanhnnnmewbktthsrn 4 2515\ngntmdsh 1 1800\nachnnl 4 2540\nhnskirh 0 2200\naonexrcst 0 1700\ndgdys 6 2330\nhdnnara 4 2525\ndnpaonntssotk 4 2555\nddmnwndrlnd 6 2500\nC 4 2445\nastrttnomch 0 2330\nseknnqasr 1 2630\nsftnt 4 2630\nstnsgt 2 2605\ndrrnenmknmrmr 4 2610\nhnzm 6 2713\nyndmsoazzlsn 6 2658\nmrahlcalv 4 2615\nhshzrhkkrhs 1 900\nortchntsbshni 0 2430\nkmnmzshrski 1 2530\nsktdnc 4 1800\ngykkybrkjhkirkhn 2 2459\ntrk 0 900\n30zzsinhkntiik 3 2700\nsngkotmmmirprdx 1 2600\nyran 2 2529\ntntissygntinybu 1 2614\nskiichhtki 5 2505\ntgrbnny 6 2558\ndnbrsnki 3 1927\nyugozxl 1 1930\nfrbllchrmn 1 1928\nfjrg 1 1955\nshwmngtr 0 2200\nxmn 5 2200\nrngnkkrskitikihn 0 2100\nszysz 0 1254\nprttyrythmaulrdrm 6 1000\nsckiesfrntrqst 5 1820\nmshdr 1 2255\n1\nmrahlcalv\n0",
            "output": "For each dataset, output an integer S that represents maximum number of programs Jack can watch in the following format. S",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00648.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00648"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00649",
        "title": "Problem C: Yanagi's Comic",
        "description": "Yanagi is a high school student, and she is called \"Hime\" by her boyfriend who is a ninja fanboy. She likes picture books very much, so she often writes picture books by herself.\nShe always asks you to make her picture book as an assistant.\nToday, you got asked to help her with making a comic. She sometimes reads her picture books for children in kindergartens.\nSince Yanagi wants to let the children read,\nshe wants to insert numbers to frames in order.\nOf course, such a task should be done by the assistant, you. You want to do the task easily and fast, so you decide to write a program to output the order of reading frames based on the positions of the frames. Write a program to print the number of order for each frame. The comics in this problem satisfy the following rules. The each comic is drawn on a sheet of rectangle paper.\nYou can assume that the top side of the paper is on the x-axis.\nAnd you can assume that the right-hand side of the paper is on the y-axis.\nThe positive direction of the x-axis is leftward.\nThe positive direction of the y-axis is down direction.\nThe paper is large enough to include all frames of the comic.\nIn other words, no area in a frame is out of the paper. The area of each frame is at least one.\nAll sides of each frame are parallel to the x-axis or the y-axis.\nThe frames can't overlap one another.\nHowever the frames may share the line of side. You must decide the order to read  K , where  K  is a set of frames, with the following steps. The input consists of multiple datasets.\nThe last dataset is followed by a line containing one zero.\nYou don't have to process this data. Each datasets is in the following format. All numbers of the datasets are integer.\nThey are separated by a space.\nThe first line of a dataset contains one integer.\nn is the number of frames of the comic.\n x0i  ,  y0i ,  x1i ,  y1i   are two non-neighboring points of  i  th frame in the line. 0 < n < 10\n(x0i != x1i) and (y0i != y1i)\n0 ≤  x0i ,  y0i , x1i ,  y1i  ≤ 500 These pictures are related to first sample and second sample.\nGray frames have been read already.\nA red line denotes the line drawn at Step 2. Numbers in the figures denote the order of frames given by input. This is related to the first sample. These are related to the second sample.",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "math",
          "sorting",
          "simulation",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00649.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0 < n < 10\n(x0i != x1i) and (y0i != y1i)\n0 ≤  x0i ,  y0i , x1i ,  y1i  ≤ 500",
          "ranges": "0 10; 10; 500; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n0 0 100 60\n0 60 50 90\n50 60 100 90\n0 90 100 120\n6\n0 0 100 40\n0 40 50 70\n50 40 100 60\n50 60 100 80\n0 70 50 120\n50 80 100 120\n0",
            "output": "1\n2\n3\n4\n\n1\n2\n4\n5\n3\n6 These pictures are related to first sample and second sample.\nGray frames have been read already.\nA red line denotes the line drawn at Step 2. Numbers in the figures denote the order of frames given by input. This is related to the first sample. These are related to the second sample.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00649.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00649"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00650",
        "title": "Problem D: The House of Huge Family",
        "description": "Mr. Dango's family has an extremely huge number of members.\nOnce it had about 100 members, and now it has as many as population of a city.\nIt is jokingly guessed that the member might fill this planet in the near future. Mr. Dango's family, the huge family, is getting their new house.\nScale of the house is as large as that of town. They all had warm and gracious personality and were close each other.\nHowever, in this year the two members of them became to hate each other.\nSince the two members had enormous influence in the family, they were split into two groups. They hope that the two groups don't meet each other in the new house.\nThough they are in the same building, they can avoid to meet each other by adjusting passageways. Now, you have a figure of room layout. Your task is written below. You have to decide the two groups each room should belong to.\nBesides you must make it impossible that they move from any rooms belonging to one group to any rooms belonging to the other group.\nAll of the rooms need to belong to exactly one group.\nAnd any group has at least one room. To do the task, you can cancel building passageway.\nBecause the house is under construction, to cancel causes some cost.\nYou'll be given the number of rooms and information of passageway.\nYou have to do the task by the lowest cost. Please answer the lowest cost. By characteristics of Mr. Dango's family, they move very slowly.\nSo all passageways are escalators.\nBecause of it, the passageways are one-way. The input consists of multiple datasets.\nEach dataset is given in the following format. All numbers in each datasets are integers.\nThe integers in each line are separated by a space. The first line of each datasets contains two integers.\nn is the number of rooms in the house, m is the number of passageways in the house.\nEach room is indexed from 0 to n-1. Each of following  m  lines gives the details of the passageways in the house.\nEach line contains three integers.\nThe first integer Xi is an index of the room, the starting point of the passageway.\nThe second integer Yi is an index of the room, the end point of the passageway.\nThe third integer Ci is the cost to cancel construction of the passageway.\nThe passageways, they are escalators, are one-way.\nThe last dataset is followed by a line containing two zeros (separated by a space). For each dataset, print the lowest cost in a line. You may assume that the all of integers of both the answers and the input can be represented by 32 bits signed integers.",
        "difficulty": "Easy",
        "category": "Arrays & Strings",
        "tags": [
          "string",
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00650.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤  n  ≤ 100\n-10,000 ≤ Ci ≤ 10,000\nY1 ... Ym can't be duplicated integer by each other.",
          "ranges": "2 100; 000 10; 100; 10; 2; 000"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 2\n0 1 2\n1 2 1\n2 1\n0 1 100\n2 1\n0 1 0\n2 1\n0 1 -1\n0 0",
            "output": "1\n100\n0\n-1",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00650.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00650"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00651",
        "title": "Problem E: Legend of Storia",
        "description": "In Storia Kingdom, there is an artifact called \"Perfect Sphere\" made by a great meister Es. This is handed down for generations in the royal palace as a treasure. Es left a memo and filled mysterious values in it. Within achievements of researches, it has been revealed that the values denote coordinate values. However it is still unknown the definition of the coordinate system. By the way, you are a person who lived in age of Es lived. The values which meister Es left are defined by following. Es set an moving object in the artifact sphere. Surprisingly, that is rigid body and perpetual organization. The object rotates inside the sphere and it is always touching the inside surface of the sphere. This value is a coordinate of the tangent point by the object and the sphere, but it is not a three dimensional value. The object is a plate and this is a simple polygon. Here, \"simple\" means \"non self-intersected\". This rotates while touching a great circle of the sphere. Here, assume that the great circle is a circle O centered in the origin in the xy plane. (It is two-dimensional Cartesian coordinate system, the direction of positive x-value is right and the direction of positive y-value is up). This plate touches the circle O with a single point at the beginning of the movement. And it rotates in counterclockwise as the current touching point is the rotation fulcrum. When another point X of the plate touches the circle O newly, the plate continue to rotate as described above, but in the next rotation, the rotation fulcrum point is changed.  This will be the point X. If two or more points can be interpreted as the point X, the point X is a most distant point from the currently touching point X'. Here, that distance is the length of the arc of the circle O from the point X' to the point X in clockwise. Es asked you, an excellent assistant, to write a program that enumerates Q tangent points (fulcrum points while the movement) by the plate and the circle O while the movement of the plate described above in the chronological order. Of course, one and the previous one must be distinct points. Following figures show you examples of the movement of the plate inside the circle O.\n\n1\n2\n3\n4 N, R, Q are integers that represent the number of points of the plate, the radius of the circle, and the number of points Es needs respectively.\nFollowing N lines contain 2N integers that represent coordinates of the plate's points ( xk , yk ) in the circle.(1≤k≤N) The number of datasets is less than or equal to 400.\n3≤N≤25\n1≤R≤1000\n0≤Q≤100 For each dataset, output (Px Py:real number) in Q in the following format. These answers must satisfy |Txi-Pxi|≤0.0001 and |Tyi-Pyi|≤0.0001.\nHere, Pxi, Pyi(1≤i≤Q) are your output and Txi,Tyi(1≤i≤Q) are judge's output.",
        "difficulty": "Easy",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00651.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "The number of datasets is less than or equal to 400.\n3≤N≤25\n1≤R≤1000\n0≤Q≤100",
          "ranges": "3 25; 1 1000; 0 100; 25; 1000; 100; 3; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 10 8\n0 -10\n3 -7\n0 -4\n-3 -7\n0 0 0",
            "output": "For each dataset, output (Px Py:real number) in Q in the following format. Px1 Px1\nPx2 Py2\n...\nPxN+1 PyN+1 These answers must satisfy |Txi-Pxi|≤0.0001 and |Tyi-Pyi|≤0.0001.\nHere, Pxi, Pyi(1≤i≤Q) are your output and Txi,Tyi(1≤i≤Q) are judge's output.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00651.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00651"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00656",
        "title": "Problem J: BD Shelf",
        "description": "Remember the boy called Jack. He likes anime, especially programs broadcasting in midnight or early morning. In his room, there is a big shelf and it is kept organized well. And there are anime BD/DVDs which he watched or gave up because of overlapping of broadcasting time with other animes.  His money is tight, but he succeeded to get W hundreds dollars because of an unexpected event. And he came up with enhancing the content of his BD shelf. He is troubled about the usage of the unexpected income. He has a good judge for anime to choose the anime he can enjoy because he is a great anime lover. Therefore, first of all, he listed up expectable animes and assigned each anime a value that represents \"a magnitude of expectation\". Moreover Jack tagged a mysterious string M for each anime. However Jack did not tell you the meaning of the string M. Your task is to write a program that reads a string X and that maximizes the sum of magnitudes of expectation when Jack bought BD/DVD boxes of anime with the budget of W hundreds dollars. Here, Jack must buy anime's BD/DVD box that have a string X as a sub-string of the string M assigned the anime. If he can not buy any boxes, output -1. A sequence of string X is given in order in the input as query. Assume two strings X1 and X2 are given as string X, and X1 is the prefix of X2.  If X1 is given in the input preceding X2, you must not buy an anime which has the minimum magnitude of expectation among animes extracted by X1 in the calculation for X2.  And vice versa (X1 is the prefix of X2 and if X2 is given in the input preceding X1, ...) .\nFor example, If three strings \"a\", \"abc\" and \"ab\" are given in this order in the input, In the processing for string \"abc\", you must not extract an anime which has the minimum magnitude of expectation among animes extracted by the processing of the string \"a\". In the processing for string \"ab\", you must not extract an anime has minimum magnitude of expectation among animes extracted by the processing of the string \"abc\" and \"a\". N is an integer that represents the number of anime. Following N lines contains the information of each anime.\nstringi(1≤i≤N) is a string consists of lowercase letters that represents string M assigned i-th anime by Jack. No two characters in this string are same.\nexpectationi(1≤i≤N) is a natural number that represents a magnitude of expectation of the i-th anime.\npricei(1≤i≤N) is a natural number that represents a price(cost) in hundreds to buy the i-th anime.\nQ is an integer that represents the number of queries.\nqueryi(1≤i≤Q) is a string consists of lowercase letters. This is a string X described in the problem statement.\nN=W=0 shows the end of the input. There are 4 test cases. This is given by the following order.\nIn the first testcase, 4 datasets satisfy N≤10 and Q≤10, 6 datasets satisfy N≤5000 and Q≤5000.\nIn the 2nd, 3rd and 4th testcase, each satisfies N≤20000 and Q≤20000.\nThe time limit for this problem is the limit for each testcase.\n1≤N≤20000\n1≤W≤20\n1≤(the length of stringi(1≤i≤N))≤10\n1≤pricei(1≤i≤N)≤20\n1≤expectationi(1≤i≤N)≤7000000\n1≤Q≤20000\n1≤(the length of queryi(1≤i≤Q))≤5\nIt is assured that all values for expectation are different. For each query, output an integer S on a line that represents the maximum sum of magnitudes of expectation in the following format.\n\nS",
        "difficulty": "Easy",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "string",
          "math",
          "sorting",
          "simulation",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00656.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "There are 4 test cases. This is given by the following order.\nIn the first testcase, 4 datasets satisfy N≤10 and Q≤10, 6 datasets satisfy N≤5000 and Q≤5000.\nIn the 2nd, 3rd and 4th testcase, each satisfies N≤20000 and Q≤20000.\nThe time limit for this problem is the limit for each testcase.\n1≤N≤20000\n1≤W≤20\n1≤(the length of stringi(1≤i≤N))≤10\n1≤pricei(1≤i≤N)≤20\n1≤expectationi(1≤i≤N)≤7000000\n1≤Q≤20000\n1≤(the length of queryi(1≤i≤Q))≤5\nIt is assured that all values for expectation are different.",
          "ranges": "1 20000; 1 20; 1 20000; 10; 10; 5000; 5000; 20000; 20000; 20000; 20; 20000; 1; 1; 1; 1; 1; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 4\nabc 1 1\nabc 10 1\nabc 100 1\n3\na\nabc\nab\n3 4\nab 1 1\nab 10 1\nabc 100 1\n3\nabc\nab\na\n3 4\nabc 1 1\nabc 10 1\nabc 100 1\n3\nab\nab\nab\n8 20\nabcdef 100 2\nbcdef 200 1\ncfghj 300 3\nksjirto 400 6\nksitoew 500 2\nqwertyl 600 2\nkjhbvc 700 2\nedfghucb 800 1\n10\nks\ncd\nhj\ne\na\ng\nh\nj\ni\na\n0 0",
            "output": "For each query, output an integer S on a line that represents the maximum sum of magnitudes of expectation in the following format.\n\nS",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00656.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00656"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00658",
        "title": "Problem L: The Tower",
        "description": "Your task is to write a program that reads some lines of command for the following game and simulates operations until the player reaches the game over. We call following 2-dimensional grid of m by n characters Tower. The objective of this game is to move blocks in the tower to climb to a goal block. In the following grid, the bottom line is the first row and the top one is the n-th row. The leftmost column is the first column and the rightmost one is the m-th column. Explanation of cell marks: Explanation of relative positions: In the following description, assume that left up is the position of 1, up(over S) is 2, right up is 3, left is 4, right is 5, left down is 6, down(under S) is 7, right down is 8 for S. Movements of the player\nThe player must not go out of the tower.  The outside of the tower is considered as space cells. Automated operations after the player operation:\nAutomated operations occur in the following order.  This repeats in this order as long as the cells of the tower are changed by this operations.  After this operations, the player can do the next operation. Conditions for game over:\nAfter the movement of the player or the automated operations, the game is over when the one of next conditions is satisfied.  These conditions are judged in the following order. Note that, the condition (E) should not be judged after the movement of the player. Here, m, n is the width and height of the tower.  Di,j(1≤i≤n and 1≤j≤m) is a mark of the cell.  The explanation of marks described above.  Commandk(1≤k≤T) is the k-th player operation (movement). This is a string and one of following strings. Some of commands are invalid.  You must ignore these commands.  And after game is over, the command input may continue in case.  In this case, you must also ignore following commands.  m=n=0 shows the end of input. 3≤m≤50\n3≤n≤50\nCharacters 'S' and 'G' will appear exactly once in the tower description. Each dataset, output a string that represents the result of the game in the following format. Here, Result is a string and one of the following strings (quotes for clarity).",
        "difficulty": "Easy",
        "category": "Simulation",
        "tags": [
          "string",
          "sorting",
          "simulation",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00658.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3≤m≤50\n3≤n≤50\nCharacters 'S' and 'G' will appear exactly once in the tower description.",
          "ranges": "3 50; 3 50; 50; 50; 3; 3"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "8 8\n........\n........\n....###.\n...#.#.G\nS#B...##\n#ICII.I#\n#..#.#.#\n.#..#.#.\n7\nPUSH RIGHT\nMOVETO 2\nCLIMB RIGHT\nCLIMB RIGHT\nGETDOWN RIGHT\nCLIMB RIGHT\nGETDOWN RIGHT\n8 8\n........\n........\n........\n...G....\nS#B.....\n#ICIIIII\n#..#.#.#\n.#..#.#.\n4\nPUSH RIGHT\nMOVETO 2\nCLIMB RIGHT\nCLIMB RIGHT\n8 8\n........\n....#.#.\n.....#.G\n...#..#.\nS#B....#\n#ICIII.#\n#..#.#.#\n.#..#.#.\n8\nPUSH RIGHT\nMOVETO 2\nCLIMB RIGHT\nCLIMB RIGHT\nCLIMB RIGHT\nGETDOWN RIGHT\nCLIMB RIGHT\nGETDOWN RIGHT\n0 0",
            "output": "Game Over : Death by Hole\nGame Over : Cleared\nGame Over : Death by Walking Goal",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00658.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00658"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00669",
        "title": "Problem A: K Cards",
        "description": "ある日、先生は次のようなゲームを思いついた。\nゲームは 1 から 10 までの数がひとつ書かれたカードを n 枚使用し、以下のように進む。 あなたの仕事は先生が並べたカードの列を入力し、生徒が得られる最大の成績点を出力するプログラムを書くことである。ただし、そこからどの 2 枚を選んで交換してもCkを下げることしかできない (Ck - Ck' < 0) 場合、文字列 \"NO GAME\" (引用符を含まない)を出力せよ。\n\n先生が並べたカードが7, 2, 3, 5の場合。このとき 7 と 3 を交換することで生徒は最大で 35 - 15 = 20 成績点を得る。 入力は複数のテストケースからなる。ひとつのテストケースは以下の形式に従う。 n は先生が並べるカードの枚数、k は宣言する整数である。\nまた ci (1 ≤ i ≤ n) はカードに書かれた数を示す。また、この順で先生が横に黒板に貼り付けるとする。入力の終わりは、ふたつの0が一文字の空白で区切られる一行で示される。 生徒が得られる成績点の最大値あるいは文字列 \"NO GAME\" (引用符を含まない)を各テストケースに付き 1 行で出力せよ。 サンプルにおいて C2' = 35 であり、ここからどの 2 枚を並び替えても C2 の最大値は 35 より大きくならない。したがって生徒が得られる成績点は最大 0 点である。",
        "difficulty": "Easy",
        "category": "Simulation",
        "tags": [
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00669.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力はすべて整数\n2 ≤n ≤ 100\n1 ≤k ≤ 5\nk ≤ n\n1 ≤ ci ≤ 10 (1 ≤ i ≤ n)\nテストケースの数は 100 を超えない。",
          "ranges": "2 100; 1 5; 1 10; 100; 5; 10; 2; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 2\n2\n3\n7\n5\n0 0",
            "output": "0",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00669.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00669"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00670",
        "title": "Problem B: Spellcasters",
        "description": "n 人の魔法使いがいる。彼らには 1 から n までの番号があり、i 番目の魔法使いは魔力 ri ( 1 ≤ i ≤ n ) を持っている。いま彼らは強力な魔法使いと対峙しており、その敵の魔力は S である。n 人の魔法使いは協力して戦うのが得意で、特に 2 人で協力して戦うことを好む。2 人の魔法使いが協力した場合、魔力は単純にその和となり、強力な魔法などを駆使してある程度強い敵にも勝てるようになる。あなたの仕事は魔力 S を持つ敵に対して勝つことができる魔法使いのペア (i, j) ( i ≠ j かつ 1 ≤ i ≤ n かつ 1 ≤ j ≤ n ) の総数を出力することである。ただし (i, j) と (j, i) は同じ組として数える。一方の魔力が他方の魔力よりも大きいとき、大きい魔力を持っている側が勝つ。等しい場合は相打ちで勝ったことにならない。 入力は複数のテストケースからなる。 各テストケースは以下の形式に従う。 各変数の意味は問題文中の通りである。\n入力の終わりは、ふたつの0が一文字の空白で区切られる一行で示される。 条件を満たす組 (i, j) (i ≠ j) の総数を各ケースに付き 1 行に出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00670.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力はすべて整数\n1 ≤ n ≤ 20,000\n1 ≤ ri ≤ 100 ( 1 ≤ i ≤ n )\n1 ≤ S ≤ 100\nテストケースの数は 100 を超えない。",
          "ranges": "1 20; 1 100; 1 100; 20; 100; 100; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 7\n1\n3\n10\n0 0",
            "output": "2",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00670.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00670"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00671",
        "title": "Problem C: Live Schedule",
        "description": "YOKARI TAMURAは全国的に有名なアーティストである。今月YOKARIは D 日間にわたってライブツアーを行う。ツアーのスケジュールの決定においてこの国を C 種類の地域でわける。YOKARIがある地域でライブを行うことにより利益を得られ、これは正の整数で表される。YOKARIは原則として 1 日に最大 1 つまでライブを行う。ただし、ある地域でライブを行った後、隣接する地域でライブを行える場合はその地域で同じ日に再びライブを行うことができる。この条件を満たす限り、地域を移動しながら何度もライブを行うことができる。また、同じ日に同じ地域でライブを 2 度以上行うことはできない。さらに、同じ日に 2 回以上のライブを行う日の数はツアー期間中合計 X 以下でなければならない。 あなたはYOKARIの関係者であり、彼女のライブツアーのスケジュールを仮決めしなくてはならない。どの日にどの地域でライブを行えばもっとも有益だろうか。ただし 1 回のライブごとにYOKARIには非負の整数で表される負担がかかり、ツアー期間中の合計負担は W 以内でなければならない。あなたの仕事は各ライブでYOKARIにかかる負担と期待される利益を読み込み、スケジュールを仮決めして、利益合計の最大値を出力することである。 入力は複数のテストケースからなる。\nひとつのテストケースは以下の形式に従う。 C は地域の種類数、D はツアー期間の長さ、W はこのツアーでYOKARIに許容される負担の合計の最大値、X はツアー期間中にライブを同じ日に 2 度以上行える合計日数の上限である。\nEi,j ( 1 ≤ i ≤ C かつ 1 ≤ j ≤ D ) は地域 i で j 日目にライブを行うことで期待される利益である。Ei,j が 0 のとき地域 i で j 日目にライブを行えないことを示す。\nFi,j ( 1 ≤ i ≤ C かつ 1 ≤ j ≤ D ) は地域 i で j 日目にライブを行うことでYOKARIにかかる負担である。Ei,j が 0 のとき、この値は0である。\n地域 i は地域 i + 1 と i - 1 それぞれに隣接する。ただし地域 1 と地域 C ( C > 2 ) は隣接しない。\n入力の終わりは、4個の0がそれぞれ一文字の空白で区切られる一行で示される。 各ケースに付き、スケジュールを仮決めして期待される利益合計の最大値を 1 行に出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00671.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力はすべて整数\n1 ≤ C ≤ 15\n1 ≤ D ≤ 30\n0 ≤ W ≤ 50\n0 ≤ X ≤ 5\n0 ≤ Ei,j ≤ 1,000\n0 ≤ Fi,j ≤ 10\nテストケースの数は 100 を超えない。",
          "ranges": "1 15; 1 30; 0 50; 0 5; 15; 30; 50; 5; 1; 10; 1; 1; 0; 0; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 5 10 2\n1 1 0 1 1\n0 9 1 0 1\n1 1 1 9 1\n1 1 9 0 1\n1 1 1 1 0\n1 1 0 1 1\n0 9 1 0 1\n1 1 1 9 1\n1 1 1 0 1\n1 1 1 1 0\n1 1 10 0\n3\n7\n1 1 5 0\n3\n6\n1 2 10 1\n6 7\n5 6\n2 1 10 1\n4\n8\n3\n7\n2 1 10 0\n4\n8\n3\n7\n2 1 5 0\n4\n8\n3\n6\n0 0 0 0",
            "output": "18\n3\n0\n7\n12\n8\n4",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00671.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00671"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00674",
        "title": "Problem F: Strawberry Cake",
        "description": "会津大学附属小学校 (会津大小) に入学したシャ、ネロ、エリ、コーは競技プログラマとして活躍するために IPPC というプログラミングコンテストに出場することにした。しかし IPPC は 3 人 1 組でチームとしてコンテストに出場する決まりで、4 人でチームを組むことはできない。そこで彼らは 2 人ずつに分かれてチームを組み、2 人 1 組で参加できる IPOCH というプログラミングコンテストに出場することにした。 チームは分かれてしまったが、実力は拮抗しており互いに良い練習相手になっている。 ある日彼らのコーチが差し入れにホールケーキを買ってきた。彼らはそれをシャの家で食べることにした。しかし家に着いて箱を開けてみるとケーキが変形していて、形は上から見ると円形ではなく凸多角形のようになっていた。ネロに運ばせたのが悪かったようだ。\nケーキの上にはイチゴが 1 つ乗っている。とりあえず 2 チームで分けるために、いまこのケーキをイチゴを通る直線にそって半分になるようにナイフで切ることが決定した。ケーキを切る前にイチゴを先にとってしまうのは彼らの美意識に反する。 あなたの仕事は 2 次元平面上に与えられる凸多角形 K を原点 (0, 0) を通る直線 L で分割したとき、分割で出来た 2 つの凸多角形の面積が等しくなるように直線 L を定めることである。もし複数あるならいずれかひとつで構わない。 入力は複数のテストケースからなる。各テストケースは以下の形式に従う。 N は与えられる凸多角形 K の頂点数である。点 (xi, yi) ( 1 ≤ i ≤ N ) はすべて凸多角形 K を成す頂点の座標であり、互いに異なる。これらは反時計回りの順で与えられる。また、凸多角形 K のどの辺上の点も原点との距離が 1 以上で、凸多角形 K は常に原点を内包する。入力の終了はひとつの0を含む１行で示される。原点を含む、入力で与えられる異なる 3 点は共線となりうることに注意して欲しい。 以下の形式で直線 L 上の点 A (Ax, Ay) を出力せよ。ただし点 A と原点との距離は 1 以上でなければならない。 原点とこの点 A を通る直線で凸多角形 K を分割したとき 2 つの凸多角形の面積の差が 10-5 未満でなければならない。点 A の座標は小数点以下 15 桁出力して欲しい。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00674.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力はすべて整数\n3 ≤ N ≤ 20\n-100 ≤ xi ≤ 100 ( 1 ≤ i ≤ N )\n-100 ≤ yi ≤ 100 ( 1 ≤ i ≤ N )\nテストケースの数は 1,000 を超えない。",
          "ranges": "3 20; 100 100; 100 100; 20; 100; 100; 3; 100; 1; 100; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n-100 -100\n100 -100\n100 100\n-100 100\n4\n-99 -100\n100 -100\n100 100\n-99 100\n4\n-100 -99\n100 -99\n100 100\n-100 100\n14\n-99 -70\n-92 -79\n10 -98\n37 -100\n62 -95\n77 -69\n88 -47\n92 -10\n96 28\n100 91\n42 92\n-62 92\n-88 91\n-98 64\n0",
            "output": "100.000000000000000 0.000000000000000\n100.000000000000000 0.000000000000000\n0.000000000000000 100.000000000000000\n-96.983291994836122 66.745111613942484",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00674.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00674"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00676",
        "title": "KND is So Sexy",
        "description": "KND君は会津大学に在籍する学生プログラマである。彼の胸元はとてもセクシーなことで知られている。 簡単のために胸元から見える肌の部分を図にある二等辺三角形ABCで表す。しかし服にはたるみが生じているため、長さが等しい2辺AC,BC(これらの長さをlとする)には実際にはさらに長さx分余裕がある。はだける部分の面積を増やすため、たるんだ分を引っ張ることで新たにふたつの三角形ADC,BECを作ることにしよう。点D,Eは三角形ABCの外側に存在する。この新しいふたつの三角形はたるみによって生じるもので、辺BEと辺ECの長さの和および辺ADと辺DCの長さの和はl+xでなければならない。あなたはこれら3つの三角形の面積の和Mが最大になるように点D,Eを決める。KND君の隣人であるあなたは彼の胸元がどれ程セクシーなのかを調べるために、a,l,xを入力として服からのぞく肌の最大の面積(M)を計算するプログラムを作成することにした。 入力は複数のテストケースからなる。\nひとつのテストケースは以下の形式で与えられる。\n入力の終わりをEOFで示す。 ここで、 である。 入力は以下の条件を満たす。 各テストケースにつき最大の面積を1行に出力せよ。この値はジャッジ出力の値と10-5より大きい差を持ってはならない。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00676.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 入力はすべて整数。\n1 ≤ a ≤ 1000\n1 ≤ l ≤ 1000\n1 ≤ x ≤ 1000",
          "ranges": "1 1000; 1 1000; 1 1000; 1000; 1000; 1000; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 2 1\n2 3 1\n3 2 3\n2 3 5",
            "output": "3.9681187851\n6.7970540913\n6.5668891783\n13.9527248554",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00676.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00676"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00677",
        "title": "Make KND So Fat",
        "description": "KND君は会津大学に在籍する学生プログラマである。彼の隣人はとても迷惑なことで知られている。隣人は彼が甘党であることを知り、必要以上に甘味を差し入れて彼を太らせようと画策している。そのために、当の隣人であるあなたは友人からとある甘味処を紹介してもらった。 しかし、その甘味処での商品の販売の仕方は少し変わっている。その販売方法とは、甘味セットと呼ばれる甘味の組を日替わりで販売するというものだ。予算内であればその日に販売されている甘味セットの中から自由に甘味を買うことができる。しかし、甘味セットに含まれる甘味は一種類につき１個しか販売されていない。\nまた、予算は期間の始めに用意した額から支払い、期間途中での追加予算はないものとする。あなたは友人から教えられた甘味の体重に与える影響の度合いと値段をもとに、ある期間中に一定の予算内で彼の体重を最適に増やす甘味の買い方を計算するプログラムを作成することにした。 入力は複数のテストケースからなる。空行区切りで与えられる。ひとつのテストケースは以下の形式で与えられる。入力の終了をEOFで示す。 ここで、 である。 入力は以下の条件を満たす。 各テストケースにつき予算内で体重に与えられる最大の影響とその影響を与えるために必要な最小の金額を空白区切りで1行に出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00677.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 入力はすべて整数。\n1 ≤ s ≤ d ≤ 100\n1 ≤ m ≤ 300\n1 ≤ ki ≤ 50\n0 ≤ wi,j ≤ 50\n0 ≤ pi,j ≤ 300\n0 ≤ fi < s",
          "ranges": "1 300; 1 50; 100; 300; 50; 50; 300; 1; 1; 1; 0; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 3 100\n2\n5 20 3 10\n2\n10 50 12 60\n2\n8 30 22 100\n0 1 2\n\n1 1 30\n1\n13 8\n0",
            "output": "23 100\n13 8",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00677.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00677"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00678",
        "title": "KND Runs for Sweets",
        "description": "KND君は会津大学に在籍する学生プログラマである。彼は甘党であることで知られている。彼はとある市に1年間滞在することになり、その期間中に市内にある N 箇所の甘味処をすべて回りたいと思っている。なのでこの1年間の住む場所は甘味処を回るのに一番適した場所がいいと考えている。彼の隣人であるあなたは、各甘味処への最悪の移動時間が最小になる場所を探す事になった。この甘味処がある市は簡単のため二次元平面で表すことにする。彼は目的の甘味処へのモチベーションの違いにより、単位時間あたりの移動距離が変化する。また、彼はどんな場所にでも（たとえ甘味処と同じ場所であろうと）住むつもりでいる。KND君は甘味に関しては妥協を許さないのである。 入力は複数のテストケースからなる。\nひとつのテストケースは以下のな形式で与えられる。\n入力の終了を N  = 0 のとき示す。 ここで、 である。 入力は以下の条件を満たす。 各テストケースにつき最悪の移動時間の最小値を一行に出力せよ。この値はジャッジ出力の値と10-5より大きい差を持ってはならない。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00678.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 入力はすべて整数。\n2 ≤ N ≤ 100\n0 ≤ xi, yi ≤ 100\n1 ≤ vi ≤ 100 ( 1 ≤ i ≤ N )\nxi ≠ xj or yi ≠ yj ( ただし1 ≤ i < j ≤ N )",
          "ranges": "2 100; 1 100; 100; 100; 100; 2; 0; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\n1 1 1\n2 2 1\n4\n1 1 3\n3 1 3\n4 2 1\n1 5 3\n0",
            "output": "0.70710678\n1.06066017",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00678.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00678"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00679",
        "title": "KND Warp",
        "description": "KND君は会津大学に在籍する学生プログラマだ。彼はその優秀な頭脳をもってワープ装置を開発したことで有名である。ワープ装置とは便利なもので、ある場所から別の場所まで瞬時に移動することができる。彼はこれから地球上に点在するワープ装置を用いて様々な場所を可能な限り早くめぐる旅を計画している。 彼の隣人であるあなたの仕事は3次元空間 (xyz直交座標系) 上に存在するN個のワープ装置をうまく使用して、1からMまでの番号がふられたM個の点を順に通って、M番目の点まで移動するときの最小の所要時間を求めることだ。はじめは1番目の点にいるものとし、どのワープ装置も任意のワープ装置へ時間0で移動できる。ワープ以外の単位距離の移動は単位時間を要する。経由点のクエリはQ個与えられる。 入力は複数のテストケースからなる。\nひとつのテストケースは以下の形式で与えられる。\n入力の終わりをN = Q = 0のとき示す。 ここで、 である。 入力は以下の条件を満たす。 各クエリにつき最小の所要時間を一行に出力せよ。この値はジャッジ出力の値と10-4より大きい差を持ってはならない。 入力ファイルのサイズは4MB程度になる。入力は高速にしたほうがよいが、たとえばC++であればcinでも十分である。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00679.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 テストケースの数は15個を超えない。\n入力の半分程度はN≤1000を満たす。\n入力に含まれる値はすべて整数。\n2≤N≤100,000\n1≤Q≤1,000\n2≤M≤100\n-1,000,000≤(全てのx,y,z座標値)≤1,000,000\nワープ装置は上記の制約を満たす空間中にランダムに分布する(Sample Inputは例外)。\nワープ装置同士、中継点同士、ワープ装置と中継点はそれぞれ重なることがある。",
          "ranges": "2 100; 1 1; 2 100; 1000; 100; 1; 100; 2; 1; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 2\n0 0 0\n1 1 1\n2 2 2\n4\n-1 -1 -1\n3 3 3\n-1 -1 -1\n4 4 4\n2\n1234 5678 9012\n1716 6155 9455\n0 0",
            "output": "12.124355653\n810.001234567",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00679.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00679"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00680",
        "title": "KND Factory",
        "description": "KND君は会津大学に在籍する学生プログラマである。彼の住む町の周辺には N 個の町がある。彼は生クリームが大好きなので毎日生クリームを食べるためにある町に工場を建設した。その工場では毎日 F リットルの生クリームが製造される。生クリームは運ぶたびに、移動元の町の気温と移動先の町の気温の絶対差だけ傷んでしまう。困ったことにこの近辺の町の気温は寒暖計によって計測できない。しかしながら調査によって、それぞれの町の気温を変数とした N 個の一次方程式からなる N 元一次連立方程式を導くことができた。あなたはこれを解くことによって各町の気温を知ることができる。また、ある町から他の町へ生クリームを運搬するにはパイプラインを用いる。パイプラインは一日に送ることのできる生クリームの量が限られている。一日に F リットルの生クリームを工場がある町 s からKND君が住む町 t へ生クリームをなるべく良い状態で送りたい。町には0から始まる番号がつけられているものとする。方程式の各項は高々ひとつの変数からなり定数項がひとつある。 F リットルの生クリームはどのような運び方をしても一日以内で任意の町へ送られる。 入力は複数のテストケースからなる。ひとつのテストケースは以下の形式で与えられる。テストケースの数は入力として与えられる。 ここで、 である。 N元一次連立方程式を表す行列の入力例: a,b,cが町0,1,2の気温を表す。 入力は以下の条件を満たす。 各テストケースにつき、一日に F リットルの生クリームを工場がある町 s からKND君が住む町 t に運んだとき、生クリームの傷みの和を最小化した値を一行で出力せよ。この値はジャッジ出力の値と10-5より大きい差を持ってはならない。また、町 s から町 t へ F リットルの生クリームを一日に運べない場合はimpossibleを一行で出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00680.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 入力はすべて整数。\n0 < T ≤ 40\n2 < N ≤ 100\n0 ≤ s < N \n0 ≤ t < N \ns ≠ t\n0 < F ≤ 1000\n0 ≤ Mi ≤ N \n-1000 ≤ ai,j ≤ 1000\n0 ≤fi,j< 1000\nそれぞれの町の気温は一意に定まる。",
          "ranges": "0 40; 2 100; 0 1000; 40; 100; 1000; 1000; 1000; 0; 2; 0; 0; 0; 0; 1000; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n3 0 2 5\n1 1 1 6\n3 2 1 10\n1 -2 3 6\n2\n1 2\n3 3\n1\n2\n3\n0\n3 0 2 5\n1 1 1 6\n3 2 1 10\n1 -2 3 6\n2\n1 2\n2 2\n1\n2\n2\n0\n10 2 7 20\n8 9 -5 6 -9 5 1 0 4 9 4\n3 -1 -8 0 -5 4 3 0 -3 2 4\n-4 5 8 -4 1 -8 -6 3 3 5 -7\n-7 0 2 5 8 -5 -9 -8 1 -2 -1\n3 8 1 -3 8 2 -5 8 -3 4 -4\n-2 5 0 -2 -4 4 -3 9 6 -1 -2\n4 1 2 -9 3 5 6 -4 4 -1 -4\n-4 6 6 9 -2 1 -9 -3 -7 3 -4\n1 -1 6 3 1 -5 9 5 -5 -9 -5\n-7 4 6 8 8 4 -4 4 -7 -8 -5\n5\n1 5 0 6 3\n15 17 14 7 15\n3\n1 5 7\n6 8 14\n10\n3 5 3 5 9 5 9 5 1 4\n12 6 16 11 16 7 9 3 13 13\n10\n9 1 5 6 2 5 8 5 9 4\n15 8 8 14 13 13 18 1 12 11\n5\n3 5 0 4 6\n14 15 4 14 11\n9\n5 0 6 2 7 8 8 6 6\n6 5 7 17 17 17 17 19 3\n9\n7 7 2 7 8 4 7 7 0\n4 13 16 10 19 17 19 12 19\n3\n1 5 1\n3 7 16\n8\n5 7 4 9 1 4 6 8\n4 3 6 12 6 19 10 1\n4\n1 3 6 3\n5 15 18 14",
            "output": "10.0000000000\nimpossible\n11.9354380207",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00680.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00680"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00681",
        "title": "Wall Breaker KND",
        "description": "KND君は会津大学に在籍する学生プログラマである。彼はプログラマーであるとともに格闘家でもある。そんな彼は甘党であることで知られてるが、特に生クリームが大好物である。生クリームを食べればコンクリートの壁を数回壊すことができるようになるほどである。そのパワーに興味をもった彼の隣人は、生クリームたっぷりの新商品、「マトクリーム」を用いて実験をすることにした。 その実験は、まず迷路を用意しKND君をそこに閉じ込める。その迷路には鍵がかかった扉、扉を開けるための鍵、マトクリームがそれぞれ1つずつ別のマスに存在する。彼は落ちている鍵を拾い、扉の鍵を開けることで外に脱出することが可能である。鍵を持っていなくても扉があるマスに移動することは可能である。また、マトクリームを食べることで迷路の壁を N 回だけ壊すことができるようになる。ただし外壁を壊して迷路の外に出ることはできない。さて、彼は最小何回のマス移動で迷路を脱出できるだろうか。 サンプル2つの迷路と最短の脱出経路は次の図で示される。SはKND君の初期位置、Mはマトクリーム、Kは鍵、Dは扉を表す。 入力は複数のテストケースからなる。\nひとつのテストケースは以下の形式で与えられる。\n入力の終了を2つのゼロを含む行で示す。 ここで、 入力は以下の条件を満たす。 各テストケースにつきKND君が迷路から脱出する最小のマス移動回数を一行に出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00681.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 入力はすべて整数。\n2 ≤ W, H ≤ 20\n0 ≤ xs, xm, xk, xd < W\n0 ≤ ys, ym, yk, yd < H\n0 ≤ N ≤ 100\n主人公の初期位置のマスの座標、マトクリームのマスの座標、鍵のマスの座標、扉のマスの座標は互いに別の座標である。\n扉に入ることが不可能なデータセットはない。",
          "ranges": "0 100; 20; 100; 2; 0; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 3\n 0 0\n0 0 0\n 0 0\n0 0 1\n 0 1\n0 0\n0 1\n1 1\n2 2\n1\n5 5\n 0 1 0 0\n1 0 0 1 0\n 1 0 1 0\n0 1 0 0 1\n 0 1 1 0\n0 1 0 1 0\n 1 1 1 0\n0 0 0 0 0\n 0 0 1 1\n0 0\n1 0\n4 4\n0 1\n2\n0 0",
            "output": "4\n15",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00681.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00681"
      }
    },
    {
      "basicInfo": {
        "questionId": "p00999",
        "title": "Problem A: Rental DVD Shop NEO",
        "description": "僕はレンタルDVDショップ、「NEO」でアルバイトを始めた。まずはこの店の料金システムを勉強することになった。 レンタルDVDは旧作、準新作、新作の3種類存在し、1本のレンタル料金がそれぞれ a 円、 b 円、 c 円である。\n会計の際に以下に示すセットレンタルを複数回適用することができる。 ここで僕はある問題に気づいた。セットレンタルはレジに通した時に自動的に適用されるのではなく、手動で適用しているのだ。これでは最適ではない（もっと安くなる余地がある）セットレンタルの適用をしてしまう可能性がある。これではクレームが発生しかねない。僕はクレーム対応が嫌いなので、セットレンタルを最適に適用した時の料金を計算するプログラムを作成することにした。 入力は複数のデータセットからなる。\n各データセットは以下で表される。\n1行目は5つの整数 a , b , c , d , e がスペース区切りで与えられる。\n2行目にはレンタル本数が与えられる。3つの整数 na , nb , nc がスペース区切りで与えられる。それぞれ旧作、準新作、新作のDVDの本数を表す。\n入力の終わりは5つのゼロからなる。 入力は以下の条件を満たす。 各データセットにつき、セットレンタルを最適に適用した時の料金を1行に出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00999.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 入力に含まれる値はすべて整数\n0 < a < b < e < c ≤ 1000\n0 < d ≤ 100000\n0 ≤ na , nb , nc ≤ 100000\n0 < na + nb + nc \nデータセットの数は100個以下",
          "ranges": "0 100000; 1000; 100000; 100000; 0; 0; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "70 100 340 4 200\n1 1 4\n70 100 340 4 200\n0 1 3\n70 100 340 4 200\n1 1 2\n0 0 0 0 0",
            "output": "970\n800\n800",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p00999.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p00999"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01000",
        "title": "Problem B: Independent Research",
        "description": "僕は夏休みの自由研究のテーマとして、生き物観察を選択し、生き物観察キットを購入した。 この生き物は3次元グリッド状の空間を好んで生息する。\n各セルには最大1匹までしか入れない。\n周囲の環境に合わせ1日が経過するごとに誕生と死滅を繰り返す。\n\n誕生と死滅の条件は、セルに隣接する生き物の数に依存する。\nここで、あるセルに生き物が隣接するとは、あるセルと生き物が生息しているもう一つのセルが面、辺、または点を共有していることを言う。\n誕生と死滅のルールは次のようになる。 今回購入した飼育箱はセルの数が5*5*5である立方体の飼育箱だ。\nこの飼育箱ではこの生き物はどのような振る舞いをするのだろうか…？　とても楽しみである。 〜数日後〜 とりあえず、飼育してみたが…　\n\n毎日観察するなんて時間がかかるし、僕にはめんどくさくてやる気がおきない。\n\nそうだ、コンピューターとプログラムを使ってシミュレートしよう。 入力は複数のデータセットからなる。\n各データセットは以下のフォーマットで与えられる。 最初にシミュレートする日数 N が与えられる。\n\n次に飼育箱の初期状態の情報が与えられる。これは5つの5*5の2次元グリッドで与えられる。\n各2次元グリッドは0と1から成り立ち、1は生き物がいることを示し、0は何もいないことを示す。\n例えば、 z  = 0のセルの状態の2次元グリッドの4行2列目の値が1だった場合、飼育箱の座標(1, 3, 0)の位置に生き物がいることを表す。\n\n次に、整数 M1 が与えられ、そのあとに M1 個の数字 ai が与えられる。\n次に、整数 M2 が与えられ、そのあとに M2 個の数字 bj が与えられる。\n\n入力の終わりは N = 0で表される。 入力は以下の条件を満たす。 各データセットに対し、 N 日経過後の状態を出力せよ。\n出力は以下のフォーマットに従う。 1行目にテストケース番号を出力し、次の行から N 日経過後の状態として、5*5の2次元グリッドを5つ出力せよ。\n各テストケースの出力間には空行を出力しなさい。",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01000.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 1 ≤ N  ≤ 100\n\n0 ≤ M1 , M2  ≤ 27\n0 ≤ ai , bj  ≤ 26 \n(1 ≤ i ≤ M1 , 1 ≤ j ≤ M2 )\n任意の i , j (1 ≤ i < j ≤ M1 ) \nにおいて、 ai ≠ aj \n任意の i , j (1 ≤ i < j ≤ M2 ) \nにおいて、 bi ≠ bj",
          "ranges": "1 100; 100; 27; 26; 1; 0; 2; 0; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n00000\n01010\n00000\n00100\n00000\n\n00000\n01010\n00000\n01010\n00000\n\n00000\n00100\n00000\n01010\n00000\n\n00000\n01010\n00000\n00100\n00000\n\n00000\n00000\n00100\n00000\n00000\n\n1 2\n2 3 4\n4\n01110\n00100\n00100\n00100\n01110\n\n01110\n10001\n10000\n10001\n01110\n\n11111\n10001\n11111\n10000\n10000\n\n01110\n10001\n10000\n10001\n01110\n\n00000\n00000\n00000\n00000\n00000\n\n2 3 4\n1 2\n100\n00100\n01010\n01110\n10001\n10001\n\n01110\n00100\n00100\n00100\n01110\n\n00000\n00000\n00000\n00000\n00000\n\n11111\n00010\n00100\n01000\n11111\n\n10001\n10001\n10001\n10001\n01110\n\n5 1 3 5 7 9\n5 0 2 4 6 8\n0",
            "output": "Case 1:\n00000\n00000\n01010\n01110\n10101\n\n00000\n10001\n00000\n00000\n00000\n\n00000\n00000\n11111\n10001\n00000\n\n00000\n00000\n00000\n00000\n01010\n\n00000\n00000\n01110\n00100\n11111\n\nCase 2:\n00010\n10110\n00000\n11000\n10000\n\n00001\n00000\n10101\n00010\n00100\n\n10001\n00000\n00000\n00000\n00010\n\n01110\n10001\n00000\n00001\n10000\n\n00000\n00000\n00111\n01001\n01000\n\nCase 3:\n00000\n00000\n00000\n00000\n00000\n\n00000\n00000\n00000\n00000\n00000\n\n00000\n00000\n00000\n00000\n00000\n\n00000\n00000\n00000\n00000\n00000\n\n00000\n00000\n00000\n00000\n00000",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01000.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01000"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01001",
        "title": "Problem C: General of Taiko",
        "description": "とあるゲームセンターには、曲に合わせて流れてくる譜面通りに和太鼓を叩くゲームがあります。\n譜面は長さ L のセルからなり、各セルには何もない、またはノートと呼ばれるプレイヤーがとるべき行動を表した記号があります。\nノートは2種類ありそれぞれ、和太鼓の面を叩く「トン」、和太鼓の縁を叩く「コツ」があります。\nこれらのノートに合わせて和太鼓を叩くと得点を得ることができます。\nこの得点の合計が10000点以上であればクリアとなります。 このとき、プレイヤーが曲をクリアできる確率を求めなさい。ただし、プレイヤーは常に最適な行動をとることにします。 プレイヤーが譜面通りに和太鼓を叩く精度は11段階あり、それぞれ、\n0%, 10%, 20%, ..., 90%, 100%の確率で譜面通りに和太鼓を叩くことができます。 上記の二種類の動作は右腕と左腕どちらででも行うことができます。\nプレイヤーの情報として、それぞれの腕で行った場合の精度の安定率を表す値が16種類、下記のように与えられます。 ただし、 lt  は左腕でトン,  rt  は右腕でトン,  lk  は左腕でコツ,  rk  は右腕でコツの動作を表します。\n例えば、 lt_rk は左腕でトンのあとに右腕でコツを行った時の精度の安定の度合いを表し、この値によって左腕でトンのあとに右腕でコツを行うときの精度が、下記のように変化します。 曲の情報は以下のとおりです。\n曲の長さを表す L 、譜面を表す L 個の数字 si (0 ≤ i <  L )で示される。譜面の先頭は s0 である。\n si の値は以下の3つです。 プレイヤーが最初に和太鼓を叩くときの精度は100%です。\nまた、プレイヤーは譜面を無視することができます。\nノートがなかったり、ノートを無視した場合、プレイヤーの精度は100%になります。 各ノートに合わせて和太鼓を叩いたときの得点は下記のようになります。 この問題におけるコンボ数とは、連続してノートに合わせて和太鼓を叩けた数です。\nプレイヤーがノートに合わせて叩いた場合、上記の式を元に得点が入り、その後にコンボ数が1増えます。\nノートに合わせて和太鼓を叩けなかった場合、コンボが途切れ、コンボ数が0になります。 入力は複数のデータセットからなります。\n各データセットは以下のとおりです。 入力の終わりは負の整数4つからなります。 入力は以下の条件を満たします。 各入力に対して、クリアできる確率を1行で出力しなさい。\nただし、出力は0.001以下の誤差を含んでも良いです。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01001.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たします。 0 < L ≤ 100\n0 ≤ 精度の安定率 ≤ 10\n精度の安定率は整数\n0 < A ,  B ≤ 10000\n A と B はともに100の倍数\nデータセットの数は100個以下",
          "ranges": "0 100; 0 10; 100; 10; 10000; 0; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "9 0 0 0\n0 9 0 0\n0 0 0 0\n0 0 0 0\n5\n1 1 1 1 1\n1000 500\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n5\n1 0 2 0 1\n1000 2000\n3 8 6 10\n0 1 6 8\n10 2 4 7\n8 6 6 8\n19\n2 2 0 2 2 0 2 1 0 1 2 0 1 2 0 1 0 2 2\n200 100\n-1 -1 -1 -1",
            "output": "0.3024000000\n0.0000000000\n0.5120000000",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01001.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01001"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01002",
        "title": "Problem D: Smartphone Game",
        "description": "人気のスマフォゲームの一機能を実装してみよう。ゲームは以下の仕様に基づく。 １回のプレイで得られる最大の点数を求めよ。 入力は複数のデータセットからなる。\n各データセットは以下で表される。 aijは1から5までの数字で、ブロックの種類を表す。\nscoreiは i 種類目のブロック１つ分の得点を表す。\nn = -1 の時、入力が終了する。 入力は以下の条件を満たす。 各データセット毎に、答えを一行に出力しなさい。",
        "difficulty": "Easy",
        "category": "Simulation",
        "tags": [
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01002.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 0 ≤ n ≤ 5\n1 ≤ aij ≤ 5\n0 ≤ scorei ≤ 100\nテストケースの数は 10 を超えない。\n入力に含まれる値は全て整数である。",
          "ranges": "0 5; 1 5; 0 100; 5; 5; 100; 0; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "0\n1 1 1 5 5\n5 5 5 5 5\n5 5 1 5 5\n5 1 1 1 5\n5 5 5 5 5\n0 0 0 0 1\n2\n1 2 3 4 5\n2 3 4 5 5\n2 3 4 5 5\n3 4 5 5 1\n5 4 3 2 1\n100 99 98 97 96\n5\n1 2 3 4 5\n2 3 4 5 1\n1 2 3 4 5\n5 4 3 2 1\n1 2 3 4 5\n99 79 31 23 56\n-1",
            "output": "17\n2040\n926",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01002.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01002"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01003",
        "title": "Problem E: Doragoso Ball",
        "description": "L 個集めるとドラゴソが現れどんな願いでも一つだけ叶えてくれるというドラゴソボールがとある迷宮に散らばっている。入口からスタートし、途中で立ち止まることなくすべてのボールを回収し、それらを迷宮内にある祭壇に奉納し、そのまま呪文を唱えるとドラゴソが現れ願いを叶えてくれるという。ただし、呪文を唱え始める時間は入口からボールを奉納するまでのルートのうち、移動時間が K 番目に短いルートで移動したときの時間でなければならない。 この迷宮は部屋とわたり通路からなり、部屋と部屋はわたり通路を通る事によって行き来できる。ドラゴソボールはそれらの数ある部屋のどこかに落ちている。なお、迷宮は入り口から祭壇へたどりつく道が存在しない可能性もあるようだ。また、移動時間はわたり通路の移動だけを考慮し、部屋の中を移動する時間、ボールを拾うときにかかる時間、祭壇に奉納する時間は考慮しなくてよい。また、同じ通路や同じ部屋に何度も訪れてもよいが、ドラゴソボールがある部屋に初めて入った場合は、そのボールを拾うことにする。祭壇に到達したとき、必ずしもボールを納めなければならないわけではない。 迷宮の内部構造の情報と迷宮の入り口、祭壇の場所とボールの数 L とボールの配置場所と求められている最短な経路の順位 K が与えられるので、呪文を唱え始めるべき時間を求めよ。 このようなとき、ルートB,C,D,Eは2位かつ3位かつ4位かつ5位として扱う。ルートFは6位として扱う。 入力は複数のデータセットからなる。\n各データセットは以下のフォーマットで表される。 最初に N , M , L , K が与えられる。\nそれぞれ、部屋の数、わたり通路の数、ボールの数、求められている最短な経路の順位を表す。それぞれの部屋は1〜 N で番号付けされる。\n次に M 行にわたり通路の情報、 ui , vi , ci が与えられる。\n部屋 ui , vi 間にわたり通路が存在し、通過するのに時間 ci がかかることを表す。\n次に S , G が与えられる。\nそれぞれ、迷宮の入り口と祭壇がある部屋番号を表す。\n次に L 行にわたってドラゴソボールが落ちている部屋の番号 Bi ( 1 ≤ i ≤ L )が与えられる。 入力の終わりは4つのゼロからなる。 入力は以下の条件を満たす。 各データセットに対し、呪文を唱え始めるべき時間を1行に出力せよ。 K 番目に短い経路が存在しない場合は\"NA\"を1行に出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01003.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 入力に含まれる値はすべて整数\n2 ≤ N ≤ 50\n0 ≤ M ≤ 1225\n1 ≤ L ≤ 7\n1 ≤ K ≤ 10\n1 ≤ S , G ≤ N\n1 ≤ Bi ≤ N ( 1 ≤ i ≤  L )\n Bi ≠ Bj  ( 1 ≤ i < j ≤ L )\n1 ≤ ui , vi ≤ N ( 1 ≤ i ≤  M )\n1 ≤ ci ≤ 1000 ( 1 ≤ i ≤  M )\nデータセットは最大10個である",
          "ranges": "2 50; 0 1225; 1 7; 1 10; 1 1000; 50; 1225; 7; 10; 1000; 2; 0; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "9 14 5 10\n1 2 1\n1 4 5\n2 4 4\n2 3 3\n2 6 2\n3 6 3\n3 7 2\n4 6 5\n4 5 6\n5 8 8\n6 7 3\n7 8 1\n7 9 9\n8 9 2\n1 9\n1\n2\n5\n7\n9\n4 5 1 3\n1 2 1\n1 3 2\n2 3 2\n2 4 9\n3 4 1\n1 4\n2\n4 5 1 10\n1 2 1\n1 3 2\n2 3 2\n2 4 9\n3 4 1\n1 4\n2\n4 3 1 1\n1 2 1\n2 3 1\n3 4 1\n1 4\n1\n4 3 1 2\n1 2 1\n2 3 1\n3 4 1\n1 4\n1\n4 3 1 10\n1 2 1\n2 3 1\n3 4 1\n1 4\n1\n2 1 1 1\n1 2 1\n1 2\n1\n2 1 1 10\n1 2 1\n1 2\n1\n4 2 1 4\n1 2 1\n3 4 1\n1 4\n2\n0 0 0 0",
            "output": "27\n6\n8\n3\n5\n7\n1\n19\nNA",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01003.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01003"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01004",
        "title": "Problem F: Ballon Contest",
        "description": "空の様子がいつもと違う。色とりどりの多彩な熱気球が空を覆っていた。今日は熱気球の大会だ。熱気球から落とされた得点付きボールを参加者全員で取り合うらしい。せっかくなので優勝者を予想してみることにした。 得られる得点の期待値を求め、期待値の最も大きい参加者の期待値を出力せよ。 入力は複数のデータセットからなる。\n各データセットは以下で表される。 1行目には、参加者の人数 N 、ボールの数 M が与えられる。\n2行目から N +1行目までには、参加者の情報が与えられる。 xi , yi は、それぞれ参加者の位置のX座標・Y座標である。\n N +2行目から N + M +1行目までには、ボールの情報が与えられる。各ボールが実際に落下する地点のX座標・Y座標はそれぞれ bxj - dxj から bxj + dxj まで、 byj - dyj から byj + dyj までの範囲のどこかである。 scorej はボールの得点である。\n入力の終わりは2つのゼロからなる。 入力は以下の条件を満たす。 各データセット毎に、答えを一行に出力しなさい。\n出力は0.0001以下の誤差を含んでもよい。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01004.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 1 ≤ N ≤ 100\n1 ≤ M ≤ 10\n0 ≤ xi , yi , bxj , byj ≤ 10000\n1 ≤ dxj , dyj≤ 10000\n1 ≤ scorej ≤ 100\nテストケースの数は 10 を超えない。\n入力に含まれる値は全て整数である。",
          "ranges": "1 100; 1 10; 1 100; 100; 10; 10000; 10000; 100; 1; 1; 0; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 4\n10 75\n50 5\n90 75\n50 50 10 10 2\n40 90 1 1 3\n10 20 10 15 1\n50 70 50 50 4\n4 2\n25 25\n25 75\n75 75\n75 25\n50 50 10 10 1\n50 50 15 15 2\n1 1\n5 5\n1 1 1 1 1\n0 0",
            "output": "5.442857\n0.750000\n1.000000",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01004.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01004"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01005",
        "title": "Problem G: The Humans Braving the Invaders",
        "description": "現在、地球は宇宙からの侵略者であるインベーダーの攻撃を受け、人類で生き残った者は基地にいる我々だけとなった。\n奴らに対抗できる戦力もほとんど残されていない。\nだが、ここで我々は諦めるということはしない。\nインベーダを全滅させることが、我々人類が生き残る最後の手段である。\n\n今から最後になるであろう作戦の内容を説明する。 まず、インベーダーの戦力に比べ我々の戦力はあまりにも少ないので、この基地に立てこもり、籠城戦を行う。\nこの基地は高い山に囲まれていて、インベーダーが侵攻するには基地正面にある真っ直ぐな道を通る他無い。\nこの道をフィールドと呼ぶことにする。この特徴により、前方に集中してインベーダーを攻撃することが可能である。\n基地にいる我々はインベーダーに対し2種類の武器で攻撃を行う。\n1つはインベーダー1体を狙撃するスナイパーライフルである。もう1つは広範囲に攻撃ができるグレネードランチャーである。 人類でたった1人のプログラマーである君の仕事は、インベーダーと我々の行動記録を元に戦闘をシミュレーションすることだ。\n行動記録はクエリー形式で与えられる。各クエリーは1つまたは複数の整数からなり、次のように与えられる。 作戦の説明は以上だ。総員、作戦開始！・・・幸運を祈る。 入力は複数のデータセットからなる。\n各データセットは以下で表される。\n1行目は2つの整数 Q , L がスペース区切りで与えられる。\n続く Q 行には、上記で説明したクエリーが Q 個与えられる。\n入力の終わりは2つのゼロからなる。 入力は以下の条件を満たす。 各データセットにつき、出力の指示があるクエリーに対して出力せよ。各データセットの最後には\"end\"を出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01005.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 入力に含まれる値はすべて整数\n1 ≤ Q ≤ 100000\n1 ≤ L ≤ 109\n1 ≤ d , k ≤ 109\n0 ≤ x ≤ L \n0 ≤ r ≤ 109\n同じ位置にインベーダーが2体以上存在することはない\nデータセットの数は3個以下",
          "ranges": "1 100000; 1 109; 0 109; 100000; 109; 109; 109; 1; 1; 1; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "18 10\n0\n4 1\n1 1\n4 1\n0\n1 1\n0\n2 2\n1 10\n0\n1 1\n0\n1 1\n0\n1 5\n3 4 0\n3 4 1\n0\n9 10\n4 1\n2 2\n3 5 5\n0\n4 1\n2 2\n3 5 5\n0\n2 1\n0 0",
            "output": "distance 10\ndistance 9\nhit\ndamage 2\nbomb 1\nbomb 2\nend\ndistance -1\nmiss\nbomb 0\ndistance 10\nmiss\nbomb 1\nhit\nend",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01005.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01005"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01007",
        "title": "Problem B: Matrix Operations",
        "description": "要素が1と0からなるn×nの行列に対して、以下の種類の操作を行うプログラムを作成せよ。 部分行列と角度(0,90,180,270,360)が与えられるのでその分だけ時計回りに回転させる。 \n \n      部分行列が与えられるので値を反転させる。\n \n      行が与えられるので左に1個シフトし、はみ出た分は右端に移動する。 \n \n      行が与えられるので右に１個シフトし、はみ出た分は左端に移動する。 \n \n      行(r),列(c)が与えられる。\n      Step1：現在のセルを(r,c)にする。 \n      Step2：現在のセルの値を反転する。 \n      Step3：隣接するセルのうち、値が現在のセルの反転前の値と等しいセルに対し、Step2とStep3の処理を行う。\n      ここで、セル(i,j)に隣接するセルとは、(i-1,j),\n      (i+1,j),(i,j-1),(i,j+1)の４つである。 入力の最初に2つの整数nとmが空白区切りで与えられる。     nは行列のサイズ、mは操作の数を表している。 次にグリッドの情報がn行で与えられ、グリッドの情報のi行目にはn個の整数\n    ai,jが空白区切りで与えられる。ai,jには0か1が与えられる。 次に1行で表される各Operationiがm個与えられる。      \n    Operationi の最初の入力はo(操作の種類)が入力される。 oが0のときは回転(Rotate)を表している。\n      続く入力は、r c size angle(行、列、サイズ、角度) が空白区切りで与えられる。\n      左上(r,c)から右下(r+size-1,c+size-1)が部分行列となる。\n      正方行列になることは保証されている。 oが1のときは反転(Reversal)を表している。\n      また、続く入力は、r c size (行、列、サイズ) が空白区切りで与えられる。\n      左上(r,c)から右下(r+size-1,c+size-1)が部分行列となる。\n      正方行列になることは保証されている。 oが2のときは左シフト(Left shift)を表している。\n      また、続く入力は r(行) が与えられる。 oが3のときは右シフト(Right shift)を表している。\n      また、続く入力は r(行) が与えられる。 oが4のときは島反転(Island reversal)を表している。\n      また、続く入力は r c(行、列) が空白区切りで与えられる。 入力は以下の条件を満たす。 生成された行列を出力して下さい。",
        "difficulty": "Easy",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01007.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 1 ≤ n,r,c,size ≤ 15\n1 ≤ m ≤ 100\n0 ≤ o ≤ 4\n1 ≤ r+size-1,c+size-1 ≤ 15\n0 ≤ angle ≤ 360",
          "ranges": "1 100; 0 4; 0 360; 15; 100; 4; 15; 360; 1; 1; 0; 1; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 1\n1 1 0\n0 1 1\n1 0 1\n0 2 2 2 90",
            "output": "1 1 0\n0 0 1\n1 1 1",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01007.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01007"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01009",
        "title": "Problem D: Room of Time and Spirit",
        "description": "最初に戦士の人数 N , クエリの数 Q が与えられる。\n\n次に Q 回だけクエリが与えられる。 入力は以下の条件を満たす。 上記のように与えられたクエリを順番に処理していき、 COMPAREの入力が与えられた際に出力を行う。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01009.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 2 ≤ N ≤ 100000\n1 ≤ Q ≤ 100000\n1 ≤ A, B ≤ N\n1 ≤ C ≤ 5000",
          "ranges": "2 100000; 1 100000; 1 5000; 100000; 100000; 5000; 2; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 5\nCOMPARE 1 2\nIN 1 2 5\nIN 2 3 3\nCOMPARE 2 3\nCOMPARE 1 3",
            "output": "WARNING\n3\n11",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01009.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01009"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01010",
        "title": "Problem E: Light Source",
        "description": "二次元平面上にn個の円状の光源が配置されている。ある光源が光を受けると、下図のようにその光源の中心点から扇状に光が放出される。\n\n\n\n光源の中心点は(x,y)、半径はrで表される。\n光となる扇形は角βを中心に-θ/2, +θ/2の方向へ対称に広がり、その半径はαである。 光源の円が扇型の光に完全に覆われるとき、光源はその光を受けたとみなされる。光源から放出される光の強さは、受けた光の強さの合計となる。ただし、放出される光の強さには上限があり、上限を超えた場合、光の強さは上限値と同じになる。なお、ある光や光源によって光が遮られることはない。 ある地点に存在する光源を目的光源とする。目的光源では光が放出されず、受ける光の強さに制限はない。\nあなたは座標(0,0)から、ある強さの扇形の光を、任意の方向に１度だけ放出することができる。目的光源が受ける光の強さの合計の最大値を求めるプログラムを作成せよ。ただし、全ての光源において、放出された光が元の光源に戻るような入力データは与えられないと仮定してよい。また、この問題では、領域の境界からの距離が0.000001以内の場合、領域上とみなすことにする。 1行目には目的光源を除く光源の数nが与えられる。\n2行目に最初に光を放出する座標(0,0)の情報、3行目からn+2行目に目的でない光源の情報、n+3行目に目的光源の情報がそれぞれ空白区切りで与えられる。\n各情報に対して、xi,yiは光源の中心点の座標、riは光源の半径、θiは光が広がる角度、αiは光の半径、βiは光が向かう方向を表す。2行目のpowerは最初に放出される光の強さ、3行目からn+2行目のmaxpoweriは放出される光の上限を表す。\n光の方向βiはx軸の正の向きから反時計回りに回転し、各角度の単位は度とする。 入力は以下の条件を満たす。 目的光源を全て囲うような光の強さの合計の最大値を1行に出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01010.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 入力は全て整数からなる\n1 ≤ n ≤ 100\n-1000 ≤ xi,yi ≤ 1000\n1 ≤ ri ≤ 1000\n1 ≤ θi ≤ 180\n1 ≤ αi ≤ 1000\n0 ≤ βi < 360\n0 ≤ power,maxpoweri ≤ 1000",
          "ranges": "1 100; 1 1000; 1 180; 1 1000; 0 360; 100; 1000; 1000; 180; 1000; 360; 1000; 1; 1000; 1; 1; 1; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1\n90 10 20\n3 3 1 90 10 315 10\n6 0 1",
            "output": "30",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01010.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01010"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01011",
        "title": "Problem F: Prize Game",
        "description": "新しいゲームセンターが開店することになった。たくさんのお客さんを取り入れるために、全く新しいプライズゲームを設置することになった。 このプライズゲームはR×Cのグリッドから構成される。各マスは空白か、1〜18のいずれかの数字が書かれている。プレイヤーはひとつの空白のマスを選択し、そのマスの景品を獲得できる。ただし、マスにある景品はプレイヤーから見ることができない。 スタッフはこのプライズゲームに景品を設置しなければならない。スタッフは以下のルールが守られていれば、どのように景品を配置してもよい。数字が書かれているマスについて、その数字をxとすると、その数字を中心とする凸型の範囲の中に景品がちょうどx個置かれている必要がある（下の図を参照）。この凸型の出っ張っている部分は上を向いている。また、景品は空白のマスのみに置くことができ、1つのマスに3個まで置くことが出来る。1個も置かないことも可能である。 中央の数字が5だった場合の景品の置き方の例。オレンジ色の部分にちょうど計5個の景品が置かれている必要がある。 お客さんに景品の場所が簡単に推測されては大損である。そこで、オープニングスタッフであるあなたに、上記ルールに則った景品の置き方の場合の数を数えてもらいたい。ただし、景品は互いに区別できないものとする。答えは大きくなる場合があるので答えの場合の数を1000000007で割った余りを答えなさい。 1行目に2つの整数R,Cが空白区切りで与えられる。それぞれグリッドの行数と列数を表す。次にプライズゲームを表すグリッドの情報がR行で与えられる。グリッドの情報のi行目にはC個の整数 ai,jが空白区切りで与えられる。ai,jはグリッドのi行j列のマス情報を表す。0の場合は空白のマス、それ以外の場合は数字ai,jが書かれたマスを表す。また、与えられるグリッドは1行目がプライズゲームの一番上を表し、R行目が一番下を表す。 入力は以下の条件を満たす。 ルールに則った景品の置き方の場合の数を1000000007で割った余りを1行に出力せよ。",
        "difficulty": "Easy",
        "category": "Simulation",
        "tags": [
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01011.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 1 ≤ R,C ≤ 6\n0 ≤ ai,j ≤ 18 (1 ≤ i ≤ R , 1 ≤ j ≤ C)",
          "ranges": "6; 18; 1; 0; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 3\n0 0 0\n0 18 0\n0 0 0",
            "output": "16",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01011.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01011"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01014",
        "title": "Problem I: Rolling Block",
        "description": "Rolling Blockは直方体の金属体を回転させつつ移動させ、ゴールの穴に落とすゲームである。\nこのゲームのクリア条件は金属体をゴールに落とすことである。 ブロックについて\n下の図の(1)より、ブロックは1×1×Lの直方体である。\nブロックは東西南北のどれかの方向に回転しながら移動することができる。\nしかし、ブロックはステージからはみ出るような動きをとることは出来ない。\n下の図の(2)より、ブロックが横に倒れている場合は移動方向に対してこのような回転をしつつ移動する。\n下の図の(3)より、ブロックが直立している場合は移動方向に対してこのような回転をしつつ移動する。\n(2) 、(3) については灰色のブロックが移動前、白色のブロックが移動後のブロックとする。\n黒い矢印はその方向に対してブロックが移動したことを示す。\nまた、白の矢印は移動する際にブロックがその方向へ回転したことを示す。\nブロックに点線が引かれているが、これは回転を分かりやすくするために引いたものである。\n（実際にゲームで扱うブロックにはこのような点線は書かれていない）\n\n\n以下の図はブロックの回転を補足するための図である。\nサイコロのように対面の和が7になるようなブロックがあるとする。\n直立している場合と倒れているブロックについて、このブロックを東西南北の4方向へ回転しつつ移動させたときの上面の数字の変化を以下の図に示す。\n（実際にゲームで扱うブロックにはこのような数字は書かれていない。） ステージについて\nステージはH×Wの二次元グリッドで与えられる(1 ≤ H,W ≤ 25) 。\n二次元グリッドはそれぞれ以下の種類のセルから成る。 \".\" 床\n      床の上にブロックが乗ることができる。 \"#\" 壁\n      壁には進行不可能であり、ブロックの一部が壁の上に乗るような移動はできない。 \"S\" ブロックの初期位置\n      ブロックは１文字だけ与えられる。初期状態では直立している状態しか存在しない。 \"G\" ゴール地点\n      ゴールはステージ中に１つしか出現しない。\n      また、ブロックが直立している状態でしかゴールすることは不可能である。 特殊壁とスイッチ\n      アルファベット小文字 特殊壁\n      アルファベット大文字 特殊壁に対応するスイッチ\n\n      特殊壁は出現時には進行不可能であり、ブロックの一部が特殊壁の上に乗るような移動はできない。\n      ブロックが回転を行い直立したときにブロックの真下にスイッチがあるとき、そのスイッチは押される。\n      スイッチを押したとき、同じアルファベットの特殊壁が出現しているときは消滅し、逆に消滅しているときは出現する。\n      ステージ開始直後ではすべての特殊壁が出現しているとする。\n      ひとつのステージで現れる特殊壁とスイッチは最大５種類とする。\n      スイッチを表すアルファベットは{'A','B','C','D','E'}である。\n      特殊壁を表すアルファベットは{'a','b','c','d','e'}である。\n      スイッチと特殊壁の数はH×W個以下である。\n      特殊壁と同じアルファベットのスイッチがステージの中に必ず出現するとは限らない。\n      また、スイッチと同じアルファベットの特殊壁がステージの中に必ず出現するとは限らない。 \"^\" トラップ\n      トラップのマスの上には直方体が直立した状態で乗ってはいけない。 ステージの情報と金属体の初期位置が与えられるので、このパズルを解く最短手数を求めよ。\n解が存在しない場合は-1を出力しなさい。 最初にH,W,Lが与えられる。\nそれぞれ、ステージの縦の長さ、横の長さ、ブロックの長さを示す。\n次にH×Wの二次元グリッドが与えられる。これはステージの情報を表している。 入力は以下の条件を満たす。 ステージの情報と金属体の初期位置が与えられるので、このパズルを解く最短手数を求めよ。\n解が存在しない場合は-1を出力しなさい。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01014.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 1 ≤ H,W ≤ 25\n1 < L < 10\nCell は Cell = {'A','B','C','D','E','S','G','a','b','c','d','e','^','#','.'} から成る。",
          "ranges": "1 10; 25; 10; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 5 2\n#####\n#S.G#\n#...#\n#...#\n#####",
            "output": "4",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01014.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01014"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01015",
        "title": "Problem J: J's Final Problem",
        "description": "不思議なダンジョンとは構造の変化を伴うダンジョンである。不思議なダンジョンは階層が深いものから浅いものまで様々なものがあり、深い階層には凶悪なモンスターが生息していたり、財宝が眠っていたりする。ジェイは不思議なダンジョンを研究している研究者である。ある日、新しいダンジョンを掘っていたところ、とても大きく深いダンジョンに繋がってしまった。ジェイはこのダンジョンを「ジェイの最終問題」と名付けた。このダンジョンの調査が、優秀な冒険者であるあなたに依頼されることになった。冒険者の目的はできるだけ深い層のフロアに到達することである。このダンジョンの特徴を以下に述べる。 最近、ジェイの最終問題に関する石碑が発見された。\nどうやら、各階の階段を降りたときの変化がメモとして記されているようだ。\n\nメモの形式は、 という形である。\n\n地下num1階のすべての部屋について、direction1の階段を降りている途中で、地下num2階のすべての部屋について、 direction2の階段を降りた先の部屋が消滅し、さらにそこから階段を降りることによって到達できる部屋や階段がすべて消滅する。部屋や階段の消滅に冒険者が巻き込まれた場合、冒険は失敗する。地下i階から地下i+1階へ向かう階段の途中で冒険者が失敗した場合は地下i階まで到達したものとして扱う。\n\n石碑において言及されていない階段は、その階段を降りてもダンジョンの構造に変化を及ぼさないことを示す。\n\n\n\n冒険者はこの石碑をヒントにして探索を行うことにした。 ダンジョンの深さnとメモの情報がm個与えられるので、最大地下何階まで到達できるかを答えなさい。 入力は複数のデータセットからなる。 最初にn,mが与えられる。\nそれぞれ、ダンジョンの変化前の最下層の階数、石碑のメモの数を表す。\n次にm行にわたりメモの情報 num1 direction1 : num2 direction2 が与えられる。 入力は以下の条件を満たす。 最大地下何階まで降りることができるか1行に出力して答えよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01015.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 入力に含まれる値はすべて整数\n1 ≤ n ≤ 10000\n0 ≤ m ≤ (n-1)×4\n1 ≤ num1,num2 ≤ n-1\ndirection1,direction2は\"left\"と\"right\"のいずれかである。",
          "ranges": "1 10000; 10000; 1; 0; 1; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "10 2\n9 left : 9 left\n9 right : 9 right",
            "output": "9",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01015.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01015"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01017",
        "title": "Problem B: Yu-kun Likes Rectangles",
        "description": "会津大学付属幼稚園はプログラミングが大好きな子供が集まる幼稚園である。園児の一人であるゆう君は、プログラミングと同じくらい長方形が大好きだ。そんなゆう君は３つの長方形を使って得点を得る新たな遊びを考え、得られる最大の得点を計算するためのプログラムを書くことにした。 H × W マスの長方形 A , B とh × w マスの長方形 C が与えられる。 ( H, Wはそれぞれ長方形A, Bの縦, 横のマスの数を, h, wはそれぞれ長方形Cの縦, 横のマスの数を表す ) 図１のように A の各マスには整数が書かれており、Bの各マスには白または黒の色がついている。\nCの各マスにも同様に白または黒の色がついている。 B の中に C と全く同じ模様の長方形があった場合、A の中でその長方形内に対応するマスに書かれている整数の和が得点として手に入る。 例えば図１のような長方形 A, B, C を使う場合、図２の赤線で示すように B の中に C と同じ模様が含まれているので、その場所から193点が得られる。 B の中に C と全く同じ模様の長方形が１つ以上存在する場合、そのような長方形の中で最大何点を得ることができるだろうか？ ただし、B の中に C と同じ模様の長方形が存在しない場合は\"NA” ( “ は除く ) と出力すること。\nまた、長方形を回転したり反転することはできない。 入力の形式は以下の通りである。 a(i,j) は長方形 A のマス (i, j) に書かれている整数を、b(i,j)は長方形 B のマス(i,j)の色を、c(i,j) は長方形 C のマス(i,j)の色を表す。\nマスの色は0 が白、１ が黒を表す。 入力は以下の条件を満たす。 長方形Bの中に長方形Cと全く同じ模様の場所が存在する場合、そのような場所の中でもっとも得点が高いものを出力せよ。 そのような場所が存在しない場合, “NA” ( “ は除く ) と出力せよ。",
        "difficulty": "Easy",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01017.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 入力は全て整数\n1 ≤ H,W ≤ 50 \n1 ≤ h ≤ H \n1 ≤ w ≤ W \n-100 ≤ a(i, j) ≤ 100 \nb(i, j),c(i, j) は0か1",
          "ranges": "50; 1; 1; 1; 100"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 4\n10 2 -1 6\n8 1 -100 41\n22 47 32 11\n-41 99 12 -8\n1 0 0 1\n0 0 1 0\n0 1 0 1\n0 0 1 0\n2 3\n1 0 1\n0 1 0",
            "output": "193",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01017.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01017"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01018",
        "title": "Problem C: Warping Girl",
        "description": "会津魔法学校は, 魔法を使える者が集まる学校である. その学校の生徒の一人であるハルカは, 魔法陣の上でワープの魔法を使う事ができる. 彼女の家から学校には, 長さ L の一直線状の道がある. また, この道には所々魔法陣が描かれている.\n彼女は毎日この道を使って学校に通っているため, できるだけ短い時間で学校に辿り着きたいと思っている. そこでプログラマーであるあなたは, 彼女に学校まで行くときにかかる最小の時間を教えてあげることにした. ハルカは, 1 分で距離 1 だけ歩いて先に進むことができる ( ＊戻ることはできない)．また, ワープの魔法陣が書いてある位置 Pi で魔法を唱えることで, Pi からちょうど Di だけ進んだ場所に Ti 分で移動することができる.  移動先に魔法陣がある場合も, 連続してワープ魔法を使用することができる. 彼女の家の位置は 0、学校の位置は L である. １行目に道の長さ L, 魔法陣の数 n が与えられる.\n次に n 個の魔法陣の状態が与えられる.\nPi は i 番目の魔法陣がある位置, Di は i 番目の魔法陣からワープする距離, Ti は i 番目の魔法陣を使ってワープしたときにかかる時間を表す. 入力は以下の条件を満たす. 学校に辿り着くための最小の時間を一行に出力せよ.",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01018.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす. 与えられる数は全て整数である\n1 ≤ L ≤ 109\n0 ≤ n ≤ min(103, L) (min はA, B の小さい方を表す)\n0 ≤ Pi ≤ L - 1\n0 ≤ Di ≤ L - Pi\n0 ≤ Ti ≤ 103\nPi ≠ Pj",
          "ranges": "1 109; 0 103; 109; 103; 1; 0; 0; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "10 3\n2 2 1\n4 2 1\n8 1 1",
            "output": "8",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01018.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01018"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01019",
        "title": "Problem D: Cheat Case",
        "description": "算数のテストを受けることになった俺達は、今から勉強しても赤点を取ってしまうことを確信し、カンニングで乗り切ることを決意した。 算数のテスト問題を作成するA先生はテスト用紙を手書きで作ることで知られている。彼がテスト問題を作成している時の筆跡情報を、近所の博士に作ってもらった筆跡盗聴鉛筆で盗み取る作戦だ。だが肝心の筆跡情報から問題を復元するプログラムは博士の技術では作ることができなかった。しかも、たとえ問題が復元できたとしても、俺達の頭脳では問題を解くことができない。どうすることもできなくなった俺達は、プログラマーであるあなたに、筆跡情報から問題を復元し、それを解くプログラムの作成を依頼することにした。 今回のテストでは、数式を解く問題が出題される。数式中の演算記号は＋（加算）,-（減算）,・（乗算）の3つのみで、乗算は加算、減算よりも優先して計算される。数式は必ず構文が正しいものが与えられる。また、0以外の数で、先頭が0であるものは与えられない。 問題が書かれる紙はグリッドで表される。筆跡情報は線分の集合で与えられ、各線分はX軸に水平または垂直、もしくは始点、終点が同じ（点）である。この線分は、始点から終点までにあるマスを黒く塗りつぶすことを表す。座標(0, 0)が紙の左上である。数式の各文字（0,1,2,3,4,5,6,7,8,9,＋,-,・）は以下で表される。 A先生は印刷したかのような字を書くことで知られており、各文字は上記以外の書かれ方はしない。また、上記以外の文字が書かれることはない。2つ以上の文字がマスの辺を共有することはない。各文字の位置は、文字を構成するマス（黒いマス）の中で、最も左側にあるもののX座標で表される。数式の文字は、位置が小さい順に（左から右へ）解釈される。2つ以上の文字の位置が等しくなることはない。 1行目に線分の数を表す1つの整数Nが与えられる。次に線分の情報がN行で与えられる。線分の情報のi行目には4つの整数Xi1, Yi1, Xi2, Yi2が空白区切りで与えられる。それぞれ、線分の1つ目の端点のX座標、Y座標、2つ目の端点のX座標、Y座標を表す。 入力は以下の条件を満たす。 各ケースの計算結果を一行に出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01019.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 1 ≤ N ≤ 150\n0 ≤ Xi1, Yi1, Xi2, Yi2 ≤ 200 (1 ≤ i ≤ N)\nXi1 = Xi2 または Yi1 = Yi2 (1 ≤ i ≤ N)\n計算の途中と結果に現れる数は符号付き32ビット整数に収まる",
          "ranges": "1 150; 150; 200; 1; 0; 2; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n1 1 1 5\n3 3 5 3\n4 2 4 4\n7 1 7 5",
            "output": "2",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01019.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01019"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01020",
        "title": "Problem E: Lonely Adventurer",
        "description": "13歳の誕生日の祝いに少年Gは父親と一緒に船旅に出ていた。しかし航海の途中、不運にも船が嵐に見舞われて船が転覆してしまう。彼が目を覚ますと、そこは無人島だった。冒険家の父親の影響もあり、彼はこの状況にひるむ事なく、無人島でサバイバル生活をすることを決意した。動物を倒して肉を焼いたり、木の実を採取することで食いつなぎ、大木の下で野宿をすることでなんとか生き延びることができた。しかし、どうやら最近島の様子がおかしいようだ。動物たちは皆奇妙な行動を取るし、これは何か悪い事の予兆なのかもしれない。早くこの島から脱出せねば。 とはいえ、島からどう離れればよいのか。海の向こうには別の島が見えるが、そこまで行く方法が見当たらない。途方に暮れ、海岸沿いを歩いていたとき、ふと彼は N 隻のボートを発見した。調べてみたところ、これらはどれもうまく動くようだ。よし、このボートを使って向こうの島まで脱出しよう。ただ次の島でもまた同じようなサバイバル生活が始まるかもしれない。そのとき困らないためにも、予備として全てのボートを運んでおこう。この島で何かが起こる前に早い事済ませないと。 N 隻の各ボート i (1 ≤ i ≤ N) にはそれぞれ島Aから島Bまで(島Bから島Aまで)の移動にかかる時間 Ti (分)が与えられている。少年Gはできるだけ早く、全てのボートを初めにいる島Aから島Bに運びたいと考えている。彼がボートを運び終えるのに要する最短の時間(分)を出力せよ。ただし、ボートは一度に 2 隻まで連結して運ぶことができ、そのときにかかる時間は 2 隻のボートの内、より時間がかかるボートの時間に等しい。例えば 2 分と 4 分のボートを連結させて運ぶ場合、島Aから島Bまで（島Bから島Aまで）の移動に 4 分かかる。また 3 分のボート 2 隻を連結させて運ぶ場合は 3 分かかることになる。なお、ボートの乗り換えにかかる時間は無視してよいものとする。 1行目に整数 N が与えられる。2行目には N 個の整数 Ti が空白区切りで与えられる。 入力は以下の条件を満たす。 全てのボートを運び終えるのに要する最短の時間(分)を1行で出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01020.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 1 ≤ N ≤ 1000\n1 ≤ Ti ≤ 10000",
          "ranges": "1 1000; 1 10000; 1000; 10000; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n1 2 3 4",
            "output": "11",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01020.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01020"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01021",
        "title": "Problem F: Remainder Zero",
        "description": "整数の集合A,Bについて,次の条件を満たす整数 xがいくつ存在するか答えよ。 Ai mod x = 0 かつ x mod Bj = 0 がすべての i (1 ≤ i ≤ N), j (1 ≤ j ≤ M) について成り立つ。 (a mod b はaをbで割ったときの余りを意味する) 入力は以下の条件を満たす。 条件を満たす整数 x がいくつ存在するか一行で出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01021.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 1 ≤ N, M ≤ 5\n1 ≤ Ai, Bj ≤ 1014 (1 ≤ i ≤ N, 1 ≤ j ≤ M)",
          "ranges": "5; 1014; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1 2\n18\n6 9",
            "output": "1",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01021.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01021"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01024",
        "title": "Problem I: Sum of Last Digits",
        "description": "3つの整数 n, m, k が与えられるので\n\n\nn1%10  +  n1+m%10  +  n1+2m%10  + ... +  n1+(k-1)m%10\n\n\n\nを計算せよ。 a % b は a を b で割ったときの余りを表す。 1行に n, m, k が与えられる。 答えを1行に出力せよ。",
        "difficulty": "Easy",
        "category": "Math & Logic",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01024.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす 0 ≤ n ≤ 1018\n0 ≤ m ≤ 109\n1 ≤ k ≤ 109",
          "ranges": "0 1018; 0 109; 1 109; 1018; 109; 109; 0; 0; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1 1 9",
            "output": "9",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01024.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01024"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01026",
        "title": "Problem K: Witch Craft Moves",
        "description": "会津魔法学校は、魔法を使える者が集る学校である。\n会津魔法学校には1~Nまでの番号がついた教室と教室同士をつなぐ廊下がある。教室や廊下は何度でも通ることができる。また、会津魔法学校には任意の教室u,v間を0個以上の教室と廊下を一度ずつ通って移動することができるような経路がただ1つある。\n各教室には魔法陣が設置してある。この魔方陣によって、教室に入る度に入った者の魔力が増減させられてしまうのだ。生徒の移動を助けるために以下の二つの質問に応えてほしい。 質問1\n0 A B\n教室AからBへ移動したときの魔力の残量を出力してほしい。教室AとBでの増減も含む。また、この質問開始時点での魔力の量は毎回0である。 質問2\n1 A C\n教室Aの魔力の増減量がCだけ変動させる。 入力の最初に教室の数Nが与えられる。続くN行に各教室に入ったときの魔力が増減する量が与えられる。i行目の値がi番の教室の情報に対応する。続くN-1行に廊下の情報が与えられる。j行目の廊下はaj番目とbj番目の教室をつなぐことを表す。次に質問の数Qが与えられる。続くQ行に上記の形式で質問が与えられる。 各質問1について、答えを１行に出力せよ。 入力は以下の条件を満たす。",
        "difficulty": "Easy",
        "category": "Simulation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01026.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 1 ≤ N≤ 2000\n1 ≤ Ai≤ 2000\n1 ≤ Bi≤ 2000\n1 ≤ aj,bj ≤ N\n1 ≤ Q≤ 1000000\n-10000 ≤ Ci≤ 10000",
          "ranges": "1 2000; 1 2000; 1 2000; 1 1000000; 10000 10000; 2000; 2000; 2000; 1000000; 10000; 1; 1; 1; 1; 1; 10000"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "7\n1\n2\n3\n4\n5\n6\n7\n1 2\n1 3\n3 4\n3 5\n5 6\n5 7\n10\n0 1 7\n0 2 7\n1 1 15\n0 1 7\n0 2 7\n0 1 1\n1 1 -15\n0 1 7\n0 2 7\n0 1 1",
            "output": "16\n18\n31\n33\n16\n16\n18\n1",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01026.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01026"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01027",
        "title": "Problem L: WW",
        "description": "19XX年、nつの国で連合国軍が結成された。連合国軍に属する各国では、敵軍の侵略から自国を守るために国内に１つ以上の拠点を作り、周囲を警戒している。図１は連合国の例を示し、長方形が各国を、その中にある円がその国の拠点を表す。 敵軍が侵略してきた場合、それを一番最初に発見した拠点からその情報を連合国軍に属する他国または自国の拠点に発信することになっている。\n情報を他の拠点に伝えるには正の整数のコストがかかる。 また、各国では自国の拠点のうち、連合国軍翻訳通信部(ATIS : Allied Translator and Interpreter Section)に属する兵士が配属されている拠点をちょうど１つだけ持っている。\nこの兵士だけが連合国軍に属する全ての国の言語を話すことができ、その他の兵士は自分の国の言語しか話せない。\nその為、情報を受け取った拠点が他国に情報を伝えようとした際にその拠点がATISに属する兵士をもたない場合、そこから自国のATISに属する兵士をもつ拠点に情報を伝え他国に情報を発信してもらう必要がある。 国毎で各拠点に０から順に[その国がもつ拠点の数-1]までの番号が割り振られており、０番目の拠点にATISに属する兵士がいる。\nつまり、他国の拠点に情報を伝達できるのは０番目の拠点だけであり、その他の拠点から他国へは通信できない。\nまた、その国の０番目の拠点に情報が伝わればその国全体に情報が伝わったものとする。 様々な理由から、全ての拠点の間で通信ができるとは限らない。\nある拠点から別の拠点に情報を伝える事ができたとしても、その逆が成り立つとは限らない。\nまた、ある拠点から別の拠点に情報を伝えた際のコストとその逆でかかるコストが同じとも限らない。 これらのことを踏まえて、ある拠点が敵軍を発見した際に、連合国軍全体に情報が行き渡るコストの総和が最も少ない伝達方法を知りたい。\n連合国軍に属する全ての国の０番目の拠点に対して最初に敵軍を見つけた拠点から情報が伝達された時、連合国軍全体に情報が行き渡ったものとする。 敵軍を発見した拠点が質問として与えられるので、最も少ないコストでその情報が連合国軍全体に行き渡る伝達方法とそのコストを出力せよ。 国neepalの1番目の拠点が敵軍を発見したとする。\nこの場合、１番目の拠点から他国へは通信できないため、まず自国の０番目の拠点へ情報を伝える。 次に、０番目の拠点から国luxenbourg,nowayに情報を伝える。\nneepalからluxenbourgの０番目の拠点へ直接通信することはできるが、３番目の拠点に情報を伝え、そこから０番目の拠点へ伝えたほうがコストが少なく済む。\nこの場合、全ての国の０番目の国へ情報を伝えるためにかかる最小のコストは１２となる。\nコストが１２で済む伝達方法は複数存在するが、そのうちのどれか一つを答えとして出力すれば良い。 以下の図２の赤い矢印はその答えのうちの１つである。 各質問に対して以下の形式で答えを出力する。 各質問に対する答えの最後の行には、５つの '-’ からなる\"-----” ( “ は除く ) という1行を出力すること。 答えが存在する場合 1行目に質問で与えられた国の拠点から連合国軍全体に情報が行き渡るために必要なコストの最小値を出力する。 2行目以降にはその時の伝達方法を出力する。\n伝達方法は以下の形式で表現される。 国c4iの拠点v4iから国c5iの拠点v5iに情報を伝えたことを表す。 以下の事に気をつける事。 答えが存在しない場合 1行に ”Impossible” ( “ は除く ) と出力すること。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01027.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 26 \n 1 ≤ mi ≤ 100\n 0 ≤ e ≤ 322400\n 0 ≤ costi ≤ 100\n 1 ≤ q ≤ 10\n countryname は小文字のアルファベット ‘a’ から’z’までで構成される長さ１以上２０以下の文字列である\n 同じ名前の国が2つ以上与えられる事はない\n 通信可能な拠点のペアのc1iとc2iが同じ時、v1iとv2iは異なる\n 通信可能な拠点のペアのc1iとc2iが異なる時、v1iは必ず0である",
          "ranges": "1 26; 1 100; 0 322400; 0 100; 1 10; 26; 100; 322400; 100; 10; 1; 1; 0; 0; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\nfrence 1\nusi 1\npowland 1\n2\nusi 0 frence 0 10\nfrence 0 powland 0 10\n2\nusi 0\npowland 0",
            "output": "20\nusi 0 frence 0\nfrence 0 powland 0\n-----\nImpossible\n-----",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01027.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01027"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01028",
        "title": "Problem A: Yu-kun Likes an Integer",
        "description": "会津大学付属幼稚園はプログラミングが大好きな子供が集まる幼稚園である。園児の一人であるゆう君は、プログラミングと同じくらい数字が大好きだ。そんなゆう君は最近、表に0から9までのいずれかの数字の書かかれたプレートをn枚購入してn桁の数を作る遊びに熱中している。\n今月もゆう君は貰ったお小遣いでn枚のプレートを買いに行こうと考えていた。 プレートは表に書かれている数字によって値段が異なる。\nそれらを使って作れるn桁の数をできる限り小さくしたい。\nゆう君の所持金額と各プレートの値段、購入するプレートの枚数が与えられるので、そこから作ることのできる数の最小値を求めよ。 購入するプレートの値段の総和が所持金額を超えなければ自由にプレートを購入できる。\n同じ数字の書かれたプレートを複数枚購入しても良い。 プレートは必ずn枚購入しなければならない。n枚購入できない場合は \"NA\" と出力すること。 購入後はn枚のプレートを任意の順番で一直線上に並べる。\nそうしてできる数字の列を10進数の数とし、その値が最小になるようにしたい。\n先頭に1つ以上の0が連続していても良い。 ( 例えば 0019 なら 19 となり, 0000 なら 0 として考える ) 図１は０、１、９のプレートを購入した場合についての説明である。 この問題を解くに当たって、以下のことを参考にしても良い。\n整数値を文字列に変換する方法を示す。\nvalue を文字列として str に代入する。 １行目に２つの整数 n ,m が空白区切りで与えられる。n は購入するプレートの枚数, m はゆう君の所持金額を表す。 ２行目には10個の整数が空白区切りで与えられる。 ci ( i は0以上9以下 ) は表に i が書かれたプレートの値段を表す。 入力は以下の条件を満たす。 n枚のプレートを購入し、それらを任意の順番で並べることでできる数の値の最小値を出力せよ。 先頭にいくつかの０を含む場合はそのまま出力すること。 ( 例えば答えが 0019 の場合は先頭の０を取り除いて 19 とするのではなく、そのまま 0019 と出力すること )\n所持金額では n 枚プレートを購入できない場合は \"NA\" と出力すること。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01028.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 1 ≤ n ≤ 5\n0 ≤ m ≤ 500\n1 ≤ ci ≤ 1000 ( 0 ≤ i ≤ 9 )",
          "ranges": "1 5; 0 500; 1 1000; 0 9; 5; 500; 1000; 9; 1; 0; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1 10\n1 2 3 4 5 6 7 8 9 10",
            "output": "0",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01028.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01028"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01029",
        "title": "Problem B: Yu-kun Likes Letters in the English Alphabet",
        "description": "会津大学付属幼稚園はプログラミングが大好きな子供が集まる幼稚園である。園児の一人であるゆう君は、プログラミングと同じくらい英小文字が大好きだ。\nそんなゆう君は紙と丸と線、そして英小文字を使う新しい遊びを考え、その採点用プログラムを書くことにした。 初期状態として、紙に V 個の丸と E 本の線が書かれている。丸には0から昇順に番号がつけられており、各丸の中には英小文字が1つ書かれているか、何も書かれていない。 各線は異なる２つの丸を結んでいる。1つの丸が26本以上の線で結ばれることはない。 遊びの手順は以下の通りである。 上記の手順に従って全ての丸に英小文字を書いた後、丸の番号が小さい順に丸の中の英小文字を並べ文字列を作る。\nこうしてできる文字列を辞書順で最小となるようにしたい。\n２つの同じ長さの文字列 s, t があり、 s が t より辞書順で小さいとは次のような場合を言う。\nsi は文字列 s の i 番目の英小文字を、 ti は文字列 t の i 番目の英小文字を表す。\nsi が ti と異なるような最小の i について、 si が ti より小さい。 紙の初期状態が与えられるので、そこから上記の手順にしたがって作成できる文字列のうち辞書順最小のものを出力せよ。 １行目に丸の数 V と線の数 E が空白区切りで与えられる。 ２行目に丸の初期状態が空白区切りで与えられる。 ai が英小文字の場合は i 番目の丸にその英小文字が書かれており、'?'の場合は i 番目の丸には何も書かれていないことを表す。 続く E 行に線の情報がsi ti として与えられ、これはsi番の丸と ti 番の丸が線で結ばれていることを表す。 入力は以下の条件を満たす。 問題文中の手順に従って作成可能な文字列のうち、辞書順で最も小さいものを1行に出力せよ",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01029.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 1 ≤ V ≤ 100,000\n0 ≤ E ≤ 200,000\nai は英小文字, または '?' のいずれか ( 0 ≤ i ≤ V-1 ) \n0 ≤ si, ti ≤ V-1 ( si < ti , 0 ≤ i ≤ E-1 ) \n１つの丸が26本以上の線で結ばれることはない",
          "ranges": "1 100; 0 200; 100; 200; 1; 0; 0; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 3\nc ? ?\n0 1\n0 2\n1 2",
            "output": "cab",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01029.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01029"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01030",
        "title": "Problem C: Changing Grids",
        "description": "A君とB君は、『Changing Grids』というゲームに熱中している。このゲームは2人用で、プレイヤー1がステージを構成し、プレイヤー2がそのステージに挑戦しゴールを目指すというものである。 今、A君とB君はこのゲームを何度かプレイしているが、A君の連勝でB君は1度も勝つことができていない。そこであなたは、B君にこのゲームを攻略するためのヒントを教えてあげることにした。 時刻T0 = 0における縦H×横Wの大きさの二次元グリッドの状態がArea0として与えられる。次に、このグリッドの状態は時刻Tiにおいて、状態Areaiに切り替わる。この切り替わる過程はN回繰り返される。初期状態のグリッドにはスタートの位置'S'とゴールの位置'G'が与えられる。いずれかのグリッドにおいてゴールへ辿り着ける場合は、そのときの最小歩数を出力し、ゴールへ辿り着けない場合は、'-1'を出力せよ。なお、以下の条件も満たす必要がある。 入力は以下の形式で与えられる。 1行目に2つの整数H,Wが空白区切りで与えられる。これは、それぞれ二次元グリッドの縦と横の大きさを表す。2行目からH+1行目までの各行に初期状態の二次元グリッドの状態が与えられる。H+2行目に整数Nが与えられる。これは、二次元グリッドの変化する回数を表す。H+3行目以降にN個の二次元グリッドの切り替わる時刻Tiとその状態が与えられる。ただし、Tiは全て整数である。 入力は以下の条件を満たす。 スタートからゴールへ到達するための最小の歩数を出力せよ。ただし、ゴールに到達できない場合は'-1'を出力せよ。 1番目のグリッドに切り替わる時刻T1は3であり、時間内にプレイヤーはスタートからゴールまでの最短歩数が2歩で辿り着くことが可能なので2を出力する。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01030.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 2 ≤ H,W ≤ 20\n1 ≤ N ≤ 15\n1 ≤ Ti ≤ 200 (T1 < T2 < ... < TN)\nスタート位置'S'とゴール位置'G'はそれぞれ初期の二次元グリッドに1つだけ存在する。",
          "ranges": "1 15; 1 200; 20; 15; 200; 2; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 2\nS.\n.G\n1\n3\n##\n##",
            "output": "2 1番目のグリッドに切り替わる時刻T1は3であり、時間内にプレイヤーはスタートからゴールまでの最短歩数が2歩で辿り着くことが可能なので2を出力する。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01030.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01030"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01031",
        "title": "Problem D: Smell Searcher",
        "description": "廃津大学では強烈な香りを放つN個の廃材が一列に並んでいます。\n廃材には1からNの番号が順番にふられていて、i番目の廃材は強さaiの香りを放っています。 リヒト君は仕事で、すべての廃材の放つ香りの総和を求めるよう依頼されました。\n香りの総和がM以上になると「大変きつい仕事」とみなされ特別支給金がもらえます。 この仕事を行うために、リヒト君は精度Rの香り検出器を使います。\n  精度Rの香り検出器を使うとi番目の廃材の香りを測ろうとすると同時にi−R,i−R+1,...,i−1,i,i+1,...,i+R−1,i+R番目の廃材の香りも検出されます。言い換えると、閉区間[ max(i−R,1), min(i+R,N) ] の廃材の香りを検出します。ここで、max(a,b)はaとbの最大値、min(a,b)はaとbの最小値を表します。\n\n  ただし、測った廃材の1つ隣の廃材の香りの強さは本来の香りの強さよりC減らされ、2つ隣の廃材の強さ香りは本来の香りの強さより2*C減らされて検出されます。つまり、j(0≤j≤R)個隣にある廃材の香りの強さは ai − j * C として検出されます。結果的に、i番目の廃材に精度Rの検出器を使うことで検出された香りの強さの最大値がi番目の廃材の香りの強さとして認識されます。 精度の高い検出器を使うとその分費用がかかるため、リヒト君は検出器が認識した1からN番目の廃材の香りの総和がM以上になる最低の精度Rの値を知りたいと思っています。 入力は以下の形式で与えられる。 1行目に、1つの整数N,M,Cが空白区切りで与えられる。2行目にNつの整数が空白区切りで与えられる。aiはi番目の廃材の香りの強さを表す。 入力は以下の制約を満たす。 精度Rの検出器を使って認識される廃材の香りの総和をM以上にしたときのRの最小値を出力せよ。\nそれが不可能な場合は−1を出力せよ。\nRは必ず0以上であり、負の値の精度は存在しない。 このとき、精度0の検出器を使うと\n8 + 5 + 1 + 1 + 2 + 6 = 23　で25以上になりません。\n精度1の検出器を使うと\nmax(8,5-3) + max(8-3,5,1-3) + max(5-3,1,1-3) + max(1-3,1,2-3) + max(1-3,2,6-3) + max(2-3,6)\n= 8 + 5 + 2 + 1 + 3 + 6 = 25 で25以上になるので1が正解です。",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01031.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の制約を満たす。 1 ≤ N ≤ 105\n1 ≤ M ≤ 1014\n1 ≤ C ≤ 109\n0 ≤ ai ≤ 109 (1 ≤ i ≤ N)",
          "ranges": "1 105; 1 1014; 1 109; 0 109; 105; 1014; 109; 109; 1; 1; 1; 0; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "6 25 3\n8 5 1 1 2 6",
            "output": "1 このとき、精度0の検出器を使うと\n8 + 5 + 1 + 1 + 2 + 6 = 23　で25以上になりません。\n精度1の検出器を使うと\nmax(8,5-3) + max(8-3,5,1-3) + max(5-3,1,1-3) + max(1-3,1,2-3) + max(1-3,2,6-3) + max(2-3,6)\n= 8 + 5 + 2 + 1 + 3 + 6 = 25 で25以上になるので1が正解です。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01031.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01031"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01032",
        "title": "Problem E: Rooted Tree Game",
        "description": "初期状態として複数の根付き木が与えられる。これに対しAliceとBobはゲームを行う。ゲームは2人交互に行い、先手がAliceで後手がBobである。ターンが回ってきたプレイヤーは以下の行動を取る。 ターンが回ってきた時点で頂点がすべて削除されていた場合、そのプレイヤーの負けとなる。 AliceとBobが常に最適な行動を取る時、与えられた初期状態に対し、勝利するプレイヤーを判定せよ。 以下の図は、プレイヤーの行動の例を示す。 入力は以下の形式で与えられる。 1行目に、初期状態の頂点数Nと辺の数Mが空白区切りで与えられる。この時、各頂点を表す番号は1~Nである。次のM行では、辺の情報が与えられる。このうちi行目では1つの整数piが与えられる。これは、頂点piから頂点iへの辺があることを表す。言い換えると、頂点iの親が頂点piであることを表す。 入力は以下の制約を満たす。 勝利するプレイヤーの名前(AliceまたはBob)を1行に出力せよ。",
        "difficulty": "Medium",
        "category": "Trees & Graphs",
        "tags": [
          "graph",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01032.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の制約を満たす。 1 ≤ N ≤ 1000\n0 ≤ M < N\ni < pi ≤ N ( 1 ≤ i ≤ M )",
          "ranges": "1 1000; 1000; 1; 0; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "6 3\n4\n4\n5",
            "output": "Alice",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01032.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01032"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01033",
        "title": "Problem F: Coupling",
        "description": "愛津大学では毎年大規模な合コンが行われています。\n今年はN人の男性とM人の女性が参加します。\nそれぞれ男性は0から順にN−1までIDが割り振られおり、女性は0から順にM−1までIDが割り振られています。 この合コンでは自分の「大好きな人」と「そこそこ好きな人」のIDを提示します。\n男性はそれぞれ女性のIDを、女性はそれぞれ男性のIDを提示します。 その後、以下のルールに従ってカップルが成立します。 サジ君はこの合コンの主催者です。\n近年では参加者の数が多くなり手動でカップルの数を把握するのが大変になってきました。そこでプログラマーであるあなたは、サジ君の手伝いをすることにしました。上記のルールに従ってカップルを作った時の「大好きな人」同士のカップルの数と「大好きな人」と「そこそこ好きな人」によるカップルの数と「そこそこ好きな人」同士のカップルの数を出力するプログラムを作成してください。 入力は以下の形式で与えられる。 1行目にそれぞれ男性の参加者の数と女性の参加者の数を表す2つの整数N,Mが与えられる。次に男性側の大好きな人を表すデータの数L1が与えられる。続くL1行にaiとbiが空白区切りで与えられる。それぞれ、IDaiの男性がIDbiの女性を「大好き」であることを示す。 続く行に男性側のそこそこ好きな人を表すデータの数L2が与えられる。続くL2行にciとdiが空白区切りで与えられる。それぞれ、IDciの男性がIDdiの女性を「そこそこ好き」であることを示す。次に女性側の大好きな人を表すデータの数L3が与えられる。続くL3行にeiとfiが空白区切りで与えられる。それぞれ、IDeiの女性がIDのfiの男性を「大好き」であることを示す。 続く行に女性側のそこそこ好きな人を表すデータの数L4が与えられる。続くL4行にgiとhiが空白区切りで与えられる。それぞれ、IDgiの女性がIDhiの男性を「そこそこ好き」であることを示す。 入力は以下の条件を満たす。 問題文のルールに従ってカップルが成立した時の、「大好きな人」同士のペアの数と「大好きな人」と「そこそこ好きな人」のペアの数と「そこそこ好き」同士のペアの数を空白区切りで1行に出力せよ。 この場合男性1と女性1、男性2と女性2が大好き同士でカップルとなり「大好き同士」のペア数が2になる。\nすると、男性0のことが「大好き」な女性も「そこそこ好き」な女性もいなくなってしまいます。\nまた、女性0のことが「大好き」な男性も「そこそこ好き」な男性もいなくなってしまうため以降カップルは成立しなくなります。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01033.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 1 ≤ N,M ≤ 100\n0 ≤ ai,ci,fi,hi ≤ N−1\n0 ≤ bi,di,ei,gi ≤ M−1\n0 ≤ L1,L2,L3,L4 ≤ 2000\nL1 > 0, L2 > 0 において (ai,bi) ≠ (cj, dj) ( 0 ≤ i < L1, 0 ≤ j < L2 )\nL3 > 0, L4 > 0 において (ei,fi) ≠ (gj, hj) ( 0 ≤ i < L3, 0 ≤ j < L4 )\n (ai,bi) ≠ (aj, bj) ( i ≠ j )　( 0 ≤ i < L1, 0 ≤ j < L1 )\n (ci,di) ≠ (cj, dj) ( i ≠ j )　( 0 ≤ i < L2, 0 ≤ j < L2 )\n (ei,fi) ≠ (ej, fj) ( i ≠ j )　( 0 ≤ i < L3, 0 ≤ j < L3 )\n (gi,hi) ≠ (gj, hj) ( i ≠ j )　( 0 ≤ i < L4, 0 ≤ j < L4 )",
          "ranges": "100; 2000; 1; 0; 0; 0; 4; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 3\n3\n0 0\n1 1\n2 2\n2\n1 0\n2 1\n3\n1 1\n2 2\n0 1\n2\n1 0\n2 0",
            "output": "2 0 0 この場合男性1と女性1、男性2と女性2が大好き同士でカップルとなり「大好き同士」のペア数が2になる。\nすると、男性0のことが「大好き」な女性も「そこそこ好き」な女性もいなくなってしまいます。\nまた、女性0のことが「大好き」な男性も「そこそこ好き」な男性もいなくなってしまうため以降カップルは成立しなくなります。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01033.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01033"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01034",
        "title": "Problem H: Yu-kun Likes a Directed Graph",
        "description": "会津大学付属幼稚園はプログラミングが大好きな子供が集まる幼稚園である。園児の一人であるゆう君は、プログラミングと同じくらいお絵描きが大好きだ。\nこれまでゆう君は、丸と矢印で沢山絵を書いてきた。矢印は必ず丸と丸を結ぶようにして描いてある。ある日ゆう君はこれらの絵がグラフであることを知る。 丸は頂点と呼ばれ、矢印は辺と呼ばれているらしい。更にゆう君は、矢印を描く際に、必ずその上に１つ正の整数を書いていた。このように、辺に重みがあり有向な辺からなるグラフは重み付き有向グラフと呼ばれる。 今日ゆう君は、新たに閉路という言葉を知った。閉路とは、連結した辺の列であり、それに含まれるどの頂点も高々1度しか現れないもので、最初の頂点と最後の頂点が同じであるようなものをいう。閉路の辺の重みの総和が負になる場合、そのような閉路は負の閉路と呼ばれる。 新たな言葉を沢山知ったゆう君は一つの問題を思いついた。 閉路を持たない重み付き有向グラフが与えられる。\n異なる２つの頂点 i, j を選び、i から j に重み w ( w < 0 ) の有向な辺を1本追加する。\nこれによってグラフ内に負の閉路ができるような i、 j をみつけ、その負の閉路に属する辺の重みの総和の最大値を求めよ。\nそのような i, j が存在しない場合は\"NA\"と出力すること。 １行目に頂点の数 V, 辺の数 E, 追加する辺の重み w が空白区切りで与えられる。 続く E 行に有向な辺の情報が si ti ci として与えられる。 ( 0 ≤ i ≤ E-1 ) これは、 si から ti に向けて重み ci の有向な辺が存在することを表す。 入力は以下の条件を満たす。 重み w の有向な辺を追加することで出来る負の閉路に属する辺の重みの総和の最大値を１行に出力せよ。\nどこに辺を追加しても負の閉路が作れない場合は\"NA\"と出力すること。",
        "difficulty": "Medium",
        "category": "Trees & Graphs",
        "tags": [
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01034.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 2 ≤ V ≤ 100000\n1 ≤ E ≤ 500000\n-100 ≤ w < 0\n0 ≤ ci ≤ 100 ( 0 ≤ i ≤ E-1 )\n0 ≤ si, ti ≤ V-1 ( 0 ≤ i ≤ E-1 )\n入力中に同じ si と ti のペアが現れることはない\nsi と ti は異なる",
          "ranges": "2 100000; 1 500000; 100 0; 0 100; 100000; 500000; 0; 100; 2; 1; 100; 0; 0; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 2 -3\n0 1 1\n0 2 5",
            "output": "-2",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01034.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01034"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01035",
        "title": "Problem I: Hard Beans",
        "description": "大津大学では豆が盛んです。\nN個の豆が一直線上に並んでいます。\nそれぞれ0から順にN−1まで番号がふられており、i番目の豆の硬さをaiとします。 シアン君は理想の豆の硬さをDだと考えています。しかし、シアン君は面倒くさがりなのであまり遠くにある豆を取りに行きたくありません。したがって、シアン君はl番目の豆からr番目の豆の中で硬さがDに最も近い豆を知りたいと思っています。 シアン君はQ個の質問をしてくるので、それぞれの質問に対し閉区間[l,r]番目にある　| 豆の硬さ − D |　の最小値を求めるプログラムを作成してください。(ただし、| a | は aの絶対値を表します。) 入力は以下の形式で与えられる。 1行目に、1つの整数Nが与えられる。2行目に、Nつの整数が空白区切りで与えられる。3行目に、クエリの数が１つの整数Qとして与えられる。続く4行から3+Q行までにクエリの値l,r,Dが与えられる。 入力は以下の制約を満たす。 各クエリに対し、Dと[l,r]番目の豆の中で硬さDに最も近い豆の硬さとの差の絶対値を1行に出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01035.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の制約を満たす。 1 ≤ N ≤ 105\n0 ≤ |ai| ≤ 106 (0 ≤ i ≤ N−1)\n1 ≤ Q ≤ 105\n0 ≤ Di ≤ 106\n0 ≤ li ≤ ri ≤ N−1",
          "ranges": "1 105; 1 105; 0 106; 105; 105; 106; 1; 0; 1; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n1 2 3\n3\n0 2 2\n0 2 4\n0 0 2",
            "output": "0\n1\n1",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01035.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01035"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01036",
        "title": "Problem J: Yu-kun Likes To Play Darts",
        "description": "会津大学付属幼稚園はプログラミングが大好きな子供が集まる幼稚園である。園児の一人であるゆう君は、プログラミングと同じくらいダーツが大好きだ。\nそんなゆう君は最近ダーツにはまっていたが、普通のダーツに飽きてしまったため独自のダーツボードを作ることにした。 ダーツについてはダーツを参照。 ゆう君が考えたダーツの内容は以下の通りだ。 無限に広いダーツボードには得点の書かれた多角形が幾つかある。\nプレイヤーはダーツの矢を1本だけ持っている。\nプレイヤーは矢を投げ、いずれかの多角形に矢を刺すことでそこに書かれている得点を得る。\nそれ以外に刺さった場合は得点は得られない。 ゆう君は矢を投げる位置を決めたのだが、正確に刺さるとは限らない。\nダーツボードを2次元平面とし、ゆう君が狙う位置を点(cx,cy)とする。\nゆう君の投げた矢が刺さる場所は、点(cx,cy)を中心とする半径rの円に含まれる任意の点から一様な確率で選ばれる。\nばれる点の座標は整数である必要はない。 ダーツボードの情報とゆう君が狙う位置(cx,cy)、半径rが与えれるので、ゆう君が獲得することの出来る得点の期待値を答えよ。 nはダーツボード上にある多角形の数である。\n多角形の情報は以下の形式で与えられる。 入力は以下の条件を満たす。 ゆう君が獲得することの出来る得点の期待値を1行で出力せよ。小数点以下は何桁数字を出力しても構わない。ただし、解答の誤差は0.000001(10-6)を超えてはならない。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01036.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 入力は全て整数で与えられる\n1 ≤ n ≤ 50\n0 ≤ cx, cy, x, y ≤ 1000\n1 ≤ r ≤ 100\n3 ≤ p ≤ 10\n1 ≤ score ≤ 100\n多角形の頂点は、隣り合った頂点を時計回り、または反時計回りに訪問するような順番で与えられる\n多角形の辺が別の多角形の辺と共通な点をもつことはない\n多角形が別の多角形を内包することはない\n矢が多角形の辺上に刺さった場合、得点は得られないものとする",
          "ranges": "1 50; 1 100; 3 10; 1 100; 50; 1000; 100; 10; 100; 1; 0; 1; 3; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1 2 2 1\n4 1\n0 0\n2 0\n2 2\n0 2",
            "output": "0.2500000000",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01036.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01036"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01038",
        "title": "Problem B: Mountain Climbing",
        "description": "なりよし君は山登りの計画を立てています。計画はとても大切です。高原・盆地が多いのか、峰・窪地が多いのか、山腹があるのか、状況によって用意する荷物も変わってきます。 なりよし君が持っている登山ガイドブックには、今回登山に利用する道の一定の距離毎の標高がスタート地点からゴール地点まで順に書かれています。 ガイドブックに書かれている標高をスタート地点からゴール地点まで順に\na1, a2, a3, ..., aNとし、高原、盆地、山腹、峰、窪地を次のように定義します: あなたは、なりよし君の為に、高原・盆地・山腹・峰・窪地、それぞれの数を計算するプログラムを書くことにしました。 入力は次のような形式で与えられる: Nは与えられる標高の数を表す整数である。\naiは標高を表す整数である( 1 ≤ i ≤ N )。それぞれ空白区切りで与えられる。 入力は以下の条件を満たす。 高原の数、盆地の数、山腹、峰、窪地の数を順番に空白区切りで一行に出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01038.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 1 ≤ N ≤ 100000\n-100000 ≤ ai ≤ 100000",
          "ranges": "1 100000; 100000 100000; 100000; 100000; 1; 100000"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 1 2 3 4 3",
            "output": "0 0 0 1 0",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01038.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01038"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01039",
        "title": "Problem C: Manhattan Warp Machine 1",
        "description": "とある宇宙では、1次元の整数座標点上に星が存在し、宇宙人達はマンハッタンワープ装置を使い、星間を移動している。\nこのワープ装置には、N個のボタンが付いており、ボタンiを押すと、現在いる星からのマンハッタン距離がdiである任意の星にコストciでワープすることができる。\n今、点0の星にいるある宇宙人が点xの星に行きたいと考えている。\n点xの星に辿り着くまでの最小のコストを答えよ。\n辿り着けない場合は-1を出力せよ。\n1次元上の整数座標点には必ず星が存在する。\n点x1と点x2間のマンハッタン距離は| x1 - x2 |で表される。 入力は全て整数で与えられる。\n1行目にNと行きたい星の座標xが空白区切りで与えられる。\n続くN行に、移動可能なマンハッタン距離diとコストciが1行ずつ空白区切りで与えられる。 入力は以下の条件を満たす。 点xの星に辿り着くまでにかかる最小コストを1行に出力せよ。辿り着くことが不可能な場合は-1を出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01039.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 1 ≤ N ≤ 15\n0 ≤ x ≤ 105\n1 ≤ di ≤ 105\n1 ≤ ci ≤ 100\n与えられるマンハッタン距離diは全て異なる。",
          "ranges": "1 15; 0 105; 1 105; 1 100; 15; 105; 105; 100; 1; 0; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 5\n1 1\n2 1",
            "output": "3",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01039.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01039"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01040",
        "title": "Problem D: Friday the 13th",
        "description": "今年も「立命館大学競技プログラミング合宿」が開催されることとなった。僕は毎年開催されるこの合宿をとても楽しみにしている。しかし、欲望に耐え切れず合宿前に散財してしまい、お金に余裕が無くなってしまった。そこで僕は、立命館大学の最寄り駅である南草津まで移動するのに最も安く済む青春18きっぷを使うことにした。この切符は安く済む代わりに乗り換えが多く発生し、移動に丸1日使わなければならないのでとても疲れる。そんな移動をする日が13日の金曜日であることに気づいたのは会津若松駅を出発した後だった。僕は12時間、不安を感じながら電車に揺られるはめになった。 今日は合宿2日目、2015年3月15日、日曜日である。13日は特に何事もなく南草津に到着したが、僕はもうこのような不安を味わいたくないと思った。そこで2日目のジャッジである僕は、指定された期間内に存在する13日の金曜日の数を求める問題を出題し、プログラムを作成してもらうことにした。 閏(うるう)年の定義は以下の通りである。 空白で区切られた6つの整数Y1, M1, D1, Y2, M2, D2が1行で与えられる。 入力は以下の制約を満たす。 Y1年M1月D1日からY2年M2月D2日までの間に存在する13日の金曜日の数を1行に出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01040.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の制約を満たす。 1 ≤ Y1 ≤ Y2 ≤ 1018\n1 ≤ Mi ≤ 12\n1 ≤ Di ≤ 31 (Mi = 1, 3, 5, 7, 8, 10, 12)\n1 ≤ Di ≤ 30 (Mi = 4, 6, 9, 11)\n1 ≤ Di ≤ 28 (Mi = 2 かつ Yi年は閏年でない)\n1 ≤ Di ≤ 29 (Mi = 2 かつ Yi年は閏年である)\nY1年M1月D1日はY2年M2月D2日より0日以上前の日付である",
          "ranges": "1 1018; 1 12; 1 31; 1 30; 1 28; 1 29; 1018; 12; 31; 1; 30; 4; 28; 2; 29; 2; 1; 2; 1; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2015 3 13 2015 3 13",
            "output": "1",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01040.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01040"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01041",
        "title": "Problem E: Distinct Dictionary",
        "description": "辞書をこよなく愛する者がいた。彼らは自分だけの辞書を作ることが大好きである。\nそこであなたは彼らの辞書に、自由にカスタマイズする機能を付け加えてあげることにした。 初めに、何の単語も入っていない空の辞書が存在する。\nN個の文字列SidとQ個のクエリが与えられる。\n各クエリはクエリの種類kと文字列を指すidで与えられる。\nクエリの種類は以下の3つである。 各クエリに答えるプログラムを書いてほしい。 注意：\n入力のサイズが大きいので高速な入力に対応する形式を推奨する。 入力は以下の形式で与えられる。 1行目に、1つの整数Nが与えられる。2行目からN+1行に、N個の文字列Sidが与えられる。\nN+2行目にクエリの数Qが与えられ、続くQ行に各クエリの種類を表すkと文字列を指すidが与えれる。 クエリごとに解答を一行に出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01041.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "文字列は全て異なる。\nN個の文字列Sidの長さの合計は106を超えない。\n既に辞書に追加されている文字列が再び追加されるような入力は存在しない。\n辞書に追加されていない文字列を削除するような入力は存在しない。\n与えられる文字列に含まれる文字は英小文字のみである。\n1 ≤ N ≤ 105\n1 ≤ id ≤ N\n1 ≤ Q ≤ 105\n1 ≤ |Sid| ≤ 105 (ただし、|s|は文字列sの長さを表す。)",
          "ranges": "1 105; 1 105; 105; 105; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\napple\napp\nbanana\n9\n1 1\n3 1\n3 2\n3 3\n2 1\n1 2\n3 1\n3 2\n3 3",
            "output": "1\n1\n-1\n-1\n2\n-1",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01041.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01041"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01042",
        "title": "Problem F: Sum of Numbers",
        "description": "a以上b以下の整数が書かれたカードがそれぞれc枚ずつあります。\nこれらc(b-a+1)枚のカードの中からd枚のカードを選択したとき、それらのカードに書かれている整数の合計がeになる場合の数を1,000,000,007で割った余りを求めてください。 入力は以下の形式で与えられる。 1行目に、5つの整数a b c d eが空白区切りで与えられる。 入力は以下の制約を満たす。 場合の数を1,000,000,007で割った余りを出力せよ。 {2,2,2,3,3,3,4,4,4,5,5,5}の中から3枚選び合計が11になるのは、\n{2,4,5},{3,3,5},{3,4,4}の３通りである。 {1,1,1,2,2,2}の中から4枚選び合計が100になるのは0通りである。",
        "difficulty": "Easy",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01042.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の制約を満たす。 1 ≤ a ≤ 1000\na ≤ b ≤ 1000\n1 ≤ c ≤ 100\n1 ≤ d ≤ 1000\nc ≤ d ≤ c(b-a+1)\n1 ≤ e ≤ 20000",
          "ranges": "1 1000; 1 100; 1 1000; 1 20000; 1000; 1000; 100; 1000; 20000; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 5 3 3 11",
            "output": "3 {2,2,2,3,3,3,4,4,4,5,5,5}の中から3枚選び合計が11になるのは、\n{2,4,5},{3,3,5},{3,4,4}の３通りである。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01042.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01042"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01043",
        "title": "Problem G: Yu-kun Likes a Treasure",
        "description": "会津大学付属幼稚園はプログラミングが大好きな子供が集まる幼稚園である。園児の一人であるゆう君は、プログラミングと同じくらい財宝が大好きだ。ゆう君は今日も財宝を探すため洞窟を探索する予定だ。そこでゆう君は洞窟の地図から、洞窟を全て見て回る際に歩く距離を求めるプログラムを書くことにした。 洞窟の情報とゆう君の初期位置が与えられる。Fig.1のように、 洞窟は2次元平面上の多角形で表される部屋が、１つ以上繋がった集合で構成される。部屋が別の部屋と接する場合は必ず点で接し、その接点が洞窟の道となり、接点に訪れるとその道を通ったことになる。 道は扉で閉ざされており、扉が閉まっている状態でその道を通ることはできない。扉を開くためには部屋の中にちょうど１つだけ存在するボタンを押す必要がある。ボタンは2次元平面上の点として表される。 ゆう君はボタンが存在する点を訪れることでボタンを押すことができる。ボタンを押すと部屋にある全ての扉が開く。Fig.1では部屋の中にある丸がボタンを表し、顔のマークがゆう君を、そして矢印が指しているボタンがゆう君のいる場所を表す。ボタンを押して扉を開いた後、道を通るとすぐに全ての扉は閉まる。そのため、そこから別の部屋へと移動するためには再度その部屋の中にあるボタンを押す必要がある。ゆう君は最初、いずれかの部屋の中にあるボタンと同じ場所にいる。 Fig. 2 に移動の例を示す。番号の付いている矢印はゆう君の移動経路を表す。 次の順番で移動することは可能である。 1 -> 2 -> 3 -> 4 次の順番で移動することは不可能である。 1 -> 4 これは、1の経路で移動し部屋同士の接点を訪れるとその瞬間に扉が閉まるからである。 ゆう君が洞窟内の全ての道を通り、再度初期位置に戻ってくるまでにかかる移動距離の最小値を出力せよ。ただし、同じ道を何度通っても良い。 入力は以下の形式で与えられる。 n,mはそれぞれ洞窟を構成する部屋を表す多角形の数、ゆう君が最初にいる部屋の番号を表す。 部屋の情報は次の形式で与えられる。 pは多角形の頂点数を表す。(xi,yi) と (xi+1,yi+1) の頂点を繋いだ線分が多角形の一辺である。ただし、p番目の頂点は１番目の頂点と繋がる。 (bx,by) は多角形の内部にあるボタンの位置を表す。多角形は反時計回りで与えられる。 入力は以下の制約を満たす。 ゆう君が初期位置から全ての道を通って再度初期位置に戻ってくるまでにかかる移動の距離の総和の最小値を出力せよ。小数点以下は何桁数字を出力しても構わない。ただし、解答の誤差は0.00001(10-5)を超えてはならない。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01043.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の制約を満たす。 1 ≤ n ≤ 15\n1 ≤ m ≤ n\n3 ≤ p ≤ 20\n0 ≤ x,y,bx,by ≤ 1000\n多角形は反時計回りで与えられる\n多角形が別の多角形を内包するようなことはない\n多角形はその内部 ( 多角形の辺は含まない ) にちょうど１つだけボタンを持つ\n任意の異なる２つの多角形は共通な面積を持たない\n任意の異なる２つの多角形a,bにおいて、aとbの接点は高々１つしかない\n任意の異なる２つの多角形a,bにおいて、直接または１つ以上の多角形を経由することでaからbへ移動することができる",
          "ranges": "1 15; 3 20; 15; 20; 1000; 1; 1; 3; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 1\n4\n0 4\n2 4\n2 7\n0 7\n1 6\n5\n1 0\n6 0\n4 5\n2 2\n1 4\n4 2\n3\n2 6\n6 4\n6 7\n5 6",
            "output": "14.6502815399",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01043.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01043"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01044",
        "title": "Problem H： Puzzle and Hexagons",
        "description": "超大人気ゲーム「パズル&ヘキサゴンズ」がついにリリースされた。このゲームは超面白すぎてドハマりする人が続出。あまりの熱中度に医師から中毒認定を受ける者も続出した。世界各国の有志達はこのゲームの中毒者達を助けるために「パズル&ヘキサゴンズ」のシミュレータを作り、危険な実機でのプレイを避けるよう促そうとした。あなたにはシミュレータ作りに協力して欲しい。 正六角形のマスを縦にH個、横にW個敷き詰めた盤面が与えられる。\nFig.1はH=4,W=7の時の盤面とそれに対応するマスの座標(x,y)を示す。 初期状態で各マスには色のついたブロックが存在する。\nブロックの色は以下のようにアルファベット一文字で表現される。 次に操作の数Qが与えられる。 各操作では回転の中心座標(x,y)が与えられ、そのマスの周囲にある6つのブロックを時計回りに一つ回転させることを示す。(Fig.2 参照)。\nこのとき、ブロックが存在しないマスも空のブロックが存在すると考えて時計回りに一つ回転させる。\nただし、指定された座標とその周辺の６つのマスの内いずれか一つでもH×Wの盤面の中に存在していない場合は回転を行わない。 次に以下の処理ができなくなるまで繰り返す。 注意：この一連の処理は、操作が一つも与えられていない状態（初期状態）でも行われる。 全ての操作を実行した後の最終的な盤面を出力せよ。 入力は以下の形式で与えられる。 1行目に、盤面の縦と横のサイズを表す2つの整数HとWが与えられる。\n2行目からH+1行目に、各添字に対応する盤面の色を表す文字列が与えられる。\nH+2行目に、操作の数Qが与えられる。\n続くQ行に回転の中心のマスの座標を表すxとyが与えられる。 全ての操作を行った後の盤面をH行で出力せよ。\nただし、ブロックが無いマスは'.'で表すこと。 盤面の初期状態ですでに消えるブロックがあること注意。\n両端にあるブロックの落下処理に注意。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01044.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3 ≤ H ≤ 50\n3 ≤ W ≤ 50\n0 ≤ x < W\n0 ≤ y < H\n1 ≤ Q ≤ 100\nFi,j ( 0 ≤ i < W , 0 ≤ j < H ) は'R','G','B','P','Y','E'のいずれかである。",
          "ranges": "3 50; 3 50; 1 100; 50; 50; 100; 3; 3; 0; 0; 1; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 3\nRGR\nRBP\nYEB\n1\n1 1",
            "output": "…\nYBG\nEBP Fig.4はSample Input1における状態の遷移を表したものである。 Fig.4",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01044.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01044"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01045",
        "title": "Problem I: Hopping Mind",
        "description": "チエノとカカオは同じ喫茶店で働く姉妹である。2人はとても仲が良く、ある日、とあるテーブルゲームで遊ぶことになった。 ゲームはRマス×Cマスの盤面と、駒としてうさぎのTPを用いる。盤面の各マスは白か黒の色が塗られている。最初にTPを盤面の右下(R,C)におき、2人で次の行動を交互に行う。TPの現在の位置を(a,b)とすると、そこからジャンプ可能な位置(i,j)を1つ選び、TPをそこにジャンプさせる。TPがジャンプ可能な位置(i,j)は以下をすべて満たす。 自分のターンにTPをジャンプさせることができなくなった場合、負けとなる。 チエノが先手、カカオが後手でこのゲームを行う。カカオは頭の中でゲームを最後まで先読みすることができ、常に最適な行動をとる。この時、チエノが勝つ方法が存在するかどうかを判定せよ。 入力は以下の形式で与えられる。 1行目に3つの整数R,C,Kが空白区切りで与えられる。次のR行に盤面の情報としてC個の\".”または\"#”が与えられる。Gi,jは盤面の位置(i,j)の色を表し、”.”が白、\"#”が黒を表す。 チエノが勝つ方法が存在する場合は”Chieno”を、存在しない場合は”Cacao”を1行に出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01045.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ R,C ≤ 1000\n1 ≤ K ≤ 2000\nGR,Cは“.”である",
          "ranges": "1 2000; 1000; 2000; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 3 2\n...\n...\n...",
            "output": "Chieno",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01045.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01045"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01046",
        "title": "Problem J: Yu-kun Likes a lot of Money",
        "description": "会津大学付属幼稚園はプログラミングが大好きな子供が集まる幼稚園である。園児の一人であるゆう君は、プログラミングと同じくらいお金が大好きだ。ゆう君は、今日もお金を稼ぐために財宝の眠る島を訪れた。ゆう君は事前に財宝のありかの描かれた地図を手に入れている。その地図をもとに出来るだけ多くのお金を稼ぎたい。ゆう君は最大でどのくらいお金を手に入れることができるだろうか？ 地図、ゆう君の初期位置、財宝の種類とそれらから得られるお金、そして小さい岩を破壊するために必要な費用の情報が与えられる。地図の情報は hマス × wマスのフィールドとして与えられる。地図の各マスに書かれている文字とその意味は次の通りである。 ゆう君は１回の移動で隣接する上下左右のいずれかのマスに移動することができる。\nただし、地図の外へ出るような移動はできない。 後払いをすることができるため、小さな岩を壊す際にそれに必要な金額をその時に所持している必要はない。そのため、ゆう君は最終的に小さな岩を壊す際にかかった金額の総和以上のお金を得ている必要がある。 ゆう君が得られる最大の金額を出力せよ。 入力は以下の形式で与えられる。 １行目に地図の縦の長さh,横の長さw,地図に含まれる財宝の数n,小さな岩を破壊するためにかかる費用rが空白区切りで与えられる。 続くh行に地図を表す各マスの情報ci,jがw個与えられる。 ( 1 ≤ i ≤ h, 1 ≤ j ≤ w ) 続くn行に財宝の種類mk とその財宝の金額vkが空白区切りで与えられる。 ( 1 ≤ k ≤ n ) 入力は以下の制約を満たす。 ゆう君が得られる最大のお金の金額を1行に出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01046.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の制約を満たす。 1 ≤ h,w ≤ 8\n0 ≤ n ≤ min(h×w -1,62) ただし、min(a,b)はa,bの最小値を表す\n 1 ≤ vi ≤ 105 ( 1 ≤ i ≤ n )\n1 ≤ r ≤ 105\ncj,k, ml を除く全ての入力は整数として与えられる ( 1 ≤ j ≤ h, 1 ≤ k ≤ w, 1 ≤ l ≤ n )\n地図にはちょうどひとつ'@'が書かれている\n地図にはちょうどn個の財宝が書かれている\n地図に書かれている財宝の種類は入力で与えられたmlのいずれかである\n地図に同じ種類の財宝が２つ以上現れることはない",
          "ranges": "1 105; 1 105; 8; 105; 105; 1; 0; 1; 1; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 3 1 10\n@0.\n...\n...\n0 100",
            "output": "100",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01046.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01046"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01047",
        "title": "Problem K: Manhattan Warp Machine 2",
        "description": "とある宇宙では、3次元の格子点上に星が存在し、宇宙人達はマンハッタンワープ装置という装置を使い、星間を移動している。\nこのワープ装置には、N個のボタンが付いており、ボタンiを押すと、現在いる星からのマンハッタン距離がdiである任意の星にワープすることができる。\nワープ装置は改良され、コストがかからずに移動出来る。\n今、(0, 0, 0)の星にいるある宇宙人があるM個の星を訪れたいと考えている。\nM個の星を全て訪れるのに最短で何回ワープをする必要があるか答えよ。\nもし、1つでも訪れることが不可能な星がある場合は-1を出力せよ。\nM個の星は好きな順番に訪れることが出来、全て訪れた後に(0, 0, 0)に戻って来る必要は無い。\n3次元上の全ての格子点には必ず星が存在する。\n点(x1, y1, z1)と点(x2, y2, z2)間のマンハッタン距離は| x1 - x2 | + | y1 - y2 | + | z1 - z2 |で表される。 入力は全て整数で与えられる。\n1行目にN, Mが与えられる。\n2行目に移動可能なマンハッタン距離diが空白区切りで与えられる。\n3行目以降のM行に、M個の訪れたい星の格子点の座標(xi, yi, zi)が1行ずつ空白区切りで与えられる。 入力は以下の条件を満たす。 M個の星全てを訪れるのにかかる最短ワープ回数を1行に出力せよ。\n訪れることが不可能な星がある場合は-1を出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01047.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 1 ≤ N ≤ 15\n1 ≤ M ≤ 15\n1 ≤ di ≤ 3×105\n-105 ≤ xi, yi, zi ≤ 105\n与えられるマンハッタン距離diは全て異なる。\n与えられる格子点の座標は全て異なる。",
          "ranges": "1 15; 1 15; 1 3; 15; 15; 3; 105; 1; 1; 1; 105"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 1\n1 2\n5 0 0",
            "output": "3",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01047.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01047"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01048",
        "title": "Divisor",
        "description": "12以下の自然数 N が与えられるので、約数の個数がちょうど N 個であるような最小の自然数を求めよ。 1つの自然数 N が 1 行で与えられる。 約数の個数がちょうど N 個であるような最小の自然数を1行に出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01048.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 12",
          "ranges": "1 12; 12; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1",
            "output": "1",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01048.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01048"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01049",
        "title": "Array Update",
        "description": "項数 N、初項 a、公差 d の等差数列 A がある。以下の形式で数列を更新する命令文が M 個与えられるので、与えられた順序で数列 A を M 回更新したときの K 項目の値を求めよ。 1行目に、1つの整数 N が与えられる。\n2行目に、2つの整数 a と d が空白区切りで与えられる。\n3行目に、1つの整数 M が与えられる。\n\n4行目からの M 行のうち i 行目には i 番目の命令文を表す 3 つの整数 xi, yi, zi が空白区切りで与えられる。\n\n最後の行に、1つの整数 K が与えられる。 入力で与えられた順番で数列AをM回更新したときのK項目を出力せよ。 {  2 ,  5 ,  8 , 11 , 14 }\n　             ↓\n0 2 5 … 2項目の値と5項目の値を入れ替える\n　             ↓\n{  2 , 14 ,  8 , 11 ,  5 }\n　             ↓\n0 3 5 … 3項目の値と5項目の値を入れ替える\n　             ↓\n{  2 , 14 ,  5 , 11 ,  8 }\n　             ↓\n1 2 4 … 2項目の値を4項目の値に書き換える\n　             ↓\n{  2 ,  11 ,  5 , 11 ,  8 }\nよって2項目は11である。",
        "difficulty": "Easy",
        "category": "Arrays & Strings",
        "tags": [
          "array"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01049.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 108\n1 ≤ a ≤ 5\n1 ≤ d ≤ 5\n1 ≤ M ≤ 10\n0 ≤ xi ≤ 1 (1 ≤ i ≤ M)\n1 ≤ yi ≤ N (1 ≤ i ≤ M)\n1 ≤ zi ≤ N (1 ≤ i ≤ M)\nyi ≠ zi (1 ≤ i ≤ M)\n1 ≤ K ≤ N",
          "ranges": "1 108; 1 5; 1 5; 1 10; 0 1; 108; 5; 5; 10; 1; 1; 1; 1; 1; 0; 1; 1; 1; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n2 3\n3\n0 2 5\n0 3 5\n1 2 4\n2",
            "output": "11 {  2 ,  5 ,  8 , 11 , 14 }\n　             ↓\n0 2 5 … 2項目の値と5項目の値を入れ替える\n　             ↓\n{  2 , 14 ,  8 , 11 ,  5 }\n　             ↓\n0 3 5 … 3項目の値と5項目の値を入れ替える\n　             ↓\n{  2 , 14 ,  5 , 11 ,  8 }\n　             ↓\n1 2 4 … 2項目の値を4項目の値に書き換える\n　             ↓\n{  2 ,  11 ,  5 , 11 ,  8 }\nよって2項目は11である。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01049.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01049"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01051",
        "title": "Squid Ink",
        "description": "近年、イカたちの間では縄張り争いが頻繁に起きている。複数のイカたちがチームを組み、自らのイカスミを武器に戦うのが近年のイカの戦闘スタイルである。 現在も縄張り争いが起こっており、その戦場は R×C のグリッドで表される。縄張り争いに参加しているイカのゲソ太はこのグリッド上のある場所にいる。この争いでは、重要な場所を敵よりも早く占拠することで戦況を有利にすることができる。そのため、ゲソ太は重要そうな場所を1つ決め、そこになるべく早く移動したいと考えている。 ゲソ太は隣接する上下左右のマスに移動することができる。グリッドの各マスには味方、または敵のイカスミが塗られている場合がある。なにも塗られていないマスに移動する場合、2秒かかるが、味方のイカスミが塗られているマスに移動する場合、その半分の時間(1秒)で済む。敵のイカスミが塗られているマスには移動することができない。壁があるマスや戦場の外へは当然移動することができない。 また、ゲソ太は上下左右のいずれかの方向を向き、イカスミを吐くことができる。すると、前方の3マスが味方のイカスミで上書きされる。ただし途中に壁がある場合はその手前までしかイカスミは届かない。この動作には2秒かかる。 戦場の情報とゲソ太の位置と目的の位置が与えられるので、最短で何秒で移動できるか求めてほしい。 入力は以下の形式で与えられる。 1行目に2つの整数R,Cが空白区切りで与えられる。続くR行に戦場の情報としてC個のマスの情報が与えられる。ai,jは戦場の位置(i,j)のマスの情報を表し、以下のいずれかの文字である。 与えられる入力は、目的の位置まで移動することが可能であることが保証される。 ゲソ太が目的の位置まで移動するのにかかる最短の秒数を1行に出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01051.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ R,C ≤ 30",
          "ranges": "30; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 5\nS....\n.....\n.....\n.....\n....G",
            "output": "14",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01051.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01051"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01052",
        "title": "Movie",
        "description": "太郎君は夏休みの間、毎日１つの映画を近所の映画館で見ることにしました。\n（太郎君の夏休みは8月1日から8月31日までの31日間あります。） その映画館では、夏休みの間にn つの映画が上映されることになっています。\nそれぞれの映画には 1 から n までの番号が割り当てられており、i 番目の映画は8月 ai 日から8月 bi 日の間だけ上映されます。 太郎君は映画を見た時、それが初めて見る映画だった場合は 100 の幸福度を得ることができます。\nしかし、過去に 1 度でも見たことのある映画だった場合は 50 の幸福度を得ます。 太郎君は上映される映画の予定表をもとに、夏休みの計画を立てることにしました。\n太郎君が得られる幸福度の合計値が最大になるように映画を見たときの合計値を求めてください。 どの日も必ず1つ以上の映画が上映されていることが保証されます。 入力は以下の形式で与えられる。 1行目に、1つの整数 n が与えられる。\n2行目からの n 行のうち i 行目には 2 つの整数 ai, bi  が空白区切りで与えられる。 太郎君の得られる幸福度の合計値の最大値を出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01052.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 100\n1 ≤ ai ≤ bi ≤ 31 (1 ≤ i ≤ n)",
          "ranges": "1 100; 100; 31; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n1 31\n2 2\n2 3\n3 3",
            "output": "1700",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01052.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01052"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01053",
        "title": "Lucky Number",
        "description": "0 から N-1 までの数字があります。 M+1日間のラッキーナンバーを以下の方法で選びたいと思います。 最初の日にラッキーナンバーをランダムに決めます。 i日後のラッキーナンバーを A 、（i+1）日後のラッキーナンバーを B とすると、 例えば 0,1,2,3 と数字があり、 K = 1 のとき となります。 次にQ個の質問が与えられます。 各質問の内容は以下のとおりです。 最初の日のラッキーナンバーが a のとき b 日後のラッキーナンバーが c になるような b 日後までのラッキーナンバーの選び方は何通りでしょうか？\n選び方は膨大な数になると思われるので 1,000,000,007 で割った余りを求めてください。 例えば、N=4 K=1 で、最初のラッキーナンバーが 0 で　3 日後のラッキーナンバーが 2 になるような組み合わせは の４通りです。 入力は以下の形式で与えられる。 各質問に対し、答えを求め 1,000,000,007 で割った余りを一行ずつ順番に出力してください。",
        "difficulty": "Easy",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01053.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 5000\n1 ≤ M ≤ 5000\n1 ≤ K ≤ 5000\nN / K が割り切れる\nN / K は偶数\n1 ≤ Q ≤ 100000\n0 ≤ ai < N ( 1 ≤ i ≤ Q )\n0 ≤ bi ≤ M ( 1 ≤ i ≤ Q )\n0 ≤ ci < N ( 1 ≤ i ≤ Q )",
          "ranges": "1 5000; 1 5000; 1 5000; 1 100000; 5000; 5000; 5000; 100000; 1; 1; 1; 1; 0; 1; 0; 1; 0; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "6 3 1 10\n0 1 0\n0 2 0\n0 3 0\n1 3 3\n0 2 1\n2 2 2\n2 3 2\n2 2 0\n1 1 1\n2 2 1",
            "output": "1\n3\n9\n9\n0\n3\n9\n3\n1\n0",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01053.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01053"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01054",
        "title": "String Conversion",
        "description": "ジェニファーとマリアンはカーラに文字列Sをプレゼントしました。\nしかし、カーラは文字列Sをもらっても嬉しくありません。\n文字列Tが欲しかったのです。\n3人は協力して文字列Sを文字列Tに変えることにしました。 最初にジェニファーが文字を任意の順番に並び替えます。 次にマリアンが２種類のアルファベットの小文字を交換することを任意の回数行います。\nこの操作では、例えば以下のように、文字列中の同じ文字が全て交換されます。 最後にカーラがある1文字を別の1文字に置換することをTになるまで繰り返します。\nジェニファーとマリアンはカーラの置換回数が少なくなるようにしてあげることにしました。\nカーラが行う置換の回数の最小値を求めてください。 1行目に文字列の長さnが与えられる。\n2行目に文字列S、3行目に文字列Tが与えられる。 カーラの最少の置換回数を1行に出力せよ。",
        "difficulty": "Easy",
        "category": "Arrays & Strings",
        "tags": [
          "string"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01054.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 105\nS,Tは'a'~'z'のみを含む\n|S| = |T| = n",
          "ranges": "1 105; 105; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\nabc\nxyz",
            "output": "0",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01054.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01054"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01055",
        "title": "Bomb Removal",
        "description": "縦H×横Wのグリッド上にN個の点火された導火線とそれぞれに対する1つの爆弾が配置されている。それぞれの導火線と爆弾は、Li個のマスからなるpathi上に配置され、pathiのj番目のマスを(pxij, pyij)とする。各爆弾はpathiの最後のマス(pxiLi, pyiLi)に存在する。導火線の火は初期状態(0秒時点)でマス(pxi1, pyi1)にあり、1秒間に1マス進む((pxi1, pyi1),(pxi2, pyi2),...,(pxiLi, pyiLi)の順に進む)。 最初、ロボットがマス(sx, sy) にいる。このロボットは今いるマスの隣接する8方向のマスに1進む、または、そのマスに留まるのに1秒かかる。ただし、グリッドの外や爆弾のあるマスには移動することができない。ロボットは導火線の火があるマス上にいるとき消火することができる(同じマスに2つ以上の導火線の火がある場合はそれら全てを消すことができる)。 爆弾は導火線の火がマス(pxiLi, pyiLi)に到達したときに爆発する(pathiの途中で導火線の火がマス(pxiLi, pyiLi)を通過したときは爆弾は爆発しない)。\n全ての爆弾を爆発させずに全ての導火線の火を消火させるための最短の時間を出力せよ。ただし、どのように移動しても爆弾を爆発させてしまう場合は-1を出力せよ。なお、初期状態(0秒時点)でロボットが導火線の火の上にいる場合、消火することができる。 入力は以下の形式で与えられる。 1行目に3つの整数W, H, Nが空白区切りで与えられる。2行目に2つの整数sx, syが空白区切りで与えられる。3行目からN+2行目に Li と pathi が与えられる。pathi は以下の形式で与えられる。 ロボットが全ての導火線の火を消火させるための最短時間または -1 を出力せよ。 サンプル1に対応する図は以下の通りである。 ロボットは1秒後に左下の(1, 2)のマスに移動することにより消火することができる。 サンプル2に対応する図は以下の通りである。 ロボットは、(1, 1)または(2, 2)のマスに移動する、または今いるマス(2, 1)に留まることができるがいずれにせよ1秒後に爆弾が爆発してしまう。 サンプル3に対応する図は以下の通りである。 ロボットは、(2, 2)のマスに移動し、(1, 2)のマスに移動することにより2秒で全ての導火線の火を消火することができる。 ロボットは、初期状態(0秒時点)で(2, 2)のマスにいて、導火線の火も(2, 2)のマスにあるので0秒で消火することができる。",
        "difficulty": "Easy",
        "category": "Trees & Graphs",
        "tags": [
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01055.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ H,W ≤ 20\n1 ≤ N ≤ 5\n1 ≤ sx ≤ W\n1 ≤ sy ≤ H\n2 ≤ Li ≤ H+W\n1 ≤ pxij ≤ W\n1 ≤ pyij ≤ H\npathiの隣り合うマスは上下左右に隣接している。\n導火線は互いに独立している(他の導火線に影響しない)。\n爆弾はマス(sx, sy)には置かれない。",
          "ranges": "1 5; 20; 5; 2; 1; 1; 1; 2; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 2 1\n2 1\n3 1 1 1 2 2 2",
            "output": "1 サンプル1に対応する図は以下の通りである。 ロボットは1秒後に左下の(1, 2)のマスに移動することにより消火することができる。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01055.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01055"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01056",
        "title": "Lights of Apartment",
        "description": "エーちゃんとリカちゃんとハルトくんはマンションに遊びに来た。\n3人は全ての部屋の電気を管理できる部屋に忍び込みいたずらをすることにした。\nこのマンションはn個の立方体が1列に並んでいる形をしている。\n各立方体は西から順に1辺の長さが1ずつ増えていて(1,2,3,...,n)、i番目の立方体はi階あり、各階に縦i×横i個の部屋がある。\n2番目以降の立方体の西側は1つ西の立方体の東側と接していて、全ての立方体の南側は真っ直ぐな道路に面している。 初め全ての部屋に電気がついている。\n3人はそれぞれ次の行動をした。 このようないたずらが m 回行われた後に電気がついている部屋の数を求めよ。 入力は全て整数で与えられる。\n1行目に立方体の数n、行動の数mが与えられる。\n2行目以降m行に行動した人の番号qとkが与えられる。\nqiが0の場合エーちゃん、 1の場合リカちゃん、2の場合ハルトくんが行動したことを表す。 3人は部屋がない場所の電気を消そうとすることもある。 電気がついている部屋の数を1行に出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01056.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n,m ≤ 50000\n0 ≤ qi ≤ 2\n1 ≤ ki ≤ 2×109\n同じ行動は一度しか与えられない",
          "ranges": "0 2; 1 2; 50000; 2; 2; 1; 0; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 1\n0 4",
            "output": "27",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01056.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01056"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01057",
        "title": "String Crossing",
        "description": "N個の文字列{ S1, S2, ..., SN } が与えられる。\n続いてQ個のクエリが与えられる。\nクエリの種類は以下の2つである。 例えばS1=\"abcd\",S2=\"efgh\"があり\nクエリの種類が1でa=1,b=2,c=2,d=3のとき S1=\"agh\",S2=\"efbcd\"となる。 全てのクエリを処理した後の文字列S1からSNを全て出力せよ。 入力は以下の形式で与えられる。 or 高速な入出力を推奨する。 各クエリを処理した後の文字列をS1からSNまで1行ずつ出力せよ。",
        "difficulty": "Easy",
        "category": "Arrays & Strings",
        "tags": [
          "string"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01057.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 105\n1 ≤ Q ≤ 105\nN個の文字列の長さの合計は2×106を越えない。\n文字列Siは全て英小文字であることが保証される。\nクエリの種類が1のとき\n \na ≠ c\n1 ≤ b ≤ |Sa|\n1 ≤ d ≤ |Sc|\n\n\nクエリの種類が2のとき\n \n1 ≤ b ≤ |Sa|\ncは英小文字であることが保証される。 高速な入出力を推奨する。",
          "ranges": "1 105; 1 105; 105; 105; 1; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 1\nabcd\nefgh\n1 1 2 2 3",
            "output": "agh\nefbcd",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01057.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01057"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01058",
        "title": "Point in The Triangle",
        "description": "点(0,0),(n-1,0),(0,m-1),(n-1,m-1)に囲まれた長方形の閉区間内から格子点を3点選び、三角形を作る。\nこのとき、点(x1,y1)を含むが点(x2,y2)を含まない三角形の数と点(x2,y2)を含むが点(x1,y1)を含まない三角形の数の差の絶対値を求めよ。\n点が境界線上にあるものは三角形に含まれているとみなす。\nただし、3点が一直線上に並んでいるものは三角形とはみなさない。 入力は全て整数で与えられる。\n1行にn,m,x1,y1,x2,y2が空白区切りで与えられる。 差の絶対値を1行に出力せよ。",
        "difficulty": "Easy",
        "category": "Geometry",
        "tags": [
          "geometry"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01058.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ n,m ≤ 500\n0 ≤ x1,x2 ≤ n-1\n0 ≤ y1,y2 ≤ m-1\n(x1,y1) ≠ (x2,y2)",
          "ranges": "500; 2; 0; 2; 0; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 2 0 0 0 1",
            "output": "0",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01058.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01058"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01059",
        "title": "Gossip",
        "description": "1からnまでの番号が順番に割り当てられているn人のアイドルが横一列に並んでいる。\n\nアイドルiは単位時間でアイドルi-1とアイドルi+1に情報を伝達することができる。ただし、アイドル1はアイドル2にしか情報を伝達できず、アイドルnはアイドルn-1にしか情報を伝達できない。\n\n時刻0の時点で、番号がa1, a2, ..., amであるm人のアイドルが秘密の情報を持っている。すべてのアイドルが秘密の情報を得ることのできる最小の時間を求めよ。 入力は以下の形式で与えられる。 1行目に2つの整数nとmが空白区切りで与えられる。\n    2行目にm個の整数a1, a2, ..., amが空白区切りで与えられる。 すべてのアイドルに情報が伝わる最小の時間を1行に出力する。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01059.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ n ≤ 105\n1 ≤ m ≤ n\n1 ≤ ai ≤ n\naiの値は全て異なる\naiは昇順で与えられる",
          "ranges": "2 105; 105; 2; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 2\n1 3",
            "output": "1",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01059.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01059"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01060",
        "title": "Product Sale Lines",
        "description": "ウニクロ卯月さんと目黒凛さんはSEARIGHT LIVE FESの物販に来ている。下図のように、物販列は二列からなり、横にW人、縦にH人並べる大きさでコの字の形をしている。列の先頭の人は買い物をした後に列からはけ、同じ列の後ろの人々はそれぞれ一人分ずつ列を詰める。 二人は最初に物販列の最後尾に隣同士で、それぞれ違う列に（下図オレンジと濃い青色の位置）並んでいる。二人はとても仲がよいため、常にできるだけ近くにいたい。しかし、人のはけ方は列によって違うため、違う列に並んでいる二人の位置は離れてしまう可能性がある。 あなたの仕事は、列のはけ方が与えられたとき、二人が隣同士になる回数を求めることである。\nただし、二人ともコの字の角にいる（上図の黒色の状態の）ときは、隣同士とみなさない。また、並んだ直後は隣同士に並んでいるが、これは数えない。 入力は以下の形式で与えられる。 1行目に列の大きさを表す整数WとHが空白区切りで与えられる。Wはコの字の横に並べる外側の人数を、Hは縦に並べる外側の人数を表す。2行目に人が一人どちらかの列からはける回数Nが与えられる。3行目には列のはけ方についての情報p1...pNが空白区切りで与えられる。piに’0’または’1’であり、’0’のとき、外側の人が一人はけることを、’1’のとき内側の人が一人はけることを表す。ただし、ウニクロ卯月さんまたは目黒凛さんが列から出ることはない。 二人が隣同士になる回数を一行に出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01060.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "4 ≤ W ≤ 100\n4 ≤ H ≤ 100\n0 ≤ N ≤ 100",
          "ranges": "4 100; 4 100; 0 100; 100; 100; 100; 4; 4; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "11 11\n5\n0 0 0 0 0",
            "output": "0",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01060.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01060"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01061",
        "title": "Community Integration",
        "description": "N個の村がある。それぞれの村には1からNまでの番号がついている。昨今の合併ブームにより、いくつかの村が合併されることになった。合併された2つ以上の村は新しい1つの市となり、どの村とも合併されない村は村のままである。 あなたは、ある2つの村が合併後に同じ市になる、という情報を複数与えられる。その情報の組み合わせによって、3つ以上の村が1つの市になることもありうる。 合併後に同じ市になる村同士の情報が与えられたとき、合併後の市の数と村の数の差の絶対値を出力せよ。 入力は以下の形式で与えられる。 1行目に村の数Nと合併についての情報の数Mが空白区切りで与えられる。\n2行目からM+1行目に、合併についての情報を表す２つの整数aiとbiが空白区切りで与えらる。各情報はai番目の村とbi番目の村が合併後に同じ市になることを示す。ただし、ai=biを満たすような入力は与えられない。 村の数と市の数の差の絶対値を1行に出力せよ。 このケースではすべての村が1つの市に合併されることを表し、その市の中で合併される2つの村をつなぐつなぎ方の全通りが入力として与えられている。 このケースでは合併される3つの村をつなぐつなぎ方の全通りが入力として与えられているわけではないが、つながっている村をたどればすべての村にたどり着くことができるので、すべての村が一つの市に合併される。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01061.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 1,000\n0 ≤ M ≤ 100\n1 ≤ ai ≤ N\n1 ≤ bi ≤ N",
          "ranges": "1 1; 0 100; 1; 100; 1; 0; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 1\n1 2",
            "output": "0",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01061.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01061"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01062",
        "title": "Courage Test",
        "description": "P「今日は肝試し企画の番組の収録だ。」\n\nO型智絵里「き、きもだめし……」\n\n四村かな子「智絵里ちゃん大丈夫？」\n\n月野茜「さすがPさん！一行で状況が明晰判明にわかる素晴らしい解説です！さあ！火の玉に向かって走りましょう！」\n\nP「ルールは簡単、みんなで協力してこのエリアのすべての神社にお参りしてくるだけだ。」\n\n茜「オーソドックスですね！早速神社に向かって走りましょう！」\n\nかな子「でもここ、日本有数の神社密度で行かなくちゃいけない神社がたくさんあるんじゃなかったっけ……」\n\nかな子「でも茜ちゃんがいれば心強いよ！」\n\nP「ちなみにスタートは全員違う神社からスタート、合流も禁止だ。それじゃあ智絵里とかな子は初期位置についてくれ」\n\n智絵里「うぅ……」\n\nかな子「お、お菓子を持っていけば大丈夫！」\n\n智絵里「頑張る……」\n\n茜「プロデューサー！私はどうすれば！」\n\nP「お前は賑やかしだ」\n\n茜「えっ」\n\nP「座ってろ」\n\n茜「」 それぞれ1~nの番号が付けられたn個の神社とn-1本の道がある。各道は神社aiと神社biを繋ぎ、双方向に移動することができる。それぞれの神社は、任意の神社から1本以上の道を経由して到達することができる。また、任意の2つの神社の間の(迂回しない)経路は一意に定まる。 O型智絵里ちゃんと四村かな子ちゃんがそれぞれ神社uと神社vにいる。 今、2人を任意に移動させることを考える。移動とは、ある神社から1本の道を経由して別の神社に進むことである。\nその際、以下のルールを満たしたい。 これらのルールを満たすことができるかどうかを判定し、できる場合は\"Yes\"を、できない場合は\"No\"を出力せよ。 入力は以下の形式で与えられる。 1行目に3つの整数n, u, vが空白区切りで与えられる。\n    2行目からn行目までに、2つの整数ai, biが空白区切りで与えられる。 ルールを満たすことができる場合は\"Yes\"を、できない場合は\"No\"を1行に出力する。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01062.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ n ≤ 105\n1 ≤ ai, bi, u, v ≤ n\nu ≠ v\nai < bi\n(ai, bi) ≠ (aj, bj) (i ≠ j)",
          "ranges": "2 105; 105; 2; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 1 4\n1 2\n2 3\n3 4",
            "output": "Yes",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01062.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01062"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01063",
        "title": "Rubik Dungeon",
        "description": "あなたはn × n × nの立方体のルービックキューブ型のダンジョンにやってきた。\nあなたは現在(x1,y1,z1)の部屋にいる。\n目標の宝は(x2,y2,z2)の部屋にある。\nあなたは隣接している前後左右上下の部屋に単位時間で移動することができる。 各部屋には6つのボタンがあり、それぞれのボタンを押すことにより、単位時間で、ルービックキューブのように以下の操作を行うことができる： 回転している途中で他の部屋に移動することはできない。\n宝のある部屋まで最短で移動した場合の時間を求めよ。 入力は全て整数で与えられる。\n1行目にnが与えられる。\n2行目に現在地の座標(x1,y1,z1)、3行目に宝のある部屋の座標(x2,y2,z2)が空白区切りで与えられる。 最短の時間を出力せよ。 回転させると宝も移動してしまうので、回転させずに移動する。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01063.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ n ≤ 105\n0 ≤ x1,y1,z1,x2,y2,z2 ≤ n−1\n(x1,y1,z1) ≠ (x2,y2,z2)",
          "ranges": "2 105; 105; 2; 0; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n0 0 0\n1 2 2",
            "output": "3",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01063.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01063"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01064",
        "title": "Array Update 2",
        "description": "項数 N 、初項 a 、公差dの等差数列 A がある。\n  以下の形式で、数列を書き換える M 個の命令文が与えられるので、与えられた順序で M 回\n  数列 A を書き換えたときの数列 A の K項目の値を求めなさい。 1行目に、1つの整数 N が与えられる。\n  2行目に、2つの整数 a と d が空白区切りで与えられる。\n  3行目に、1つの整数 M が与えられる。\n\n  4行目からの M 行のうち i 行目には i 番目の命令文を表す 3 つの整数 xi, yi, zi が空白区切りで与えられる。\n\n  最後の行に、1つの整数 K が与えられる。 入力で与えられた順番で数列AをM回更新したときのK項目を出力せよ。 { 2 , 3 , 4 , 5 }\n\n  ↓  0 1 2 ... 1項目から2項目までの区間の値の順序を反転する\n\n  { 3 , 2 , 4 , 5 }\n\n  ↓  1 1 4 ... 1項目から4項目までの区間の値をそれぞれ1増やす\n\n  { 4 , 3 , 5 , 6 }\n\n  ↓ 2 2 4 ... 2項目から4項目までの区間の値をそれぞれ半分にする（小数点以下切り捨てる）\n\n  { 3 , 1 , 2 , 3 }\n\n  よって3項目の値は2である。 { 1 , 3 , 5 , 7 , 9 }\n\n  ↓  1 2 3 ... 2項目から3項目までの区間の値をそれぞれ1増やす\n\n  { 1 , 4 , 6 , 7 , 9 }\n\n  ↓ 2 3 5 ... 3項目から5項目までの区間の値をそれぞれ半分にする（小数点以下切り捨てる）\n\n  { 1 , 4 , 3 , 3 , 4 }\n\n  ↓  0 1 5 ... 1項目から5項目までの区間の値の順序を反転する\n\n  { 4 , 3 , 3 , 4 , 1 }\n\n  よって1項目の値は4である。",
        "difficulty": "Easy",
        "category": "Arrays & Strings",
        "tags": [
          "array"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01064.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 200000\n1 ≤ a ≤ 5\n1 ≤ d ≤ 5\n1 ≤ M ≤ 200000\n0 ≤ xi ≤ 2 (1 ≤ i ≤ M)\n1 ≤ yi ≤ N (1 ≤ i ≤ M)\n1 ≤ zi ≤ N (1 ≤ i ≤ M)\nyi < zi (1 ≤ i ≤ M)\n1 ≤ K ≤ N",
          "ranges": "2 200000; 1 5; 1 5; 1 200000; 0 2; 200000; 5; 5; 200000; 2; 2; 1; 1; 1; 0; 1; 1; 1; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n2 1\n3\n0 1 2\n1 1 4\n2 2 4\n3",
            "output": "2 { 2 , 3 , 4 , 5 }\n\n  ↓  0 1 2 ... 1項目から2項目までの区間の値の順序を反転する\n\n  { 3 , 2 , 4 , 5 }\n\n  ↓  1 1 4 ... 1項目から4項目までの区間の値をそれぞれ1増やす\n\n  { 4 , 3 , 5 , 6 }\n\n  ↓ 2 2 4 ... 2項目から4項目までの区間の値をそれぞれ半分にする（小数点以下切り捨てる）\n\n  { 3 , 1 , 2 , 3 }\n\n  よって3項目の値は2である。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01064.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01064"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01065",
        "title": "Barter",
        "description": "ナナツ君は、うまか棒をx本、ふがしをy本持っている。\nn人のお菓子交換人がいる。\n    それぞれの交換人iは、 のどちらか1つの方法で1回だけ交換してくれる。\n    この制約の下で、最終的に所持しているブタメソの個数を最大化せよ。 入力は以下の形式で与えられる。 1行目に整数nが与えられる。\n    2行目に整数x, yが空白区切りで与えられる。\n    3行目からn+2行目に整数ai, bi, ci, diが空白区切りで与えられる。 最終的にナナツ君が所持しているブタメソの個数の最大値を1行に出力する",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01065.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 100\n0 ≤ x, y ≤ 300\n1 ≤ ai, bi, ci, di ≤ 300\n\\(\\sum_{i=1}^na_i\\) ≤ 300, \\(\\sum_{i=1}^nb_i\\) ≤ 300, \\(\\sum_{i=1}^nc_i\\) ≤ 300, \\(\\sum_{i=1}^nd_i\\) ≤ 300",
          "ranges": "1 100; 100; 300; 300; 1; 1; 1; 1; 1; 0; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n3 3\n3 2 4 1\n5 1 2 1\n3 1 3 2",
            "output": "3",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01065.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01065"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01066",
        "title": "Reflection Warp Machine",
        "description": "とある宇宙では、2次元の格子点上にn個の星が存在し、宇宙人達はReflection Warp Machineを使い、星間を移動している。\nこの装置は、任意の位置、角度で直線を引くことができる。\nこの直線を対称軸として、現在いる座標から線対称の座標に移動することができる。\nただし、星が存在しない座標に移動することはできない。\n一度引いた直線は何度でも利用できる。\n現在、(x0,y0)の星にいるある宇宙人はすべての星を訪れたいと考えている。\n星は好きな順番に訪れることができる。\nすべての星を訪れるのに最小で何本の直線を引く必要があるか求めよ。 入力は全て整数で与えられる。\n1行目にnが与えられる。\n2行目以降n行にi番目の星の座標(xi,yi)が空白区切りで与えられる。 すべての星を訪れるために必要な最小の直線の数を1行に出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01066.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ n ≤ 8\n−100 ≤ xi,yi ≤ 100\n(xi,yi) ≠ (xj,yj) (i ≠ j)",
          "ranges": "2 8; 8; 100; 2; 100"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n0 0\n0 1\n1 0",
            "output": "2",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01066.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01066"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01067",
        "title": "Circles and Ray",
        "description": "2次元平面上にそれぞれ互いに共通部分をもたない N 個の円が与えられる。\nまた、円にはそれぞれ1から N までの番号が割り振られている。 あなたは、端点が1番目の円の円周上にあるような半直線を任意の数だけ設置することができる。\nどの円も1本以上の半直線との共通部分を持っているようにするためには、最低何本の半直線を設置しなければならないかを求めなさい。 入力は以下の形式で与えられる。 1行目に、1つの整数 N が与えられる。\n2行目からの N 行のうち i 行目には i 番目の円のx座標、y座標、半径を表す3つの整数 xi, yi, ri が空白区切りで与えられる。 どの円も1本以上の半直線との共通部分を持っているようにするためには最低何本の半直線を設置しなければならないかを出力せよ。",
        "difficulty": "Easy",
        "category": "Geometry",
        "tags": [
          "geometry"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01067.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 16\n-100 ≤ xi ≤ 100 (1 ≤ i ≤ N)\n-100 ≤ yi ≤ 100 (1 ≤ i ≤ N)\n1 ≤ ri ≤ 100 (1 ≤ i ≤ N)",
          "ranges": "2 16; 100 100; 100 100; 1 100; 16; 100; 100; 100; 2; 100; 1; 100; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n0 0 2\n3 3 1\n6 1 1",
            "output": "1",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01067.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01067"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01068",
        "title": "Equivalent Vertices",
        "description": "会津大学付属幼稚園はプログラミングが大好きな子供が集まる幼稚園である。\n園児の一人であるゆう君は,プログラミングと同じくらいお絵描きが大好きだ。 \nこれまでゆう君は丸と六角形と矢印で沢山絵を書いてきた。 \nある日ゆう君はこれらの絵がグラフであることを知る。\n丸と六角形は頂点と呼ばれ,矢印は辺と呼ばれているらしい。\nゆう君は2つの頂点間を結ぶようにして矢印を描き、更にその上に0か1を書く。\nこのように,辺に重み(0または1)があり有向な辺からなるグラフは重み付き有向グラフと呼ばれる。\nまた,頂点と数字x(0または1)が与えられた時,その頂点から出ている矢印のうち,xと同じ重みを持つ矢印に従って別の頂点に移動することをxに従って遷移すると言う。\n今日ゆう君は0と1からなるどのような数列に従って遷移しても最終的に到達する頂点の種類(丸または六角形)が一緒であるような頂点の対が存在することに気がついた。 \nこれについてゆう君は一つの問題を思いついた。 以下の形式でm個の質問が与えられるので、それぞれについて答えを出力せよ。 2つの頂点a,bが以下の2つの条件を満たすとき,aとbは等価である。 例えば,図1の頂点3から数列0,0,1,0に従って遷移を開始すると,\n3→2→1→1→1の順番で遷移し最終的に到達する頂点は1である。 各質問で与えられる頂点の番号qjに対して,それと等価な頂点の数をそれぞれ一行に出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01068.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は全て整数として与えられる\n 1 ≤ n ≤ 3000\n 1 ≤ m ≤ n\n 0 ≤ si,ti,qj ≤ n-1\n 0 ≤ vi ≤ 1\n 与えられるグラフの辺が双方向に移動できるものとしたとき,任意の2点を結ぶような辺の集合が存在する, つまり与えられるグラフは連結である",
          "ranges": "1 3000; 0 1; 3000; 1; 1; 1; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 1\n0 0 1\n0 1 0\n0",
            "output": "2",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01068.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01068"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01069",
        "title": "Sum of Sequences",
        "description": "n個の要素を持つ数列A、m個の要素を持つ数列B、\nそれぞれが整数cからなるq個のクエリが与えられる。\n\n\n\n各クエリについて、\n数列Aの[la,ra]を全て足した数と数列Bの[lb,rb]を全て足した数の差の絶対値がcになるla,ra,lb,rb (0 ≤ la ≤ ra ≤ n−1, 0 ≤ lb ≤ rb ≤ m−1, 配列の番号は0番から始まる) の組み合わせの数を求めよ。 入力は全て整数で与えられる。\n1行目に数列の要素数nとm、クエリ数qが与えられる。\n2行目に数列Aの要素、3行目に数列Bの要素が空白区切りで与えられる。\n4行目からq行に各クエリの値ciが与えられる。 出力はq行からなる。各クエリの組み合わせの数を順番に一行に出力せよ。",
        "difficulty": "Easy",
        "category": "Arrays & Strings",
        "tags": [
          "array"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01069.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n, m ≤ 4×104\n1 ≤ q ≤ 105\n1 ≤ ai, bi ≤ 5\n0 ≤ ci ≤ 2×105",
          "ranges": "1 105; 0 2; 4; 105; 5; 2; 1; 1; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 3 1\n1 2 3\n3 1 2\n3",
            "output": "6",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01069.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01069"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01070",
        "title": "String in String",
        "description": "文字列SとQ個のクエリが与えられる。\ni番目のクエリ(0 ≤ i ≤ Q-1)には閉区間[li,ri]と文字列Miが与えられる。\nSのli文字目からri文字目までの部分文字列の中に文字列Miはいくつ存在するか出力せよ。 入力は以下の形式で与えられる。 1行目に文字列Sとクエリの数Qが空白区切りで与えられる。\n  続くQ行に整数li, ri, Miが空白区切りで与えられる。 出力はQ行からなる。各クエリに対する答えを順番に1行に出力せよ。",
        "difficulty": "Easy",
        "category": "Arrays & Strings",
        "tags": [
          "string"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01070.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤| S | ≤ 100000\n1 ≤ Q ≤ 100000\n1 ≤ | Mi | ≤ 100000 (0 ≤ i ≤ Q-1)\n0 ≤ li ≤ ri < | S | (0 ≤ i ≤ Q-1)\n文字はすべて英小文字である\n文字列Mの合計文字数は2000000を越えない",
          "ranges": "1 100000; 100000; 1; 0; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "rupcrupc 5\n0 3 rupc\n0 7 rupc\n2 7 ru\n2 7 pc\n1 5 u",
            "output": "1\n2\n1\n2\n2",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01070.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01070"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01071",
        "title": "Monochrome Tile",
        "description": "白い正方形のタイルが横方向に W 個、縦方向に H 個、合計 W × H 個敷き詰められている。 太郎君は、 i 日目の朝に、左から axi 番目で上から ayi 番目のタイルを左上、\n  左から bxi 番目で上から byi 番目のタイルを右下にした長方形領域に存在しているタイルがすべて白いかどうかを確認する。\n  もしすべてのタイルが白かった場合、それらのタイルをすべて黒く塗りつぶす。それ以外のときは何もしない。 N 日間のそれぞれの日において、その日の作業が終了した時点で黒く塗りつぶされたタイルが何枚あるかを出力せよ。 入力は以下の形式で与えられる。 1行目に、2つの整数 W と H が空白区切りで与えられる。\n  2行目に、1つの整数 N が与えられる。\n  3行目からの N 行のうち i 行目には i 日目の朝に確認する長方形領域を表す\n  4つの整数 axi ayi bxi byi が空白区切りで与えられる。 N 日間のそれぞれの日において、i 日目の作業が終了した時点で黒く塗りつぶされたタイルの枚数を i 行目にを出力せよ。 □□□□□\n  □□□□□\n  □□□□□\n  □□□□□\n\n  ↓  1 1 3 3\n\n  ■■■□□\n  ■■■□□\n  ■■■□□\n  □□□□□\n\n  ↓  3 2 4 2　（なにもしない）\n\n  ■■■□□\n  ■■■□□\n  ■■■□□\n  □□□□□\n\n  ↓  4 3 5 4\n\n  ■■■□□\n  ■■■□□\n  ■■■■■\n  □□□■■\n\n  ↓  1 4 5 4 （なにもしない）\n\n  ■■■□□\n  ■■■□□\n  ■■■■■\n  □□□■■\n\n  ↓  4 1 4 1\n\n  ■■■■□\n  ■■■□□\n  ■■■■■\n  □□□■■\n\n  よって出力は、 9 → 9 → 13 → 13 → 14 となる。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01071.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ W ≤ 100000\n2 ≤ H ≤ 100000\n2 ≤ N ≤ 100000\n1 ≤ axi ≤ bxi ≤ W (1 ≤ i ≤ N )\n1 ≤ ayi ≤ byi ≤ H (1 ≤ i ≤ N )",
          "ranges": "2 100000; 2 100000; 2 100000; 100000; 100000; 100000; 2; 2; 2; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 4\n5\n1 1 3 3\n3 2 4 2\n4 3 5 4\n1 4 5 4\n4 1 4 1",
            "output": "9\n9\n13\n13\n14 □□□□□\n  □□□□□\n  □□□□□\n  □□□□□\n\n  ↓  1 1 3 3\n\n  ■■■□□\n  ■■■□□\n  ■■■□□\n  □□□□□\n\n  ↓  3 2 4 2　（なにもしない）\n\n  ■■■□□\n  ■■■□□\n  ■■■□□\n  □□□□□\n\n  ↓  4 3 5 4\n\n  ■■■□□\n  ■■■□□\n  ■■■■■\n  □□□■■\n\n  ↓  1 4 5 4 （なにもしない）\n\n  ■■■□□\n  ■■■□□\n  ■■■■■\n  □□□■■\n\n  ↓  4 1 4 1\n\n  ■■■■□\n  ■■■□□\n  ■■■■■\n  □□□■■\n\n  よって出力は、 9 → 9 → 13 → 13 → 14 となる。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01071.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01071"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01072",
        "title": "Problem A: Plants",
        "description": "がっちょ君は横W個×縦H個のマスで区切られた畑を所有している。x列目y行目のマスをマス (x, y) と呼ぶことにする。いくつかのマスの土地には高さ0cmの植物が1本だけ植えてあり、その他のマスの土地には何も植えられていない。 がっちょ君はある時刻に畑に肥料をまく。肥料がまかれたマスに植物が植えられているとき、その植物の高さが1cm伸びる。植物が植えられていないときは、何もおこらない。植物が伸びるのにかかる時間はとても短いので無視できる。がっちょ君は同じ時刻に複数のマスに肥料をまくことができる。ただし、同じ時刻に同じマスに2度以上肥料をまくことはない。 がっちょ君が肥料をまいた記録が与えられたとき、時刻T時点での畑の植物の高さの和を計算せよ。 入力は以下の形式で与えられる。 1行目に畑の横幅W、畑の縦幅H、時刻Tが与えられる。がっちょ君は時刻Tまでに肥料をまきおえる。\n2行目にがっちょ君が肥料をまいた回数pが与えられる。\n3行目から2+p行目までに与えられる３つの整数は、がっちょ君が時刻tiにマス(xi, yi)に肥料をまいたことを表す。\n3+p行目から2+p+H行目までは、最初の畑のそれぞれのマスに植物が植えられているかどうかを表すW×H個の整数が与えられる。sj,kが1のときマス(j, k)に高さ0cmの植物が1本だけ植えられていることを表し、sj,kが0のときマス(j, k)に植物は1本も植えられていないことを表す。 時刻Tでの畑の植物の高さの和を1行に出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01072.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ W, H, T ≤ 50\n0 ≤ p ≤ min(W×H×T, 50)\n0 ≤ xi < W\n0 ≤ yi < H\n0 ≤ ti < T\nsj,k = 0または1",
          "ranges": "50; 0; 1; 0; 0; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 3 3\n5\n2 0 0\n0 1 0\n1 1 1\n1 2 1\n2 2 0\n0 0 0\n0 1 0\n0 0 0",
            "output": "1",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01072.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01072"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01073",
        "title": "Problem B: Potatoes",
        "description": "がっちょ君はN面の畑とM個の芋を所有している。各畑にはそれぞれ1からNまでの番号が付けられている。がっちょ君は畑に芋を植え収穫することで、芋の数を増やしたいと考えている。 がっちょ君は一人暮らしであり、1人ではK面までの畑しか管理することができない。また、各畑の土の状態や面積は様々で、芋の収穫数や植えることのできる芋の数も様々である。芋を畑iに植えた場合、1年後には畑iに植えた芋1つにつきai個の芋を収穫することができる。ただし、畑iには最大でもbi個の芋しか植えることができない。 がっちょ君がK面以内の畑にM個以内の芋を植えた時、1年後に所有することができる芋の数の最大値を求めてほしい。 入力は以下の形式で与えられる。 1行目に3個の整数N, M, Kが空白区切りで与えられる。\n2行目にN個の整数aiが空白区切りで与えられる。\n3行目にN個の整数biが空白区切りで与えられる。 芋の数の最大値を1行で出力せよ。 畑1に40個、畑2に40個、畑3に20個植えることで収穫後に280個の芋を所有することができる。 畑2に40個、畑3に20個、畑5に1個植えることで300個の芋を収穫することができ、植えなかった芋と合わせて答えは339になる。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01073.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 15\n1 ≤ M ≤ 104\n1 ≤ K ≤ min(N,3)\n1 ≤ ai ≤ 103\n1 ≤ bi ≤ 104",
          "ranges": "1 15; 1 104; 1 103; 1 104; 15; 104; 103; 104; 1; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 100 3\n2 3 4 5 6\n50 40 20 10 5",
            "output": "280 畑1に40個、畑2に40個、畑3に20個植えることで収穫後に280個の芋を所有することができる。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01073.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01073"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01074",
        "title": "Problem C: Unhappy Class",
        "description": "山之御船学園の1年G組は、不幸を背負った女子生徒たちが集まるクラスである。  彼女たちは、幸福になることを目標に、日々様々な試練に立ち向かう。 彼女たちのクラスでは、幸福になるための試練の一環として、幸福実技科目を受講することができる。\n  月曜から金曜のそれぞれ1限からN限までに授業科目の枠があり、M個の受講可能な科目がある。 科目iは、曜日di(di = 0, 1, 2, 3, 4がそれぞれ、月曜、火曜、水曜、木曜、金曜に対応する)のai限目から始まり、連続するkiコマで行われ、それを受講したときに得られる幸福度はtiである。 各生徒は、最大L個の科目を互いに重ならないように自由に選ぶことができる。どのように科目を選べば、最も高い幸福度を得られるだろうか。与えられた科目の情報から、得られる幸福度の最大値を求めてほしい。 入力は以下の形式で与えられる。 1行目に3つの整数N, M, Lが空白区切りで与えられる。\n2行目からM+1行目に4つの整数di, ai, ki, tiが空白区切りで与えられる。 幸福度の和の最大値を1行に出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01074.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 8\n0 ≤ M ≤ 300\n0 ≤ L ≤ min(N×5, M)\n0 ≤ di ≤ 4\n1 ≤ ai ≤ N\n1 ≤ ki\nai + ki - 1 ≤ N\n1 ≤ ti ≤ 100",
          "ranges": "2 8; 0 300; 0 4; 1 100; 8; 300; 4; 100; 2; 0; 0; 0; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 7 3\n0 1 1 1\n0 1 1 2\n1 1 3 4\n1 1 1 1\n1 2 1 2\n2 1 1 3\n2 2 2 1",
            "output": "9",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01074.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01074"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01075",
        "title": "Problem D: One-Time Path",
        "description": "N個の島とM本の橋がある。\nN個の島にはそれぞれ1からNまでの番号が割り振られている。\nM本の橋にもそれぞれ1からMまでの番号が割り振られている。 がっちょ君は現在(時刻0の時点で)、1番目の島にいる。\nがっちょ君はi番目の橋を利用することにより、ai番目の島からbi番目の島へと単方向に移動することができる。 しかし、時刻0の時点では、すべての橋は潮が満ちていて海の中に沈んでしまっている。\ni番目の橋は、時刻ciになると潮が引いて渡れるようになる。\nそして、時刻ciを過ぎると、すぐにまた潮が満ちてi番目の橋は再び沈んでしまう。\n再び沈んでしまうと、またいつ潮が引いて渡れるようになるかはわからない。\nそこで、がっちょ君はそうなった橋は永遠に渡れなくなると考えるようにした。 がっちょ君は、できるだけ長い間、1からN-1番目の島の景色を眺めていたいのだが、N番目の島に船を泊めてあるので、最終的にはN番目の島に到着していなければならない。また、船の中で両親を待たせているため、がっちょ君はN番目の島についたらすぐに船で出発して家へと帰らなければならない。 がっちょ君が橋を渡ったり島の中を移動する時間はとても短いので、0と仮定してよい。がっちょ君が1からN-1番目のいずれかの島にいることのできる時間の最大値を求めよ。ただし、どのように移動してもがっちょ君がN番目の島へと移動できない場合は代わりに-1を出力せよ。 入力は以下の形式で与えられる。 1行目には、2つの整数N, Mが空白区切りで与えられる。\n2行目からM+1行目のそれぞれの行iには、3つの整数ai, bi, ciが空白区切りで与えられる。 がっちょ君がN番目の島へと移動できる場合は、がっちょ君が1からN-1番目のいずれかの島にいることのできる時間の最大値を出力する。N番目の島へと移動できない場合は、代わりに-1を出力する。 まず、1番目の島で時刻が10になるまで待ってから、2番目の島へと移動する。\n次に、2番目の島で時刻が20になるまで待ってから、3番目の島へと移動する。\n以上より、1から2番目のいずれかの島にいる時間は20となる。 4番目の島に繋がる橋がないため、4番目の島へ移動することができない。",
        "difficulty": "Easy",
        "category": "Trees & Graphs",
        "tags": [
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01075.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 105\n1 ≤ M ≤ 2 × 105\n1 ≤ ai < N\n1 ≤ bi ≤ N\n1 ≤ ci ≤ 109\nai ≠ bi",
          "ranges": "2 105; 1 2; 1 109; 105; 2; 109; 2; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 2\n1 2 10\n2 3 20",
            "output": "20 まず、1番目の島で時刻が10になるまで待ってから、2番目の島へと移動する。\n次に、2番目の島で時刻が20になるまで待ってから、3番目の島へと移動する。\n以上より、1から2番目のいずれかの島にいる時間は20となる。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01075.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01075"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01076",
        "title": "Problem E: Graph Making",
        "description": "どの頂点とも連結でないn個の頂点がある。\n各頂点間に無向辺を張っていく。\n直径がdになるようにしたとき、最大何本の辺を張ることができるか求めよ。\n\n直径とは、2つの頂点間の最短距離のうち最大のものを表す。\nここで、最短距離は頂点間を移動するために必要な辺の数の最小値である。\n多重辺、自己ループは認めない。 1行に2つの整数nとdが空白区切りで与えられる。 張ることができる最大の辺の数を1行に出力せよ。",
        "difficulty": "Medium",
        "category": "Trees & Graphs",
        "tags": [
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01076.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ n ≤ 109\n1 ≤ d ≤ n−1",
          "ranges": "2 109; 109; 2; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 3",
            "output": "3",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01076.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01076"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01077",
        "title": "Problem F: Curling Puzzle",
        "description": "カーリングのストーンを移動させて、ゴールのマスにストーンをぴったり重ねるパズルゲームがある。詳しいルールは次のとおりである。 フィールドはH×Wのマスからなり、はじめにいくつかのマスにストーンが置かれている。\nゴールのマスは1つだけ存在して、はじめからゴールのマスにストーンが置かれていることはない。\nまた、フィールドは外壁で囲まれており、途中でストーンがフィールドの外へ飛び出してしまうことはない。 プレイヤーは1手ごとにストーンを1つ選び、上下左右のいずれかの方向に打ち出して滑らせることができる。\n滑っているストーンは別のストーンかフィールドの外壁にぶつかるまで滑り続ける。別のストーンにぶつかった場合は、\nぶつけられた側のストーンが反動を受け、最初に打ち出した方向と同じ方向へ連鎖的に滑り出してしまう。 例えば、図1の状態でストーンAを右方向に打ち出した場合、最終的に図2のような状態になる。 図1 図1 図2 図2 このパズルのクリア条件は、フィールドに存在するストーンのいずれか1つをゴールのマスにぴったり重ねることである。ゴールのマスを通り過ぎた場合にはクリアにならない。 あなたの仕事はフィールドの初期状態を入力として受け取り、そのパズルがクリア可能かどうかを出力するプログラムを作成することである。 入力は以下の形式で与えられる。 Fijは '.' か 'o' か '@' のいずれかであり、それぞれ以下の意味を持つ。\n  ( 1 ≤ i  ≤ H  ,  1 ≤ j  ≤ W  ) パズルがクリア可能かどうか \"yes\" または \"no\" (\"\"は含まない)を1行に出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01077.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ H ≤ 16\n1 ≤ W ≤ 16\n2 ≤ H × W ≤ 256\nゴールのマスが1つだけ存在することが保証されている\nカーリングのストーンが置かれているマスが1つ以上存在することが保障されている",
          "ranges": "1 16; 1 16; 16; 16; 256; 1; 1; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1 10\no........@",
            "output": "yes",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01077.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01077"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01078",
        "title": "Problem G: Star",
        "description": "半径1の円に内接する正N/K角形の面積を求めよ。 ただし、正N/K角形を\n「円周上に等間隔にN個の点を取り、\n    K-1個おきにそれぞれの点を結んだ一番外側の図形」\nと定義する。 例えば、5/2角形は次のように描くことができる。\nまず、半径1の円周上に等間隔に5つの点を取る。 次に、それぞれの点を2-1=1つおきに結ぶ。 一番外側の図形が正5/2角形になる。 入力は以下の形式で与えられる。 2つの整数 N, K が1行に与えられる。 入力は以下の制約を満たす。 半径1の円に内接する正N/K角形の面積を1行に出力せよ。10-5以下の誤差が許容される。 正5/2角形は上記の図形である。 正20/3角形は下のような図形である。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01078.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の制約を満たす。 5 ≤ N ≤ 106\n1 < K < N/2 \n N,Kは互いに素である整数",
          "ranges": "5 106; 106; 5; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 2",
            "output": "1.12256994 正5/2角形は上記の図形である。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01078.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01078"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01079",
        "title": "Problem H: Hogemon Get",
        "description": "がっちょ君は人気のゲームHogemon Getに熱中している。がっちょ君が住んでいる会津国はそれぞれ1からNの番号がついているN個の町からなる。また、会津国にはM本の道があり、すべての道は異なる2つの町を結んでいる。がっちょ君は道を双方向に移動することができるが、道以外を通って、ある町から別の町に行くことはできない。 Hogemon Getでは、町iでボールをdi個入手することができる。ただし、ある町で再びボールを入手するためには、最後にその町でボールを入手してから15分以上経過している必要がある。なお、がっちょ君は町1、町Nを含むすべての町を何度でも訪れることができる。 がっちょ君は最初、町1にいて、町NにR分以内で移動しなければならない。つまり、R分後に町Nにいる必要がある。がっちょ君は移動の際に、最大でいくつのボールを入手することができるだろうか。 入力は以下の形式で与えられる。 入力はすべて整数である。\n1行目に町の個数N,道の本数M,制限時間Rが空白区切りで与えられる。\n2行目に町i(i=1,2,...,N)に訪れることで入手することができるボールの個数diが空白区切りで与えられる。\n3行目からM+2行目に道j(j=1,2,...,M)の情報aj,bj,cjが空白区切りで与えられる。j番目の道は町ajと町bjの間をcj分で移動できることを表す。 町1から町NへR分以内に移動するまでに入手することができる最大のボールの個数を1行で出力せよ。 ※経過時間20分の町3では最後に町3でボールを入手してから15分経過していないのでボールを入手することができない。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01079.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3 ≤ N ≤ 30\nN-1 ≤ M ≤ min(N×(N-1)/2, 300)\n    10 ≤ R ≤ 1000\n0 ≤ di ≤ 10\nd1 = dN = 0\n1 ≤ aj < bj ≤ N\n5 ≤ cj ≤ 100\n町1から町NへはR分以内で移動できることが保証されている\nある2つの町の組に対して2本以上の道があることはない",
          "ranges": "3 30; 10 1000; 0 10; 1 0; 5 100; 30; 1000; 10; 0; 100; 3; 1; 10; 0; 1; 1; 5"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 4 40\n0 1 1 1 0\n1 2 5\n2 3 5\n3 4 5\n4 5 5",
            "output": "6 経過時間(分)町の番号ボールの数(個)\n010\n 521\n 1032\n 1543\n 2033\n 2524\n 3035\n 3546\n 4056 ※経過時間20分の町3では最後に町3でボールを入手してから15分経過していないのでボールを入手することができない。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01079.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01079"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01080",
        "title": "Problem I: Traffic Tree",
        "description": "それぞれ1からNまでの番号が付いたN個の頂点が、N-1本の無向辺によって繋がれたグラフが与えられる。各頂点について、その頂点からスタートしてすべての頂点を訪れるための最短のステップ数を出力せよ。 ただし、ある頂点から1本の辺をたどって別の頂点に移動することを1ステップとする。 入力は以下の形式で与えられる。 1行目に、1つの整数Nが与えられる。\n  続くN-1行のうちi行目にはi番目の辺の両端の頂点番号を表す整数ui, viが空白区切りで与えられる。 頂点1から頂点Nについてi行目に頂点iからスタートしてすべての頂点を訪れるための最短のステップ数を出力せよ。",
        "difficulty": "Medium",
        "category": "Trees & Graphs",
        "tags": [
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01080.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 105\n1 ≤ ui,vi ≤ N (1 ≤ i ≤ N-1)\nui ≠ vi\n与えられるグラフは連結である",
          "ranges": "2 105; 105; 2; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\n1 2",
            "output": "1\n1",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01080.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01080"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01082",
        "title": "Problem K: Escape of Lappin the Phantom Thief",
        "description": "怪盗ラッパンは宝石を盗みにやってきた。簡単に宝石を手にすることができたが、宝石にはセンサーが仕込まれており、警備ロボットに囲まれてしまった。 警備ロボットは宝石に向かって移動するように仕組まれている。センサーは簡単に外せそうになかったので、宝石を置いて逃走することにした。宝石をできるだけ警備ロボットから遠くに置いて、逃げるための時間稼ぎをすることにした。 敷地はn × mのマスからなる長方形の形をしていて、障害物はない。\nk体の警備ロボットは、それぞれマス(xi, yi)(0 ≤ xi ≤ n−1, 0 ≤ yi ≤ m−1)に配置されており、上下左右のマスに単位時間で移動できる。\n警備ロボットは宝石があるマスに最短経路で移動する。 敷地内に自由に宝石を置けるとき、1台以上の警備ロボットが宝石のあるマスに到達するまでにかかる移動時間の最大値を求めよ。 入力はすべて整数で与えられる。\n1行目にn, m, kが空白区切りで与えられる。\n2行目以降k行に警備ロボットのいるマスの座標(xi, yi)が空白区切りで与えられる。 警備ロボットが到達するまでに、最も時間がかかる場所への移動時間を1行に出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01082.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n, m ≤ 5 × 104\n1 ≤ k ≤ min(105, n × m)\n0 ≤ xi ≤ n−1\n0 ≤ yi ≤ m−1\n与えられる座標はすべて異なる",
          "ranges": "5; 1; 1; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "20 10 1\n0 0",
            "output": "28",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01082.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01082"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01083",
        "title": "Problem L: RedBlue",
        "description": "天空都市AIZUのUZIA高校では、競技プログラミングの部活動がとても盛んである。\nこの部活には、n人のRed Coderとn人のBlue Coderが所属している。 ある日の部活の時間に、Red CoderとBlue Coderでペアを組み、この部活からn組、KCPというコンテストに参加することとなった。この高校では、ペアを組む学生同士は握手するという習わしがあるので、部員たちは今すぐ自分のパートナーを見つけることにした。 部員たちは全速力で走るため、まっすぐにしか進めない。また、部員たちは、それぞれの部員が移動する距離の総和をできるだけ小さくしたいと思っている。 なお、部室には2つの円形のテーブルが置いてある。 二次元平面上に2つの円、n個の赤色の点、n個の青色の点がある。\n2つの円の中心座標はそれぞれ(x1, y1), (x2, y2)であり、半径はそれぞれr1, r2である。\n赤い点iは、座標(rxi, ryi)にあり、青い点jは、座標(bxj, byj)にある。 あなたは、以下の操作をn回繰り返す必要がある。\nまだ選ばれていない点の中から、赤色の点と青色の点を１つずつ選んで、2点の共通の目的地を設定し、その目的地に向かって2点をそれぞれまっすぐ移動させる。\n目的地は二次元平面上であれば、どこに設定しても構わない。ただし、選んだ2点は移動の際に円の内部を通過することはできないので、そのような移動が発生する目的地を設定することはできない。 n回の操作をしたときの移動距離の総和を最小化せよ。\nn回の操作を行えない場合は、代わりに\"Impossible\" (\"\"は除く) と出力せよ。 入力は以下の形式で与えられる。 入力は全て整数で与えられる。\n1行目にnが与えられる。\n2行目にx1, y1, r1が空白区切りで与えられる。\n3行目にx2, y2, r2が空白区切りで与えられる。\n4から3+n行に赤い点の座標(rxi, ryi)が空白区切りで与えられる。\n4+nから3+2×n行に青い点の座標(bxj, byj)が空白区切りで与えられる。 入力は以下の条件を満たす。 n回の操作をしたときの移動距離の総和の最小値を1行に出力せよ。なお、出力はジャッジ解の出力との絶対誤差が10-2以内であれば許容される。\nn回の操作を行えない場合は、代わりに\"Impossible\" (\"\"は除く) と出力せよ。 点同士をつなぐことはできません。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01083.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 1 ≤ n ≤ 100\n-1000 ≤ xi, yi ≤ 1000\n1 ≤ ri ≤ 50\n-1000 ≤ rxi, ryi, bxi, byi ≤ 1000\n同じ座標に複数の点が存在していることはない\n任意の円の半径を絶対値10-9以内で変化させても、高々絶対値10-3しか変化しない\n任意の円の半径を絶対値10-9以内で変化させても、\"Impossible\"なケースは\"Impossible\"のままである\n解は10000を超えない\nどの点も、円から10-3以上離れていて、点が円周上に存在したり、点が円に内包されることはない\n2つの円は共通面積を持たず、10-3以上離れていることが保証される",
          "ranges": "1 100; 1 50; 100; 1000; 50; 1000; 1; 1000; 1; 1000"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\n3 3 2\n8 3 2\n0 3\n3 7\n8 0\n8 7",
            "output": "13.8190642862",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01083.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01083"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01084",
        "title": "Problem M: Dial",
        "description": "ダイヤル式の南京錠がある。この南京錠には、5つのダイヤルと、決定ボタンが用意されている。 5つあるダイヤルを回転させて16進数で5ケタの整数を作り、決定ボタンを押して入力すると、入力した値とパスワードが一致していれば開く仕組みになっている。5つのダイヤルそれぞれには\n 0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f,0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f,0,1,2, ...\nの順で文字が現れるように書かれている。 持ち主はパスワードを忘れてしまった。しかし、パスワードの5ケタのうち、1つのケタだけが偶数で残り4つは奇数であったことは覚えている。\nただし、偶数とは0,2,4,6,8,a,c,eであり、奇数とは1,3,5,7,9,b,d,fである。 またこの鍵は不良品で、以下の条件でパスワードと異なる数字を入力しても開いてしまうことが分かっている。本来、入力した整数とパスワードが5つのケタすべてについて一致していなければ鍵は開かない。しかし、パスワードの偶数となっているケタがiケタ目だった場合、iケタ目の一致判定を行うとき、その偶数の前後にある奇数が入力されていた場合でもiケタ目は一致していると誤判定されてしまうのだ。 例えば、パスワードが\"57677\"の南京錠ならば、'6'の前後には'5'と'7'の奇数があるため\"57677\"のほかに、\"57577\"や\"57777\"を入力したときでも開いてしまう。\n同様に、パスワードが\"130bd\"の南京錠ならば、'0'の前後には'1'と'f'の奇数があるため\"130bd\"のほかに、\"13fbd\"や\"131bd\"を入力したときでも開いてしまう。 今、パスワードの候補がN個あり、それらのうちどれか1つが正解のパスワードであることが分かっている。しかたがないので持ち主は、鍵が開くまで何度も整数を入力して試し続けることにした。持ち主はできるだけ決定ボタンを押す回数を少なくしたい。 持ち主が最適な戦略をとったとき、最大で何回決定ボタンを押さなければならないだろうか? \nその回数を出力せよ。\nまた、実際に最大となるときに入力する整数の集合を昇順に出力せよ。\n答えが一意に定まらない場合は、辞書順で最小となるものを出力せよ。 入力は以下の形式で与えられる。 1行目にNが与えられる。\n2行目からN+1行目のi行目には、パスワードの候補を表す5ケタの16進数を表す文字列passwordiが与えられる。 鍵が開くまでに最適な戦略をとったときの決定ボタンを押す回数の最大値を1行に出力せよ。\n  続いて、最大となるときに入力する整数の集合を昇順に出力せよ。\n  もし、答えが一意に定まらない場合は、辞書順で最小となるものを出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01084.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 6000\npasswordi ≠ passwordj ( i < j )\n文字列は、0から9の数字または英小文字aからfの5文字で構成され、そのうち1文字は偶数であり、他の4文字は奇数である",
          "ranges": "1 6000; 6000; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1\n0111f",
            "output": "1\n0111f",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01084.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01084"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01389",
        "title": "問題 B 蝉",
        "description": "N 君は毎日学校に通っているが，その道のりはとても長い．さらに今は暑い夏である．道中，蝉が五月蝿い．出来れば避けたいものである．ところで情報化が発達した現代社会においては，家に居ながらにしてどこに何匹の蝉がいるか調べることが出来る．その情報を使い，途中で出会う蝉の数が最も少ない道で学校に行くことに決めた． 家と学校が描かれた地図は長方形状になっており，H × W 個のブロックに分割される．一番左上のブロックに N 君の家があり，一番右下に学校がある．彼は学校へまっすぐ登校したいので家の方に逆戻りすることはない (地図において，右か下のブロックにしか移動しない)．各ブロックにおいて，そこにいる蝉の数だけ不快になる．どのような道を選べば，不快な度合いを最小化，つまり出会う蝉の数を最小に出来るだろうか． 最初の行には二つの数字 H，W がこの順で与えられる．H は地図の縦方向のブロック数を示し，W は横方向のブロック数を示す．\n\n次の H 行に蝉の情報が書かれた地図が与えられる．各行は W 文字からなり，各文字は対応するブロック中の蝉の数を示す．ブロック中の蝉の数は 9 を超えることはない． 出会う蝉の数の最小値を 1 行で与えよ． N 君は右か下のブロックにしか移動しないことに注意せよ．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01389.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ H ≤ 50 \n 2 ≤ W ≤ 50 \nN 君の家と学校には蝉はいない．\nブロック中の蝉の数は 0 以上 9 以下である．",
          "ranges": "2 50; 2 50; 50; 50; 2; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 3\n023\n321\n120",
            "output": "出会う蝉の数の最小値を 1 行で与えよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01389.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01389"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01391",
        "title": "問題 D 列の構成",
        "description": "1 から N までの相異なる整数が N / 2 個書かれたカードがいくつか与えられるので，次の条件を満たすような長さ N の数列 seq を 1 つ作って出力して欲しい． 例えば，N = 8 でカードが 2 枚渡され，カードに書かれている数字がそれぞれ [1, 2, 7, 8]，[4, 5, 7, 8] であったとする．このとき seq=[0, 1, 0, 1, 0, 1, 0, 1] や seq=[0, 0, 0, 0, 1, 1, 1, 1] とおくと条件を満たすようにできている． 1 行目において N は構成するべき数列の長さ，K はカードの枚数である．\n続く K 行には各カードの情報が与えられる．cardi[1], ..., cardi[N/2] が i 番目のカードに書かれている数字である． seq の i 番目の要素が i 文字目に対応するように数列 seq を 1 行に出力せよ． なお，どの入力に対しても解は必ず少なくとも 1 つは存在する．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01391.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "8 ≤ N ≤ 1,000, 1≤ K ≤ N / 2\nN は 8 の倍数\n1 ≤ cardi[1] < cardi[2] < ... < cardi[N/2] ≤ N",
          "ranges": "8 1; 1; 8; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "8 2\n1 2 7 8\n4 5 7 8",
            "output": "seq の i 番目の要素が i 文字目に対応するように数列 seq を 1 行に出力せよ． なお，どの入力に対しても解は必ず少なくとも 1 つは存在する．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01391.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01391"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01392",
        "title": "問題 E Fox Number",
        "description": "きつねのしえるは数字について考えるのが好きである．ある日，しえるはこの世にねこの数字というものがあることを知り，自分もそのような数字が欲しくなってしまった．そこで，次の性質を満たす数字をとりあえず Fox Number と呼ぶことにした． [性質]: 整数 N は k (≥ 1) 個の素数 p1, ..., pk と正整数 e1, ..., ek で，p1 < ... < pk，e1 ≥ ... ≥ ek を満たすものによって N = p1e1 × ... ×  pkek と書けるとき，Fox Number であると呼ぶことにする． ところでしえるはこの性質をその場の思いつきで決めてしまったのでこれがどういう性質を持っているのか全くわかっていない．そこで，この数字の性質を調べるために区間 [A-B, A+B] に含まれる Fox Number の個数を出力して欲しい． 1 行目に以下の 2 つの整数が与えられる． 1 行目に，A-B 以上 A+B 以下の Fox Number の個数を出力せよ． 16 = 24, 17 = 171, 19 = 191, 20 = 22 × 51 は Fox Number である．一方で 18 = 2 × 32 は Fox Number ではない．合計して 4 つの Fox Number がある．",
        "difficulty": "Easy",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01392.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ A ≤ 1012\n0 ≤ B ≤ 5 × 105",
          "ranges": "1 1012; 0 5; 1012; 5; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "18 2",
            "output": "1 行目に，A-B 以上 A+B 以下の Fox Number の個数を出力せよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01392.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01392"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01393",
        "title": "問題 F ボ〜ル",
        "description": "2 次元平面上の原点にボールがあり，x 軸の正方向との角度が反時計回りに見て 0 度  180 度までの間の方向に一様な確率で発射されようとしている (発射される方向は整数角であるとは限らない)．ボールの大きさは十分小さく，平面上では点であると見なすことにする．この問題における目的は，このボールをできるだけ高い確率で捕獲することである． 平面上に N 個の場所 (xi, yi) が与えられる．ボールを捕獲するために，あなたは N 個の場所から K 個の場所を選んで，それぞれの場所に人を配置することができる．人は i 番目の与えられた場所に対して半径 ri 以内の距離まで動いてボールを取ることが出来る． 人の配置をうまく選んでボールを捕獲できる確率を最大にするとき，その確率を出力せよ． 入力は以下の形式で与えられる．\nN K\nx1 y1 r1\n...\nxN yN rN\n\nN はボールを捕獲するために人を置くための場所の数であり，K はその中から使うことの出来る場所の数である．\n(xi, yi) は i 番目の場所の座標であり，ri はそこから動くことの出来る距離である． 確率を小数表記で 1 行に出力せよ．小数点以下何桁でも出力して構わないが，相対誤差あるいは絶対誤差が 10-6 未満になっていなければならない． 2 つ場所があり，そのうちのどちらかに人を配置できる．この場合，どちらに配置しても確率は 1/2 になる．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01393.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤ N≤ 1,500, 1≤ K≤ N\n|xi| ≤ 1,000, |yi| ≤ 1,000, 1 ≤ ri < (xi2 + yi2)1/2\n入力値はすべて整数である．",
          "ranges": "1 1; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 1\n10 10 10\n-10 10 10",
            "output": "確率を小数表記で 1 行に出力せよ．小数点以下何桁でも出力して構わないが，相対誤差あるいは絶対誤差が 10-6 未満になっていなければならない．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01393.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01393"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01394",
        "title": "問題 G XOR 回路",
        "description": "計算機科学実験及演習 3 は CAD を用いて CPU を設計する授業である．CPU は多くの回路を組み合わせなければ動かず，その中の 1 つに n ビット入力の XOR 回路がある．ここで XOR 回路とは，入力ビット列 x1x2...xn に対して，x1 + x2 + ... + xn\\ (mod 2) を出力する回路のことを言う．しかし完璧に動作する XOR 回路を設計するのは時間がかかるので，とりあえず n ビットのうち k ビットだけ使う XOR 回路 A を作ることにした．つまり，ある i1, ... , ik が存在し，回路 A は xi1 + xi2 + ... + xik\\ (mod 2)を出力する． 暫く後に今度は k ビット入力の XOR 回路が欲しくなった．何だ簡単ではないか．先ほどの回路 A を使えばよい．ただ残念なことに，回路 A がどの k ビットを使っていたのか忘れてしまった上に，回路 A の設計図も間違って削除してしまった．しかしコンパイル済みの回路 A は残っている．なので，入力 x1x2...xn を入れて回路 A を実行することで，その出力 xi1 + xi2 + ... + xik\\ (mod 2) を見ることは出来る．\n出来るだけ作業の時間を短くしたいので，回路 A の実行回数には上限を設定することにしよう．どうすれば回路Aが依存しているビット i1, ... ,  ik を見つけられるだろうか？ 最初に n と k がスペース区切りで与えられる．以降，プログラムは回路 A に入力を与え，その出力を読むことが出来る．例えば C/C++ で回路 A にビット列 x1x2...xn を与えるには\n\nprintf(\"?x1x2...xn\\n\"); fflush(stdout);\nとする．ここで各 xi の間にスペースをいれてはならない．\n次に，\nscanf(\"%d\", &v);\n\nとすると v に対応する出力 xi1 + xi2 + ... + xik\\ (mod 2) が入る．\n最終的に回路 A が依存するビット i1,...,ik を出力するには\n\nprintf(\"!i1 i2 ...ik\\n\"); fflush(stdout);\nとする．ここで各 ij の間はスペースを丁度 1 つずついれる． 以下の例はプログラムの入出力の例である．左の列はプログラムの出力，右の列はプログラムへの入力を時系列順に示している．最初に n k が入力として与えられる．ここでは n = 2, k = 1 である．次に回路 A に 00 という入力をいれると，回路 A は 0 を返した．次に回路 A に 01 という入力をいれると，回路 A は再び 0 を返した．このことから回路 A は 1 ビット目のみ利用していることが分かり，プログラムは 1 を解答として出力した． プログラムの出力プログラムへの入力\n2 1\n?00\n0\n?01\n0\n!1 以下の例では，n = 2, k = 2 であり，直ちに回路 A が 1 ビット目と 2 ビット目の両方を利用していることが分かる．よってプログラムは 1 と 2 を解答として出力した． プログラムの出力プログラムへの入力\n2 2\n!1 2",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01394.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 10,000\n1 ≤ k ≤ min(10, n)\n各データセットごとに，回路 A の実行回数の上限は 200 回であり，それを超えると誤答 (Query Limit Exceeded) と判定される．",
          "ranges": "1 10; 10; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "以下の例はプログラムの入出力の例である．左の列はプログラムの出力，右の列はプログラムへの入力を時系列順に示している．最初に n k が入力として与えられる．ここでは n = 2, k = 1 である．次に回路 A に 00 という入力をいれると，回路 A は 0 を返した．次に回路 A に 01 という入力をいれると，回路 A は再び 0 を返した．このことから回路 A は 1 ビット目のみ利用していることが分かり，プログラムは 1 を解答として出力した． プログラムの出力プログラムへの入力\n2 1\n?00\n0\n?01\n0\n!1",
            "output": "最初に n と k がスペース区切りで与えられる．以降，プログラムは回路 A に入力を与え，その出力を読むことが出来る．例えば C/C++ で回路 A にビット列 x1x2...xn を与えるには\n\nprintf(\"?x1x2...xn\\n\"); fflush(stdout);\nとする．ここで各 xi の間にスペースをいれてはならない．\n次に，\nscanf(\"%d\", &v);\n\nとすると v に対応する出力 xi1 + xi2 + ... + xik\\ (mod 2) が入る．\n最終的に回路 A が依存するビット i1,...,ik を出力するには\n\nprintf(\"!i1 i2 ...ik\\n\"); fflush(stdout);\nとする．ここで各 ij の間はスペースを丁度 1 つずついれる．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01394.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01394"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01395",
        "title": "問題 H あばれうなぎ",
        "description": "きつねのしえるはうなぎを食べるのが好きである． 2T+1 枚の鉄板が連続して並んでおり，順番に -T, -T+1, ..., T の番号が付いている．しえるはこれらの鉄板に熱を加え，生きたうなぎを焼こうとしている．うなぎを焼く手順は以下のようなものである． ところで生きたうなぎというのはとても活きがよくさらに頭も良いので，もしかすると自分にかかる熱さの総和が最小になるように動いたりするんではないかとしえるは不安になった．そうなると鉄板に適当に熱を加えただけではうなぎを十分に加熱できない恐れさえある． そこであなたには，うなぎが常に最適に動くとして，うなぎに与えることのできる熱さの和の最大値を求めて欲しい． 入力は以下の形式で与えられる． 1 行目にうなぎに与えられる熱さの和の最大値を出力せよ．小数点以下何桁でも出力して構わないが，相対誤差あるいは絶対誤差が 10-6 未満になっていなければならない． この場合は 0 番の鉄板にエネルギーを全て加えるのが最適である．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01395.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ T ≤ 105\n1 ≤ E ≤ 105\n1 ≤ C(i) ≤ 105\n入力に含まれる値はすべて整数である．",
          "ranges": "1 105; 1 105; 105; 105; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1 100\n1 1 1",
            "output": "1 行目にうなぎに与えられる熱さの和の最大値を出力せよ．小数点以下何桁でも出力して構わないが，相対誤差あるいは絶対誤差が 10-6 未満になっていなければならない．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01395.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01395"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01396",
        "title": "問題 I 山",
        "description": "L 氏はある都市の市長である．L 氏の市長としての手腕はすさまじく時を止め一瞬にして都市中に鉄道網を引いたり，財政の赤字を一夜にして莫大な黒字にしたり，はては巨大な怪獣をどこからともなく呼んでパフォーマンスに使うこともした． そんな L 氏は土地の隣り合った行または列同士を何度も入れ替えることででこぼこな土地を山形にするという遊びを最近発明した．土地は H×W 個のブロックに区切られており，ブロック (y,x) では海面からの高さが hy,x であると測定されている．入れ替え後のブロック (y,x) の高さを h'y,x と書くことにする．この土地が山形であるとは，以下の図のように，あるブロック (y^*,x^*) があって，そこを山頂として山頂から離れるに従って高さが単調減少しているものをいう．\n\n\n\nh'y^*-1, x^*-2<h'y^*-1, x^*-1<h'y^*-1, x^*>h'y^*-1, x^*+1>h'y^*-1, x^*+2\n∧∧∧∧∧\nh'y^*, x^*-2<h'y^*, x^*-1<h'y^*, x^*>h'y^*, x^*+1>h'y^*, x^*+2\n∨∨∨∨∨\nh'y^*+1, x^*-2<h'y^*+1, x^*-1<h'y^*+1, x^*>h'y^*+1, x^*+1>h'y^*+1, x^*+2\n\n\nところで，L 氏はいくらがんばっても山形にできないような土地が存在する気がした．そこで，前もってコンピュータにその土地が山形にできるかどうかをチェックさせることにした． h'y^*-1, x^*-2<h'y^*-1, x^*-1<h'y^*-1, x^*>h'y^*-1, x^*+1>h'y^*-1, x^*+2\n∧∧∧∧∧\nh'y^*, x^*-2<h'y^*, x^*-1<h'y^*, x^*>h'y^*, x^*+1>h'y^*, x^*+2\n∨∨∨∨∨\nh'y^*+1, x^*-2<h'y^*+1, x^*-1<h'y^*+1, x^*>h'y^*+1, x^*+1>h'y^*+1, x^*+2 最初の行に H と W がスペース区切りで与えられる． 次の H 行に土地の高さが与えられる．\n各行は W 個の数値からなり，それぞれ対応する場所の高さを表す． 土地を山形にできるなら \"YES\"，できないなら \"NO\" を出力せよ． 以下の例では 2 番目の列と 3 番目の列を入れ替えることにより土地を山形にすることができる．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01396.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ H,W ≤ 1,000\n0 ≤ hy,x ≤ 108\n全ての hy,x は相異なる．",
          "ranges": "1; 108; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 3\n1 3 2\n7 9 8\n4 6 5",
            "output": "土地を山形にできるなら \"YES\"，できないなら \"NO\" を出力せよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01396.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01396"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01397",
        "title": "問題 J Mod 3 Knights Out",
        "description": "ある日の夕方，コンテストの問題を解き終えた二人は今日の問題について話し合っていた．\nA「くそー，あのライツアウトの問題，mod 2 じゃなくて mod 3 とか mod 7 とかだったら解法分かったのにー！」\n\nB「じゃあ，mod 3 で別の方法で解く問題を作ればいいんですね．分かりました！」\nこうして次のような問題が誕生した． H × W のチェス盤がある．チェス盤の各マスには 0 から 2 の整数が書かれている．このチェス盤にナイトを置いていく．ただし，各マスには多くても 1 体のナイトしか置けない．各マスについて，(マスの数値+そこを攻撃するマスにいるナイトの数)=0 mod 3が成り立つようなナイトの配置を良い配置と呼ぶ．攻撃するマスとはそのマスから縦方向に ±2 マスかつ横方向に ±1 マス，もしくは縦方向に ±1 マスかつ横方向に ±2 マスずれたマスのことである． 良いナイトの配置の数を求めよ．答えは大きくなる可能性があるので 1,000,000,007 で割った余りを答えよ． 最初の行に H と W がスペース区切りで与えられる． 次の H 行には、チェス盤のマス目に書かれている数値として W 個の 0，1，2 のいずれかの整数がスペース区切りで与えられる． 良いナイトの配置の数を 1,000,000,007 で割った余りを出力せよ．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01397.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ H ≤ 50\n1 ≤ W ≤ 16",
          "ranges": "1 50; 1 16; 50; 16; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 5\n0 2 0 2 0\n2 0 0 0 2\n0 0 0 0 0\n2 0 0 0 2\n0 2 0 2 0",
            "output": "良いナイトの配置の数を 1,000,000,007 で割った余りを出力せよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01397.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01397"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01427",
        "title": "問題 A",
        "description": "ただ驚くべきことに，この庭で育てられているバラはブロックを越えて絡み合い 1 つの生命体となっている．この生命体は辺を共有しているブロック間を越えて絡み合うことができ，どこかある 1 点を共有していれば同じ生命体となる．\n\n巴マミは庭の左下の角から直線に必殺技「ティロ・フィナーレ」で巨大な銃を撃ち，その弾丸が通る直線上でその生命体を分割した時，生命体が出来る限り多くの分割数に分断されるようにすることによりダメージを与えたい．ティロ・フィナーレは最大でこの生物を何分割できるか求めよ．\n\n入力形式\n入力は以下の形式で与えられる．\n\nH\\ W\\\\\nf_{11} f_{12} ... f_{1W}\\\\\nf_{21} f_{22} ... f_{2W}\\\\\n...\\\\\nf_{H1} f_{H2} ... f_{HW}\\\\\n\n\nH は庭の高さ，W は庭の幅を表す．\n\nf_{ij} は庭の各ブロックを表す文字であり，上から i 行目，左から j 列目のブロックの状態を表す．ブロックにバラが育てられている場合は f_{ij} は '#' となり，そうでない場合は '.' となる．\n\n出力形式\n生命体を直線で分割する時に，最大でいくつの部分に分割できるかを1行で出力せよ．\n\n制約\n\n1 ≤ H ≤ 600\n1 ≤ W ≤ 600\nf_{ij}は '#', '.'のいずれかである．\n少なくとも 1 つはf_{ij} = '#' となるマス f_{ij} が存在する．\n2 つのブロックが辺を共有するとき，それらは隣接していると呼ぶことにする．任意の 2 つの異なる '#' のブロック f_A, f_B に対して，f_A から隣接している '#' のブロックを辿っていって f_B に着くことができる．(すなわち，薔薇のブロックは連結である．)\n入力中で 1 行目の行，H 行目の行，1 列目の列，または W 列目の列にあるブロックを盤面の端のブロックと呼ぶことにする．任意の '.' のブロック f_C に対して，f_C から隣接している '.' のブロックを辿っていって，ある '.' の盤面の端のブロックに着くことができる．(すなわち，入力に\"空洞\"のブロックは存在しない．)\n\n入出力例\n入力例 1\n\n3 5\n##..#\n#..##\n####.\n\n出力例1\n4\n\nこのとき以下のように 4 つの部分に分割することができる．\n\n\n入力例 2\n3 3\n#.#\n###\n#.#\n出力例 2\n3\n入力例 3\n\n10 9\n.........\n.........\n####.....\n#..#.##..\n#..#..#..\n#..##.###\n#..##...#\n##..##.##\n###.#..#.\n###.####.\n\n出力例 3\n6\n入力例 4\n\n10 11\n###########\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n\n出力例 4\n7\n入力例 5\n\n25 38\n...........#...............#..........\n...........###..........####..........\n...........#####.......####...........\n............###############...........\n............###############...........\n............##############............\n.............#############............\n............###############...........\n...........#################..........\n.......#...#################...#......\n.......##.##################..##......\n........####################.##.......\n..........####################........\n.........#####..########..#####.......\n.......######....#####....######......\n......########...#####..########.#....\n....#######..#...#####..#..########...\n..#########.....#######......#######..\n...#######......#######........###....\n..####.........#########........###...\n...............#########..............\n..............##########..............\n..............##########..............\n...............########...............\n...............########...............\n\n出力例 5\n8\n\nProblem Setter: Flat35 巴マミは庭の左下の角から直線に必殺技「ティロ・フィナーレ」で巨大な銃を撃ち，その弾丸が通る直線上でその生命体を分割した時，生命体が出来る限り多くの分割数に分断されるようにすることによりダメージを与えたい．ティロ・フィナーレは最大でこの生物を何分割できるか求めよ．\n\n入力形式\n入力は以下の形式で与えられる．\n\nH\\ W\\\\\nf_{11} f_{12} ... f_{1W}\\\\\nf_{21} f_{22} ... f_{2W}\\\\\n...\\\\\nf_{H1} f_{H2} ... f_{HW}\\\\\n\n\nH は庭の高さ，W は庭の幅を表す．\n\nf_{ij} は庭の各ブロックを表す文字であり，上から i 行目，左から j 列目のブロックの状態を表す．ブロックにバラが育てられている場合は f_{ij} は '#' となり，そうでない場合は '.' となる．\n\n出力形式\n生命体を直線で分割する時に，最大でいくつの部分に分割できるかを1行で出力せよ．\n\n制約\n\n1 ≤ H ≤ 600\n1 ≤ W ≤ 600\nf_{ij}は '#', '.'のいずれかである．\n少なくとも 1 つはf_{ij} = '#' となるマス f_{ij} が存在する．\n2 つのブロックが辺を共有するとき，それらは隣接していると呼ぶことにする．任意の 2 つの異なる '#' のブロック f_A, f_B に対して，f_A から隣接している '#' のブロックを辿っていって f_B に着くことができる．(すなわち，薔薇のブロックは連結である．)\n入力中で 1 行目の行，H 行目の行，1 列目の列，または W 列目の列にあるブロックを盤面の端のブロックと呼ぶことにする．任意の '.' のブロック f_C に対して，f_C から隣接している '.' のブロックを辿っていって，ある '.' の盤面の端のブロックに着くことができる．(すなわち，入力に\"空洞\"のブロックは存在しない．)\n\n入出力例\n入力例 1\n\n3 5\n##..#\n#..##\n####.\n\n出力例1\n4\n\nこのとき以下のように 4 つの部分に分割することができる．\n\n\n入力例 2\n3 3\n#.#\n###\n#.#\n出力例 2\n3\n入力例 3\n\n10 9\n.........\n.........\n####.....\n#..#.##..\n#..#..#..\n#..##.###\n#..##...#\n##..##.##\n###.#..#.\n###.####.\n\n出力例 3\n6\n入力例 4\n\n10 11\n###########\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n\n出力例 4\n7\n入力例 5\n\n25 38\n...........#...............#..........\n...........###..........####..........\n...........#####.......####...........\n............###############...........\n............###############...........\n............##############............\n.............#############............\n............###############...........\n...........#################..........\n.......#...#################...#......\n.......##.##################..##......\n........####################.##.......\n..........####################........\n.........#####..########..#####.......\n.......######....#####....######......\n......########...#####..########.#....\n....#######..#...#####..#..########...\n..#########.....#######......#######..\n...#######......#######........###....\n..####.........#########........###...\n...............#########..............\n..............##########..............\n..............##########..............\n...............########...............\n...............########...............\n\n出力例 5\n8\n\nProblem Setter: Flat35 入力は以下の形式で与えられる． H は庭の高さ，W は庭の幅を表す．\n\nf_{ij} は庭の各ブロックを表す文字であり，上から i 行目，左から j 列目のブロックの状態を表す．ブロックにバラが育てられている場合は f_{ij} は '#' となり，そうでない場合は '.' となる．\n\n出力形式\n生命体を直線で分割する時に，最大でいくつの部分に分割できるかを1行で出力せよ．\n\n制約\n\n1 ≤ H ≤ 600\n1 ≤ W ≤ 600\nf_{ij}は '#', '.'のいずれかである．\n少なくとも 1 つはf_{ij} = '#' となるマス f_{ij} が存在する．\n2 つのブロックが辺を共有するとき，それらは隣接していると呼ぶことにする．任意の 2 つの異なる '#' のブロック f_A, f_B に対して，f_A から隣接している '#' のブロックを辿っていって f_B に着くことができる．(すなわち，薔薇のブロックは連結である．)\n入力中で 1 行目の行，H 行目の行，1 列目の列，または W 列目の列にあるブロックを盤面の端のブロックと呼ぶことにする．任意の '.' のブロック f_C に対して，f_C から隣接している '.' のブロックを辿っていって，ある '.' の盤面の端のブロックに着くことができる．(すなわち，入力に\"空洞\"のブロックは存在しない．)\n\n入出力例\n入力例 1\n\n3 5\n##..#\n#..##\n####.\n\n出力例1\n4\n\nこのとき以下のように 4 つの部分に分割することができる．\n\n\n入力例 2\n3 3\n#.#\n###\n#.#\n出力例 2\n3\n入力例 3\n\n10 9\n.........\n.........\n####.....\n#..#.##..\n#..#..#..\n#..##.###\n#..##...#\n##..##.##\n###.#..#.\n###.####.\n\n出力例 3\n6\n入力例 4\n\n10 11\n###########\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n\n出力例 4\n7\n入力例 5\n\n25 38\n...........#...............#..........\n...........###..........####..........\n...........#####.......####...........\n............###############...........\n............###############...........\n............##############............\n.............#############............\n............###############...........\n...........#################..........\n.......#...#################...#......\n.......##.##################..##......\n........####################.##.......\n..........####################........\n.........#####..########..#####.......\n.......######....#####....######......\n......########...#####..########.#....\n....#######..#...#####..#..########...\n..#########.....#######......#######..\n...#######......#######........###....\n..####.........#########........###...\n...............#########..............\n..............##########..............\n..............##########..............\n...............########...............\n...............########...............\n\n出力例 5\n8\n\nProblem Setter: Flat35 f_{ij} は庭の各ブロックを表す文字であり，上から i 行目，左から j 列目のブロックの状態を表す．ブロックにバラが育てられている場合は f_{ij} は '#' となり，そうでない場合は '.' となる．\n\n出力形式\n生命体を直線で分割する時に，最大でいくつの部分に分割できるかを1行で出力せよ．\n\n制約\n\n1 ≤ H ≤ 600\n1 ≤ W ≤ 600\nf_{ij}は '#', '.'のいずれかである．\n少なくとも 1 つはf_{ij} = '#' となるマス f_{ij} が存在する．\n2 つのブロックが辺を共有するとき，それらは隣接していると呼ぶことにする．任意の 2 つの異なる '#' のブロック f_A, f_B に対して，f_A から隣接している '#' のブロックを辿っていって f_B に着くことができる．(すなわち，薔薇のブロックは連結である．)\n入力中で 1 行目の行，H 行目の行，1 列目の列，または W 列目の列にあるブロックを盤面の端のブロックと呼ぶことにする．任意の '.' のブロック f_C に対して，f_C から隣接している '.' のブロックを辿っていって，ある '.' の盤面の端のブロックに着くことができる．(すなわち，入力に\"空洞\"のブロックは存在しない．)\n\n入出力例\n入力例 1\n\n3 5\n##..#\n#..##\n####.\n\n出力例1\n4\n\nこのとき以下のように 4 つの部分に分割することができる．\n\n\n入力例 2\n3 3\n#.#\n###\n#.#\n出力例 2\n3\n入力例 3\n\n10 9\n.........\n.........\n####.....\n#..#.##..\n#..#..#..\n#..##.###\n#..##...#\n##..##.##\n###.#..#.\n###.####.\n\n出力例 3\n6\n入力例 4\n\n10 11\n###########\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n\n出力例 4\n7\n入力例 5\n\n25 38\n...........#...............#..........\n...........###..........####..........\n...........#####.......####...........\n............###############...........\n............###############...........\n............##############............\n.............#############............\n............###############...........\n...........#################..........\n.......#...#################...#......\n.......##.##################..##......\n........####################.##.......\n..........####################........\n.........#####..########..#####.......\n.......######....#####....######......\n......########...#####..########.#....\n....#######..#...#####..#..########...\n..#########.....#######......#######..\n...#######......#######........###....\n..####.........#########........###...\n...............#########..............\n..............##########..............\n..............##########..............\n...............########...............\n...............########...............\n\n出力例 5\n8\n\nProblem Setter: Flat35 入力例 2\n3 3\n#.#\n###\n#.#\n出力例 2\n3\n入力例 3\n\n10 9\n.........\n.........\n####.....\n#..#.##..\n#..#..#..\n#..##.###\n#..##...#\n##..##.##\n###.#..#.\n###.####.\n\n出力例 3\n6\n入力例 4\n\n10 11\n###########\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n#.#.#.#.#.#\n\n出力例 4\n7\n入力例 5\n\n25 38\n...........#...............#..........\n...........###..........####..........\n...........#####.......####...........\n............###############...........\n............###############...........\n............##############............\n.............#############............\n............###############...........\n...........#################..........\n.......#...#################...#......\n.......##.##################..##......\n........####################.##.......\n..........####################........\n.........#####..########..#####.......\n.......######....#####....######......\n......########...#####..########.#....\n....#######..#...#####..#..########...\n..#########.....#######......#######..\n...#######......#######........###....\n..####.........#########........###...\n...............#########..............\n..............##########..............\n..............##########..............\n...............########...............\n...............########...............\n\n出力例 5\n8\n\nProblem Setter: Flat35",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01427.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ H ≤ 600\n1 ≤ W ≤ 600\nf_{ij}は '#', '.'のいずれかである．\n少なくとも 1 つはf_{ij} = '#' となるマス f_{ij} が存在する．\n2 つのブロックが辺を共有するとき，それらは隣接していると呼ぶことにする．任意の 2 つの異なる '#' のブロック f_A, f_B に対して，f_A から隣接している '#' のブロックを辿っていって f_B に着くことができる．(すなわち，薔薇のブロックは連結である．)\n入力中で 1 行目の行，H 行目の行，1 列目の列，または W 列目の列にあるブロックを盤面の端のブロックと呼ぶことにする．任意の '.' のブロック f_C に対して，f_C から隣接している '.' のブロックを辿っていって，ある '.' の盤面の端のブロックに着くことができる．(すなわち，入力に\"空洞\"のブロックは存在しない．)",
          "ranges": "1 600; 1 600; 600; 600; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 5\n##..#\n#..##\n####.",
            "output": "生命体を直線で分割する時に，最大でいくつの部分に分割できるかを1行で出力せよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01427.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01427"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01429",
        "title": "問題文",
        "description": "世の中の少女たちはキュゥべえと契約し願いを叶えてもらい，それとひきかえに魔法少女となる．使う魔法の形・効果は願いに強く影響を受ける．魔法少女さやかちゃんは最近キュゥべえと契約した新米魔法少女である．さやかの願いは「事故のため指が動かなくなり，音楽を演奏するのを諦めていた男の子を助けること」であったので，作る魔方陣は音符が輪の上に並んだ形をしている． さやかは N 個の音符を持っており，それらを輪の上に並べることによって魔方陣を作る．音符をどのような順番で並べるかは彼女の自由である．魔方陣を作るために精神力が消費され，その量は音符の配置によって以下のように決まる． 例えば音楽的美しさがそれぞれ \\{100,\\ 200,\\ 300,\\ 400,\\ 500\\} で，音程が \\{1,\\ 3,\\ 5,\\ 4\\} である音符をこの順番で並べて魔方陣を作った時，消費される精神力は 37\\ (=[(100+200+300)/99]+[(300+400+500)/99]+[(500+400)/99]+[(400+300+200+100)/99]) となる． 使うべき音符の音程の組み合わせと各音程の音楽的美しさが与えられるので，消費される精神力の最小値を求めよ． 入力は以下の形式で与えられる． N はさやかの持っている音符の数，M は音楽的美しさの値の個数，L は反発力を定めるのに使われる定数である． K_i は音符の音程を表し，S_j は音楽的美しさを表す．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01429.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3 ≤ N ≤ 2,000\n1 ≤ M ≤ 105\n1 ≤ L ≤ 105\n1 ≤ K_i ≤ M\n1 ≤ S_j ≤ 105\n入力値は全て整数である．",
          "ranges": "3 2; 1 105; 1 105; 1 105; 2; 105; 105; 105; 3; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 5 99\n1 4 5 3\n100 200 300 400 500",
            "output": "消費される精神力の最小値を 1 行に出力せよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01429.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01429"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01431",
        "title": "問題文",
        "description": "落書きの魔女 ALBERTINE は W 列 H 行の正方形のセルからなる長方形の結界の入り口に落書きをしている．この世界では落書きは必ずセルを白色か黒色で塗ることによって成り立つ． すでに使い魔 ANJA の手によって落書きの一部が描かれているのだが，落書きの魔女は残りすべてのセルを塗り落書きを完成させたい．落書きの魔女にはあるこだわりがある．そのこだわりとは次のようなものである． また，落書きの魔女は黒色が好きなので，こだわりを満たした状態でなおかつ最も黒色のセルが多い落書きを完成させたい．果たして落書きの魔女は最大で何個のセルが黒色に塗られたこだわりの落書きを描くことができるだろうか． 入力は以下の形式で与えられる． H は結界の入り口の縦幅，W は結界の入り口の横幅を表す．\n\nc_{ij} は各セルの状態を表す文字であり，上から i 行目，左から j 列目のセルの状態を表す．セルに黒色が塗られている場合は c_{ij} は '#' となり，白色が塗られている場合は '.'，まだ色が塗られていない場合はそうでない場合は '?' となる．\n\n出力形式\n\n魔女のこだわりを満たした状態でとりうる黒色のセルの個数の最大値を 1 行で出力せよ．\n\n\nもしどのように塗っても魔女のこだわりを満たすように出来ない場合，-1 と出力せよ．\n\n制約\n\n1 ≤ H ≤ 11\n1 ≤ W ≤ 11\nc_{ij} は '#', '.', '?' のいずれかである．\n\n入出力例\n入力例 1\n3 4\n.##.\n#??#\n.#?#\n出力例1\n8\n入力例 2\n5 5\n##?##\n#???#\n?????\n#???#\n##?##\n出力例 2\n19\n入力例 3\n9 2\n##\n..\n??\n??\n??\n??\n??\n??\n??\n出力例 3\n-1\n入力例 4\n7 9\n??#####??\n?#?????#?\n?#?????#?\n?#??#??#?\n?#???#?#?\n??#####??\n???????#?\n出力例 4\n44\n入力例 5\n11 11\n???????????\n???####????\n???#???#???\n???#???#???\n???#???#???\n???####????\n???#???#???\n???#???#???\n???#???#???\n???####????\n???????????\n出力例 5\n86\n\nProblem Setter: Flat35 c_{ij} は各セルの状態を表す文字であり，上から i 行目，左から j 列目のセルの状態を表す．セルに黒色が塗られている場合は c_{ij} は '#' となり，白色が塗られている場合は '.'，まだ色が塗られていない場合はそうでない場合は '?' となる． 魔女のこだわりを満たした状態でとりうる黒色のセルの個数の最大値を 1 行で出力せよ． もしどのように塗っても魔女のこだわりを満たすように出来ない場合，-1 と出力せよ．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01431.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ H ≤ 11\n1 ≤ W ≤ 11\nc_{ij} は '#', '.', '?' のいずれかである．",
          "ranges": "1 11; 1 11; 11; 11; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 4\n.##.\n#??#\n.#?#",
            "output": "魔女のこだわりを満たした状態でとりうる黒色のセルの個数の最大値を 1 行で出力せよ． もしどのように塗っても魔女のこだわりを満たすように出来ない場合，-1 と出力せよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01431.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01431"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01432",
        "title": "問題文",
        "description": "影の魔女 ELSAMARIA はすべてのものに対して祈りを続ける魔女である．影に捕まったあらゆる命はこの魔女の中に引きずり込まれてしまう． 影は触手のように動き美樹さやかを引きずり込もうと狙っている．美樹さやかはこの魔女に捕まることなく攻撃するために，魔女にとって予測の難しいでたらめな動きをすることを考えた．具体的には，まず頭の中で 1 から N  までの整数を一様な確率で K 個作り，その合計値の距離だけ今の位置から魔女の方向へジャンプする，ということを繰り返すのである．そして魔女の位置に到達した時に攻撃するのである． さやかと魔女はある一直線上にいるとし，最初魔女は座標 0，さやかは座標 S の位置にいるものとする．また魔女は動かないものとする．何度ジャンプした後に魔女に最初の攻撃を与えることができるだろうか．期待値を求めよ． 入力は以下の形式で与えられる． S は最初にさやかがいる座標である．N はさやかが頭の中で作る整数の範囲の上限，K はさやかが 1 回のジャンプに用いる整数の個数である． さやかが魔女の位置に到達するために必要なジャンプの回数の期待値を 1 行に出力せよ．もし何度ジャンプしても魔女の位置へ到達できない，もしくは期待値が有限値に収まらない場合は -1 と出力せよ． 小数点以下何桁でも出力して構わないが，相対誤差あるいは絶対誤差が 10-6 未満になっていなければならない．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01432.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "-109 ≤ S ≤ 109\n1 ≤ N ≤ 10\n1 ≤ K ≤ 10\n入力値は全て整数である．",
          "ranges": "109 109; 1 10; 1 10; 109; 10; 10; 109; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "6 6 1",
            "output": "さやかが魔女の位置に到達するために必要なジャンプの回数の期待値を 1 行に出力せよ．もし何度ジャンプしても魔女の位置へ到達できない，もしくは期待値が有限値に収まらない場合は -1 と出力せよ． 小数点以下何桁でも出力して構わないが，相対誤差あるいは絶対誤差が 10-6 未満になっていなければならない．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01432.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01432"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01433",
        "title": "問題文",
        "description": "人魚の魔女 KLARISSA はコンサートホールの中で在りし日の感動を夢見つづけている．彼女の運命の車輪は具現化し，コンサートホールの中で転がり続けている． 佐倉杏子はその運命の車輪が円ではなくカラフルな正方形であることに気がついた．運命の車輪はコンサートホールの西から東へ転がろうとしている．佐倉杏子は運命の車輪がある所まで転がったときにその上に飛び移ることにした．そこで飛び移るべき面の色を知り，飛び移るタイミングを見計らいたい．\n\nここでは車輪を 2 次元平面における 1 辺の長さが 1 の正方形と見なし，西から東へ向かう方向を x 軸の正向き，鉛直上方向を y 軸の正向きとする．\n今，運命の車輪の一面が床に対して接地しており，床と反対の面が赤色，東側の面が緑色，床と接地している面が青色，西側の面が白色になっている．現在接地している面のうち最も西の点の x 座標が x=A であるとする．運命の車輪がすべることなく床に対して転がり続け，ある一面が床に接地した時で，設置している面のうち最も東の点の x 座標が x=B を初めて超えるとき，床に対して表向きになっている面は何色になるかを求めよ．\n\n入力形式\n\n入力は以下の形式で与えられる．\n\n\nN\\ A\\ B\\\\\nx_1\\ y_1\\\\\nx_2\\ y_2\\\\\n...\\\\\nx_N\\ y_N\\\\\n\n\nコンサートホールの床は下に凸な折れ線として与えられる．N は折れ線の端点として与えられる点の個数である．A は車輪の初期のx座標，B は車輪の目標位置のx座標を表す．\n\n\n(x_i, y_i) は折れ線の情報である．\nコンサートホールの床は点 (x_1, y_1) と点 (x_2, y_2) を結ぶ線分，点 (x_2, y_2) と点 (x_3, y_3) を結ぶ線分，...，点 (x_{N-1}, y_{N-1}) と点 (x_N, y_N) を結ぶ線分によってできているものとする．\n\n出力形式\n\n色を1行に出力せよ．赤色なら Red，緑色なら Green，青色なら Blue，白色なら White と出力すること．\n\n制約\n\n2 ≤ N ≤ 30\n0 ≤ A ≤ 200\n0 ≤ B ≤ 200\nA < B\n0 ≤ x_i ≤ 200, 0 ≤ y_i ≤ 200 (1 ≤ i ≤ N)\n入力値はすべて整数である．\nx_i は狭義単調増加である．すなわち，x_i < x_{i+1}\nx_1 < A <  x_2 - 1\nx_{N-1}+1 < B <  x_N\n床は下に凸である．すなわち，(y_{i+1} - y_{i}) / (x_{i+1} - x_{i}) < (y_{i+2} - y_{i+1}) / (x_{i+2} - x_{i+1}) が満たされている．\n回転をしたそれぞれの段階において，車輪の頂点の x 座標が B より 10^{-5} 以内の値になることはない．\n車輪の 1 辺の長さを \\pm 10^{-6} だけ変化させても目標位置に達するまでに要する車輪の回転回数は変化せず，また変化させなかった状態から x 座標は高々 10^{-3} しか変化しない．\n\n注釈\n制約より，次のことが保証される．\n\n初期状態において，車輪が床にめり込んでいることはない．\n車輪が目標位置を初めて越えて回転し終わったとき，必ず車輪のある 1 面が床に接地している．\n\n入出力例\n入力例 1\n\n4 5 25\n0 10\n10 0\n20 0\n30 10\n\n出力例1\nRed\n入力例 2\n\n6 2 18\n0 30\n6 6\n9 2\n12 1\n15 5\n20 18\n\n出力例 2\nGreen\n入力例 3\n3 2 9\n0 23\n7 6\n10 25\n出力例 3\nWhite\n\nProblem Setter: Flat35 ここでは車輪を 2 次元平面における 1 辺の長さが 1 の正方形と見なし，西から東へ向かう方向を x 軸の正向き，鉛直上方向を y 軸の正向きとする．\n今，運命の車輪の一面が床に対して接地しており，床と反対の面が赤色，東側の面が緑色，床と接地している面が青色，西側の面が白色になっている．現在接地している面のうち最も西の点の x 座標が x=A であるとする．運命の車輪がすべることなく床に対して転がり続け，ある一面が床に接地した時で，設置している面のうち最も東の点の x 座標が x=B を初めて超えるとき，床に対して表向きになっている面は何色になるかを求めよ．\n\n入力形式\n\n入力は以下の形式で与えられる．\n\n\nN\\ A\\ B\\\\\nx_1\\ y_1\\\\\nx_2\\ y_2\\\\\n...\\\\\nx_N\\ y_N\\\\\n\n\nコンサートホールの床は下に凸な折れ線として与えられる．N は折れ線の端点として与えられる点の個数である．A は車輪の初期のx座標，B は車輪の目標位置のx座標を表す．\n\n\n(x_i, y_i) は折れ線の情報である．\nコンサートホールの床は点 (x_1, y_1) と点 (x_2, y_2) を結ぶ線分，点 (x_2, y_2) と点 (x_3, y_3) を結ぶ線分，...，点 (x_{N-1}, y_{N-1}) と点 (x_N, y_N) を結ぶ線分によってできているものとする．\n\n出力形式\n\n色を1行に出力せよ．赤色なら Red，緑色なら Green，青色なら Blue，白色なら White と出力すること．\n\n制約\n\n2 ≤ N ≤ 30\n0 ≤ A ≤ 200\n0 ≤ B ≤ 200\nA < B\n0 ≤ x_i ≤ 200, 0 ≤ y_i ≤ 200 (1 ≤ i ≤ N)\n入力値はすべて整数である．\nx_i は狭義単調増加である．すなわち，x_i < x_{i+1}\nx_1 < A <  x_2 - 1\nx_{N-1}+1 < B <  x_N\n床は下に凸である．すなわち，(y_{i+1} - y_{i}) / (x_{i+1} - x_{i}) < (y_{i+2} - y_{i+1}) / (x_{i+2} - x_{i+1}) が満たされている．\n回転をしたそれぞれの段階において，車輪の頂点の x 座標が B より 10^{-5} 以内の値になることはない．\n車輪の 1 辺の長さを \\pm 10^{-6} だけ変化させても目標位置に達するまでに要する車輪の回転回数は変化せず，また変化させなかった状態から x 座標は高々 10^{-3} しか変化しない．\n\n注釈\n制約より，次のことが保証される．\n\n初期状態において，車輪が床にめり込んでいることはない．\n車輪が目標位置を初めて越えて回転し終わったとき，必ず車輪のある 1 面が床に接地している．\n\n入出力例\n入力例 1\n\n4 5 25\n0 10\n10 0\n20 0\n30 10\n\n出力例1\nRed\n入力例 2\n\n6 2 18\n0 30\n6 6\n9 2\n12 1\n15 5\n20 18\n\n出力例 2\nGreen\n入力例 3\n3 2 9\n0 23\n7 6\n10 25\n出力例 3\nWhite\n\nProblem Setter: Flat35 入力は以下の形式で与えられる． コンサートホールの床は下に凸な折れ線として与えられる．N は折れ線の端点として与えられる点の個数である．A は車輪の初期のx座標，B は車輪の目標位置のx座標を表す． (x_i, y_i) は折れ線の情報である．\nコンサートホールの床は点 (x_1, y_1) と点 (x_2, y_2) を結ぶ線分，点 (x_2, y_2) と点 (x_3, y_3) を結ぶ線分，...，点 (x_{N-1}, y_{N-1}) と点 (x_N, y_N) を結ぶ線分によってできているものとする． 色を1行に出力せよ．赤色なら Red，緑色なら Green，青色なら Blue，白色なら White と出力すること．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01433.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 30\n0 ≤ A ≤ 200\n0 ≤ B ≤ 200\nA < B\n0 ≤ x_i ≤ 200, 0 ≤ y_i ≤ 200 (1 ≤ i ≤ N)\n入力値はすべて整数である．\nx_i は狭義単調増加である．すなわち，x_i < x_{i+1}\nx_1 < A <  x_2 - 1\nx_{N-1}+1 < B <  x_N\n床は下に凸である．すなわち，(y_{i+1} - y_{i}) / (x_{i+1} - x_{i}) < (y_{i+2} - y_{i+1}) / (x_{i+2} - x_{i+1}) が満たされている．\n回転をしたそれぞれの段階において，車輪の頂点の x 座標が B より 10^{-5} 以内の値になることはない．\n車輪の 1 辺の長さを \\pm 10^{-6} だけ変化させても目標位置に達するまでに要する車輪の回転回数は変化せず，また変化させなかった状態から x 座標は高々 10^{-3} しか変化しない．",
          "ranges": "2 30; 0 200; 0 200; 0 200; 0 200; 30; 200; 200; 200; 200; 2; 0; 0; 0; 0; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 5 25\n0 10\n10 0\n20 0\n30 10",
            "output": "色を1行に出力せよ．赤色なら Red，緑色なら Green，青色なら Blue，白色なら White と出力すること．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01433.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01433"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01434",
        "title": "問題文",
        "description": "委員長の魔女 PATRICIA は，蜘蛛のような糸を吐き結界の中で暮らしている．使い魔の MATHIEU は，委員長の魔女が吐いた糸を引っぱり自在に空を飛んでいる．糸は空間上の線分とみなすことにする． 暁美ほむらは委員長の魔女に対して攻撃を仕掛けようとし，爆弾と間違えて花火玉を投げ込んでしまった．その結果，それぞれの糸について，魔女から距離 p_1, ..., p_M の位置にある部分が切れるだけとなってしまった．花火玉を投げる前，それぞれの糸について，糸の 2 つの端点と魔女はこの順番で同一直線上に並んでおり，端点のどちらか一方を使い魔が引っ張っていた．爆発で糸は切れ，使い魔が持っていた部分とそこから一つ置きの部分を残して糸の一部は消えてしまった．\n\nほむらは次の戦略を考えるために，残った糸についての情報が知りたいと思っている．残った糸の長さの合計値を求めよ．\n\n入力形式\n\n入力は以下の形式で与えられる．\n\n\nN\\ M\\\\\ns_1\\ t_1\\\\\n...\\\\\ns_N\\ t_N\\\\\np_1\\\\\n...\\\\\np_M\\\\\n\n\nN は空間上の糸の個数，M は花火玉によって発生した糸の切断の箇所の個数である．\n\n\ns_i, t_i は糸の情報であり，s_i は使い間が引っ張っていた側の端点，t_i はそうでない側の端点の魔女からの距離である．\n\np_i は花火玉によって切断された位置の情報である．\n\n出力形式\n\n花火玉を投げた後，残った糸の長さの合計値を1行に出力せよ．\n\n制約\n\n1 ≤ N ≤ 105\n1 ≤ M ≤ 105\n1 ≤ s_i ≤ 10^9\n1 ≤ t_i ≤ 10^9\n1 ≤ p_i ≤ 10^9\n入力値は全て整数である．\ns_1, ..., s_N, t_1, ..., t_N, p_1, ..., p_M は全て相異なる．\n\n入出力例\n入力例 1\n\n2 3\n1 8\n20 5\n3\n7\n15\n\n出力例1\n10\n\n爆発の後，1 つ目のひもは端点の魔女からの距離がそれぞれ (1,3), (7,8) の 2 つのひもに，2 つ目のひもは (20, 15), (7, 5) の 2 つのひもに分かれる．結果，残ったひもの長さの合計は 2+1+5+2 = 10 となる．\n\n入力例 2\n\n1 1\n100 1\n70\n\n出力例 2\n30\n入力例 3\n\n6 8\n1 10\n11 23\n99 2\n56 58\n66 78\n88 49\n5\n15\n25\n35\n45\n55\n65\n75\n\n出力例 3\n99\n\nProblem Setter: Flat35 ほむらは次の戦略を考えるために，残った糸についての情報が知りたいと思っている．残った糸の長さの合計値を求めよ．\n\n入力形式\n\n入力は以下の形式で与えられる．\n\n\nN\\ M\\\\\ns_1\\ t_1\\\\\n...\\\\\ns_N\\ t_N\\\\\np_1\\\\\n...\\\\\np_M\\\\\n\n\nN は空間上の糸の個数，M は花火玉によって発生した糸の切断の箇所の個数である．\n\n\ns_i, t_i は糸の情報であり，s_i は使い間が引っ張っていた側の端点，t_i はそうでない側の端点の魔女からの距離である．\n\np_i は花火玉によって切断された位置の情報である．\n\n出力形式\n\n花火玉を投げた後，残った糸の長さの合計値を1行に出力せよ．\n\n制約\n\n1 ≤ N ≤ 105\n1 ≤ M ≤ 105\n1 ≤ s_i ≤ 10^9\n1 ≤ t_i ≤ 10^9\n1 ≤ p_i ≤ 10^9\n入力値は全て整数である．\ns_1, ..., s_N, t_1, ..., t_N, p_1, ..., p_M は全て相異なる．\n\n入出力例\n入力例 1\n\n2 3\n1 8\n20 5\n3\n7\n15\n\n出力例1\n10\n\n爆発の後，1 つ目のひもは端点の魔女からの距離がそれぞれ (1,3), (7,8) の 2 つのひもに，2 つ目のひもは (20, 15), (7, 5) の 2 つのひもに分かれる．結果，残ったひもの長さの合計は 2+1+5+2 = 10 となる．\n\n入力例 2\n\n1 1\n100 1\n70\n\n出力例 2\n30\n入力例 3\n\n6 8\n1 10\n11 23\n99 2\n56 58\n66 78\n88 49\n5\n15\n25\n35\n45\n55\n65\n75\n\n出力例 3\n99\n\nProblem Setter: Flat35 入力は以下の形式で与えられる． N は空間上の糸の個数，M は花火玉によって発生した糸の切断の箇所の個数である． s_i, t_i は糸の情報であり，s_i は使い間が引っ張っていた側の端点，t_i はそうでない側の端点の魔女からの距離である．\n\np_i は花火玉によって切断された位置の情報である．\n\n出力形式\n\n花火玉を投げた後，残った糸の長さの合計値を1行に出力せよ．\n\n制約\n\n1 ≤ N ≤ 105\n1 ≤ M ≤ 105\n1 ≤ s_i ≤ 10^9\n1 ≤ t_i ≤ 10^9\n1 ≤ p_i ≤ 10^9\n入力値は全て整数である．\ns_1, ..., s_N, t_1, ..., t_N, p_1, ..., p_M は全て相異なる．\n\n入出力例\n入力例 1\n\n2 3\n1 8\n20 5\n3\n7\n15\n\n出力例1\n10\n\n爆発の後，1 つ目のひもは端点の魔女からの距離がそれぞれ (1,3), (7,8) の 2 つのひもに，2 つ目のひもは (20, 15), (7, 5) の 2 つのひもに分かれる．結果，残ったひもの長さの合計は 2+1+5+2 = 10 となる．\n\n入力例 2\n\n1 1\n100 1\n70\n\n出力例 2\n30\n入力例 3\n\n6 8\n1 10\n11 23\n99 2\n56 58\n66 78\n88 49\n5\n15\n25\n35\n45\n55\n65\n75\n\n出力例 3\n99\n\nProblem Setter: Flat35 p_i は花火玉によって切断された位置の情報である．\n\n出力形式\n\n花火玉を投げた後，残った糸の長さの合計値を1行に出力せよ．\n\n制約\n\n1 ≤ N ≤ 105\n1 ≤ M ≤ 105\n1 ≤ s_i ≤ 10^9\n1 ≤ t_i ≤ 10^9\n1 ≤ p_i ≤ 10^9\n入力値は全て整数である．\ns_1, ..., s_N, t_1, ..., t_N, p_1, ..., p_M は全て相異なる．\n\n入出力例\n入力例 1\n\n2 3\n1 8\n20 5\n3\n7\n15\n\n出力例1\n10\n\n爆発の後，1 つ目のひもは端点の魔女からの距離がそれぞれ (1,3), (7,8) の 2 つのひもに，2 つ目のひもは (20, 15), (7, 5) の 2 つのひもに分かれる．結果，残ったひもの長さの合計は 2+1+5+2 = 10 となる．\n\n入力例 2\n\n1 1\n100 1\n70\n\n出力例 2\n30\n入力例 3\n\n6 8\n1 10\n11 23\n99 2\n56 58\n66 78\n88 49\n5\n15\n25\n35\n45\n55\n65\n75\n\n出力例 3\n99\n\nProblem Setter: Flat35 花火玉を投げた後，残った糸の長さの合計値を1行に出力せよ． 爆発の後，1 つ目のひもは端点の魔女からの距離がそれぞれ (1,3), (7,8) の 2 つのひもに，2 つ目のひもは (20, 15), (7, 5) の 2 つのひもに分かれる．結果，残ったひもの長さの合計は 2+1+5+2 = 10 となる．",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01434.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 105\n1 ≤ M ≤ 105\n1 ≤ s_i ≤ 10^9\n1 ≤ t_i ≤ 10^9\n1 ≤ p_i ≤ 10^9\n入力値は全て整数である．\ns_1, ..., s_N, t_1, ..., t_N, p_1, ..., p_M は全て相異なる．",
          "ranges": "1 105; 1 105; 1 10; 1 10; 1 10; 105; 105; 10; 10; 10; 1; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 3\n1 8\n20 5\n3\n7\n15",
            "output": "花火玉を投げた後，残った糸の長さの合計値を1行に出力せよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01434.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01434"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01436",
        "title": "問題文",
        "description": "キュゥべえはなかなか契約を結んでくれない鹿目まどかにしびれを切らせて，ソウルジェムゲームと称して佐倉杏子と美樹さやかのソウルジェムの中身 (魂) を W 列 H 段のロッカーの中に隠してしまった．そこで，まどかは杏子とさやかを助け出したい．しかし，契約を結ばずに助けるにはロッカーボックスの壁を操作して 2 人のソウルジェムの中身を，指定されたロッカーボックスに正しく移さなければならない．ロッカーはロッカーボックスが W 列 H 段に並ぶことで構成され，隣り合うロッカーボックスは壁で仕切られている． まどかは，1 回の操作でいずれかの隣りあった 2 つのロッカーボックスの壁を取り除くか取り付けることができる．ただし，ロッカーボックスの壁を開けるには制約があり，各ロッカーボックスから隣接する上下左右の壁のうち，高々 2 枚までの壁しか同時に開けておくことはできない．ロッカーボックスには上の段から下の段に向かって重力が働いている．ソウルジェムの中身は液体と同じような動きをし，隣りあった 2 つのロッカーボックスの壁が取り除かれている時，同じ高さであれば互いに同じ量になり，違う高さであれば低い方へ移動する．すべての操作が終わった時に指定された 2 つのロッカーボックスに正しい組み合わせでソウルジェムの中身がすべて入っていればまどかの勝利となる．また，一部のロッカーボックスは穢れており，その中へソウルジェムの中身が入ってしまうと大変なことになってしまうので，そのロッカーボックスはソウルジェムの中身の移動のために使うことはできない． 最小で何度の操作を行えばまどかは 2 人を救いだすことができるかを求めよ． 入力は以下の形式で与えられる． H はロッカーの段数，W はロッカーの列数である．s_{ij} は上から i 段目の左から j 列目のロッカーボックスの状態を表す．杏子のソウルジェムの中身が入っているときは 'K' であり，さやかのソウルジェムの中身が入っているときは 'S' ，杏子のソウルジェムの中身を移すべきロッカーボックスであるときは 'k'，さやかのソウルジェムの中身を移すべきロッカーボックスであるときは 's'，穢れたロッカーボックスであるときは '#'，それ以外のロッカーボックスであるときは '.' である．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01436.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ H ≤ 10\n1 ≤ W ≤ 10\ns_{ij} は '#', '.', 'S', 'K', 's', 'k' のいずれかである．\ns_{ij}\\ =\\ 'S' であるような i, j がちょうど 1 つだけ存在する．\ns_{ij}\\ =\\ 'K' であるような i, j がちょうど 1 つだけ存在する．\ns_{ij}\\ =\\ 's' であるような i, j がちょうど 1 つだけ存在する．\ns_{ij}\\ =\\ 'k' であるような i, j がちょうど 1 つだけ存在する．",
          "ranges": "1 10; 1 10; 10; 10; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 4\n.S..\nK...\n....\n..sk",
            "output": "2 人を救い出すために必要な操作の最小回数を出力せよ．どのように操作しても救い出すことが出来ない場合は CONTRACT と出力せよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01436.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01436"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01470",
        "title": "問題文",
        "description": "有理数列 $X_0, X_1, X_2, ..., X_N$ がある。各項は以下のように定義される。 $X_N$ を求めよ。 入力は以下の形式に従う。与えられる数は全て整数である。 $o_i = 1$ のとき $op_i$ は＋、$o_i = 2$ のとき $op_i$ は−、$o_i = 3$ のとき $op_i$ は×、$o_i = 4$ のとき $op_i$ は÷である。 $X_N$ の値を1行に出力せよ。 $X_0 = 0$\n$X_1 = X_0 ＋ 1 = 1$\n$X_2 = X_1 ÷ 2 = 1/2$\n$X_3 = X_2 − 4 = -7/2$\n$X_4 = X_3 × 4 = -14$",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01470.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "$1 \\leq N \\leq 10^5$\n$1 \\leq o_i \\leq 4$\n$-10^6 \\leq Y_i \\leq 10^6$\n$o_i=4$ ならば $Y_i \\neq 0$\n$X_N$ は $-2^{31}$ 以上 $2^{31}$ 未満の整数となる。",
          "ranges": "4"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n1 1\n4 2\n2 4\n3 4",
            "output": "-14 $X_0 = 0$\n$X_1 = X_0 ＋ 1 = 1$\n$X_2 = X_1 ÷ 2 = 1/2$\n$X_3 = X_2 − 4 = -7/2$\n$X_4 = X_3 × 4 = -14$",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01470.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01470"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01520",
        "title": "A - アルデンテ",
        "description": "わたしは近所のスーパーで初めてスパゲッティというものを購入した．パッケージの情報によると，このスパゲッティは T 秒茹でると最も理想的な状態に茹で上がるらしい． ところでわたしは電気が嫌いな人間であり，家にはテレビやパソコンはおろか，時計さえ無い．\nそのためスパゲッティを茹でようにも，時間を測ることができない．\n電池式の時計は嫌なので，わたしは代わりに砂時計を買おうと考え，スーパーの砂時計売り場へと向かった．\n売り場には N 個の砂時計があった．i 番目の砂時計はちょうど xi 秒だけ測ることができるようであった．\nいろいろあって悩ましいが，スパゲッティのために砂時計を何個も買うのは馬鹿らしいのでこの中からちょうど 1 個だけ買おうと思う． しかし皆さんご存知の通り，砂時計というのは一度測り始めると，それから測り終えるまでは途中の時刻というのはまったく分からない．\nそのため，もし私が i 番目の砂時計を買って使ったとすると，時計を連続して使うことで xi 秒，2xi 秒，3xi 秒，... という時間を測ることができるが，逆にそれ以外の時間は測ることができない． 理想的な茹で上がりに必要な時間は T 秒らしいが，ここでは妥協して E (< T) 秒以内の誤差を許そう．\nすなわち，どれか 1 つの砂時計を用いて，T−E 秒，T−E+1 秒，T−E+2 秒，... ，T+E−2 秒，T+E−1 秒，T+E 秒のうちのどれかの時間を計測したい．\n私は何番目の砂時計を購入して使えばよいだろうか? 入力は以下の形式で与えられる．\n\nN T E\nx1 ... xN\n\n\nN は砂時計の個数である．T はスパゲッティを理想的に茹で上げるのに必要な時間(秒)，E は茹で上げに許容する誤差の時間(秒)である．\nxi は i 番目の砂時計が 1 回で測ることできるの時間(秒)である．\n\n出力形式\n何番目の砂時計を使えばよいか出力せよ．そのような砂時計が複数個ある場合，それらの中からどれか 1 つを出力せよ．\nどの砂時計を使っても時間が測れない場合は -1 を出力せよ．\n\n制約\n\n1 ≤ N ≤ 100\n1 ≤ T ≤ 1,440\n0 ≤ E < T\n1 ≤ xi ≤ 10^4\n入力値はすべて整数である．\n\n入出力例\n入力例 1\n\n2 10 2\n3 4\n\n出力例 1\n\n2\n\n\n8秒，9秒，10秒，11秒，12秒 のうちのいずれかの時間を計測できればよい．\n1 番目の砂時計で測ることのできる時間は 3秒，6秒，9秒，12秒，...  であり，\n2 番目の砂時計で測ることのできる時間は 4秒，8秒，12秒，16秒，...  であるので，どちらの砂時計を用いても目的の時間を計測できる．\n出力例 1 では 2 を答えとしているが，1 を答えにしても正解である．\n\n入力例 2\n\n3 10 5\n16 17 18\n\n出力例 2\n\n-1\n\n\nどの砂時計を使っても目的の時間は計測できない．\n\n\nWriter: 花田裕一朗\nTester: 小浜翔太郎 N は砂時計の個数である．T はスパゲッティを理想的に茹で上げるのに必要な時間(秒)，E は茹で上げに許容する誤差の時間(秒)である．\nxi は i 番目の砂時計が 1 回で測ることできるの時間(秒)である． 何番目の砂時計を使えばよいか出力せよ．そのような砂時計が複数個ある場合，それらの中からどれか 1 つを出力せよ．\nどの砂時計を使っても時間が測れない場合は -1 を出力せよ． 8秒，9秒，10秒，11秒，12秒 のうちのいずれかの時間を計測できればよい．\n1 番目の砂時計で測ることのできる時間は 3秒，6秒，9秒，12秒，...  であり，\n2 番目の砂時計で測ることのできる時間は 4秒，8秒，12秒，16秒，...  であるので，どちらの砂時計を用いても目的の時間を計測できる．\n出力例 1 では 2 を答えとしているが，1 を答えにしても正解である． どの砂時計を使っても目的の時間は計測できない．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01520.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 100\n1 ≤ T ≤ 1,440\n0 ≤ E < T\n1 ≤ xi ≤ 10^4\n入力値はすべて整数である．",
          "ranges": "1 100; 1 1; 1 10; 100; 1; 10; 1; 1; 0; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 10 2\n3 4",
            "output": "何番目の砂時計を使えばよいか出力せよ．そのような砂時計が複数個ある場合，それらの中からどれか 1 つを出力せよ．\nどの砂時計を使っても時間が測れない場合は -1 を出力せよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01520.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01520"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01521",
        "title": "B - 簡易オセロ",
        "description": "B君はオセロが大好きである (オセロのルールについてはWikipediaのオセロのページを参照せよ．「パス」についても Wikipedia に書かれているとおり，駒を打つことができない場合のみパスできるものとし，パスの回数に制限は無いものとする．)\nB君は駒の初期配置によってゲームの結果がどのように変わるのかに興味がある．\nしかしいきなり 2 次元の盤面で考えるのは難しいので，ひとまずは 1 次元の盤面で考えることにした．\nすなわち，この問題では盤面は縦幅 1，横幅無限のマス目であると見なす．\nまた，オセロの駒はアルファベット小文字の o と x によって表すことにする． B君はこの盤面上のオセロの初期配置として N 個の駒を連続させて並べ，左から i 番目の駒を ci ∈ {o, x} とするものを考えることにした．\n先手の駒を o とするとき，両方のプレイヤーが最善を尽くした時に勝利者がどちらになるかを求めて欲しい． 入力は以下の形式で与えられる．\n\nc1c2...cN\n\nci は初期配置における左から i 番目の駒を表す．\n出力形式\n勝利者の駒を出力せよ．なお，このゲームは引き分けにはならないことが保証されている．\n制約\n\n入力の文字列の長さを N として，1 ≤ N ≤ 50 である．\nci ∈ {o, x}\n\n入出力例\n入力例 1\n\noxxoxoo\n\n出力例 1\n\no\n\n\n最初は o の番であるが，打てるマスが存在しないのでパスをする．\n続いて x の番になり，左端と右端のどちらかに打つことができる．しかし，x がどちらに打ったとしても o に勝つことはできない．\n\n入力例 2\n\nxxxooxxox\n\n出力例 2\n\nx\n\n\nWriter: 楠本充，小浜翔太郎\nTester: 田村和範 ci は初期配置における左から i 番目の駒を表す． 勝利者の駒を出力せよ．なお，このゲームは引き分けにはならないことが保証されている． 最初は o の番であるが，打てるマスが存在しないのでパスをする．\n続いて x の番になり，左端と右端のどちらかに打つことができる．しかし，x がどちらに打ったとしても o に勝つことはできない．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01521.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力の文字列の長さを N として，1 ≤ N ≤ 50 である．\nci ∈ {o, x}",
          "ranges": "1 50; 50; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "oxxoxoo",
            "output": "勝利者の駒を出力せよ．なお，このゲームは引き分けにはならないことが保証されている．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01521.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01521"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01522",
        "title": "C - ソーシャル",
        "description": "うさぎが N 匹おり，ボートを使って川を渡ろうとしている．ボートは K 個あり，誰がどのボートに乗るかを適当に決めて乗ることにした． ところでうさぎというのは互いの仲の良し悪しに敏感であり，狭い空間に仲の悪いうさぎと一緒に閉じ込められると気分を悪くしてしまう．\nこの N 匹のうさぎについても何組かのうさぎは仲が悪いということが分かっており，今の割り当てでは何匹かは気分を悪くしてしまう可能性がある．\nもっと良い割り当てを考えるのがよいところではあるが，ひとまず今の割り当てで何匹のうさぎが気分を悪くするかを求めて欲しい． 入力は以下の形式で与えられる． N はボートに乗るうさぎの数である．K はボートの個数である．\nmi はボート i に乗るうさぎの数である．bunnyi,1, ..., bunnyi,mi はボート i に乗るうさぎの番号 (1 以上 N 以下) を表す．\nR は仲の悪いうさぎの組の個数を表す．\npj, qj はうさぎpj とうさぎ qj の仲が悪いことを表す． 気分を悪くするうさぎの数を出力せよ． 気分を悪くしているうさぎはいない． 割り当ては例 1 と同じであるが仲の悪さを表す組が異なっている．この例ではうさぎ 2,3,4 が気分を悪くしてしまう．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01522.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 50\n1 ≤ K ≤ N\nm1 + ... + mK = N\n{bunny1,1, ..., bunny1,m1, bunny2,1, ..., bunnyK,mK } = {1, 2, ..., N}\n0 ≤ R ≤ N(N-1)/2\n1 ≤ pj < qj ≤ N\n組 (pj, qj) は全て異なる．\n入力値はすべて整数である．",
          "ranges": "1 50; 50; 1; 1; 0; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "6 2\n2 1 5\n4 2 3 4 6\n2\n1 2\n2 5",
            "output": "気分を悪くするうさぎの数を出力せよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01522.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01522"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01523",
        "title": "D - 権力",
        "description": "10号館とはとある大学にある建物で，J研究科のメンバーが日夜研究に勤しんでいる施設である． 10号館は建物が古いことで有名であったが，今年ついに改装されることになった．\n  改装工事終了後は綺麗な環境で研究が出来ると皆が期待していたある日，\n  K研究科の一部が，改装工事終了後の10号館の部屋を侵略するという知らせが届いた． もしK研究科に10号館の部屋が侵略されれば，その部屋で活動していたJ研究科のメンバーはこれまた建物が古いことで知られる2号館に移動する必要がある．\n  何とか阻止しなければならないので，J研究科は教授が権力を出しあって10号館の各部屋をK研究科から守ることにした. 10号館は N 個の部屋が1直線上に並んでおり，順番に 1,2,...,N の番号が付けられている．\n  K研究科は，この N 個の部屋を全て侵略しようとしてくる．\n  J研究科には M 人の教授が在籍しており，各教授はある区間に含まれる部屋に対して権力を発揮できる．\n  1人以上の教授に権力を発揮された部屋はK研究科に侵略されることはなく守ることが出来るが，どの教授からも権力を発揮されなかった部屋は侵略されてしまう． 教授は研究で忙しいので，出来るだけ少人数で全ての部屋を守りたい．\n  全ての部屋を守るために権力を発揮するべき教授の最少人数を求めよ．\n  なお，教授全員が権力を発揮しても全ての部屋を守ることが出来無い場合があることに注意せよ． 入力は以下の形式で与えられる． N は10号館の部屋の数であり，M はJ研究科の教授の数である． ai, bi は, 教授 i が部屋 ai, ai+1, ..., bi\n  に対して権力を発揮することが出来る事を意味する． 10号館の全ての部屋を守ることが出来るなら，そのために権力を発揮するべき教授の最少人数を1行に出力せよ．\n  そうでなければImpossible\n  を1行に出力せよ． 2 番目の教授と 4 番目の教授が権力を発揮することにより，10号館の全ての部屋を守ることが出来る．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01523.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤  N ≤  100, 1 ≤  M ≤  100\n1 ≤  ai  ≤  bi ≤  N\n入力値はすべて整数である．",
          "ranges": "1 100; 1 100; 100; 100; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "8 4\n3 7\n1 5\n2 5\n4 8",
            "output": "10号館の全ての部屋を守ることが出来るなら，そのために権力を発揮するべき教授の最少人数を1行に出力せよ．\n  そうでなければImpossible\n  を1行に出力せよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01523.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01523"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01525",
        "title": "F - Acceleration of Network",
        "description": "インターネットと言う広大な海は少しずつ黒く塗りつぶされていった。\nボットの反乱、DDOS攻撃の嵐、ウィルスの蔓延、\n何度も何度も繰り返されたクラッカーとの戦争で、人もインターネットもボロボロになった。\n\n人の手では、インターネットはどうにもならない。\nだから人は、とんでもない時間をかけて\nインターネットを復旧できる「少女」を造った。\n\n少女は、インターネットの手当をはじめた。\n果てしなく広いインターネットの世界をどうにかしようと頑張った。\n\nまだ少女ひとりでは撚り対線を織る事くらいしかできないけど、\n長い長い時がすぎてインターネットが少し復旧すれば、\nみんなと一緒に頑張れるだろうという期待をこめて。 少女はかつてインターネットに存在した N 個のサービスを復旧するために日々頑張っている．\n現在を 0 日目とする．\nインターネットがどの程度復旧しているかを復旧度という指標で表し，現在の復旧度は 0 であるとする．\n少女は毎日作業をし，復旧度を 1 日につき 1 ずつ上げていく．\n任意のまだ復旧していないサービス i は，復旧度が wi 以上になると自動的に復旧する．\nサービス i が復旧すると，みんなが手伝ってくれることにより，復旧した次の日から xi 日間だけ作業がはかどり，復旧度の増加が加速する．\nサービスには 3 つの種類があり，種類によって復旧度がどの程度増加するのかが異なる．\nサービスの種類を 0, 1, 2 の番号で表すとする．\nサービス i の種類を ti (∈ {0, 1, 2}) とすると，\nサービス i が復旧してから d-1 日目から d 日目にかけて (1 ≤ d ≤ xi)，\nti=0 の場合は 1，\nti=1 の場合は d，\nそして ti=2 の場合は d2 だけ，少女の作業とは別に復旧度が増加する．\nまた，同時に複数のサービスが復旧している場合，それぞれのサービスは独立に並行して復旧度を増加させる． 少女はサービスが復旧するまでにとんでもない時間がかかると思ったので，現在から何日目にサービスが復旧するか調べることにした．\nまたある日にち yj に復旧度がいくらになっているかも気になったので，それも Q 日分だけ調べることにした． 入力は以下の形式で与えられる． 最初に N 行出力し，i 行目にはサービス i の復旧する日にちを出力せよ．次に Q  行出力し，j 行目には yj 日目に復旧度がいくらになっているかを出力せよ．\nサービスが復旧する日にちが 3,652,425 を超える場合はMany years laterと出力せよ． この問題の判定には，15 点分のテストケースのグループが設定されている．このグループに含まれるテストケースは上記の制約に加えて下記の制約も満たす． 2つ目のサービスは復旧する日にちが 3,652,425 日を超えているのでMany years laterと出力している．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01525.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0 ≤ N ≤ 105\n1 ≤ Q ≤ 105\n0 ≤ wi < 260\nwi ≤ wi+1 (1 ≤ i < N)\nti ∈ {0, 1, 2}\n1 ≤ xi ≤ 104\n0 ≤ yj ≤ 3,652,425\nyj < yj+1 (1 ≤ j < Q)\n入力値はすべて整数である． この問題の判定には，15 点分のテストケースのグループが設定されている．このグループに含まれるテストケースは上記の制約に加えて下記の制約も満たす． N,Q,wi,yj ≤ 1,000",
          "ranges": "0 105; 1 105; 0 260; 1 104; 0 3; 105; 105; 260; 104; 3; 1; 0; 1; 0; 1; 1; 0; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 11\n1 0 2\n4 1 3\n7 2 4\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10",
            "output": "最初に N 行出力し，i 行目にはサービス i の復旧する日にちを出力せよ．次に Q  行出力し，j 行目には yj 日目に復旧度がいくらになっているかを出力せよ．\nサービスが復旧する日にちが 3,652,425 を超える場合はMany years laterと出力せよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01525.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01525"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01526",
        "title": "G - 村",
        "description": "きつねのしえるは，休暇でとある小さな村を訪れている．彼女が驚いたのは，その村の表札がもつ性質である． 村には N 個の家屋がある．ここでは簡単のため，村は 2 次元平面であるとし，家屋はこの平面上の点であると見なす．\nそれぞれの家屋には表札が 1 個設けられており，その家の苗字を表していた．しえるは村の中を訪問するにつれて，この村の表札が次のような性質を持っていることに気付いた． ここで，家屋同士の距離は，平面上のユークリッド距離によって計測するものとする． しえるはこの村に表札が全部で何種類あるのかが気になったが，この村は意外に広いということに気付いたので，計算機を使ってこの答えを模索することにした． 入力は以下の形式で与えられる． N は家屋の個数である．R は家屋の配置の制約に関する値である．\n(xi, yi) は家屋 i の座標を表す． 村に存在する表札の種類の数を求めよ． この問題の判定には，15 点分のテストケースのグループが設定されている． このグループに含まれるテストケースは上記の制約に加えて下記の制約も満たす． 家屋 1,2,3 と家屋 4 と家屋 5 で表札が異なる．全体で 3 つの表札が存在する．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01526.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 2 × 105\n1 ≤ R ≤ 103\n|xi|, |yi| ≤ 106\nN は整数である．R, xi, yi は実数で，小数第 3 位まで表される．\n任意の 1 ≤ i < j ≤ N に対して dij = √{(xi - xj)2 + (yi - yj)2} とおくとき，dij ≤ R か 3R ≤ dij のどちらかが満たされる． この問題の判定には，15 点分のテストケースのグループが設定されている． このグループに含まれるテストケースは上記の制約に加えて下記の制約も満たす． 答えは 10 以下である．",
          "ranges": "1 2; 1 103; 2; 103; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 3.000\n1.000 0.000\n0.000 0.000\n-1.000 0.000\n10.000 0.000\n-10.000 0.000",
            "output": "村に存在する表札の種類の数を求めよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01526.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01526"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01527",
        "title": "H - 植林",
        "description": "とある大学の魔法学部の生徒であるK君は広大な屋敷に住んでいる．\n  屋敷の裏には林が広がっていたが，所々木が生えていない箇所があった．\n  このままでは屋敷からの見た目が悪いと感じたので，K君は木が生えていない箇所に木を植えることに決めた．\n  魔法使いの卵であるK君は使い魔を召喚することが出来るので，植林の作業を使い魔にやらせようと考えた． 林は H × W 個のセルを持つ長方形領域とみなすことが出来る．\n  各セルは木が1本生えているか1本も生えていないかのどちらかである．\n  K君はこの H × W 個のセルのどれか 1 つを指定し，そこに使い魔を召喚する．\n  しかしK君はまだ未熟者なので，魔力を調節することが出来ず，使い魔を召喚するときは必ず 5 匹召喚してしまう．\n  さらに悪いことに，K君が召喚する使い魔はひねくれもので，訪れたセルに木が生えていない場合はそこに木を植えるが，訪れたセルに既に木が生えている場合はそのセルの木を消してしまう．\n  召喚された使い魔のうちの 4 匹は，指定されたセルを始点として東西南北に散らばり1直線上を進み，1つ1つセルを訪れていく．これらの使い魔は林の外に出ると消える．\n  残りの使い魔は指定されたセルのみを訪問し，その後直ちに消える． より正確に言えば，K君がセル (i, j) に使い魔を召喚すると，i 行目か或いは\n  j 列目にある H+W-1 個のセルに対し，\n  木が生えていなければ木が植えられ，木が生えていれば木が消されるという操作が行われる． 召喚には多くの魔力を必要とするので，出来るだけ少ない召喚回数で林を木で覆いつくしたい．\n  K君はどのセルに使い魔を召喚すれば最小の召喚回数で林を木で覆いつくすことが出来るだろうか． 入力は以下の形式で与えられる． ai,j が 1 ならセル (i,j) に木が生えていることを意味し,\n  0なら生えていないことを意味する． もし林を木で覆いつくすことが不可能なら，1行に Impossible を出力せよ．\nそうでなければ，召喚回数を最小にするような召喚手順を以下の形式で H 行に出力せよ． bi,j は 0 もしくは 1 でなければならず,\n  1 ならセル (i,j) に使い魔を召喚する事を意味し，0 なら召喚しない事を意味する． 2回同じ場所に使い魔を召喚しても意味が無いことに注意せよ．召喚回数を最小にするような召喚手順が複数ある場合はどれを出力しても良い． この問題の判定には，3 点分のテストケースのグループが設定されている． このグループに含まれるテストケースは上記の制約に加えて下記の制約も満たす． セル (1,1) とセル (4,4) に使い魔を召喚することで林を木で覆いつくすことが出来る．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01527.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ H，W ≤ 1000\nH，W は偶数\nai,j ∈ {0, 1} この問題の判定には，3 点分のテストケースのグループが設定されている． このグループに含まれるテストケースは上記の制約に加えて下記の制約も満たす． H × W ≤ 20",
          "ranges": "1000; 20; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 4\n0 0 0 1\n0 1 1 0\n0 1 1 0\n1 0 0 0",
            "output": "もし林を木で覆いつくすことが不可能なら，1行に Impossible を出力せよ．\nそうでなければ，召喚回数を最小にするような召喚手順を以下の形式で H 行に出力せよ． b1,1 ... b1,W\n...\nbH,1 ... bH,W bi,j は 0 もしくは 1 でなければならず,\n  1 ならセル (i,j) に使い魔を召喚する事を意味し，0 なら召喚しない事を意味する． 2回同じ場所に使い魔を召喚しても意味が無いことに注意せよ．召喚回数を最小にするような召喚手順が複数ある場合はどれを出力しても良い．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01527.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01527"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01529",
        "title": "J - 刺身",
        "description": "きつねのしえるは川で釣りをしていた．黒くて細長い魚を手に入れることができたので，その場で切り刻んで刺身にして食べることにした． 魚は体長が N センチメートルある．奇妙なことに，この魚は身体の部分ごとに密度が異なっていた．\n魚の身体を頭から 1 センチメートルごとに区切って番号を 1, 2, ..., N と付けるとき，身体の i 番目の部分の重みは w_i であった．\n魚の i 番目から j 番目までの部分を [i..j] と表すことにする．\n最初，しえるは魚の身体 [0..N-1] を 1 枚だけ持っていると見なせる．しえるはこれを切っていき最終的に N 個に分割された魚の身体 [0..0], [1..1], ..., [N-1..N-1] を得たい． しえるは今野外におり，まな板などを持っていないので，次のようなアクロバティックな方法で魚の身体を切っていくことにした ： まず，魚の身体を 1 枚取る．これを [i..j] とする．この魚の身体は長さが少なくとも 2 センチメートル以上でなければならない．すなわち， j-i ≥ 1 でなければならない．次に，それを空中に投げる．そして日本刀を手に持ち，宙に舞う魚を真っ二つに切る．このとき，しえるは強靭な運動神経によって任意の位置でこの魚を切ることができるが，必ず 1 センチメートル区切りの位置で切るものとする．これにより，元の魚の身体 [i..j] を，任意の切断位置 k (i ≤ k < j) によって，[i..k] と [k+1..j] の 2 つに分割するのである．\nこのアクロバティックな方法で魚の身体を 2 つに切るとき，元の身体の重さ (=wi+wi+1+...+wj) だけコストがかかる． しえるは，魚のすべての部分を 1 センチメートル区切りに切るのにかかるコストの合計値を最小にしたい． 入力は以下の形式で与えられる． N は魚の体長である．wi は魚の i 番目の部分の重さである． 魚を N 個に切り分けるのにかかるコストの合計の最小値を出力せよ． この問題の判定には，3 点分のテストケースのグループが設定されている． このグループに含まれるテストケースは上記の制約に加えて下記の制約も満たす． まず，魚全体を 2 番目と 3 番目の部分の間で切る．これには 1+2+3 = 6 のコストがかかる．\n次に，1 番目と 2 番目の部分の間で切る．これには 1+2=3 のコストがかかる．合計で 6+3=9 のコストがかかり，これが最善手である．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01529.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 4,000\n1 ≤ wi ≤ 1010\n入力値はすべて整数である． この問題の判定には，3 点分のテストケースのグループが設定されている． このグループに含まれるテストケースは上記の制約に加えて下記の制約も満たす． 1 ≤ N ≤ 100",
          "ranges": "2 4; 1 1010; 1 100; 4; 1010; 100; 2; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n1 2 3",
            "output": "魚を N 個に切り分けるのにかかるコストの合計の最小値を出力せよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01529.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01529"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01530",
        "title": "K - XOR回廊",
        "description": "KU大学では一風変わったラリーゲームが人気である．\nこのゲームの舞台であるサーキットには，N 個の休憩所と M 個の道があり，i 番目の道は fi 番目の休憩所と ti 番目の休憩所の間にある．\nすべての道にはチェックポイントが一つずつ存在し，道 i のチェックポイントを通過するとどちらの向きで通っても pi の得点がXORで加算される．XORで加算される．大事なことなので2回言いました． このゲームでは，同じ休憩所や道を何度通っても良いし，\nゴールにたどり着いてもそのままラリーを続行することができるが，\n道の途中にあるチェックポイントを迂回して別の休憩所へ行くことは禁止されている．\nそのため，どのような道順をたどれば高い得点を取ることができるかを頑張って考えなければならない点が人気のある所以である． 今回は Q 人の参加者がいて，j 番目の参加者は aj の休憩所からスタートして，ゴールである bj の休憩所まで行くことになっているようだ．\n運営側の人間としてそれぞれの参加者の最高得点を前もって調べておくことにした． 入力は以下の形式で与えられる．なお休憩所の番号は0-indexedである． Q 行出力し，j 行目には aj 番目の休憩所から bj 番目の休憩所への経路で得られる得点の最大値を出力せよ． この問題の判定には，60 点分のテストケースのグループが設定されている．このグループに含まれるテストケースは上記の制約に加えて下記の制約も満たす．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01530.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 105\n0 ≤ M ≤ 2 × 105\n1 ≤ Q ≤ 105\n0 ≤ fi, ti < N, fi ≠ ti\n0 ≤ pi < 260\n0 ≤ aj, bj < N\nどの休憩所からでも，道を辿っていけば任意の休憩所へたどり着ける．\n休憩所 fi,ti 間を結ぶ道は高々一つしか存在しない．\n入力値はすべて整数である． この問題の判定には，60 点分のテストケースのグループが設定されている．このグループに含まれるテストケースは上記の制約に加えて下記の制約も満たす． M ≤ 20",
          "ranges": "1 105; 0 2; 1 105; 0 260; 105; 2; 105; 260; 20; 1; 0; 1; 0; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 5 3\n0 1 7\n1 2 22\n2 3 128\n3 4 128\n4 2 128\n0 1\n0 0\n3 4",
            "output": "Q 行出力し，j 行目には aj 番目の休憩所から bj 番目の休憩所への経路で得られる得点の最大値を出力せよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01530.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01530"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01538",
        "title": "かけざん",
        "description": "太郎君はかけざんを習いたての小学生です。なんとなく、彼はかけざんを気に入っているので、数字を見かけるとかけざんをしたくなります。そんな彼はここのところ、次のような処理を0以上の整数に施すことが好きなようです。\n\n\n(処理の流れ) 太郎君はこの処理を気に入っているようですが、何回手順2の操作を繰り返せばよいのか大きい数字だと予想ができず、もしかしたら無限回行われなければならないかもしれないと思っています。そこで、太郎君の兄であり大学生であるあなたに0以上の整数nに対してこの手順2を何回しなければならないかを聞いてきました。 あなたの仕事は、Q個の0以上の整数N1..NQが与えられるので、それぞれの整数で処理の終了までに何回の手順2が施されるかを求めることです。その際にもし無限回の手順が必要ならば、-1を出力してください。 切り分けた結果、桁の初めに0がつくものも考慮に入れる必要があります。\n例えばn=1024のとき、1*024 , 10*24 , 102*4をそれぞれ計算するとそれぞれ24,240,408となるため、408が選ばれ、これが次のnとなります。 Q個の整数を改行区切りで出力せよ 9は1桁の数なので、手順2が実行されることはありません。\n\n99は2桁であり、手順2を施せば9,9としか分割できずその次の数は81となる。\n81も2桁の数であり、手順2を施せば8,1としか分割できずその次の数は8となる。\n1桁の数になったので処理が終了し、答えは2。\n\n123は3桁の数なので、手順2を施します。\nこの場合は12,3と1,23の二つの分け方があり、それぞれでかけざんをすると36,23となるので、\n36が次の数として選ばれます。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01538.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤Q≤1000≤Ni≤106",
          "ranges": "1 1000; 1000; 106; 1; 1000"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n9\n99\n123",
            "output": "Q個の整数を改行区切りで出力せよ R1R2..RQ Riは、Niに対して処理を終了するまでに手順2を実行する回数を表す\nNiに対して手順2を無限回だけ実行する必要がある場合はRi は -1となる",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01538.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01538"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01539",
        "title": "全探索お姉さんの休日",
        "description": "全探索お姉さんはとても優秀な女性である。\nお姉さんは格子状の道の経路の数え上げを数千程度なら簡単に数え上げてしまう。\n\nあなたと全探索お姉さんは今、六角形のタイルが敷き詰められた部屋にいる。\nお姉さんは初めて見る六角形にとても興奮している様子である。\n六角形の並びを座標に表すことに不慣れなお姉さんは図1のような座標系で部屋を表した。 あなたはこの座標系上である地点からある地点まで移動したい。\nしかし、お姉さんは 1 分ごとに動きたい方向をあなたに指示する。\nいつものお姉さんなら同じ座標の場所を通らないようにあなたに移動の指示を出すだろう。\nしかし、この座標系に不慣れなお姉さんは|x×y×t|(x：x 座標、y：y座標、t:最初の指示からの経過時間[分])を 6 で割った余り\nに対応する方向（図で示す番号と対応）を指示するだけで、まったくのでたらめな方向にあなたを誘導する。 お姉さんを傷つけたくないあなたは、お姉さんの指示をできるだけ守りつつ目的地までたどり着きたい。\nあなたは許された行動は下の 7 つの行動である。 お姉さんが指示を出した直後にあなたはこれら行動のうちの必ず1つを行う。\n\n部屋には家具があり家具が配置されているタイルの中に移動することはできない。\nまた、y 座標の絶対値が ly を超えたり x 座標の絶対値が lx を超えるような移動は許されていない。\nしかし、お姉さんはそのような移動を指示することがある。\n指示を無視するとはお姉さんが示した方向と異なる方向へ移動するか、\nもしくは、その場に留まることである。\n\n目的地にたどり着くために最小で何度指示を無視すれば良いかを出力せよ。\n目的地にたどり着くことが不可能な場合は -1 を出力せよ。 入力は以下の形式で与えられる。 ここで、 出力は1つの整数を含む1行で出力せよ。\n目的地にたどり着ける場合は、最小の指示を無視する回数を出力せよ。\n目的地にたどり着くことが不可能な場合は-1を出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01539.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力はすべて整数\n -lx ≤ sx, gx ≤ lx\n -ly ≤ sy, gy ≤ ly\n (sx, sy) ≠ (gx, gy)\n (xi, yi) ≠ (sx, sy)(1≤i≤n)\n (xi, yi) ≠ (gx, gy)(1≤i≤n)\n (xi, yi) ≠ (xj, yj)(i ≠ j)\n 0≤ n ≤ 1000\n -lx ≤ xi ≤ lx (1≤i≤n)\n -ly ≤ yi ≤ ly (1≤i≤n)\n 0 < lx, ly ≤ 100",
          "ranges": "0 1000; 1000; 100; 1; 1; 0; 1; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "0 0 0 2\n0\n2 2",
            "output": "出力は1つの整数を含む1行で出力せよ。\n目的地にたどり着ける場合は、最小の指示を無視する回数を出力せよ。\n目的地にたどり着くことが不可能な場合は-1を出力せよ。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01539.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01539"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01540",
        "title": "宝探し",
        "description": "太郎君はある広場にお宝を探しにやってきました。この広場にはたくさんのお宝が埋められていますが、太郎君は最新の機械を持っているので、どこにお宝が埋まっているかをすべて知っています。広場はとても広いので太郎君は領域を決めてお宝を探すことにしましたが、お宝はたくさんあるためどのお宝がその領域の中にあるかすぐにわかりません。そこで太郎君はその領域の中にあるお宝の数を数えることにしました。 領域の境界線上にあるお宝も領域に含まれるものとみなす 領域は直線や点のようになる場合もある 同じ場所に複数のお宝が存在する場合もある",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01540.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 50001 ≤ m ≤ 5×105|xi|, |yi| ≤ 109 (1 ≤ i ≤ n)|xi1|, |yi1|, |xi2|, |yi2| ≤ 109 (1 ≤ i ≤ m)xi1 ≤ xi2, yi1 ≤ yi2 (1 ≤ i ≤ m) すべての入力は整数で与えられる",
          "ranges": "1 50001; 50001; 5; 1; 50001; 1; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 1\n1 1\n2 4\n5 3\n0 0 5 5",
            "output": "C1C2...Cm それぞれの領域に含まれるお宝の数を各行に出力せよ",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01540.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01540"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01541",
        "title": "ほそながいところ",
        "description": "高橋君は苹果(りんご)ちゃんとニューヨークを観光することになりました。\n高橋君は観光するところに特に希望はなかったのですが、苹果ちゃんの熱烈な誘いにより、以下の地図にあるような\"ほそながいところ\"を観光することに決まりました。 この\"ほそながいところ\"はとても細長く、直線とみなすことができます。また、\"ほそながいところ\"には片方の端にスタート地点が、もう片方の端にゴール地点があり、スタート地点からゴール地点へ向けて何台かの観光用の馬車が走っています。この馬車は以下のようなルールに従って運行されています。 また、先述した\"ほそながいところ\"と\"すこしひろいところ\"について、以下の制約を満たします。 これを聞いた高橋君は、以上に述べた馬車運行のルールを守りつつ馬車の出発時刻を調整することにより、1台目の馬車が発車してからすべての馬車が到着するまでにかかる時間を小さくできることを見抜きました。\n\n高橋君の出した結果を知るために、\n馬車の台数n , それぞれの馬車の速度に関するパラメータSi,\"ほそながいところ\"上に存在する\"すこしひろいところ\"の総数m ,それぞれの\"すこしひろいところ\"のスタート地点からの距離Di が与えられるので、\n1台目の馬車が発車してからすべての馬車が到着するまでにかかる時間の最小値を求めるプログラムを書くことがあなたの仕事です。\n\n\nなお、苹果ちゃんは\"ほそながいところ\"での観光を存分に楽しみましたが、高橋君はこの観光の後には「ほそながかった…」としかつぶやかなかったそうです。 入力形式は以下のようになっている。 1台目の馬車が発車してからすべての馬車が到着するまでにかかる時間の最小値を1行に出力せよ。単位は分である。 2台目は1台目が出発した1分後に出発する。 2台目は1台目が出発した100分後に出発し、ゴールで1台目に追いつく。 2台目は1台目が出発した50分後に出発し、50mのひろいところで1台目を抜く。\n3台目は1台目が出発した100分後に出発し、ゴールで1台目に追いつく。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01541.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤dist≤100000000(108)1≤n≤50≤m≤51≤Si≤1000<Di<disti≠jならばDi≠Dj入力に出現する数はすべて整数である。 i < jならば、i番目に出発する馬車はj番目の馬車より1分以上早く出発しなければならない",
          "ranges": "1 100000000; 1 50; 51 1000; 100000000; 50; 51; 1000; 1; 1; 50; 51; 1000"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "100\n2\n1\n2\n0",
            "output": "1台目の馬車が発車してからすべての馬車が到着するまでにかかる時間の最小値を1行に出力せよ。単位は分である。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01541.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01541"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01543",
        "title": "まるかいて",
        "description": "太郎君は小学生で、チラシの裏に落書きをしています。\n\nある時、太郎君は次のゲームを思いつきました。 太郎君はこのゲームを思いつきましたが、太郎君はこのゲームをクリアするのに大変時間がかかってしまいます。そこで、大学生であるあなたに助けを求めました。\n\n太郎君の兄であり大学生であるあなたの仕事は以下の通りです。\n厳密な状況を考えるために、あるマス目に丸印を書き込むコスト、あるマス目にある丸印を消すコストをあなたは導き出しました。このコストを用いてこのゲームをクリアするためにかかる操作のコストを最小化するような手順を考える。\nこのとき、最小のコストおよびそのコストを達成するような手順を出力するプログラムを書いてください。\n出力については、最小コストを達成する手順なら、どのような操作、順番でも出力してもよいものとする。 上から1番目、左から3番目のマス目の丸印を消去し、\n上から2番目、左から3番目のマス目に丸印を書き加えれば目標は達成できる。\nこのときコストは2のみしかかからず、これが最小のコストである。 コスト(1+2+3+4)*3だけ消去処理をすればクリアとなります。 すでに目標は達成されているため、コスト及び操作回数はともに0となる。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01543.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤ n ≤ 1001≤ Wij ≤ 10001≤ Eij ≤ 1000 Fiは文字列であり、その長さはnである\nFiは'o'と'.'のみで構成されている",
          "ranges": "1 1001; 10001 1000; 1001; 10001; 1000; 1; 1001; 10001"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n1 1 1\n1 1 1\n1 1 1\n1 1 1 \n1 1 1\n1 1 1\no.o\n...\n.o.",
            "output": "mincostcntR1 C1 operate1R2 C2 operate2..Rcnt Ccnt operatecnt mincostは、太郎君のゲームをクリアするために必要な最小コストを表す。\nmincostは書き込み操作、消去操作で発生するコストの総和で計算される。\ncnt : mincostのコストを達成する操作を行った回数を表す\nk回目(1≤k≤cnt)に実行する操作はk+2行目に記述する\nk回目(1≤k≤cnt)の操作に対して\n\n上からi番目のマス目、左からj番目のマス目に対して行ったものとすると\nRkkである。\nこの操作が丸印を消す操作であるならばoperatek = \"erase\"とせよ\nこの操作が丸印を書き込む操作であるならばoperatek = \"write\"とせよ\nRk,Ck,operatekは一行に空白区切りで出力しなければならない\n\n丸印の書かれてあるマス目に対して丸印を記述する操作、および丸印が書かれていないマス目に対して丸印を消去する操作をした場合はWrongAnswerである\ncnt個の操作にかかるコストの総和がmincostに一致しないときはWrongAnswerである",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01543.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01543"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01544",
        "title": "最長増加列問題",
        "description": "時は過ぎて太郎君は高校生になりました。\n大学生だったお兄さんの影響も受け、コンピューターサイエンスに興味を持ち始めました。\n\n太郎君はコンピューターサイエンスの教科書を読み進め、「最長増加部分列問題」という有名問題があることを知りました。太郎君はこの問題のことを理解しましたが、自分でも類似問題が作れないものかと気になりました。\n\nそこで太郎君は試行錯誤の結果に次のような問題を作りました。 例えば、数列Aが{5,-4,10,-3,8}の場合を考えてみる。\n区切りの位置を表す数列Cを用意し、C={2,4}とする。\nこのとき、数列Aは(5,-4),(10,-3),(8)の部分に分かれ、これらの内部を足し合わせるとそれぞれ1,7,8となり、出来上がる数列Bは{1,7,8}となる。 太郎君はこの問題について\"最長増加列問題\"と名付け、これを解くアルゴリズムも考えました。\nそして社会人になったあなたにチェックをしてほしいと連絡をしました。\n\nあなたの仕事は、成長した太郎君の作った問題を解くプログラムを作ることです。\nチェックするのが仕事なので、m-1個の区切りの位置も出力します。\nなお、最適なmに対してこのような区切り方が複数考えられる場合もありますが、このmが正しく出力されていれば、考えられるもののうち一つを出力すればよいです。 改行区切りでn+1個の整数が与えられる。 もともと増加列なので、すべての場所に区切りを入れればよい 2 2 2は増加列でないので、3つに分割することはできない どう分割しても増加列にはならないため、分割をしない",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01544.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤n≤4000|Ai|≤ 108 整数kに対して|k|はkの絶対値を表す",
          "ranges": "1 4000; 4000; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n1\n2\n4",
            "output": "mC1 C2 .. Cm-1 1行目は一つの整数mを出力する。\nmは最終的にできる数列Bの長さを表す。\n2行目はm-1個の整数Ciを空白区切りで出力する。\nCiは、数列Aをm個の部分に適切に区切った時のi番目の区切り場所を表す。\n区切り場所の定義は図を参照せよ。なお、1≤Ci<n を満たす。\n2行目のm-1個の整数列Cは昇順に並んでいなければならないしたがって、i < j ならば\nCi < Cj が成立する。 m=1の場合2行目は空行になる。\n数列Cに従って数列Aから数列Bを生成したとき、数列Bが増加列になっていないとき(すなわちBi≥Bi+1となるi(1≤i<m)が存在するとき)、WrongAnswerとなる",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01544.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01544"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01545",
        "title": "引越し",
        "description": "太郎君は引っ越しをすることになりました。太郎君はたくさんの荷物を持っているので、荷物の運搬を引っ越し業者に頼むことにしました。荷物はいろいろな重さの物があるので、わかりやすいように軽い方から順番に並べて置いてもらうように頼みましたが、引っ越し業者の人はばらばらの順番で荷物を置いていってしまいました。そこで太郎君は荷物を並べ替えようとしましたが、荷物は重いので運ぶのには体力が必要です。それぞれの荷物は今ある場所から他の荷物の間や荷物の端など好きな場所に運ぶことができますが、ある荷物を運ぶにはその荷物の重さと同じだけ体力を使います。太郎君はあまり体力がないので、できるだけ体力を使わずに荷物を軽い方から順番に並べる方法を考えることにしました。 重さ4の荷物を右端に運ぶと重さの軽い順になります 重さ2の荷物を重さ1の荷物の右側に運び、重さ5の荷物を右端に運ぶと重さの軽い順になります 最初から重さの軽い順に並んでいます",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01545.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 1051 ≤ xi ≤ n (1 ≤ i ≤ n)xi ≠ xj (1 ≤ i, j ≤ n かつ i ≠ j) 入力はすべて整数で与えられる",
          "ranges": "1 1051; 1051; 1; 1051; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n1 4 2 3",
            "output": "S 荷物を軽い方から順番に並べるのに必要な最小の体力の合計Sを出力せよ、ただし最後に改行を出力せよ",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01545.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01545"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01546",
        "title": "Sports Days 2.0",
        "description": "会津大学附属小学校（会津大小）は日本有数の競技プログラマー養成校として有名である。\nもちろん、運動会に参加しているときでさえアルゴリズムの修行を欠かせない。\n競技プログラミング部部長のあなたはもちろんこの大会でも勝利したい。\n今回はある競技に注目する。 ある競技とは会津大小で行われている伝統的な競技だ。\n校庭にコーンがV個置いてある。\nコーンのいくつかのペアは白線で描かれた矢印で結ばれている。\n矢印の先は片側だけについており、整数が併記されている。\n同じコーンのペアがの複数の矢印に結ばれている場合もある。 競技者は任意にコーンを選び、移動開始する。\n移動は競技者がいるコーンから矢印の上をその向きに移動し、次のコーンへ移る。\n同じコーン、同じ矢印を何度も辿っても良い。\n競技者はコーンからコーンへの移動後、さらに移動するか移動を終了をするかを選択することができる。 この競技の目的は矢印を辿ることにより、スコアをK以上にすることである。\nスコアは矢印を辿る度に併記された整数値が加算されていく。\nより少ない経由する矢印の本数でスコアをK以上にした競技者が勝利となる。\n矢印が同じ本数の場合はより高いスコアの競技者が勝利となる。 このルールで最適な動きを競技者が行った場合、何本の矢印を経由すべきか出力せよ。\nまた、経由した矢印の数が100本以下の場合、経由すべきコーンを順にすべて出力せよ。\n最適な動きが複数存在する場合があるが、どの動きの結果を出力しても良い。\nスコアをK以上にする動きが存在しない場合は-1を出力せよ。 また、コーンにはすべて0からV-1までの番号が振られており、\n色はすべて緑色（意味深）である。 入力は以下の形式で与えられる。 ここで、 である。 入力は以下の条件を満たす。 出力は2行からなる。 最適な動きが複数存在する場合があるが、どの動きの結果を出力しても良い。\n経由すべき矢印の本数が100本を越える場合、2行目は出力してはいけない。\nスコアをK以上にする最適な動きが存在しない場合は-1を1行目に出力し、\n2行目に何も出力してはいけない。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01546.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 入力はすべて整数\n\n2≤V≤150\n\n0≤E≤V×V\n\n0<K≤106\n\n0≤ vi1, vi2 < V      (0<i≤E)\n\nvi1 ≠ vi2 (0<i≤E)\n\n0<ci ≤ 100           (0<i≤E)\nvi1 = vj1 かつ vi2 = vj2 (i ≠ j, 0<i,j≤E)となるようなi, jが含まれる入力も存在する。",
          "ranges": "2 150; 0 106; 0 100; 150; 106; 100; 2; 0; 0; 0; 2; 0; 0; 0; 0; 1; 2; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 9 89\n2 0 2\n1 0 3\n2 0 1\n2 0 3\n0 1 1\n0 1 2\n1 2 3\n0 1 1\n1 0 2",
            "output": "出力は2行からなる。 1行目　最適な動きを行った場合の経由する矢印の本数で出力\n2行目　経由すべきコーンの番号を経由する順番に空白区切りで出力 最適な動きが複数存在する場合があるが、どの動きの結果を出力しても良い。\n経由すべき矢印の本数が100本を越える場合、2行目は出力してはいけない。\nスコアをK以上にする最適な動きが存在しない場合は-1を1行目に出力し、\n2行目に何も出力してはいけない。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01546.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01546"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01554",
        "title": "Kagisys",
        "description": "ある部屋ではICカードを用いて鍵を開け閉めする電子錠システムを用いている。\nこのシステムは以下のように動作する。 各ユーザーが持つICカードを扉にかざすと、そのICカードのIDがシステムに渡される。\nシステムはIDが登録されている時、施錠されているなら開錠し、そうでないのなら施錠し、それぞれメッセージが出力される。\nIDが登録されていない場合は、登録されていないというメッセージを出力し、開錠及び施錠はおこなわれない。 さて、現在システムにはN個のID(U1, U2, ……, UN)が登録されており、施錠されている。\nM回ICカードが扉にかざされ、そのIDはそれぞれ順番にT1, T2, ……, TMであるとする。\nこの時のシステムがどのようなメッセージを出力するか求めよ。 入力は以下の形式で与えられる。 N, Mは整数である 1 ≤ N ≤ 256 Uiは1文字以上10文字以下の小文字英字のみからなる文字列である Uiはユニークである(i ≠ jならばUi ≠ Uj) 1 ≤ M ≤ 256 Tiは1文字以上10文字以下の小文字英字のみからなる文字列である 各T1, T2, ……, TMについて、 開錠された時は、\"Opened by \"の後に続けてIDを、 施錠された時は、\"Closed by \"の後に続けてIDを、 IDが登録されていないものだった場合は\"Unknown \"の後に続けてIDを\nそれぞれ1行に出力せよ。 初期状態では施錠された状態である。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01554.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "N, Mは整数である\n1 ≤ N ≤ 256\nUiは1文字以上10文字以下の小文字英字のみからなる文字列である\nUiはユニークである(i ≠ jならばUi ≠ Uj)\n1 ≤ M ≤ 256\nTiは1文字以上10文字以下の小文字英字のみからなる文字列である",
          "ranges": "1 256; 1 256; 256; 256; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\nabcd\nefgh\nijkl\nmnop\n5\nabcd\nabcc\nefgh\nabcd\nmnop",
            "output": "各T1, T2, ……, TMについて、 開錠された時は、\"Opened by \"の後に続けてIDを、\n施錠された時は、\"Closed by \"の後に続けてIDを、\nIDが登録されていないものだった場合は\"Unknown \"の後に続けてIDを\nそれぞれ1行に出力せよ。 初期状態では施錠された状態である。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01554.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01554"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01555",
        "title": "FizzBuzz",
        "description": "FizzBuzzとは、1以上の整数を順に、以下のルールに従って発言していくゲームである。 3で割り切れる時には「Fizz」 5で割り切れる時には「Buzz」 3と5の両方で割り切れる時には「FizzBuzz」 それ以外の時はその数字 ゲームの進行状況の例を以下に示す。 1, 2, Fizz, 4, Buzz, Fizz, 7, 8, Fizz, Buzz, 11, Fizz, 13, 14, FizzBuzz, 16, … 得られた発言を1つの文字列に結合し得られた文字列をFizzBuzz Stringと呼ぶ。インデックスsが与えられるので、FizzBuzz Stringのs文字目から20文字を出力せよ。但し、インデックスは1から始まるものとし、得られた文字列の長さは十分に大きい（s+20以上）としてよい。 入力は以下の形式で与えられる sは整数である 1 ≤ s ≤ 1018 FizzBuzz Stringのs文字目から20文字を1行に出力せよ",
        "difficulty": "Easy",
        "category": "Arrays & Strings",
        "tags": [
          "string"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01555.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "sは整数である\n 1 ≤ s ≤ 1018",
          "ranges": "1 1018; 1018; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1",
            "output": "FizzBuzz Stringのs文字目から20文字を1行に出力せよ",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01555.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01555"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01556",
        "title": "Convex-Cut",
        "description": "N個の頂点からなる凸多角形が与えられる。各頂点の座標は反時計周りに(X1, Y1), (X2 ,Y2), ……, (XN, YN)で表わされる。\n点Pを通るどのような直線で凸多角形を切断しても、切断後に得られる2つの凸多角形の面積が等しいような点Pの座標を求めよ。 入力は以下の形式で与えられる。 入力は全て整数である 3 ≤ N ≤ 50 0 ≤ |Xi|, |Yi| ≤ 1000000 入力の多角形は単純な凸多角形である。 出力は、出力座標を(X, Y)、厳密解を(cX, cY)とした時にmax(|X-cX|, |Y-cY|) ≤ 0.0001を満たす必要がある 問題文の条件を満たす点があるのならば、その点の座標を\nX Y\n\nの形式で出力せよ。\n点が存在しない場合は\"NA\"と1行に出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01556.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は全て整数である\n3 ≤ N ≤ 50\n0 ≤ |Xi|, |Yi| ≤ 1000000\n入力の多角形は単純な凸多角形である。\n出力は、出力座標を(X, Y)、厳密解を(cX, cY)とした時にmax(|X-cX|, |Y-cY|) ≤ 0.0001を満たす必要がある",
          "ranges": "3 50; 50; 3"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n100 100\n0 100\n0 0\n100 0 以下の図に対応する。",
            "output": "問題文の条件を満たす点があるのならば、その点の座標を\nX Y\n\nの形式で出力せよ。\n点が存在しない場合は\"NA\"と1行に出力せよ。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01556.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01556"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01557",
        "title": "Reverse Sort",
        "description": "1 ∼ NまでのN個の数字の順列A1, A2, ……, ANが与えられる。\nこの順列に対して区間[i, j](1 ≤ i ≤ j ≤ N)の数字の順序を逆順にする操作reverse(i, j)を行うことが出来る。\n例えば、[1, 2, 3, 4, 5]に対してreverse(2, 4)を適用すると[1, 4, 3, 2, 5]となる。\n最小で何回の操作を行えば順列を昇順にソートされた状態にすることが出来るか計算せよ。 入力は以下の形式で与えられる。 Nは整数である 2 ≤ N ≤ 10 問題の解を1行に出力せよ。 reverse(4,5):1 4 3 2 5 reverse(2,4):1 2 3 4 5 のようにすればよい。 例えば reverse(1,2):1 3 5 2 4 reverse(3,5):1 3 4 2 5 reverse(2,4):1 2 4 3 5 reverse(3,4):1 2 3 4 5 のようにすればよい。",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01557.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "Nは整数である\n2 ≤ N ≤ 10",
          "ranges": "2 10; 10; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n1 4 3 5 2",
            "output": "問題の解を1行に出力せよ。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01557.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01557"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01558",
        "title": "Substring",
        "description": "長さnの文字列s=s1,s2,…,snおよびm個のクエリが与えられる。\n各クエリqk (1 ≤ k ≤ m)は、\"L++\", \"L--\", \"R++\", \"R--\"の4種類のいずれかであり、\nk番目のクエリqkに対してl[k]とr[k]を以下で定義する。 L++：l[k]=l[k-1]+1,r[k]=r[k-1] L--：l[k]=l[k-1]-1,r[k]=r[k-1] R++：l[k]=l[k-1],r[k]=r[k-1]+1 R--：l[k]=l[k-1],r[k]=r[k-1]-1 但し、l[0]=r[0]=1である。 この時、m個の部分文字列\nsl[k], sl[k]+1, …, sr[k]-1, sr[k] (1 ≤ k ≤ m)\nについて、何種類の文字列が作られるかを答えよ。 入力は以下の形式で与えられる 文字列sは小文字アルファベットからなる 1 ≤ n ≤ 3×105 1 ≤ m ≤ 3×105 qk(1 ≤ k ≤ m)は、\"L++\"、\"L--\"、\"R++\"、\"R--\"のいずれか 1 ≤ l[k] ≤ r[k] ≤ n (1 ≤ k ≤ m) 問題の解を1行に出力せよ l[1]=1, r[1]=2であり、部分文字列は\"ab\"である l[2]=1, r[2]=3であり、部分文字列は\"abc\"である l[3]=2, r[3]=3であり、部分文字列は\"bc\"である l[4]=1, r[4]=3であり、部分文字列は\"abc\"である よって、生成される文字列は{\"ab\",\"abc\",\"bc\"}の3種類である。 l[1]=1, r[1]=2であり、部分文字列は\"ab\"である l[2]=2, r[2]=2であり、部分文字列は\"b\"である l[3]=2, r[3]=3であり、部分文字列は\"ba\"である l[4]=3, r[4]=3であり、部分文字列は\"a\"である l[5]=3, r[5]=4であり、部分文字列は\"ab\"である l[6]=4, r[6]=4であり、部分文字列は\"b\"である よって、生成される文字列は{\"a\",\"ab\",\"b\",\"ba\"}の4種類である。",
        "difficulty": "Easy",
        "category": "Arrays & Strings",
        "tags": [
          "string"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01558.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "文字列sは小文字アルファベットからなる\n 1 ≤ n ≤ 3×105\n 1 ≤ m ≤ 3×105\n qk(1 ≤ k ≤ m)は、\"L++\"、\"L--\"、\"R++\"、\"R--\"のいずれか\n 1 ≤ l[k] ≤ r[k] ≤ n (1 ≤ k ≤ m)",
          "ranges": "1 3; 1 3; 3; 3; 1; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 4\nabcde\nR++\nR++\nL++\nL--",
            "output": "問題の解を1行に出力せよ",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01558.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01558"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01559",
        "title": "MinimumCostPath",
        "description": "NxNの方眼がある。 (N=3の場合の図) 隣接するマス目に移動するにはコストが1かかる。ただし、斜めに移動することは出来ない。\nまた障害物があるマス目がM個あり、そのマスに入ることは許されない。\nマス(1, 1)からマス(N, N)に最小のコストで移動する方法は何通りあるか。\n答えは大きくなることがありうるので、1000000009(=109+9)でMODを取って出力せよ。 入力は以下の形式で与えられる Xi, Yiは(Xi, Yi)に障害物があることを表す 2 ≤ N ≤ 106 0 ≤ M ≤ 50 1 ≤ Xi , Yi ≤ N i ≠ jならば (Xi, Yi) ≠ (Xj, Yj) (Xi, Yi) ≠ (1, 1) (Xi, Yi) ≠ (N, N) 1行に経路の総数を出力せよ。ただし、マス(1, 1)からマス(N, N)に移動する経路が存在しない場合は0と出力せよ。",
        "difficulty": "Easy",
        "category": "Sorting & Searching",
        "tags": [
          "sorting",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01559.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 106\n 0 ≤ M ≤ 50\n 1 ≤ Xi , Yi ≤ N\n i ≠ jならば (Xi, Yi) ≠ (Xj, Yj)\n (Xi, Yi) ≠ (1, 1)\n (Xi, Yi) ≠ (N, N)",
          "ranges": "2 106; 0 50; 106; 50; 2; 0; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 0",
            "output": "1行に経路の総数を出力せよ。ただし、マス(1, 1)からマス(N, N)に移動する経路が存在しない場合は0と出力せよ。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01559.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01559"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01560",
        "title": "Enumeration",
        "description": "n個の整数a1, a2, …, anとn個の整数p1, p2, …, pn、整数mが与えられる。k番目の整数akをpk[%]の確率で選ぶ、という操作を各k(1 ≤ k ≤ n)について行い、0個以上n個以下の整数を選び出す。1以上m以下の整数の中で、選ばれた整数の少なくとも1つで割り切れるものの個数の期待値を求めよ。 入力は以下の形式で与えられる。 1 ≤ n ≤ 20 1 ≤ m ≤ 1018 1 ≤ ak ≤ 1018 (1 ≤ k ≤ n) 1 ≤ pk ≤ 99 (1 ≤ k ≤ n) 問題の解を1行に出力せよ。出力には絶対誤差あるいは相対誤差で0.0000001(= 10-7)を超える誤差があってはならない。 よって0.25 × (0 + 5 + 3 + 7) = 3.75",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01560.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 20\n 1 ≤ m ≤ 1018\n 1 ≤ ak ≤ 1018 (1 ≤ k ≤ n)\n 1 ≤ pk ≤ 99 (1 ≤ k ≤ n)",
          "ranges": "1 20; 1 1018; 1 1018; 1 99; 20; 1018; 1018; 99; 1; 1; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 15\n3 5\n50 50",
            "output": "問題の解を1行に出力せよ。出力には絶対誤差あるいは相対誤差で0.0000001(= 10-7)を超える誤差があってはならない。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01560.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01560"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01627",
        "title": "Problem A: 青春18きっぷ 2013",
        "description": "会津合宿に参加予定の高槻さんは、家が貧乏であまりお金を持っていない。そのため、青春18きっぷを使用して、お金を節約しようとしている。18きっぷは、これ1枚だけで、鈍行列車ならば1日中乗り放題、改札の出入りも自由という優れものである（詳しい利用ルールについては省略）。 18きっぷの魅力は、乗り換えを行う駅で、空いている時間を使って、ご当地のお土産等を見てまわれる点である。彼女は、せっかくの機会なので、旅の途中でいろいろな駅を見て回りたいと考えている。ただし、次の電車に乗り遅れては困るため、乗り換え駅に到着した時刻から、乗り換え駅を出発する時刻までの間がT分以上のときだけ、その駅を見て回ることにした。 高槻さんの18きっぷを使った乗り換え計画が与えられるので、見て回れる駅の名前と時間を出力せよ。一番最初に出発する駅と、一番最後に到着する駅は、見て回る候補には入らないことに注意してほしい。 Nは列車に乗車する回数を表わす整数、Tは乗り換え駅を見て回れる許容時間(分)を表わす整数である。続いて、N行にわたって、列車の出発と到着のペアが与えられる。各行の入力は、st_timeiの時刻ちょうどにst_nameiの駅を高槻さんの乗る列車が出発することを、ar_timeiの時刻ちょうどにar_nameiの駅に高槻さんの乗る列車が到着することを意味する。 各データセットについて、以下の形式で出力を行う。 M（0 <= M <= N - 1）は、見て回れる駅の数を表わす整数である。続いて、M行にわたって、見て回れる駅のリストを時刻の昇順に出力する。各行は、stay_nameiの駅をstay_timei分間見て回れることを意味する。 Kanazawa駅は、10:03に到着し10:58に出発するため、乗り換えに55分の空き時間がある。Niitsu駅は、17:14に到着し17:38に出発するため、乗り換えに24分の空き時間がある。どちらも、入力で指定された24分以上の空き時間があるため、出力する。 乗り換え駅は1つもないため、0と出力する。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01627.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 <= N <= 10\n1 <= T <= 180\nst_timei、ar_timei\n\n\"HH:MM\"により表わされ、HHには00以上23以下、MMには00以上59以下の2桁の数値が入る。HHが時間で、MMが分である。\n00:00 <= st_time1 < ar_time1 < st_time2 < ar_time2 < ... < st_timeN < ar_timeN <= 23:59\n\nst_namei、ar_namei\n\nアルファベット大文字・小文字により表わされる文字列である。\n1 <= 文字列の長さ <= 50\ni番目の到着駅ar_nameiと、i+1番目の出発駅st_namei+1の名前は一致する。\nst_name1、ar_nameN、乗り換えの駅の名前は、それぞれ異なる文字列である。",
          "ranges": "1; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "8 24\n05:30 Kyoto 06:37 Maibara\n06:50 Maibara 07:36 Tsuruga\n07:42 Tsuruga 10:03 Kanazawa\n10:58 Kanazawa 12:07 Toyama\n12:15 Toyama 14:12 Naoetsu\n14:29 Naoetsu 15:57 Nagaoka\n16:11 Nagaoka 17:14 Niitsu\n17:38 Niitsu 20:06 AizuWakamatsu",
            "output": "各データセットについて、以下の形式で出力を行う。 M\nstay_name1 stay_time1\nstay_name2 stay_time2\n...\nstay_nameM stay_timeM M（0 <= M <= N - 1）は、見て回れる駅の数を表わす整数である。続いて、M行にわたって、見て回れる駅のリストを時刻の昇順に出力する。各行は、stay_nameiの駅をstay_timei分間見て回れることを意味する。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01627.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01627"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01638",
        "title": "Problem E: Pie Chart is as easy as pie.",
        "description": "ICPC World Finals 3日目 この日、ティー氏はチーム内の言語使用割合を調べていた。\n珍しいことに、我々のチームは使用言語を統一していない。 調査の結果、2人がC++、1人がJavaを使っていることが分かった。\nさて、これをパイチャート（円グラフ）にしてみよう。 おや、Javaの使用割合が少ないように見えるな。\nどう考えてもこんなはずはないので少々手を加えよう。 これは最近流行りのテクニックであり、\n「パイチャートの中心座標をずらす」というものだ。 （皆さんはマネしてはいけません。） うむ、これでバランスがとれた。 ところで面積はどのように変わったのだろう？ 半径\\(r\\)、項目数\\(n\\)のパイチャート（円グラフ）が与えられる。\n項目\\(i\\)の構成比率は\\( p_{i} \\)[%]であり、座標\\( (0, r)\n\\)から時計回りに項目が割り当てられる（下図を参照）。 パイチャートの中心座標が\\( (0, 0) \\)から\\( (x, y)\n\\)に変化した時、 各項目の占める面積は何%変化するかを求めよ。 1行目に各項目の占める面積の変化率[%]を「整数に切り捨てた値」を空白区切りで出力せよ。 項目1の面積は約21048から約15153に変化した。 変化率は15153/21048 ≒\n71.99%。 項目2の面積は約10367から約16262に変化した。 変化率は16262/10367 ≒\n156.86%。 項目ごとのおよその面積の変化は以下の通り。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01638.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は全て整数で与えられる\n\\( r = 100 \\)\n\\( x^{2} + y^{2} < r^{2} \\)\n\\( 2 \\leq n \\leq 10 \\)\n\\( p_{i} > 0 (1 \\leq i \\leq n) \\)\n\\( \\sum_{1 \\leq i \\leq n}p_{i} = 100 \\)\n\\( (x, y) \\)が高々距離\\( 10^{-3} \\)移動しても答えが変化しないことが保証される",
          "ranges": "100"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "r x y n\np1 p2 … pn 1行目に パイチャートの半径\\(r\\)、中心のx座標\\(x\\)、y座標\\(y\\)、項目数\\(n\\)が空白区切りで与えられる。\n2行目には、 項目\\(i\\)の構成比率\\( p_{i} \\)[%]が空白区切りで与えられる。",
            "output": "1行目に各項目の占める面積の変化率[%]を「整数に切り捨てた値」を空白区切りで出力せよ。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01638.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01638"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01644",
        "title": "Problem K: Collector",
        "description": "※この物語はフィクションであり、実在の人物、団体などとは一切関係がありません。 最近ソーシャルゲームがとても人気で、\nたくさんの会社がソーシャルゲームを開発しています。 あなたは競合しているソーシャルゲーム開発会社の一つにスパイとして潜入しています。 あなたの務めている会社では、ソーシャルゲームを開発している。\n開発しているゲームは、カードを集めて戦うゲームであり、1回300円の有料”ガチャガチャ”を収益の柱にしている。\nこのゲームのカードには、”ノーマル”、”レア”、”Sレア”の3種類がある。”Sレア”カードはN種類存在する。\n有料”ガチャガチャ”では、1回行うごとに97％の確率で1枚のレアカードが手に入り、3%の確率で1枚のSレアカードが手に入る。 有料”ガチャガチャ”における各Sレアカードの出現割合(合計3%)を操作する権限を持っているあなたは、\n会社の利益を「減少」させることにした。 まず、様々なプレイヤーの有料”ガチャガチャ”の利用傾向を調べたところ、 「各プレイヤーは、\n各々の好きなSレアカードを引くと、 満足し、その後は”ガチャガチャ”の利用を行わない」ということが明らかになった。 以上の情報より、\nあなたは ”各プレイヤーは、特定のSレアカードを好み、そのSレアカードを引くまでガチャガチャをし続ける”\nという仮定の下で会社の利益をモデル化した。 すなわち会社の利益とは、 Sレアカードiを好む人の割合 ×\nSレアカードiが得られるまでの消費金額の期待値 の総和である。 Sレアカードの出現割合を適切に操作することで、 会社の利益を「最小化」せよ。 ただし、出現割合は以下の条件を満たさなければならない。 問題文で定義された会社の利益の最小値を出力せよ。 カード1は\\( 0.01% \\)の割合で出現し、カード2は\\( 2.99% \\)の割合で出現するように設定する。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01644.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "\\( N \\)は整数\n\\( 1 \\leq N \\leq 300 \\)\n\\( 0.0 \\leq P_i (1 \\leq i \\leq N) \\leq 1.0 \\)\n\\( P_1 + P_2 + \\cdots + P_N = 1.0 \\)\n\\( P_i \\)は小数点以下5桁まで与えられる\n誤差は相対\\( 10 ^ {-6} \\) まで許容される",
          "ranges": "1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "N (Sレアカードの種類)\nP_1 (カード1が好きな人の割合)\nP_2 (カード2が好きな人の割合)\n...\nP_N (カードNが好きな人の割合)",
            "output": "問題文で定義された会社の利益の最小値を出力せよ。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01644.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01644"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01656",
        "title": "A - 旧総合研究７号館",
        "description": "時は平成50年春休み．情報学研究科に所属する京子さんは，京都にある某研究パークからの研究室の引越しがやっと終わり，ホッと一息ついていた．\n今回の引越しは，古くなった校舎の改修工事によるもので，新年度から工事に伴い校舎の名前が変更されることになっている． ホッとしていたのもつかの間，京子さんは先生から大学の資料に載っている校舎名を新しい名前に変更するお仕事を頼まれてしまった．\nしかし編集しなければならない資料には，今までの担当者が仕事を怠っていたせいか，ひとつ古い名前よりもっと古い名前が使われているものもあった． なんとか京子さんは，平成の間に校舎が改名が行われた年度とその名前のリストを見つけることができた．平成元年度の校舎名は \"kogakubu10gokan\" であった．\nだが引越し作業にとても疲れたので，その資料が作られた年度にこの校舎がどんな名前だったのかを自分の手で調べるのには我慢ならなかった． そこで京子さんは，プログラミングが得意なあなたに手伝ってとお願いすることにした．\n改名の歴史と資料が作られた年度が与えられるのでその年度の校舎の名前を出力するプログラミングを書いてあげよう． 入力は以下の形式で与えられる． N は平成2年度から平成50年度までに行われた改名と改名された年度の組の個数であり，Q は資料が作られた年度を表す．\nyeari は改名が行われた年度であり，namei は改名された名前をあらわす． 平成Q年度の校舎の名前を出力せよ． 平成12年度の校舎名を出力すればよい．\n校舎は，平成元年度の kogakubu10gokan から始まり，平成5年度に sogo5gokan， 平成10年度に sogo10gokan および平成15年度に sogo15gokan に改名されている． 平成10年度の校舎名を出力すればよい．\n校舎は，平成10年度に sogo10gokan に改名されている． 平成3年度の校舎名を出力すればよい．\n平成元年度から平成4年度までの校舎の名前は \"kogakubu10gokan\" である．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01656.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N < 50\n1 ≤ Q < 50\n2 ≤ year1 < year2 < … < yearn ≤ 50 \nすべての i に対して，namei は長さ1以上30以下で含まれる文字は英数字('a'-'z', 'A'-'Z', '0'-'9') である．\n\n平成元年度の校舎の名前は，\"kogakubu10gokan\" である．",
          "ranges": "1 50; 1 50; 50; 50; 50; 1; 1; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 12\n5 sogo5gokan\n10 sogo10gokan\n15 sogo15gokan",
            "output": "平成Q年度の校舎の名前を出力せよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01656.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01656"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01657",
        "title": "B - ライオン",
        "description": "あなたは動物園に来てライオンを見ている。\nこの動物園にはn個のライオンのオリがある。\nあなたはライオンが全部で何頭いるのか知りたくなったのだが、\n一人で数えるのは大変だ。\nそこで近くにいた動物園の来園者m人に協力してもらうことにした。 ライオンのオリは、それぞれ1番からn番までの数字がついており、\n順番に並んでいる。\n一つのオリには0頭以上x頭以下のライオンがいる。 m人の来園者でi番目の人(1 ≤ i ≤ m)には\nl_i番から\nr_i番までの\n両端を含むすべてのオリのライオンの数の総和を数えてもらった。 この情報を元に、1からn\n各オリの中のライオンの数を求めることにした。 入力は以下の形式で与えられる\n\nn x m\nl_1 r_1 s_1\n...\nl_m r_m s_m\n\n\n1行目は3つの整数n x mで、\nそれぞれオリの数、一つのオリの中のライオンの最大の数、\n数えるのに協力した人の数である。\n2行目から続くm行は各行3つの整数で、\nそれぞれi番目の人が数えた結果\nl_i r_is_iである。\nl_i番からr_i番までのオリのライオンを数えたら\n合計s_i頭いたことを表している。\n\n出力形式\n\n数えてもらった結果が全て正しいとして、\n1からnの\n各オリの中のライオンの数を空白区切りのn個の整数で出力せよ。\nそのような答が複数あるときは、\nライオンの数の合計が最大になるものをどれでも良いので一つ出力せよ。\n条件を満たすライオンの配置が一つもないときは-1を出力せよ。\n\n制約\n\n1 ≤ n ≤ 6\n1 ≤ x ≤ 10\n1 ≤ m ≤ 10\n1 ≤ l_i ≤ r_i ≤ n\n0 ≤ s_i ≤ 60\n入力値はすべて整数である。\n\n入出力例\n入力例 1\n\n3 5 1\n1 2 5\n\n出力例 1\n\n2 3 5\n\n\nその他\"4 1 5\"や\"0 5 5\"なども正しい出力である。\n\n入力例 2\n\n4 5 2\n1 3 15\n3 4 3\n\n出力例 2\n\n-1\n\n\n条件を満たすライオンの配置が一つもないときは-1を出力せよ。 1行目は3つの整数n x mで、\nそれぞれオリの数、一つのオリの中のライオンの最大の数、\n数えるのに協力した人の数である。\n2行目から続くm行は各行3つの整数で、\nそれぞれi番目の人が数えた結果\nl_i r_is_iである。\nl_i番からr_i番までのオリのライオンを数えたら\n合計s_i頭いたことを表している。 数えてもらった結果が全て正しいとして、\n1からnの\n各オリの中のライオンの数を空白区切りのn個の整数で出力せよ。\nそのような答が複数あるときは、\nライオンの数の合計が最大になるものをどれでも良いので一つ出力せよ。\n条件を満たすライオンの配置が一つもないときは-1を出力せよ。 その他\"4 1 5\"や\"0 5 5\"なども正しい出力である。 条件を満たすライオンの配置が一つもないときは-1を出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01657.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 6\n1 ≤ x ≤ 10\n1 ≤ m ≤ 10\n1 ≤ l_i ≤ r_i ≤ n\n0 ≤ s_i ≤ 60\n入力値はすべて整数である。",
          "ranges": "1 6; 1 10; 1 10; 0 60; 6; 10; 10; 60; 1; 1; 1; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 5 1\n1 2 5",
            "output": "数えてもらった結果が全て正しいとして、\n1からnの\n各オリの中のライオンの数を空白区切りのn個の整数で出力せよ。\nそのような答が複数あるときは、\nライオンの数の合計が最大になるものをどれでも良いので一つ出力せよ。\n条件を満たすライオンの配置が一つもないときは-1を出力せよ。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01657.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01657"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01661",
        "title": "F - ７歳教",
        "description": "７歳の誕生日に\"彼\"は父から告げられた． 「お前が７歳になったということは，私はもう引退だ．今日からお前が７歳教の長だ．\n  ７歳教の戒律により，７歳教の長が７歳の間だけ布教活動を行うことが認められている．\n  この宇宙船を使って，よりたくさんの人々に７歳教の素晴らしさを広めてきなさい．」 ７歳教をよりたくさんの人に広めるために\"彼\"は，自分の周りの星についての情報を集めた．\n  \"彼\"の星の周りには，n 個の惑星があり，惑星は  1, ... , n で番号付けされていることがわかった．\n  惑星i から 惑星jの間を移動するには，w_i_j (年)の時間がかかることもわかった． そして，それぞれの星で彼が７歳でいられる時間，つまり布教活動できる時間が異なることがわかった．\n  それぞれの惑星上では，宇宙暦l_i年1月1日00:00:00以降r_i年1月1日00:00:00より前までの時間帯であれば7歳でいられる． \n  たとえ一度ある星で７歳以外の年齢になっても，その星で後から７歳になった場合や，別の星で７歳になれば布教活動を再開することができる． しかしどの星でどれくらい，そしてどの順序で布教活動を行えばより多くの人に７歳教を伝えることができるのか，\n  \"彼\"にはわからなかった．そこで\"彼\"はプログラミングが得意なあなたに助けを求めることにした． 現在は宇宙暦0年1月1日00:00:00であり，\"彼\"は惑星 s にいる．\n惑星間を最適に移動・滞在した場合に布教活動が行える最長の年数，\nつまり\"彼\"が７歳でかつ惑星で過ごす最長の年数Tを求めてあげよう．\nただし，年数Tには移動時間は含まれない． 入力は以下の形式で与えられる．\n\nn s\nl_1 r_1\n     ...     \nl_{n} r_{n}\nw_{1,1}  w_{1,2} ... w_{1,n}\n     ...     \nw_{n,1} w_{n,2} ... w_{n,n}\n\n\nn は惑星の個数である．s は主人公が最初にいる惑星をあらわす．\nl_i と r_i はそれぞれ，惑星i での7歳でいられる時間帯の下限と上限をあらわす．\nw_i_j は，惑星iから惑星jを移動するのにかかる時間をあらわす．\n入力はすべて整数である．\n\n出力形式\n\n答えTを出力せよ．\n\n制約\n\n1 ≤ n ≤ 500\n1 ≤ s ≤ n\n0 ≤ l_i < r_i ≤ 10^8\n0 ≤ w_{ij} ≤ 10^8 (i ≠j)\nw_{ij} = 0  (i = j)\n\n\n入出力例\n入力例 1\n\n2 1\n0 100\n150 250\n0 100\n100 0\n\n出力例 1\n\n150\n\n入力例 2\n\n5 1\n7 44\n10 49\n38 48\n11 23\n11 30\n0 1 7 2 7\n10 0 3 8 10\n4 8 0 2 5\n3 2 1 0 4\n8 4 3 3 0\n\n出力例 2\n\n41 n は惑星の個数である．s は主人公が最初にいる惑星をあらわす．\nl_i と r_i はそれぞれ，惑星i での7歳でいられる時間帯の下限と上限をあらわす．\nw_i_j は，惑星iから惑星jを移動するのにかかる時間をあらわす．\n入力はすべて整数である． 答えTを出力せよ．",
        "difficulty": "Hard",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01661.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 500\n1 ≤ s ≤ n\n0 ≤ l_i < r_i ≤ 10^8\n0 ≤ w_{ij} ≤ 10^8 (i ≠j)\nw_{ij} = 0  (i = j)",
          "ranges": "1 500; 500; 10; 1; 1; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 1\n0 100\n150 250\n0 100\n100 0",
            "output": "答えTを出力せよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01661.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01661"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01663",
        "title": "H - N and K",
        "description": "1以上N以下の整数からなる狭義単調増加数列で，数列の要素からどの2つの異なる数を取ってきても\n    他方が一方を割り切ることがないようなものを考える．\n    そのような数列のうち，とりうる最大の長さをLとして，そのような数列(a_1,a_2,...,a_L)を考える．\n    この数列のK番目の要素a_Kを求めよ．ただし，そのような数列(a_1...a_L)が複数個存在する場合は，\n    a_Kの値としてとりうる最小の値を出力せよ．\n    また，K > Lのときは-1を出力せよ． 入力は複数の入力からなる．入力の数はCセットあり，i番目の入力はN_i, K_iである．\n  テストケースは以下の形式で与えられる． 出力はC行からなる．\ni行目の出力は，N_iとK_iについての答えである． この問題の判定には，50 点分のテストケースのグループが設定されている．このグループに含まれるテストケースは上記の制約に加えて下記の制約も満たす． N=3のとき，2番目に小さい要素が最小となる組み合わせの一例として(2,3)が挙げられる．\nN=5のとき，2番目に小さい要素が最小となる組み合わせの一例として(2,3,5)が挙げられる．\nN=8のとき，3番目に小さい要素が最小となる組み合わせの一例として(3,4,5,7)が挙げられる．\nN=10のとき，1番目に小さい要素が最小となる組み合わせの一例として(4,6,7,9,10)が挙げられる．",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01663.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq C \\leq 10^5\n1 \\leq N_i \\leq 10^{18}\n1 \\leq K_i \\leq N_i\n入力値はすべて整数である． この問題の判定には，50 点分のテストケースのグループが設定されている．このグループに含まれるテストケースは上記の制約に加えて下記の制約も満たす． C=1, N_i \\leq 50",
          "ranges": "1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n3 2\n5 2\n8 3\n10 1\n18 12",
            "output": "出力はC行からなる．\ni行目の出力は，N_iとK_iについての答えである．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01663.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01663"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01665",
        "title": "J - タイル置き",
        "description": "サイズH×Wの盤面にサイズ1×2のタイルをマス目にそってN個配置する方法が何通りあるか求めたい. タイルは重なってはいけない. また縦横どちらの向きに置いても構わない. タイルは全て同じ見た目であり互いに区別しないものとする. タイルは180度回転しても同じ見た目であり、区別しないものとする. 答えは大きくなる可能性があるので1,000,000,007で割った余りを答えよ 入力は以下の形式で与えられる．\n\nH W N\n\n出力形式\nタイルの置き方の総数を 1,000,000,007 で割った余りを出力せよ．\n\n制約\n\n1 ≤ H ≤ 1,000,000,000\n1 ≤ W ≤ 1,000,000,000\n1 ≤ N ≤ 5\n入力値はすべて整数である．\n\n\nこの問題の判定には，50 点分のテストケースのグループが設定されている．このグループに含まれるテストケースは上記の制約に加えて下記の制約も満たす．\n\n\n1 ≤ H ≤ 6\n1 ≤ W ≤ 6\n\n入出力例\n入力例 1\n\n2 2 1\n\n出力例 1\n\n4\n\n次の4通りある。\n\n入力例 2\n\n2 2 2\n\n出力例 2\n\n2\n\n次の2通りある\n\n入力例 3\n\n2 2 3\n\n出力例 3\n\n0\n\n入力例 4\n\n1000000000 1000000000 5\n\n出力例 4\n\n68450176 タイルの置き方の総数を 1,000,000,007 で割った余りを出力せよ． この問題の判定には，50 点分のテストケースのグループが設定されている．このグループに含まれるテストケースは上記の制約に加えて下記の制約も満たす． 次の4通りある。 次の2通りある",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01665.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ H ≤ 1,000,000,000\n1 ≤ W ≤ 1,000,000,000\n1 ≤ N ≤ 5\n入力値はすべて整数である． この問題の判定には，50 点分のテストケースのグループが設定されている．このグループに含まれるテストケースは上記の制約に加えて下記の制約も満たす． 1 ≤ H ≤ 6\n1 ≤ W ≤ 6",
          "ranges": "1 1; 1 1; 1 5; 1 6; 1 6; 1; 1; 5; 6; 6; 1; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 2 1",
            "output": "タイルの置き方の総数を 1,000,000,007 で割った余りを出力せよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01665.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01665"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01712",
        "title": "問題 A : Koto Distance",
        "description": "Koto は言わずと知れた碁盤の目の街である．\n\tこの街は東西方向に W メートル，南北方向に H メートルに伸びる長方形の領域によってできている．\n\tこの街の西端から x メートル，南端から y メートルの点は (x,  y)  と記される．\n\tここの街に住む人は古くから伝わる独自の文化を重んじており，その一つにKoto距離という変わった距離尺度がある．\n2つの点 (x_1, y_1)，(x_2, y_2) の Koto 距離は，min(|x_1 - x_2|,  |y_1 - y_2|) によって定義される． 最近この街全体に Wifi を使えるようにする計画が立ち上がった．\n\t現在の計画では，親機を N 個作ることになっている．\ni 番目の親機は点 (x_i,  y_i) に設置され，Koto距離が w_i 以下の領域に対して Wifi を提供する． 親機を計画どおり建てた場合に，街の内部及び境界上に Wifi を提供できるかどうかを判定せよ． なお，Koto距離は一般に三角不等式を満たさないため，距離の公理を満たさないということはここだけの秘密である． 入力は以下の形式で与えられる．\n\nN W H\nx_1 y_1 w_1\n...\nx_N y_N w_N\n\n出力形式\n\n街の内部および境界上に Wifi を提供できるなら “Yes” を，そうでない場合は “No” を出力せよ．\n\n制約\n\n1 ≤ N ≤ 10^5\n1 ≤ W ≤ 10^5\n1 ≤ H ≤ 10^5\n0 ≤ x_i ≤ W\n0 ≤ y_i ≤ H\n1 ≤ w_i ≤ 10^5\n同一座標に親機は複数存在しない\n\n入出力例\n入力例 1\n\n3 9 9\n2 2 2\n5 5 2\n8 8 2\n\n出力例 1\n\nYes\n\n２番目の親機が提供するWifiの範囲は以下の通りである．\n\n入力例 2\n\n2 7 7\n2 2 1\n6 6 1\n\n出力例 2\n\nNo\n\n入力例 3\n\n3 10 20\n5 10 5\n2 10 1\n8 10 1\n\n出力例 3\n\nYes 街の内部および境界上に Wifi を提供できるなら “Yes” を，そうでない場合は “No” を出力せよ． ２番目の親機が提供するWifiの範囲は以下の通りである．",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01712.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10^5\n1 ≤ W ≤ 10^5\n1 ≤ H ≤ 10^5\n0 ≤ x_i ≤ W\n0 ≤ y_i ≤ H\n1 ≤ w_i ≤ 10^5\n同一座標に親機は複数存在しない",
          "ranges": "1 10; 1 10; 1 10; 1 10; 10; 10; 10; 10; 1; 1; 1; 0; 0; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 9 9\n2 2 2\n5 5 2\n8 8 2",
            "output": "街の内部および境界上に Wifi を提供できるなら “Yes” を，そうでない場合は “No” を出力せよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01712.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01712"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01713",
        "title": "問題 B : Evacuation Route",
        "description": "日本では防災研究が盛んに行われており，近年その重要性がますます増している．\n避難経路の評価も重要な研究のひとつである．\n今回は直線状の通路の安全評価を行う． 通路は W 個のユニットに分けられており，一方の端のユニットからもう一方の端のユニットまで 0,  1,  2,  … ,  W-1 の番号がつけられている．\n通路内の各ユニットには，入口の扉，出口の扉，防火扉のいずれか1つが存在する．\n入り口の扉，出口の扉，防火扉はそれぞれ通路内に複数個存在しうる． この問題では時刻 t=0 で火災が発生したと想定する．\nそれにより，通路の外部にいて避難しようとしている人々が入口の扉を通じて通路へ入り，より安全な場所へ出るために出口の扉へ脱出しようとするものとする．\n避難中のそれぞれの人は単位時刻ごとに 1 つのユニットを移動するか，今のユニットに留まることができる．\nすなわち，時刻 t にある人がユニット i にいたとするとき，その人は時刻 t+1 ではユニット i-1,  i,   i+1 の3つの数字のうち 0 以上 W-1 以下であるものを選択し，その番号のユニットへ移動することができる．\n防火扉があるユニットは，ある一定時刻以降になると完全に遮断されてしまい，避難中の人々はそのユニットに立ち入りできなくなる．また，そのユニット内に居た人々もそこから他のユニットに移動できなくなってしまう． この問題における目的は，それぞれの扉の情報が与えられるので，避難中の人々が最適に行動した時に最大で何人が出口の扉へたどり着けるか計算することである． 通路の情報がW個の整数a_iで与えられる． なお，1つのユニットに複数の人々が存在してもかまわない． 出口の扉へたどり着ける最大の人数を求めよ． 入力は以下の形式で与えられる\n\nW\na_0 a_1 ... a_{W-1}\n\n出力形式\n\n最大人数を1行で出力せよ．\n\n制約\n\n1 ≤ W ≤ 10^5\n|a_i|   ≤ 10^4\n入力値はすべて整数である．\n\n入出力例\n入力例 1\n\n7\n2 0 -2 3 2 -2 0\n\n出力例 1\n\n4\n\n\n0,   3,   5番目のユニットに入り口の扉があり，\n1,   6番目のユニットに出口の扉がある．\n0番目のユニットからは，1番目のユニットへ２人出ることができる．\n3番目のユニットからは，1番目のユニットへ１人出ることができる．\n5番目のユニットからは，6番目のユニットへ１人出ることができる．\nよって合わせて４人が出口へとたどり着ける．\n\n入力例 2\n\n4\n1 1 1 1\n\n出力例 2\n\n0\n\n\n出口がないので誰も脱出できない．\n\n入力例 3\n\n9\n10 -10 10 -10 10 -10 10 -10 0\n\n出力例 3\n\n24 最大人数を1行で出力せよ． 0,   3,   5番目のユニットに入り口の扉があり，\n1,   6番目のユニットに出口の扉がある．\n0番目のユニットからは，1番目のユニットへ２人出ることができる．\n3番目のユニットからは，1番目のユニットへ１人出ることができる．\n5番目のユニットからは，6番目のユニットへ１人出ることができる．\nよって合わせて４人が出口へとたどり着ける． 出口がないので誰も脱出できない．",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01713.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ W ≤ 10^5\n|a_i|   ≤ 10^4\n入力値はすべて整数である．",
          "ranges": "1 10; 10; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "7\n2 0 -2 3 2 -2 0",
            "output": "最大人数を1行で出力せよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01713.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01713"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01714",
        "title": "問題 C : Apples",
        "description": "あるところに銃の腕に自信をもつ猟師がいました．\n猟師はある日，「ウィリアムテルというスイス人が，息子の頭にりんごを乗せて遠くから矢で撃ち落とすパフォーマンスで有名になった」というお話を聞きました．\nそれを聞いて\"自分のほうがもっと凄い!!\"と思った猟師は動いている人の上にりんごを乗せて撃ちぬくパフォーマンスを考えつきました． 猟師は広場に N 人の人を集め，それぞれの人の上にりんごを乗せました．\ni 番目の人は時刻 t=0 のとき，座標 (x_i,  y_i) にいます．\nそこから単位時間あたり速度ベクトル (u_i,  v_i) にしたがって歩きます．\nすなわち，時刻 t  ≥  0 のとき，i 番目の人は座標 (x_i + t \\times u_i  ,   y_i + t \\times v_i) にいます．\nここで，人々は十分小さいので，同じ座標に複数の人がいたり，同じ座標ですれ違ったりできると仮定します． 猟師は人々を驚嘆させるために，一発の弾丸でできるだけ多くのりんごを撃ち落とすことにしました．\n猟師は t ≥ 0 であるような任意の時刻に，任意の座標から任意の方向に向けて弾丸を放つことができます．\n放たれた弾丸は無限の速さで直線軌道で移動し，りんごに当たった場合貫通して移動します．\n弾丸を一発だけ打つとき，最大で何個のりんごを撃ち落とせるか計算してください． 入力は以下の形式で与えられる\n\nN\nx_0 y_0 u_0 v_0\n...\nx_{N-1} y_{N-1} u_{N-1} v_{N-1}\n\n出力形式\n\n撃ち落とせるりんごの最大個数を1行に出力せよ．\n\n制約\n\n1 ≤ N ≤ 200\n0 ≤   |x_i|,   |y_i|    ≤ 10\n0 ≤   |u_i|,   |v_i|   ≤ 3\n入力値はすべて整数である。\n\n入出力例\n入力例 1\n\n5\n0 0 0 0\n1 0 -1 1\n-1 0 1 -1\n1 1 -1 1\n-1 -1 1 -1\n\n出力例 1\n\n5\n\n\n時刻１に５人がｙ軸上に並ぶので最大５つのりんごを撃ち落とせる．\n\n入力例 2\n\n5\n0 0 0 0\n1 0 1 0\n-1 0 -1 0\n1 1 1 1\n-1 -1 -1 -1\n\n出力例 2\n\n3  \n\n入力例 3\n\n15\n-10 9 2 1\n2 10 0 -1\n-10 -4 0 -3\n-2 8 0 -1\n0 -10 -1 -2\n-8 5 0 -1\n-7 -8 -3 1\n10 -6 -2 -3\n9 -6 1 0\n10 -5 3 1\n10 1 0 -3\n-4 7 0 -1\n10 -9 2 2\n2 -5 -1 1\n9 -10 3 1\n\n出力例 3\n\n5 撃ち落とせるりんごの最大個数を1行に出力せよ． 時刻１に５人がｙ軸上に並ぶので最大５つのりんごを撃ち落とせる．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01714.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 200\n0 ≤   |x_i|,   |y_i|    ≤ 10\n0 ≤   |u_i|,   |v_i|   ≤ 3\n入力値はすべて整数である。",
          "ranges": "1 200; 200; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n0 0 0 0\n1 0 -1 1\n-1 0 1 -1\n1 1 -1 1\n-1 -1 1 -1",
            "output": "撃ち落とせるりんごの最大個数を1行に出力せよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01714.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01714"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01715",
        "title": "問題 D : TiMe Table",
        "description": "ある学生は朝にいつも乗る通学バスで，あることに気がついた．\nそのバスの利用者がいつも同じなのだ．\n気になってバスに乗っている利用者たちに聞いてみると，毎日決まった時刻にバス停に来ているようである．\nそれなら，乗客にとってもっとよいバスの時間割があるのではないかとその学生は考えた． 学生の乗る通学路には，バスの営業所から終点までにs個のバス停が一直線に並んでいる．(営業所はバス停には含まれないが，終点はバス停に含まれる．)\n各バス停には，営業所から近い方から順に1 から s までの番号が付けられている．\n営業所と i 番目のバス停の距離は x_i である．\nバスはまず営業所を出発し，それから x_i 経った後に i 番目のバス停に到着する．\nバス停には n 人の利用者がやって来る．\ni 番目の利用者は時刻 t_i にバス停 p_i にやって来る． この通学路には1日にちょうど m 本のバスが営業所から終点まで走ることになっている．\nバスはバス停に止まると，そのバス停で待っていた利用者を全員回収して，次のバス停に向かう．\nバス停で利用者を回収する時間は無視出来ると仮定する．\nいま各バスが営業所から出発する時刻を自由に決めることができるとき，利用者の待ち時間の和を最小化しよう． 入力は以下の形式で与えられる．\n\ns n m\nx_1 ... x_s\nt_1 p_1\n...\nt_n p_n\n\n出力形式\n\n待ち時間の和の最小値を一行に出力せよ．\n\n制約\n\n1 ≤ s,   n,   m ≤ 2000\n1 ≤ x_1 < x_2 < …< x_s ≤ 10^4\n0 ≤ t_i ≤ 10^4\n1 ≤ p_i ≤ s\n入力値はすべて整数である.\n\n入出力例\n入力例 1\n\n2 2 1\n1 5\n0 1\n0 2\n\n出力例 1\n\n4\n\n入力例 2\n\n2 3 2\n1 15\n0 1\n5 1\n5 2\n\n出力例 2\n\n5\n\nこの例では，バスを時刻 −10 と 4 に出発させることが最適である．\n\n入力例 3\n\n4 8 1\n6 38 105 390\n14 1\n4 2\n39 3\n89 2\n32 4\n1 1\n25 1\n60 4\n\n出力例 3\n\n1123 待ち時間の和の最小値を一行に出力せよ．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01715.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ s,   n,   m ≤ 2000\n1 ≤ x_1 < x_2 < …< x_s ≤ 10^4\n0 ≤ t_i ≤ 10^4\n1 ≤ p_i ≤ s\n入力値はすべて整数である.",
          "ranges": "0 10; 2000; 10; 10; 1; 1; 0; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 2 1\n1 5\n0 1\n0 2",
            "output": "待ち時間の和の最小値を一行に出力せよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01715.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01715"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01716",
        "title": "問題 E : Pattern Language",
        "description": "m 個の相異なるアルファベット var_0,  var_1,   … ,  var_{m-1} がある．\n0,   1,   … ,   9,   var_0,   var_1,   … ,   var_{m-1} の 10+m 種類の文字からなる，長さ N の文字列 s_0s_1s_2…s_{N-1} が与えられる．\nこの文字列における各アルファベットを数字で置き換えて回文になるようにしたい．(回文とは，前から読んでも後ろから読んでも同じ文字列をあらわす．)\nここで，同じアルファベットは同じ数字で置き換えなければならない．また与えられたすべてのアルファベットvar_iは少なくとも，一度は文字列s_0s_1s_2…s_{N-1}にあらわれる． アルファベット var_i は 0 以上 u_i 以下の，leading zero を含まない整数に置き換える事ができる．\n置き換えた後の文字列が回文になるような置き換え方が何通り存在するかを，mod 10^9+7 で求めよ．\nなお，アルファベットの置き換え方が異なれば，得られる文字列が同じでも異なるものとして数える． 入力は以下の形式で与えられる\n\nN m\ns_0s_1s_2…s_{N-1}\nvar_0 u_0\n...\nvar_{m-1} u_{m-1}\n\n出力形式\n\n置き換え方の場合の数を 10^9 + 7 で割った剰余を一行で出力せよ．\n\n制約\n\n1 ≤ N ≤ 500\n1 ≤ m ≤ 10\n0 ≤ u_i ≤ 99\ns_i ∈ \\{'0',   '1',   … ,   '9',   var_0,   var_1,   … ,   var_{m-1}\\}\nvar_i ∈ \\{'a',   'b',   … ,   'j'\\}\n各アルファベット var_i は s_0s_1s_2 …s_{N-1} に少なくとも一度は現れる．\nvar_0,  var_1,  … ,  var_{m-1} はすべて異なる\n\n入出力例\n入力例 1\n\n3 1\na1a\na 99\n\n出力例 1\n\n19\n\n入力例 2\n\n5 3\njbfjb\nf 50\nb 25\nj 5\n\n出力例 2\n\n252\n\n入力例 3\n\n7 3\njag2013\nj 53\na 10\ng 93\n\n出力例 3\n\n23 置き換え方の場合の数を 10^9 + 7 で割った剰余を一行で出力せよ．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01716.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 500\n1 ≤ m ≤ 10\n0 ≤ u_i ≤ 99\ns_i ∈ \\{'0',   '1',   … ,   '9',   var_0,   var_1,   … ,   var_{m-1}\\}\nvar_i ∈ \\{'a',   'b',   … ,   'j'\\}\n各アルファベット var_i は s_0s_1s_2 …s_{N-1} に少なくとも一度は現れる．\nvar_0,  var_1,  … ,  var_{m-1} はすべて異なる",
          "ranges": "1 500; 1 10; 0 99; 500; 10; 99; 1; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 1\na1a\na 99",
            "output": "置き換え方の場合の数を 10^9 + 7 で割った剰余を一行で出力せよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01716.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01716"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01717",
        "title": "問題 F : Social Monsters",
        "description": "不思議な生き物と人間が互いに助け合って生きている世界．\n  この世界では自分で捕まえたモンスター同士を戦わせる大会が盛んに行われており，\n  多くの少年少女達が世界一のトレーナーを目指している． バトルでは自分が捕まえたモンスターからパーティを作り，パーティ同士の対戦となる．\n  モンスターのペアには相性があり，相性が非常に悪い場合と普通の場合がある．\n  相性が非常に悪い場合，そのペアのモンスターを同じパーティに入れることはできない．\n  相性が普通の場合には，友情度という数値で相性の良さが表現される．\n  バトルでは，パーティ全体の友情度の和が勝負の鍵となる． いまN匹のモンスターからK匹のモンスターからなるパーティを作りたい．\n  M個のモンスターのペア(a_i,   b_i)に対して相性が分かっており，整数 c_i で表されている．\n  c_i = 0 のとき，a_i 番目のモンスターと b_i 番目のモンスターは相性が非常に悪いことを意味する．\n  c_i  ≠  0 のとき，a_i 番目のモンスターと b_i 番目のモンスターは相性が普通であり，その友情度は c_i であることを意味する．\n  与えられたM個のペア以外は，相性が普通であり，それらの友情度はすべて0である． パーティの友情度の和を最大にする選び方を考えてみよう．\n\n入力形式\n\n入力は以下の形式で与えられる\n\nN M K\na_0 b_0 c_0\n...\na_{M-1} b_{M-1} c_{M-1}\n\n出力形式\n\nK匹のモンスターからなるパーティを作ることができない場合は1行に \"Impossible\" を出力せよ． \nパーティを作ることができるとき，友情度の和の最大値を出力せよ．\n\n制約\n\n1 ≤ K ≤ N ≤ 2000\n0 ≤ M ≤ N \n1   ≤   a_i   ≠   b_i   ≤ N\n|c_i|   ≤ 10000\n 各モンスターは a_0, a_1, …, a_{M-1}, b_0, b_1, …, b_{M-1} の中に高々2回しか現れない．\n\ni   ≠   j   ⇒  \n\\{a_i, b_i\\}   ≠   \\{a_j,   b_j\\}\n\n\n入出力例\n入力例 1\n\n6 5 4\n2 1 1\n2 5 2\n5 1 1\n4 3 2\n3 6 -1\n\n出力例 1\n\n4\n\n入力例 2\n\n3 1 3\n1 2 -10\n\n出力例 2\n\n-10\n\n入力例 2\n\n6 3 5\n1 2 0\n2 3 10\n3 4 0\n\n出力例 2\n\nImpossible 入力は以下の形式で与えられる\n\nN M K\na_0 b_0 c_0\n...\na_{M-1} b_{M-1} c_{M-1}\n\n出力形式\n\nK匹のモンスターからなるパーティを作ることができない場合は1行に \"Impossible\" を出力せよ． \nパーティを作ることができるとき，友情度の和の最大値を出力せよ．\n\n制約\n\n1 ≤ K ≤ N ≤ 2000\n0 ≤ M ≤ N \n1   ≤   a_i   ≠   b_i   ≤ N\n|c_i|   ≤ 10000\n 各モンスターは a_0, a_1, …, a_{M-1}, b_0, b_1, …, b_{M-1} の中に高々2回しか現れない．\n\ni   ≠   j   ⇒  \n\\{a_i, b_i\\}   ≠   \\{a_j,   b_j\\}\n\n\n入出力例\n入力例 1\n\n6 5 4\n2 1 1\n2 5 2\n5 1 1\n4 3 2\n3 6 -1\n\n出力例 1\n\n4\n\n入力例 2\n\n3 1 3\n1 2 -10\n\n出力例 2\n\n-10\n\n入力例 2\n\n6 3 5\n1 2 0\n2 3 10\n3 4 0\n\n出力例 2\n\nImpossible K匹のモンスターからなるパーティを作ることができない場合は1行に \"Impossible\" を出力せよ． \nパーティを作ることができるとき，友情度の和の最大値を出力せよ．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01717.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ K ≤ N ≤ 2000\n0 ≤ M ≤ N \n1   ≤   a_i   ≠   b_i   ≤ N\n|c_i|   ≤ 10000\n 各モンスターは a_0, a_1, …, a_{M-1}, b_0, b_1, …, b_{M-1} の中に高々2回しか現れない．\n\ni   ≠   j   ⇒  \n\\{a_i, b_i\\}   ≠   \\{a_j,   b_j\\}",
          "ranges": "2000; 1; 0; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "6 5 4\n2 1 1\n2 5 2\n5 1 1\n4 3 2\n3 6 -1",
            "output": "K匹のモンスターからなるパーティを作ることができない場合は1行に \"Impossible\" を出力せよ． \nパーティを作ることができるとき，友情度の和の最大値を出力せよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01717.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01717"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01718",
        "title": "問題 G : Perm Query",
        "description": "\\{1,  2,  … ,  N\\}の順列 (p(1),  p(2),  … ,  p(n)) が与えられる．\n(l_i,  r_i) からなるクエリが Q 個与えられるので，各クエリに対して以下の擬似コードによる処理結果を出力せよ． 入力は以下の形式で与えられる\n\nN Q\np(1) p(2) ... p(N)\nl_0 r_0\n...\nl_{Q-1} r_{Q-1}\n\n出力形式\n\n各クエリに対する出力を1行ずつ出力せよ．\n\n制約\n\n1 ≤ N ≤ 10^5\n1 ≤ Q ≤ 10^4\n(p_1,  p_2,  … ,  p_N) は (1,  2,  … ,  N) の順列になっている．\n各 i に対して，ある 1 ≤ k ≤ 40 が存在して，p^k(i)=i となる．ここで，p^k(i) は p(p(p(… p(i)… ))) で p が k 回現れるもの．\n1 ≤ l_i   ≤   r_i   ≤ N\n\n入出力例\n入力例 1\n\n5 2\n5 1 2 3 4\n1 1\n2 4\n\n出力例 1\n\n15\n45\n\n\n擬似コード中の順列(x(1),   x(2),   … ,  x(N))は以下のように変化する．\n\n1 2 3 4 5\n5 1 2 3 4\n4 5 1 2 3\n3 4 5 1 2\n2 3 4 5 1\n1 2 3 4 5\n\n\n入力例 2\n\n10 5\n3 1 2 5 4 10 6 7 9 8\n1 10\n1 5\n3 3\n5 10\n9 10\n\n出力例 2\n\n660\n90\n6\n178\n67 各クエリに対する出力を1行ずつ出力せよ． 擬似コード中の順列(x(1),   x(2),   … ,  x(N))は以下のように変化する．\n\n1 2 3 4 5\n5 1 2 3 4\n4 5 1 2 3\n3 4 5 1 2\n2 3 4 5 1\n1 2 3 4 5",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01718.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10^5\n1 ≤ Q ≤ 10^4\n(p_1,  p_2,  … ,  p_N) は (1,  2,  … ,  N) の順列になっている．\n各 i に対して，ある 1 ≤ k ≤ 40 が存在して，p^k(i)=i となる．ここで，p^k(i) は p(p(p(… p(i)… ))) で p が k 回現れるもの．\n1 ≤ l_i   ≤   r_i   ≤ N",
          "ranges": "1 10; 1 10; 1 40; 10; 10; 40; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 2\n5 1 2 3 4\n1 1\n2 4",
            "output": "各クエリに対する出力を1行ずつ出力せよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01718.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01718"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01719",
        "title": "Sample Input 1",
        "description": "長年の研究の末、イクタ君は未来予知能力を手に入れた！　彼がこの研究に費やした時間や金銭は莫大なものであったが、ついに報われる時がやってきたのだ。手始めに金銭を取り戻すため、イクタ君は株式投資を始めることにした。 イクタ君は現在株式は全く保有しておらず、 x 円を所持している。彼が投資対象に定めた株式は n 種類で、それらについて今日から d 日分の株価を予知することに成功した。その結果、驚くべきことに今日から d 日間は日中の株価変動が全くないことが判明した。つまり、今日を1日目としたときの i （1 ≤ i ≤ d）日目の株式 j （1 ≤ j ≤ n）の株価 pi,j 円がわかっている。イクタ君はそれぞれの日に自由に株式を売買できる。すなわち、任意の時点で以下の操作（購入・売却）を任意の順番で任意の回数行える。ただし、各操作の前後での所持金と株式の保有単位数は非負整数でなければならない。 （彼が研究に没頭する間に証券取引システムは大きな発達を遂げ、取引手数料はかからなくなった。） イクタ君は大学で情報科学を修めていたが、未来予知研究に明け暮れるすえに大学で学んだことをすべて忘れてしまっていた。そんな彼の代わりに最終日の所持金を最大化するプログラムを書いてあげてほしい。 入力は以下の形式で与えられる。 入力中の各変数は以下の制約を満たす整数である。 最適に投資した場合の最終日の所持金を1行に出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01719.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力中の各変数は以下の制約を満たす整数である。 1 ≤ n ≤ 10\n\n 1 ≤ d ≤ 10\n\n 1 ≤ x, pi,j ≤ 105\n\n 最終日の所持金が 105 以下となることが保証されている。",
          "ranges": "1 10; 1 10; 10; 10; 105; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 2 5\n3 2\n5 4",
            "output": "最適に投資した場合の最終日の所持金を1行に出力せよ。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01719.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01719"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01720",
        "title": "Sample Input 1",
        "description": "イクタ君は、無向グラフについて異常なほどの思い入れを持っている。イクタ君は、無向グラフ G とその 2 点 s,tの組(G,s,t)のうち、その「うつくしさ」が大きいものが好きである。\n組(G,s,t)の「うつくしさ」とは、辺 e = \\{u, v\\} (u と v は G の異なる 2 点) で、Gにおけるsからtへの最短路の長さが、Gにeをつけくわえた無向グラフにおけるsからtへの最短路の長さより 1 だけ大きいものの個数である。 あなたの仕事は、組(G,s,t)が与えられたとき、その「うつくしさ」を求めるプログラムを書くことである。 入力は以下の形式で与えられる。 最初に無向グラフの頂点数、辺数、2つの頂点を表す整数N,M,s,tが入力される。\n2行目からM+1行目までは辺によって結ばれている2つの頂点が入力される。\n(ただし、G の頂点集合を\\{1,..., N\\}とする。) 入力中の各変数は以下の制約を満たす。 与えられたグラフをGとしたとき、組(G,s,t)の「うつくしさ」を1行で出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01720.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力中の各変数は以下の制約を満たす。 2≤ N ≤ 100,000\n\n 1≤ M ≤ 300,000\n\n 1≤ s,t,xi,yi ≤ N\n\n s と t とは異なる\n\n s から t に辿り着けることは保証されている",
          "ranges": "2 100; 1 300; 100; 300; 2; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 2 1 3\n1 2\n2 3",
            "output": "与えられたグラフをGとしたとき、組(G,s,t)の「うつくしさ」を1行で出力せよ。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01720.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01720"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01721",
        "title": "Sample Input 1",
        "description": "勇猛果敢なイクタ君はついに悪名高きビッグブリッジ伯爵を追い詰めた！　今やビッグブリッジ伯爵は幅 w メートル、奥行き h メートルの長方形の部屋に閉じ込められており、最期を待つばかりとなっている。 部屋のある角を選び、幅方向を x 軸、奥行き方向を y 軸に、それぞれ部屋の内部が正の方向になるように座標系をとると、ビッグブリッジ伯爵は点 (p, q) にいる。点 (x, y) にイクタ君の最終兵器である衝撃波発射装置があり、ここから秒速 v メートルの衝撃波を全方向に出す。この衝撃波は t 秒間有効であり、部屋の壁面で反射する。 部屋の外にいるイクタ君はビッグブリッジ伯爵がどれだけ苦しむか知りたがっているので、ビッグブリッジ伯爵に衝撃波が何回当たるかを求めるプログラムを書いてあげよう。このとき、衝撃波が同時に n 方向から敵に当たる場合は n 回当たったとみなし、また衝撃波がちょうど t 秒後に敵に当たる場合も有効であるとする。衝撃波は発射装置自身やビッグブリッジ伯爵などの障害物により消滅せず、衝撃波同士は干渉しない。 入力は以下の形式で与えられる。 衝撃波がビッグブリッジ伯爵に当たる回数を1行に出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01721.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "v × t ≤ 106 \n\n  2 ≤ w, h ≤ 108 \n\n  0 < x, p < w \n\n  0 < y, q < h \n\n  (x, y) ≠ (p, q)",
          "ranges": "106; 108; 2; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "10 10 1 10 3 3 7 7",
            "output": "衝撃波がビッグブリッジ伯爵に当たる回数を1行に出力せよ。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01721.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01721"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01722",
        "title": "Sample Input 1",
        "description": "イクタ君は速いプログラムが大好きである。最近は、除算のプログラムを高速にしようとしている。しかしなかなか速くならないので、「常識的に考えて典型的」な入力に対してのみ高速にすればよいと考えた。イクタ君が解こうとしている問題は次のようなものである。 与えられた非負整数nに対し、10進法でp(n) − 1桁の正整数11...1をp(n)で割ったあまりを求めよ。ただしp(n)は22{ . . . 2}（2がn個）より大きい最小の素数を表すとする。p(0) = 2とする。 あなたの仕事は、イクタ君より速くプログラムを完成させることである。 入力は以下の形式で与えられる。 問題の入力の非負整数nがあたえられる。 入力中の各変数は以下の制約を満たす。 問題の解を1行に出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01722.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力中の各変数は以下の制約を満たす。 0 ≤ n < 1000",
          "ranges": "0 1000; 1000; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "0",
            "output": "問題の解を1行に出力せよ。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01722.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01722"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01723",
        "title": "Sample Input 1",
        "description": "イクタ君の住む町にはN個の塔がある。\nそれぞれの塔には0からN−1までの異なる番号が与えられており、番号iの塔を塔iと呼ぶ。\n好奇心旺盛なイクタ君はN個の塔の高さに興味を持ち、それらの大小関係を表す表Tを作ることにした。\nTはN × N個の要素を持ち、各要素Ti, j (0 ≤ i, j ≤ N − 1)は次のように定義される。 イクタ君は表Tを作成するための調査として、2つの塔を選びそれらの高さを比較するということをN−1回繰り返した。 イクタ君の調査に関して以下のことがわかっている。 残念ながらイクタ君の調査による情報だけで表Tの内容を一意に決めることができるとは限らない。\n表Tがイクタ君の調査と矛盾せず、Tが定義されるような塔の高さの組み合わせが存在するときTを正しい表と呼ぶことにする。\n正しい表として何通りのものが考えられるかを計算してイクタ君に教えて欲しい。 ただし、比較された２つの塔の高さは互いに異なるがすべての塔の高さが互いに異なるとは限らない。 入力は以下の形式で与えられる。 Nは塔の数を表す。\nai, bi (1 ≤ i ≤ N − 1)は塔aiが塔biより高いことを表す。 入力中の各変数は以下の制約を満たす。 考えられる正しい表Tの個数の数を1,000,000,007で割ったあまりを出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01723.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力中の各変数は以下の制約を満たす。 1 ≤ N ≤ 200\n\n 0 ≤ ai, bi < N\n\n ai ≠ bi\n\n 異なる塔が同じ高さであることもある。\n\n イクタ君の調査結果自体が矛盾していることはなく、少なくとも1つイクタ君の調査結果と矛盾しない表Tが存在する。",
          "ranges": "1 200; 200; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n0 1\n1 2",
            "output": "考えられる正しい表Tの個数の数を1,000,000,007で割ったあまりを出力せよ。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01723.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01723"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01727",
        "title": "Sample Input 1",
        "description": "プログラミングコンテストの合宿で出す問題のアイディアが出ずに困っていたイクタ君は、ある日友人に相談した。 イクタ君「こういうアルゴリズムを使わないと解けないような問題が出したいんですけど、なにかありませんかね？」 友人「それではこういうものを考えたらいいんじゃないですか」 このようにしてその友人は以下のような問題の原案となるアイデアを考えてくれた。 iビット目というのが 0-origin で表されていることに注意せよ。\nつまり、Aの最下位ビットから0ビット目とは最下位ビットを表す。 入力は以下の形式で与えられる。 1行目にクエリの数N,2進数A, Bが与えられる。 2からN+1行目には以下の様なクエリが与えられる。 Qが出力クエリを、A i,B iはそれぞれAの最下位ビットからiビット目、Bの最下位ビットからiビット目を反転させる変更クエリを表している。 入力中の各変数は以下の制約を満たす。 出力クエリごとに答えを1行に出力せよ。 最初の出力クエリでは A=10000, B=00101, A+B=10101なので求めるxは10011 次の出力クエリでは A=10001, B=00111, A+B=11000なので求めるxは10111",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01727.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力中の各変数は以下の制約を満たす。 1 ≤ N < 300,000\n 1 ≤ |A|,|B| ≤ 300,000 (|A|はAの長さ)\n A i というクエリでは 0 ≤ i < |A|\n B i というクエリでは 0 ≤ i < |B|\n Bが0になることはない",
          "ranges": "1 300; 300; 1; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 10000 00101\nQ\nA 0\nB 1\nQ",
            "output": "出力クエリごとに答えを1行に出力せよ。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01727.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01727"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01728",
        "title": "Sample Input 1",
        "description": "ヘリリンは二次元平面上における長さ2Lの線分の形状をしている。\nヘリリンのまわりには、線分の形状をしたいくつかの障害物が存在している。 ヘリリンは障害物に接すると体力が削られてしまう。\n完璧主義のヘリリンは無傷でゴールすることにした。 ヘリリンは以下の行動ができる。 ただし、二次元平面は上方向にy軸をとる。 ヘリリンのまわりに、2 点 S, G がある。\n始めはヘリリンの中心は点 S にあって、x軸に平行な状態になっている。 ヘリリンは、平行移動するのは得意だが、回転するのは不得意である。\nあなたの仕事は、ヘリリンが中心を点 S から点 G まで移動させるまでに必要な、最小の回転行動の回数を求めることである。\n移動させることができない場合は、そのことも検出せよ。 ただし、以下のことに注意せよ。 入力は以下の形式で与えられる。 Lはヘリリンの半分の長さを表す。\nrは回転角度を定めるものである。\n(sx, sy)は点 S、(gx, gy)は点 G の座標である。\nnは障害物の数を表す。\n(xi1, yi1)と(xi2, yi2)はi番目の障害物を表す線分の端点である。 入力は以下の制約を満たす。 スタート地点からゴール地点まで移動するために必要な最小の回転行動の回数を1行に出力せよ。\n移動させることができない場合は、-1を1行に出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01728.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の制約を満たす。 1 ≤ n ≤ 30 \n  2≤ r ≤ 11 \n  1 ≤ L ≤ 105 \n 入力に含まれる座標の各成分は絶対値が105以下\n 入力に含まれる数値はすべて整数\n i = 1, . . . , nについて (xi1, yi1) ≠ (xi2, yi2) \n ヘリリンをスタート地点にx軸に水平な状態で配置したとき、障害物との（線分と線分との）距離は 10−3 より大きい\n 障害物を表す線分の端点を、両方向に 10−3 だけ延ばしても縮めても解は変わらない\n Lを  10−3 だけ増減させても解は変わらない\n 障害物の線分をliと書くことにすると、1 ≤ i ≤ j ≤ nであって、liとljの距離が2L以下であるような組(i, j)は高々100個\n ゴール地点は障害物に乗っていることはない",
          "ranges": "1 30; 2 11; 1 105; 30; 11; 105; 1; 1; 2; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1 2\n3 3\n2 -1\n4\n1 0 1 5\n0 1 4 1\n0 4 6 4\n5 0 5 5",
            "output": "スタート地点からゴール地点まで移動するために必要な最小の回転行動の回数を1行に出力せよ。\n移動させることができない場合は、-1を1行に出力せよ。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01728.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01728"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01729",
        "title": "Sample Input 1",
        "description": "20XX年, ICPC (Ikuta's Computer Pollutes Community) 商店街の経営者たちは大気汚染に悩まされていた。かつての活気を取り戻すためにも大気の綺麗さを一定以上にしなければならない。 商店街の店は一列に並んでおり、1からnで番号付けられている。\n現在、おのおのの店のまわりの大気の綺麗さは pi である。\nあなたは2からn−1番目の店を選んで、その周辺の大気を循環させることで, その店と周囲の店の大気の綺麗さを変更することができる。\n正確にいうと, i ( 2 ≤ i ≤ n−1 )番目を選んだとき、pi−1とpi+1にはpiだけ加算され, 逆にpiには2piだけ減算される。つまり、新しい大気の綺麗さp'は, 大気を循環させるためには多大な費用がかかるため、なるべく少ない回数で達成したい。\nICPC商店街の未来のためにも力を貸してほしい。 入力は以下の形式で与えられる。 nは店の数、piはi番目の店の現在の大気の綺麗さ、liはi番目の店が達成すべき大気の綺麗さを表す。 入力中の各変数は以下の制約を満たす。 すべての店が大気の綺麗さを達成するために必要な\n大気を循環させる回数の最小値を1行に出力せよ。 どのように操作しても達成できない場合には−1を出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01729.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力中の各変数は以下の制約を満たす。 3 ≤ n ≤ 105 \n\n  −108 ≤ pi ≤ 108 \n\n  1 ≤ li ≤ 108",
          "ranges": "3 105; 108 108; 1 108; 105; 108; 108; 3; 108; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n3 -1 4\n2 1 3",
            "output": "すべての店が大気の綺麗さを達成するために必要な\n大気を循環させる回数の最小値を1行に出力せよ。 どのように操作しても達成できない場合には−1を出力せよ。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01729.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01729"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01730",
        "title": "Sample Input 1",
        "description": "キョウトという街は古い寺社仏閣で有名な観光地である。 イクタ君は数人の友人とキョウト観光に来ていたが、全員が好き勝手に行動した結果、みんな迷子になってしまった。 そこでイクタ君は、なるべく早く全員と合流するためには集合場所をどこにするのがよいか考えることにした。 キョウトの道路は東西と南北に距離10の間隔で無数に走っており、無限に広がる正方格子とみなすことができる。 道路は直線であるとみなし、幅は無いものとする。\nまた、街の中心を基準として東に距離x、北に距離y移動した位置を(x,y)という座標で表す。 街の中心である(0,0)では東西の道路と南北の道路が交差している。 下図はキョウトの道路と、いくつかの点の座標を図示したものである。 N人の観光客の座標(Xi,Yi)が整数で与えられるので、N人が道路上を移動して1点に集合するのに必要な時間の最小値を答えよ。 観光客は時間1あたり距離1の速さで連続的に道路上を動くことができるとする。 与えられるN人の観光客の座標はそれぞれ相異なり、また全ての座標は道路上にあることが保証されている。 また、複数の観光客が同時に1点に存在したり、観光客同士がすれ違うように移動することも可能であるとする。 入力は以下の形式で与えられる。 1行目のNは観光客の人数である。\n次のN行のうちi行目(1≤ i ≤ N)はi番目の観光客の位置(Xi, Yi)を表している。\nXi,Yiはそれぞれ整数で与えられる。 入力中の各変数は以下の制約を満たす。 問題の解を1行に出力せよ。\n10−3までの絶対誤差を許容する。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01730.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力中の各変数は以下の制約を満たす。 2 ≤ N ≤ 10000\n\n −108 ≤ Xi, Yi ≤ 108\n\n i ≠ j のとき (Xi, Yi) ≠ (Xj, Yj)\n\n Xi と Yi のうち少なくとも一方は10の倍数である",
          "ranges": "2 10000; 10000; 108; 2; 108"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n5 10\n-10 0\n3 -10",
            "output": "問題の解を1行に出力せよ。\n10−3までの絶対誤差を許容する。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01730.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01730"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01741",
        "title": "Sample Input 1",
        "description": "マンハッタンでは，道路がx 座標またはy 座標が整数のところに通っている．すぬけ君の家とすめけ君の家はどちらも道路上にあり，直線距離(ユークリッド距離) はちょうど d である．すぬけ君の家からすめけ君の家まで道路に沿って移動するときの最短距離として考えられる最大値を求めよ． 答えを一行に出力せよ．絶対誤差または相対誤差が 10−9 以下のとき正答と判定される．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01741.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0 < d ≤ 10\nd は小数点以下ちょうど三桁まで与えられる",
          "ranges": "0 10; 10; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1.000",
            "output": "2.000000000000",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01741.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01741"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01742",
        "title": "Sample Input 1",
        "description": "すぬけ君の辞書には，n 個の英小文字からなる単語 s1, . . .,  sn がのっている．これは辞書順で比較したとき s1 < . . . < sn をみたす．残念ながらいくつかの文字はかすれて読めなくなってしまっている．読めなくなった文字は ? で表される．? を英小文字で置き換えて辞書を復元する方法は何通りあるか，mod 1,000,000,007 でもとめよ． 答えを一行に出力せよ．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01742.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 50\n 1 ≤ |si| ≤ 20\n si に現れる文字は英小文字または ? である",
          "ranges": "1 50; 50; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\n?sum??mer\nc??a??mp",
            "output": "703286064",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01742.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01742"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01743",
        "title": "Sample Input 1",
        "description": "m 頂点の完全グラフがある．最初，完全グラフの辺には色は塗られていない．すぬけ君は，各 i(1 ≤ i ≤ n) について次の操作を行った: 完全グラフから ai 個の頂点を選び，選ばれた頂点同士を結ぶ辺すべてを色 i でぬる．複数個の色が塗られた辺はなかった．m として考えられる最小値を求めよ． m の最小値を一行に出力せよ． たとえば，頂点1, 2, 3, 4, 5 からなるグラフがあった場合，次のように色を塗ることができる．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01743.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 5\n 2 ≤ ai ≤ 109",
          "ranges": "1 5; 2 109; 5; 109; 1; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\n3\n3",
            "output": "5 たとえば，頂点1, 2, 3, 4, 5 からなるグラフがあった場合，次のように色を塗ることができる． 頂点1, 2, 3 を選びその間を結ぶ辺を色1 でぬる．\n 頂点1, 4, 5 を選びその間を結ぶ辺を色2 でぬる．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01743.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01743"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01744",
        "title": "Sample Input 1",
        "description": "w 本の縦棒からなり，高さ(横棒を追加することのできる段数) が h のあみだくじがある．w は偶数である．このあみだくじの横棒を追加する場所の候補のうち上から a 番目，左から b 番目を (a, b) という．((a, b) に横棒を追加した場合，上から a 段目で左から b 番目と b+1 番目の縦棒が結ばれる．) このような場所は合計 h(w −1) 箇所(1 ≤ a ≤ h, 1 ≤ b ≤ w − 1) 存在する． すぬけ君は，a ≡ b (mod 2) をみたす場所 (a, b) に全て横棒を追加した．次に，すぬけ君は，(a1, b1), . . . , (an, bn) の場所の横棒を消した．上端で左から i 番目を選んだとき下端で左から何番目になるか，というのを全て求めよ． w 行出力せよ．i 行目には，上端で左から i 番目を選んだとき下端で左から何番目になるかを出力せよ． 図1: たとえば，上端で左端の縦棒を選ぶと，(1, 1), (2, 2), (4, 2) を通って下端で左から二番目の縦棒にたどり着く．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01744.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ h, w,  n ≤ 200000 \n w は偶数\n 1 ≤ ai ≤ h\n 1 ≤ bi ≤ w − 1\n ai ≡ bi (mod 2)\n (ai, bi) = (aj, bj) となるような相異なる i, j は存在しない",
          "ranges": "200000; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 4 1\n3 3",
            "output": "2\n3\n4\n1 図1: たとえば，上端で左端の縦棒を選ぶと，(1, 1), (2, 2), (4, 2) を通って下端で左から二番目の縦棒にたどり着く．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01744.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01744"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01745",
        "title": "Sample Input 1",
        "description": "w を正整数，p を長さ22w+1 の文字列とする．(w, p)- セルオートマトンとは次のようなものである． すぬけ君は，時刻 0 にどのように初期状態を選んでも 1 の個数が初期状態から変わらないようなセルオートマトンが好きである．整数 w と文字列 s が与えられたとき，辞書順で s 以上の文字列 p であって　(w, p)− セルオートマトンがすぬけ君に好かれるような最小の p を求めよ． 条件を満たす最小の p を出力せよ．そのようなものが存在しないときは \"no\" と出力せよ．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01745.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ w ≤ 3\n |s| = 22w+1\n s に現れる文字は '0', '1' のみである",
          "ranges": "1 3; 3; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1\n00011000",
            "output": "00011101",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01745.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01745"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01746",
        "title": "Sample Input 1",
        "description": "すぬけ君は，初期状態では動くことはできない．i 番目のチケットの値段は pi であり，これを買うと任意の (x, y) と任意の非負実数 t に対し(x, y) から(x + tai, y + tbi) に移動することができるようになる．すぬけ君が平面上の任意の二点間を(いくつかのチケットを組み合わせて) 移動できるようになるために買わなければならないチケットの合計金額の最小値を求めよ． 平面上の任意の二点間を移動できるようになるために買わなければならないチケットの合計金額の最小値を出力せよ．できない場合は-1 を出力せよ． たとえばチケット1, 3, 6 を買うとよい．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01746.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 200000\n −109 ≤ ai, bi ≤ 109\n 1 ≤ pi ≤ 109\n 入力は全て整数である",
          "ranges": "1 200000; 1 109; 200000; 109; 109; 1; 109; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "7\n0 3 1\n0 3 2\n1 -1 2\n0 0 1\n-2 4 1\n-4 0 1\n2 1 2 たとえばチケット1, 3, 6 を買うとよい．",
            "output": "4",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01746.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01746"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01747",
        "title": "Sample Input 1",
        "description": "すなけ君は，(自己交差を持たない) n 個の頂点からなる折れ線の形をしている．最初に，すなけ君の i 番目の頂点は (xi, yi) にある．すなけ君は，平行移動や回転をして連続的に移動することはできるが，変形(折れ線の長さや二つの線分のなす角度を変える) することはできない．y = 0 は壁であり，(0, 0) に微小な穴が開いている．すなけ君がこの穴を通って全体が y < 0 をみたすように移動できるかどうか判定せよ． すなけ君が穴を通って移動できる場合は\"Possible\", できない場合は\"Impossible\" と出力せよ．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01747.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ n ≤ 1000 \n 0 ≤ xi ≤ 109 \n 1 ≤ yi ≤ 109 \n 折れ線は自己交差を持たない \n どの三点も同一直線上にない \n (xi, yi) ≠ (xi+1, yi+1) \n 入力は全て整数である",
          "ranges": "2 1000; 0 109; 1 109; 1000; 109; 109; 2; 0; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n0 1\n1 1\n1 2\n2 2",
            "output": "Possible −y 方向に 1 平行移動する． \n (0, 0) を中心として 90 度反時計回りに回転する．\n −y 方向に 1 平行移動する．\n (0, 0) を中心として 90 度時計回りに回転する．\n −y 方向に 1 平行移動する．\n (0, 0) を中心として 90 度反時計回りに回転する．\n −y 方向に 2 平行移動する．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01747.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01747"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01748",
        "title": "Sample Input 1",
        "description": "n 個の都市と n − 1 本の道路があり，木になっている．都市には 1 から n までの番号がつけられている．都市 1 を根とみたとき，都市 i の親は pi であり，i と pi の距離は di である．すぬけ君は，1 以上 n 以下の各 k に対し，次の問題を解きたい． を求めよ．ただし dist(u, v) は u と v の距離をあらわす． n 行出力せよ．i 行目には，k = i のときの答えを出力せよ．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01748.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 200000 \n 1 ≤ pi ≤ n \n 1 ≤ di ≤ 200000 \n pi によって表されるグラフは木になっている \n 入力は全て整数である",
          "ranges": "1 200000; 1 200000; 200000; 200000; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "10\n4 1\n1 1\n3 1\n3 1\n5 1\n6 1\n6 1\n8 1\n4 1",
            "output": "0\n3\n3\n4\n5\n7\n10\n13\n16\n19",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01748.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01748"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01749",
        "title": "Sample Input 1",
        "description": "すぬけ君は，\"s でt t\" というダジャレを思いついたが，忘れてしまった．すぬけ君は以下のことを覚えている． (s, t) として考えられる組み合わせの個数を 1,000,000,007 で割ったあまりを求めよ．ただし，文字は A 種類存在するものとする． 条件を満たす文字列の組 (s, t) の個数を 1,000,000,007 で割ったあまりを出力せよ．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01749.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 200 \n 1 ≤ M ≤ 50\n M ≤ N\n 1 ≤ A ≤ 1000",
          "ranges": "1 200; 1 50; 1 1000; 200; 50; 1000; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 2 2",
            "output": "14",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01749.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01749"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01750",
        "title": "Sample Input 1",
        "description": "すぬけ君は，誕生日プレゼントとして辺の長さが l1 × . . . × ld の d 次元超直方体をもらった．すぬけ君は，この直方体を i 番目の座標の範囲が 0 以上 li 以下となるようにおき，x1 + . . .  + xd ≤ s をみたす部分を食べてしまった．ただし xi は i 番目の座標を表す．すぬけ君の食べた部分の体積を V とすると，d!V (V に d の階乗をかけた値) は整数となることが証明できる．d!V を1,000,000,007 で割ったあまりを求めよ． d!V を 1,000,000,007 で割ったあまりを出力せよ．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01750.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ d ≤ 300 \n 1 ≤ li ≤ 300\n 0 ≤ s ≤ $\\sum l_{i}$\n 入力は全て整数である",
          "ranges": "2 300; 1 300; 300; 300; 2; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\n6\n3\n4",
            "output": "15",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01750.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01750"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01751",
        "title": "Sample Input 1",
        "description": "A 君は山手線に乗って目的地にたどり着きたい． A 君は電車に乗ってから a 分起きて b 分寝ることを繰り返す．目的地までは乗車後 c 分であり，このとき起きていれば下車できるが，逆に寝ている途中であれば乗り過ごしてしまう．また，A 君は乗り過ごしてもずっと同じ電車に乗り続け，電車は山手線を一周するのに 60 分かかる．したがって，A 君は目的地に 60t + c ( t は非負整数) 分後に着くことになる． 何分後にA 君は目的地に到着できるか．到着不可能なときは-1 を出力せよ．ただし，目的地に到着した時が寝ている時間と起きている時間の境目だった場合は降りることができるものとする． 入力は以下の形式で1 行で与えられる． 入力は3 つの整数 a, b, c からなる． a は起きている時間，b は寝ている時間，c は乗車してから目的地までにかかる時間である．また，a, b, c の単位は分である． A 君が目的地に到着できる場合はA 君の目的地到着までにかかる時間を出力せよ．それ以外の場合は-1 を出力せよ．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01751.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0 < a, b, c < 60",
          "ranges": "60; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "10 10 5",
            "output": "A 君が目的地に到着できる場合はA 君の目的地到着までにかかる時間を出力せよ．それ以外の場合は-1 を出力せよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01751.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01751"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01752",
        "title": "Sample Input 1",
        "description": "A さんと B 君は，N ×  M の長方形のマス目状の地域に住んでいる．各マス目は道か壁か家のどれかである．この地域は，道が複雑で入り組んでいるので痴漢被害がよく起こることで有名であるため，この地域と外部との境界は全て壁で囲まれており，隔離されている． B 君はなんとなく気が向いたので，A さんの家を眺めに行くことにした．しかし，不幸なことにB 君は明らかに怪しい顔をしているので，A さんの家に行く途中に少しでも痴漢の疑いがあるような行動を取ったらすぐに捕まってしまうだろう．特に，右手を壁から離して歩くことは絶対にやってはならない．B 君は，一瞬たりとも右手を離すことなく，A さんの家に辿り着くことが出来るだろうか？ B 君はつねに上下左右いずれかの方向を向いていて，B 君の右手が届く範囲はB 君の向いている方向に対して正面，斜め右前，右，斜め右後ろの4 マスのみである．B 君は，次のいずれかの行動を繰り返す．ただし，これらを同時に行うことは出来ない． 入力は以下の形式で与えられる． Si (1 ≤ i ≤ N) は， M 文字の文字列で各文字は次を表す． 一度も右手を離さずにA さんの家に辿り着くことが出来る場合には，A さんの家にたどり着くまでに通った異なるマスの数の最小値を出力せよ．A さんの家に辿り着くことが出来ない場合には，-1 を出力せよ．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01752.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 50 \n 1 ≤ M ≤ 50\n 入力には，文字 \"^\"，\"v\"，\"<\"，\">\" のうちいずれかが必ず一つのみ現れる．\n 同様に，入力には，文字 \"G\" が必ず一つのみ現れる．\n 初期状態では，B 君が向いている方向から右の壁にB 君の右手が接している．",
          "ranges": "1 50; 1 50; 50; 50; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 3\nG##\n.#.\n.<.",
            "output": "一度も右手を離さずにA さんの家に辿り着くことが出来る場合には，A さんの家にたどり着くまでに通った異なるマスの数の最小値を出力せよ．A さんの家に辿り着くことが出来ない場合には，-1 を出力せよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01752.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01752"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01753",
        "title": "Sample Input 1",
        "description": "西暦20XX 年，学校対抗魔法競技大会が開かれていた．大会もいよいよ，最終競技を残すのみとなった．あなたはその競技の選手の1 人である． あなたが出場する競技は，空間内に配置された青いオブジェをすべて破壊するまでの時間を競うというものである．選手は競技用の銃の持込が許可されている．空間内には複数の青いオブジェと同じ数の赤いオブジェ，そして複数の障害物が配置されている．青いオブジェと赤いオブジェは1 対1 に対応しており，赤いオブジェが配置されている座標から青いオブジェに弾を撃つことで青いオブジェを破壊しなければならない．空間内に配置されている障害物は球状であり，少しずつ組成が異なっているが，通常の弾であれば障害物に触れると弾はその場に止まってしまう． 競技に使われる弾はMagic Bullet という特殊な弾である．この弾は魔力をため込むことができ，弾が障害物に接触した際に自動的に魔力を消費し，弾が貫通する魔法が発動する．障害物の組成の違いから，貫通するために必要な魔法やその発動のために消費する魔力の量は異なっている．このため，ある障害物に対する魔法が発動した後であっても，別の障害物を貫通するためには新たに別の魔法を発動する必要がある．また，弾が複数の障害物に同時に接触した場合は同時に魔法が発動する．弾に込められた魔力の量は魔法の発動のたびに減少する． 障害物の位置や大きさ，貫通する魔法の発動に必要な魔力の量はすでに公開されているのに対し，赤いオブジェ，青いオブジェの位置は公開されていない．しかし，過去の同一競技の情報から，ある程度オブジェの位置を予想することができた．魔力を弾にこめることは非常に体力を消耗してしまうため，あなたは魔力をできるだけ節約したいと考えた．そこで，赤いオブジェとそれに対応する青いオブジェの位置を仮定して，そのときに弾にこめるべき必要な魔力の最小量，つまり，青いオブジェに到達している時点で弾に残っている魔力が0 になる魔力の量を求めよう． 入力はすべて整数である．それぞれの数は1 つの空白により区切られる． それぞれ1 組の赤いオブジェとそれに対応する青いオブジェの位置の仮定において，空間中に障害物と赤いオブジェと青いオブジェ1 対とのみがあるものとして，弾にこめるべき魔力の量を1 行に出力せよ．弾は赤いオブジェの位置から青いオブジェの位置まで一直線に飛ぶものとし，弾の大きさは非常に小さいので点として扱う．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01753.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0 ≤ N ≤ 50 \n 1 ≤ Q ≤ 50\n -500 ≤ xi, yi, zi ≤ 500\n 1 ≤ ri ≤ 1,000\n 1 ≤ li ≤ 1016\n -500 ≤ sxj, syj, szj ≤  500\n -500 ≤ dxj, dyj, dzj ≤ 500\n 障害物が他の障害物にめり込んでいることはない\n オブジェの座標は障害物の内部，表面にはない\n それぞれの仮定において，赤いオブジェと青いオブジェの座標は一致しない",
          "ranges": "0 50; 1 50; 1 1; 1 1016; 50; 50; 500; 1; 1016; 500; 500; 0; 1; 500; 1; 1; 500; 500"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 1\n0 10 0 5 2\n0 20 0 5 12\n0 30 0 5 22\n0 40 0 5 32\n0 50 0 5 42\n0 0 0 0 60 0",
            "output": "それぞれ1 組の赤いオブジェとそれに対応する青いオブジェの位置の仮定において，空間中に障害物と赤いオブジェと青いオブジェ1 対とのみがあるものとして，弾にこめるべき魔力の量を1 行に出力せよ．弾は赤いオブジェの位置から青いオブジェの位置まで一直線に飛ぶものとし，弾の大きさは非常に小さいので点として扱う．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01753.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01753"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01754",
        "title": "Sample Input 1",
        "description": "2014 年春，ある学生は無事大学に合格し，一人暮らしを始める事となった．ここで問題となるのが夕食をどうするかである．彼はこれから N 日間の夕食の計画を立てる事にした． 彼は N 日間で得られる幸福度の合計を出来る限り大きくしたい．もちろん，美味しいものや好きなものを食べるほど幸福度は高い． 彼の夕食の選択肢は2 つ，近くの食堂に向かうか，自炊をするかのどちらかである． 食堂で得られる幸福度は，その日のメニューによって変わる．メニューは日替わりだが毎日一種類のみで，N 日間のメニューは全て既に公開されている．なので，彼は i 日目 (1 ≤ i ≤ N) に食堂に行けば Ci の幸福度を得られるという情報を全て知っている． 自炊で得られる幸福度は，その自炊の開始時点での自炊パワーに定数 P を掛けたものである．自炊パワーは初期値が Q であり，毎日，食堂に行けば-1，自炊をすれば+1，その日の食事の終了時に変動する． 彼のために幸福度の総和の最大値を求めよう． 入力は以下の形式で N + 1 行で与えられる． 幸福度の取りうる最大値を一行に出力せよ．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01754.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 500,000 \n 0 ≤ P ≤ 500,000\n |Q| ≤ 500,000\n |Ci| ≤ 500,000",
          "ranges": "1 500; 0 500; 500; 500; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1 1 1\n2",
            "output": "幸福度の取りうる最大値を一行に出力せよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01754.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01754"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01755",
        "title": "Sample Input 1",
        "description": "盤面上にロボットと壁，ゴールが設置されており， ロボットの行動パターンを記述したプログラムが与えられる． 与えられるプログラムは以下のEBNF で表される． 「プログラム」は0個以上の「文」からなり，1つ以上の文が存在する場合は 1 つ目の文から順番に1 つずつ文が実行される．「文」は「動作文」，「if 文」，「while 文」のいずれかである．「動作文」は\"^\", \"v\",\"<\",\">\" のいずれかであり，それぞれ以下の動作が実行される． 「if 文」は \"[\"，「条件」，「プログラム」，\"]\" を順番に並べたもので，以下の手順で実行される． 「while 文」は \"{\"，「条件」，「プログラム」，\"}\" を順番に並べたもので，以下の手順で実行される． 「条件」は \"N\", \"E\", \"S\", \"W\", \"C\", \"T\" のいずれかであり，先頭には\"~\" をつけることができる．それぞれの記述は以下の真偽値を表す． ロボットは最初，北を向いているものとする．ロボットは壁を通ることができず，何もないマスのみを移動できる．もし，プログラムが壁の上を通るような動作を実行しようとした場合，ロボットは移動せずその場にとどまる．最後に，ロボットはゴールに到達した時，実行途中のプログラムが残っていたとしてもすべて中断して動作を停止する． このとき，ロボットがゴールにたどり着くまでにどのぐらい時間がかかるのか知りたい．ロボットは条件判定やプログラムの読み込みに関しては非常に高速に実行できるので実際の動作時間を決定するのは「動作文」のみである．そこで，このロボットがゴールに辿り着くまでに「動作文」を何回実行するかを教えてほしい． なお，壁の上を通るような動作を実行しようとして，実際には「動作文」の動作が行われなかった場合にも「動作文」は実行されたものとみなす． 入力は以下の形式で与えられる． H は盤面の高さ，W は盤面の幅を表す． 次に盤面を真上から見た状態が与えられる．この盤面は上，下，左，右がそれぞれ北，南，西，東に対応する．各マスの状態を表す ai,j は以下のいずれかの文字である． s にはロボットに与えられるプログラムが文字列として入力される． たどり着ける場合は\"到達するまでに実行した「動作文」の数\" を，たどりつけない場合は \"-1\" を出力せよ．なお，壁の上を通るような動作を実行しようとして，実際には「動作文」の動作が行われなかった場合にも「動作文」が実行されたものとみなす点に注意せよ（入力例1）．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01755.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤  H,W ≤ 50\n 1 ≤ s の文字数 ≤ 1,000\n ai,j は\".\", \"#\", \"s\", \"g\" のいずれか\n \"s\", \"g\" はそれぞれ 1 回しか登場しない\n i = 1 または i = H または j = 1 または j = W ならば ai,j = \"#\"（盤面の外周は壁で囲まれていることが保証されている）\n s として与えられるプログラムは構文的に正しい",
          "ranges": "50; 1; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 3\n###\n#g#\n#.#\n#s#\n###\n^<^<vv",
            "output": "たどり着ける場合は\"到達するまでに実行した「動作文」の数\" を，たどりつけない場合は \"-1\" を出力せよ．なお，壁の上を通るような動作を実行しようとして，実際には「動作文」の動作が行われなかった場合にも「動作文」が実行されたものとみなす点に注意せよ（入力例1）．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01755.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01755"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01756",
        "title": "Sample Input 1",
        "description": "文字列 S と， m 個のクエリが与えられる．i 番目のクエリは二つの文字列 xi, yi で与えられる． 各クエリについて，文字列 S の部分文字列であり， xi で始まり yi で終わるものの中で，最長の長さを答えよ． 文字列 S について， |S| は S の長さを表す．また，文字列 T が文字列 S の部分文字列であるとは，ある整数 i が存在して， 1 ≤ j ≤ |T| に対して Tj = Si+j を満たすことを言う．ただし Tj は T の j 番目の文字を表す． 入力は以下の形式で与えられる． 以下の形式で最大の部分文字列の長さを答えよ． 1 行目からの m 行のうち i 行目には， i 番目のクエリについて，条件を満たす最長の部分文字列の長さ leni を出力せよ．そのような部分文字列がない場合，0 を出力せよ． 文字列 S として，abracadabra が与えられる．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01756.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ |S| ≤ 2 × 105 \n 1 ≤ m ≤ 105\n 1 ≤ |xi|, |yi|\n $\\sum^m_{i=1}$ (|xi| + |yi|) ≤ 2 × 105\n S 及び xi, yi は，半角の英小文字のみからなる．",
          "ranges": "1 105; 105; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "abracadabra\n5\nab a\na a\nb c\nac ca\nz z",
            "output": "以下の形式で最大の部分文字列の長さを答えよ． len1\nlen2\n:\nlenm 1 行目からの m 行のうち i 行目には， i 番目のクエリについて，条件を満たす最長の部分文字列の長さ leni を出力せよ．そのような部分文字列がない場合，0 を出力せよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01756.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01756"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01757",
        "title": "Sample Input 1",
        "description": "今年も，全国プログラミング選手権大会の時期がやってきた．全国大会の参加権を賭けた地区大会は， 2n チームが1 対1 の勝ち残り式トーナメント方式で対決する． トーナメント表にはチーム番号 0, . . . 2n − 1 が割り振られており，1 回戦から n 回戦までの対決手順は次の通りである． n 回戦まで終わると，各チームの順位は 2n − (そのチームが勝った回数) 位で確定する．なお，この対決には引き分けが存在しないため，対決したチームのいずれか一方が勝ち，もう一方が負ける． 晴れて地区大会の代表に選ばれた私達は，他の地区大会の結果をマネージャーに調べてもらうことにした．ここで調べてもらった結果が「マネージャーから受け取った順位表」であった．「マネージャーから受け取った順位表」をより詳細に説明すると，長さ 2n の数列で i ( 0 ≤ i ≤ 2n − 1 ) 番目の要素にチーム番号 i のチームの順位が書かれているものである． だが，「マネージャーから受け取った順位表」には同じ順位が大量に並んでいた！トーナメントのルール上，同じ順位が大量に並ぶなんてありえないはずだ．そこで，「マネージャーから受け取った順位表」を「無矛盾な順位表」にするために順位を変更するチーム数の最小値を計算してどのくらい順位表が間違っているかをマネージャーに教えてあげよう．「無矛盾な順位表」とは，順位が確定したトーナメントの結果として起こりうる順位表のことを表す． 入力には，「マネージャーから受け取った順位表」が以下の形式で与えられる． 「マネージャーから受け取った順位表」を「無矛盾な順位表」にするために順位を変更するチーム数の最小値を1 行に出力せよ． 参加チーム数が2 の「無矛盾な順位表」は，{\"チーム番号 0 のチームの順位\", \"チーム番号 1 のチームの順位\"} として {1, 2} と {2, 1} の2 通りがある．順位表 {2, 2} を「無矛盾な順位表」に修正するためには，いずれかのチームの順位を 1 に変更しなければならない．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01757.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 30\n 1 ≤ m ≤ 10,000\n 0 = a0 < a1 ≤ . . . ≤ am−1 < am = 2n\n 0 ≤ bi ≤ n",
          "ranges": "1 30; 1 10; 1 2; 30; 10; 2; 1; 1; 0; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1 1\n0 2\n1",
            "output": "「マネージャーから受け取った順位表」を「無矛盾な順位表」にするために順位を変更するチーム数の最小値を1 行に出力せよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01757.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01757"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01758",
        "title": "Sample Input 1",
        "description": "閉路のない連結な有向グラフが与えられる．(有向グラフが連結であるとは，これを無向グラフとした時に連結であるという事である．) このグラフに対して一つの頂点を選んで首都 s を定めたい． T(v) = \"v から全ての点を到達可能にするために必要な「辺の反転」操作の回数の最小値\"とする． ただし，「辺の反転」とは，頂点 v, u に関して (v, u) に張られていた有向辺を削除して (u, v) に張り直すことである． 頂点 s が首都であるとは任意の頂点 v に対して， T(s) ≤ T(v) が成立することである． 首都であるような頂点をすべて列挙して答えよ． 入力は以下のような形式で M + 1 行で与えられる． 以下の形式で2 行で出力せよ．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01758.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10,000\n 0 ≤ M ≤ 100,000\n 0 ≤ ai ≤ N − 1\n 0 ≤ bi ≤ N − 1\n ai ≠ bi\n i ≠ j ならば (ai, bi) ≠ (aj, bj)\n 与えられるグラフは連結で閉路はない．\n 与えられるグラフに対して，入次数が 0 である頂点の個数は 50 以下である．",
          "ranges": "1 10; 0 100; 10; 100; 1; 0; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 2\n0 1\n2 1",
            "output": "以下の形式で2 行で出力せよ． cnum cost\nc1 c2 . . .  ccnum 1 行目には二つの整数 cnum, cost を空白区切りで出力せよ．\n 2 行目には cnum 個の整数 ci を空白区切りで出力せよ．\n 変数の意味は以下の通りである．\n     − cnum : 首都の性質を満たす頂点数\n     − cost : 首都となる頂点 v に対する T(v) の値\n     − ci : 首都の性質を満たす頂点を番号に関して昇順に並べた時，i 番目の頂点番号",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01758.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01758"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01759",
        "title": "Sample Input 1",
        "description": "太郎君は Vongress と呼ばれるゲームが大好きである．Vongress とは，n 頂点からなる凸多角形である盤の上で行われる陣取りゲームである． このゲームでは，m 人のプレイヤーが，盤の内側にそれぞれ 1 つ駒を置く．駒の位置は x座標と y 座標の組で表され，駒の大きさは考えない． あるプレイヤーの陣地とは，盤上でその人が置いた駒が最も近くにあるような場所からなる領域である．プレイヤーは，自分の陣地の面積をスコアとして得る． 太郎君はいつも盤の形状，置かれた駒の位置，各プレイヤーのスコアを記録していたが，ある日うっかり駒の位置を記録するのを忘れてしまった．そこで太郎君は，盤の形状とプレイヤーの得点から，矛盾のない駒の位置を書き加えることにした． あなたの仕事は，太郎君に代わって各プレイヤーの得点と矛盾しない駒の位置を求めることである． 入力は以下の形式で与えられる． n は盤である凸多角形の頂点数，m はプレイヤーの数を表す．(xi, yi) は盤の頂点の座標を表す．r1, . . . ,  rm は各プレイヤーが得たスコアの比を表す． m 個の駒の位置を以下の形式で出力せよ． (x'k, y'k) は，k 番目のプレイヤーの駒の位置である． 出力は次の条件を満たさなければならない． 下図のように駒を配置すれば，全プレイヤーが同じスコアを得られる．黒い線分が盤，赤い点がプレイヤーの駒，青い線分がプレイヤーの陣地の境界線をそれぞれ表す． 下図のように駒を配置すればよい． 下図のように駒を配置すればよい．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01759.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3 ≤ n ≤ 100 \n 1 ≤ m ≤ 100 \n −104 ≤ xi, yi ≤ 104\n 1 ≤ rj ≤ 100\n 入力は全て整数である．\n 凸多角形の頂点 (xi, yi) は反時計回りの順番で与えられる．",
          "ranges": "3 100; 1 100; 1 100; 100; 100; 104; 100; 3; 1; 104; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 5\n1 1\n-1 1\n-1 -1\n1 -1\n1\n1\n1\n1\n1",
            "output": "m 個の駒の位置を以下の形式で出力せよ． x'1 y'1\nx'2 y'2\n:\nx'm y'm (x'k, y'k) は，k 番目のプレイヤーの駒の位置である． 出力は次の条件を満たさなければならない． 駒が凸多角形の内側にある．境界線上にあってもよい．\n どの 2 つの駒も 10−5 以上距離が離れている．\n 与えられる凸多角形の面積を S とする．出力から求まる k 番目のプレイヤーの陣地の面積について， $\\frac{r_k}{r_1+...+r_m} S$ との絶対誤差または相対誤差が 10−3 未満である．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01759.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01759"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01766",
        "title": "A : Soccer / サッカー",
        "description": "A国とB国の間でAIサッカーの試合をした。あなたの手元には、ある時刻にボールを持っていた選手とその位置を記録した表がある。表は N 行からなり、上から i 番目の行は次に示す要素からなる。 フレーム数とは、ゲームの開始時刻に 0 に設定され、 1/60 秒ごとに 1 加算される整数のことである。例えば、ゲーム開始からちょうど 1.5 秒後のフレーム数は 90 である。 背番号は各チーム内の 11 人の選手に一意にふられる整数である。さらに、表中の連続する 2 つの記録において、同じチームの異なる背番号の選手がボールを持っているとき、その間に「パス」が行われたとする。記録に存在しないフレームは考慮しなくてよい。 さて、エンジニアであるあなたの仕事は、各チームの選手間で行われたパスのうち、 最も距離(ユークリッド距離)が長いものの距離と、それにかかった時間を求めることである。 距離が最長となるパスが複数ある場合は、かかった時間が最も短いものを出力せよ。 入力は以下の形式で与えられる。t_i=0 のときA国、 t_i=1 のときB国を表す。 A国の最長のパスにかかった距離と時間、B国の最長のパスにかかった距離と時間を、それぞれ1行に出力せよ。時間は秒単位とし、距離、時間ともに 10^{−3} 以下の絶対誤差は許される。パスが一度も行われなかった場合はともに −1 と出力せよ。 A国は長さ 5 のパスを 30 フレームの時刻に 60 フレーム =1 秒でし、B国は長さ √2 のパスを 120 フレームの時刻に 12 フレーム =0.2 秒でした。これらがそれぞれの最長のパスである。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01766.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力はすべて整数である\n1 \\≤ N \\≤ 100\n0 \\≤ f_i \\lt f_{i+1} \\≤ 324\\,000\n 1 \\≤ a_i \\≤ 11\n t_i = 0,1\n 0 \\≤ x_i \\≤ 120\n 0 \\≤ y_i \\≤ 90",
          "ranges": "0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "入力は以下の形式で与えられる。t_i=0 のときA国、 t_i=1 のときB国を表す。 N\nf_0 a_0 t_0 x_0 y_0\n…\nf_{N−1} a_{N−1} t_{N−1} x_{N−1} y_{N−1}",
            "output": "A国の最長のパスにかかった距離と時間、B国の最長のパスにかかった距離と時間を、それぞれ1行に出力せよ。時間は秒単位とし、距離、時間ともに 10^{−3} 以下の絶対誤差は許される。パスが一度も行われなかった場合はともに −1 と出力せよ。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01766.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01766"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01809",
        "title": "幾何問題を解こう",
        "description": "A君は今日も幾何の問題を解いている。\n幾何の問題を解く時は浮動小数点誤差に気をつけることが大事である。 浮動小数点誤差とは、2進法の有限小数で数を表す際におこる丸めによって起きる誤差である。\n例えば、10進法での 0.1 は2進法では 0.00011001100110011 ... という無限小数になるが、\nこれを有限の桁で丸める際に誤差が発生してしまう。 正の整数 p, q が10進法で与えられる。\n有理数 p / q を有限桁数の小数で表現することができるような b 進法（b は2以上の整数）を求めよ。\n複数ある場合は最も小さいものを出力せよ。 入力は以下の形式で標準入力から与えられる。 答えを一行に出力せよ。 1/2 は 2 進法で 0.1 です 21/30 は 10 進法で 0.7 です",
        "difficulty": "Hard",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01809.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0 < p < q < 10^9",
          "ranges": "10; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1 2",
            "output": "2 1/2 は 2 進法で 0.1 です",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01809.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01809"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01810",
        "title": "監獄",
        "description": "無限人の囚人たちがいる。はじめ、囚人たちは 0, 1, 2, ... と番号が振られている。 次の操作を N 回行う。 N 回目の操作で釈放される囚人がはじめに振られていた番号を求めよ。 入力は以下の形式で標準入力から与えられる。 答えを一行に出力せよ。",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01810.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10^5\n2 ≤ k  ≤ 10^5\n答えは 10^{18} 以下である。",
          "ranges": "1 10; 2 10; 10; 10; 1; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 2",
            "output": "7",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01810.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01810"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01812",
        "title": "真っ暗な部屋",
        "description": "目を覚ますと、A君は真っ暗な部屋の中にいた。\nどうやらA君は N 個の部屋から構成されたダンジョンに迷い込んでしまったようだ。\nあなたはA君がどの部屋に迷い込んだのかを知ることはできなかったが、幸いにもダンジョンのマップを手に入れることができた。\nA君の進むべき道を示し明るい部屋に導こう。 N 個の部屋のうち M 個の部屋が真っ暗な部屋であり、それぞれ D_1, D_2, ..., D_M 番目の部屋が真っ暗な部屋であることが分かっている。\nまた、全ての部屋からちょうど K 本の一方通行の道が順に並んでおり、i 番目の部屋から出る道はそれぞれ \nv_{i,1}, v_{i,2}, ..., v_{i,K} 番目の部屋に繋がっている。\nあなたは、A君に対し今いる部屋から a_1, a_2, ..., a_l 番目の道を順に進ませることができる。\nただし、A君は明るい部屋に到達したらそれ以降の指示は無視する。\nあなたは、指示の前後においてA君が今いる部屋の情報を知ることはできないため、A君がどの部屋にいたとしても明るい部屋に辿り着けるような指示列を伝えなければならない。\n\nそのような指示のうち、最も短いものの長さを答えよ。 入力は以下の形式で標準入力から与えられる。 答えを一行に出力せよ。 1, 1 という指示を出すと 2, 1, 2 という指示を出すと 非連結であるケースや、自己辺、多重辺があるケースに気をつけよう",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01812.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2  ≤  N  ≤  100\n1  ≤  M  ≤  min(16, N − 1)\n1  ≤  K  ≤  N\n1  ≤  D_i  ≤  N\nD_i は全て異なる\n1  ≤  v_{i, j}  ≤  N\n 全ての暗い部屋は少なくとも1つの明るい部屋に到達可能である",
          "ranges": "2 100; 100; 2; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 2 2\n1 2\n2 4\n3 1\n4 2\n1 3",
            "output": "2 1, 1 という指示を出すと A君の初期位置が部屋1である場合、2つ目の移動で部屋3に到達する\nA君の初期位置が部屋2である場合、1つ目の移動で部屋3に到達する",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01812.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01812"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01814",
        "title": "ほぼ周期文字列",
        "description": "文字列 S が与えられる。この文字列 S に対し、Q 個のクエリに答えよ。\n i 番目のクエリでは、S[l_i,\\ r_i] から1文字まで変えてよいとき、S[l_i,\\ r_i] を周期 t_i の文字列にできるかどうかを判定せよ。S[l,\\ r] は文字列 S の l 文字目から r 文字目までの部分文字列を表す。 文字列 W が周期 t の文字列であるとは、i\\ =\\ 1,\\2,\\... ,\\ |W| − t に対し、\n W_{i} = W_{i+t}\nとなることとする。 入力は以下の形式で標準入力から与えられる。 Q 行にわたって出力せよ。\ni 行目には、i 番目のクエリの答えを\nYes または No で出力せよ。",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01814.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1  ≤  |S|  ≤  10^5\n1  ≤  Q  ≤  10^5\n1  ≤  l_i  ≤  r_i  ≤  |S|\n1  ≤  t_i  ≤  r_i − l_i+1 \nSはアルファベットの小文字のみからなる",
          "ranges": "1 10; 10; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "abcabcaxcabc\n4\n1 9 3\n8 12 3\n1 4 2\n2 3 2",
            "output": "Yes\nYes\nNo\nYes",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01814.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01814"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01815",
        "title": "Escape",
        "description": "頂点に正の値を持つ無向グラフが与えられる。\n頂点には 1 から N の番号がついており、i 番目の頂点は w_i の値を持っている。\n1 番目の頂点からスタートし、直前に通った辺を通ることができないという制約のもとでグラフ上を移動することができる。\n各頂点では，初めて訪れた時に限りその頂点が持つ値の点数を得られる。 取得できる点数の総和の最大値を求めよ。 入力は以下の形式で標準入力から与えられる。 1 行目にはグラフの頂点数 N と辺の数を表す整数 M が入力される。 \n2 行目には各頂点が持つ値 w_i が入力される。 \nさらに続けて M 行に、各辺により繋がれる 2 頂点の番号が入力される。 答えを1行に出力せよ。 頂点 1→2→3→4→5→6 と進むことで全ての頂点の点数を集めることができます。 頂点 1→2→3→1→5→6→1→4 と進むことで16点を集めることができます。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01815.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1  ≤  N  ≤  100000\nN − 1  ≤  M  ≤  100000\n1  ≤  w_i  ≤  1000\n1  ≤  u_i, v_i  ≤  N\n多重辺・自己辺は存在しない\nグラフは連結である",
          "ranges": "1 100000; 1 100000; 1 1000; 100000; 100000; 1000; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "6 6\n1 2 3 4 5 6\n1 2\n2 3\n3 4\n1 4\n4 5\n5 6",
            "output": "21 頂点 1→2→3→4→5→6 と進むことで全ての頂点の点数を集めることができます。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01815.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01815"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01816",
        "title": "H - Bit Operation Game",
        "description": "N 頂点の根付き木が与えられる。\n頂点には 0 から N − 1 の番号がついており、0番目の頂点が根を表す。\n根には T = 0 が、それ以外の頂点には のいずれかの操作が書かれている。\nここでの演算子 &, |, ^ はそれぞれビット演算子 and, or, xor, を意味する。 A君とB君はこの木を使って以下のゲームを M 回行った。\n二人は根からスタートし、子頂点を選び進むという操作を、A君から始め葉に到達するまで交互に行う。\n通ったノードに書かれている操作を、通った順に適用した時の、最終的な T の値がスコアになる。\nB君はできるだけスコアを小さくしたいと考えており、またA君は大きくしたいと考えている。\nM回のゲームの X, Y の値が与えられるので、二人が最適な選択をした時の各ゲームのスコアを出力せよ。 入力は以下の形式で標準入力から与えられる。 1 行目には木の頂点数 N と、行われるゲーム数を表す整数 M が入力される。 \n2 行目から N 行目にかけて、1 ... N−1 番目の頂点に書かれている操作が入力される。\nさらに続けて N−1 行に、各辺により繋がれる 2 頂点の番号が入力される。\n最後に M 回のゲームにおける X, Y の値が M 行に渡り入力される。 各ゲームでの最終的な T の値をそれぞれ M 行に出力せよ。 X = 5, Y = 6 の場合、頂点 0 -> 2 -> 5 と進み、T = 5 & 6 = 4 になります\nX = 3, Y = 5 の場合、頂点 0 -> 1 -> 4 と進み、T = 3 ^ 5 = 6 になります\nX = 0, Y = 0 の場合、どこを通っても T は 0 から変化しません",
        "difficulty": "Easy",
        "category": "Simulation",
        "tags": [
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01816.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1  ≤  N  ≤  100000\n1  ≤  M  ≤  100000\n0  ≤  X, Y < 2^{16}",
          "ranges": "1 100000; 1 100000; 100000; 100000; 2; 1; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "6 3\nT=T|X\nT=T|Y\nT=T|Y\nT=T^Y\nT=T&X\n0 1\n0 2\n1 3\n1 4\n2 5\n5 6\n3 5\n0 0",
            "output": "4\n6\n0 X = 5, Y = 6 の場合、頂点 0 -> 2 -> 5 と進み、T = 5 & 6 = 4 になります\nX = 3, Y = 5 の場合、頂点 0 -> 1 -> 4 と進み、T = 3 ^ 5 = 6 になります\nX = 0, Y = 0 の場合、どこを通っても T は 0 から変化しません",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01816.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01816"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01817",
        "title": "I - ツインリバース",
        "description": "要素数 N の配列 A が与えられる。ただし、A は (1, 2, ... , N) の順列である。 次の操作を 0 回以上 10,000 回以下の任意の回数行い、A を (1, 2, ..., N) へソートしたい。 ただし、区間 A[l,\\ r] とは A の l, l+1, ..., r  番目の位置のことである。 A を (1, 2, ..., N) へソートできるか判定せよ。ソートできるならば、操作の例を一つ出力せよ。 入力は以下の形式で標準入力から与えられる。 A を (1, 2, ..., N) へソートできないならば、-1 とだけ一行に出力せよ。 ソートできるならば、操作の例を一つ次のように出力せよ。 例えば、次のように 2 回の操作を行えばよい。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01817.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 3,000\nA は (1, 2, ... , N) の順列である。",
          "ranges": "1 3; 3; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n5 1 4 2 3",
            "output": "2\n3\n1 例えば、次のように 2 回の操作を行えばよい。 i=3 を選ぶと (5,\\ 1,\\ 4,\\ 2,\\ 3) → (1,\\ 5,\\ 4,\\ 3,\\ 2)\ni=1 を選ぶと (1,\\ 5,\\ 4,\\ 3,\\ 2) → (1,\\ 2,\\ 3,\\ 4,\\ 5)",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01817.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01817"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01818",
        "title": "Leapfrog",
        "description": "N 個のマスが円状に並んでいる。マスは時計回りに 1,\\ 2,\\  ... ,\\ N と番号が振られている。各 i (1 ≤  i ≤  N−1) について、i 番目のマスと i+1 番目のマスは隣り合う。また、N 番目のマスと 1 番目のマスは隣り合う。 これらのうち M 個のマスには、互いに区別できない駒が 1 個ずつ置かれている。はじめ、x_1,\\ x_2,\\  ... ,\\ x_M 番目のマスに駒が置かれている。次の操作を何回か行い、y_1,\\ y_2,\\  ... ,\\ y_M 番目のマスに駒が置かれているようにしたい。 y_1,\\ y_2,\\  ... ,\\ y_M 番目のマスに駒が置かれているようにできるか判定せよ。できるならば、必要な操作の回数の最小値を求めよ。 入力は以下の形式で標準入力から与えられる。 y_1,\\ y_2,\\  ... ,\\ y_M 番目のマスに駒が置かれているようにできるならば、必要な操作の回数の最小値を一行に出力せよ。できないならば、代わりに -1 を一行に出力せよ。 次のように 3 回の操作を行えばよい。 N 個のマスが円状に並んでいる。マスは時計回りに 1,\\ 2,\\  ... ,\\ N と番号が振られている。各 i (1 ≤  i ≤  N−1) について、i 番目のマスと i+1 番目のマスは隣り合う。また、N 番目のマスと 1 番目のマスは隣り合う。 これらのうち M 個のマスには、互いに区別できない駒が 1 個ずつ置かれている。はじめ、x_1,\\ x_2,\\  ... ,\\ x_M 番目のマスに駒が置かれている。次の操作を何回か行い、y_1,\\ y_2,\\  ... ,\\ y_M 番目のマスに駒が置かれているようにしたい。 時計回りまたは反時計回りに連続する 3 個のマスを選び、順に A,\\ B,\\ C とおく。A と B にそれぞれ駒があり C に駒がないならば、A の駒を C へ移動する。 y_1,\\ y_2,\\  ... ,\\ y_M 番目のマスに駒が置かれているようにできるか判定せよ。できるならば、必要な操作の回数の最小値を求めよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01818.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3 ≤  N ≤  3,000\n1 ≤  M ≤  N\n1 ≤  x_1<x_2< ... <x_M ≤  N\n1 ≤  y_1<y_2< ... <y_M ≤  N",
          "ranges": "3 3; 3; 3; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "7 2\n1 2\n5 6",
            "output": "3 次のように 3 回の操作を行えばよい。 2 番目のマスの駒を 7 番目のマスへ移動する。\n1 番目のマスの駒を 6 番目のマスへ移動する。\n7 番目のマスの駒を 5 番目のマスへ移動する。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01818.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01818"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01852",
        "title": "A : 指折り数えて / Finger Counting",
        "description": "肉西くんは指の数を増やしたり減らしたりできる．肉西くんの前には n 個のまんじゅうがある．肉西くんは指を折ってまんじゅうの個数を数えようとしている．肉西くんの指が取れる形は折れているか折れていないかの 2 つしか無い．肉西くんは 2 進数を理解している．肉西くんは各指に 2 進数の桁を対応させて数を数えることが出来る．肉西くんは対数を理解していない．肉西くんのかわりにまんじゅうを数え上げるのに必要な指の本数の最小値を求めよ． 答えを 1 行に出力し，最後に改行を出力せよ．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01852.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "整数である\n0 ≤ n ≤ 1018",
          "ranges": "0 1018; 1018; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "n",
            "output": "答えを 1 行に出力し，最後に改行を出力せよ．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01852.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01852"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01853",
        "title": "B : 平均値の嘘 / Lie with Mean Value",
        "description": "R 大学情報理工学部 1 回生の学生 n 人が， プログラミング演習 1 という講義の期末試験を受験する． 試験は m 点満点である．つまり，1 人の学生の取りうる点数は 0 以上 m 以下の整数である． 担当の先生は意地が悪いので，平均値と中央値の差が最大になるような点数分布が気になっている．そのような点数の取り方を 1 つ出力せよ． 注 : 平均値とは点数の和を n で割ったものであり，中央値とは点数を昇順に並べたとき，n が奇数なら前から (n+1)/2 番目 (1 − indexed) の点数， 偶数なら前から n/2 番目と n/2+1 番目の点数を足して 2 で割った点数である． 答えの n 個の点数の列をスペース区切りで 1 行に出力し， 最後に改行を出力せよ．複数通りある場合はどれを出力しても良い． 100 \\ 100 \\ 0 等も正答である．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01853.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "整数である\n1 ≤ n ≤ 100\n1 ≤ m ≤ 100",
          "ranges": "1 100; 1 100; 100; 100; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "n \\ m",
            "output": "答えの n 個の点数の列をスペース区切りで 1 行に出力し， 最後に改行を出力せよ．複数通りある場合はどれを出力しても良い．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01853.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01853"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01854",
        "title": "C : 壺 / Pots",
        "description": "ここに N 個の不思議な形の壺がある． i 番目の壺は K_i 個の直円柱を下から順に鉛直に繋げた形状である． 繋がっている順番は変えることができない． A 氏は体積 M の水を持っている． この水をそれぞれの壺に好きな量ずつに分けて注ぐ． 水が全く入っていない壺が存在しても構わない． また，全ての壺が水で満たされたとき，それ以上水を注ぐ事はできない．それぞれの壺の水面の高さの総和の最大値を求めよ． 1 行目に N, M が， 1+i 行目には i 番目の壺の情報が入力される． K_i は直円柱の数であり，S_{ij}, H_{ij} はそれぞれ壺を構成する下から j 番目の直円柱の底面積と高さである． 答えを 1 行で出力せよ． 0.00001 以下の絶対誤差を含んでも良い．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01854.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "整数である\n1 ≤ N ≤ 200\n1 ≤ M ≤ 200\n1 ≤ K_i ≤ 20\n1 ≤ S_{ij} ≤ 20\n1 ≤ H_{ij} ≤ 20",
          "ranges": "1 200; 1 200; 1 20; 200; 200; 20; 1; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "N \\ M\nK_1 \\ S_{11} \\ H_{11} \\ … \\ S_{1 K_1} \\ H_{1 K_1}\nK_2 \\ S_{21} \\ H_{21} \\ … \\ S_{2 K_2} \\ H_{2 K_2}\n…\nK_N \\ S_{N1} \\ H_{N1} \\ … \\ S_{N K_N} \\ H_{N K_N} 1 行目に N, M が， 1+i 行目には i 番目の壺の情報が入力される． K_i は直円柱の数であり，S_{ij}, H_{ij} はそれぞれ壺を構成する下から j 番目の直円柱の底面積と高さである．",
            "output": "答えを 1 行で出力せよ． 0.00001 以下の絶対誤差を含んでも良い．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01854.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01854"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01855",
        "title": "D : 市松模様 / Checkered Pattern",
        "description": "縦横の長さが h, w の長方形があり， 内部には一辺の長さが 1 の正方形のマスが敷き詰められている． 最も左上のマスを (0,0) とし， (0,0) の i 個下で j 個右のマスを (i,j) のように表すことにすると， (i,j) は i+j が偶数なら赤色に，奇数なら青色に塗られている． 今，(0,0) の左上の頂点と (h − 1,w − 1) の右下の頂点を線分で結んだ． この線分が通る赤色の部分の長さを a, 青色の部分の長さを b とおいたとき， 比 a : b は整数比となる．a : b を最も簡単にして(互いに素な整数で)表せ． 1 つのファイルに T 個の入力が含まれる． 1 行目に T， 1+i 行目に T 番目の入力における縦横の長さ h_i, w_i が入力される． 各ケースに対する答えを 1 でスペース区切りで出力せよ． 全体で T 行にわたる．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01855.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "整数である\n1 ≤ T ≤ 1000\n1 ≤ h_i, w_i ≤ 109",
          "ranges": "1 1000; 1000; 109; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "T\nh_1 \\ w_1\n…\nh_T \\ w_T 1 つのファイルに T 個の入力が含まれる． 1 行目に T， 1+i 行目に T 番目の入力における縦横の長さ h_i, w_i が入力される．",
            "output": "各ケースに対する答えを 1 でスペース区切りで出力せよ． 全体で T 行にわたる．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01855.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01855"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01856",
        "title": "E : 台風 / Typhoon",
        "description": "南北方向に H ，東西方向に W の大きさの町がある． 町には一辺の長さが 1 の正方形の区画に隙間なく整備されており，全ての区画に 1 軒ずつ家が建っている． この町のある区画の上空で台風が発生し，被害を与えた後，ある区画の上空で温帯低気圧に変化した． 変化した後は被害を与えない． 下図のように，台風は高さ 3, 幅 3 の正方形であり， ★のついたマスを中心と呼ぶことにする．台風は 8 近傍に区画単位で移動する． つまり，台風の中心は辺または頂点を共有する区画(現在の区画を含む)に移るように，全体を伴って移動する． ただし，町の外に台風がはみ出ることはなく，\n\n台風の中心は，下の図の網掛けのように，北から 0 番目と H − 1 番目，西から 0 番目と W − 1 番目の区間は通らないように移動する． 家は台風が一度上空に来ると，以下のように被害の程度が変化する． 損壊ナシ → 一部損壊 → 半壊 → 全壊 → 跡形ナシ だが，幸い跡形ナシとなった家は無かったようだ． 各家の被害の状況が与えられるので，台風が発生した地点と，温帯低気圧に変化した地点を求めよ． ただし，発生した区画を北から s_i 番目，西から s_j 番目， 温帯低気圧に変化した区画を北から t_i 番目，西から t_j 番目とすると， 2 つの地点は 10000 t_i + t_j ≤ 10000 s_i + s_j を満たすように定まる． D_{ij} は北から i 番目， 西から j 番目の家の被害の程度を以下のように表す整数である． 答えを以下のように 1 行で出力せよ．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01856.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "整数である\n入力は答えが一意に定まるようなもののみ与えられる\n3 ≤ H,W ≤ 500\n0 ≤ D_{ij} ≤ 3",
          "ranges": "500; 3; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "H \\ W\nD_{11} \\ … \\ D_{1W}\nD_{21} \\ … \\ D_{2W}\n…\nD_{H1} \\ … \\ D_{HW} D_{ij} は北から i 番目， 西から j 番目の家の被害の程度を以下のように表す整数である． 0 : 損壊ナシ\n1 : 一部損壊\n2 : 半壊\n3 : 全壊",
            "output": "答えを以下のように 1 行で出力せよ． s_i \\ s_j \\ t_i \\ t_j",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01856.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01856"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01857",
        "title": "F : 卵 / Eggs",
        "description": "1 か月前のことである． 小学生の肉西君は夏休みの宿題をやっていなかった． そこで自由研究は家にあった卵の強度を調べることにした． この研究において，卵を高さ H から落としても割れず， 高さ H+1 から落とすと割れるとき， その卵の強度は H であると定義する． ここで H は非負整数であり，非負整数以外の高さから落とすことは無いとする． 肉西くんは卵を 1 つ落下させる実験を行う． 実験の結果は割れるか割れないかのいずれかである． また，卵の強度は全て同じである．つまり，どの卵を用いても実験の結果は同じである． 肉西くんは高さ 1 から N までの整数の高さの段からなる階段と， 強度が不明な E 個の卵を用意した． 高さ 0 では割れず，高さ N+1 では割れるということは既にわかっている． 肉西くんは各段と同じ高さから地面に向かって落とし，その度に卵が割れたか割れなかったかを調べる． このとき割れた卵は二度と使えないが，割れなかった場合は再利用できる． この実験を卵が残っている限り続けることができる． 何度か実験を繰り返し，上に定めた H が求まったとき，卵の強度が求まったとする． 夏休み終了まで後数日しか無い． 最小の回数で実験を終わらせないと間に合わない． そこで，肉西くんの兄であるあなたは，卵の強度を知るために 落とす回数が少なくなるように最適な方法をとった場合に 必要な実験回数の最大値を求めるプログラムを書くことにした． 1 つのファイルに複数のテストケースが含まれる． 1 行目に整数 T が与えられる． 1+i 行目に i 番目のテストケース E_i, N_i が与えられる i 番目のテストケースに対する答えを i 行目に出力せよ． 全体で T 行にわたる．",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01857.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "整数である\n1 ≤ T ≤ 1000\n1 ≤ N_i ≤ 10^{18}\n1 ≤ E_i ≤ 50\n出力が 50 を超えるような入力は含まれない",
          "ranges": "1 1000; 1 10; 1 50; 1000; 10; 50; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "T\nN_1 E_1\n…\nN_T E_T 1 つのファイルに複数のテストケースが含まれる． 1 行目に整数 T が与えられる． 1+i 行目に i 番目のテストケース E_i, N_i が与えられる",
            "output": "i 番目のテストケースに対する答えを i 行目に出力せよ． 全体で T 行にわたる．",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01857.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01857"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01898",
        "title": "A: 席取り - Taking a Seat -",
        "description": "A君はある試験を受けるために試験会場の教室に入った。\nただ、A君はとても神経質なタイプだ。\nそのため、状況によってA君が座りたくない席がもしかしたらあるかもしれない。\nそこで、A君はある条件をもとに座れる席がいくつあるか調べることにした。 A君は神経質なタイプの人間だ。\nまず、A君は前から1行目の席には座れない。\nというのも、試験監督の近くに座ると緊張してしまって問題が解けなくなる。\nまた、右隣か左隣に人がいるとA君は座れない。\nテスト中に隣の鉛筆の音で集中できなくなってしまうからだ。\nさらに、うるさい奴の近く (上下左右斜めの8近傍) には座れない。休憩中、声が頭に響いて休めないからだ。\nあと、当たり前だがすでに生徒が座っている席は座れない。 この条件の中で果たしてA君が座れる場所があるだろうか。\n教室の席はM × N個並んでいるとして、その個数を求めよう。 1行目ではM (行数:縦の席数) とN (列数:横の席数) が与えられる。\n2行目からM行、長さNの文字列が1行ずつ与えられる。i番目の文字列のj文字目はi行j列目の席の状態を表す。各文字は'-'、'x'、もしくは'o'のいずれかであり、空席を'-'、休憩中うるさい生徒が座る席を'x'、それ以外の生徒が座っている席を'o'とする。 条件によってA君が座れる席の個数を1行で出力せよ。最後に改行を忘れないこと。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01898.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0<M ≤ 100\n0<N ≤ 100",
          "ranges": "0 100; 0 100; 100; 100; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 5\n--o--\n--xo-\n--x--\no---x\n--xoo",
            "output": "3",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01898.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01898"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01899",
        "title": "B: 山手線ゲーム - Yamanote-line Game -",
        "description": "山手線は便利である。 なぜならば、130円払うだけで時間の許す限り何周でも乗っていられるからだ。ただし、切符で乗車する場合は、切符の有効時間に気をつけなければならない。ICカードなら安心らしい。この山手線の特性を利用して、東京近郊には電車に揺られながら惰眠を貪る輩が存在する。ちなみに、この問題の作問者はやったことがない。駅員にバレることは稀だろうが、バレたらめんどくさそうなので、オススメはしない。 山手線の特性を利用したゲームをしよう。 ここでは一般化のため、1からNで番号付けられたN個の駅があり、1, 2, ..., Nの順で駅が円上に並び、各駅からいずれの駅へ行くにもd円で乗車可能な路線として山手線モドキを考えることにする。ゲームは以下のルールに従う。 さて、あなたは最大で何円儲けることができるだろうか。ぜひ、挑戦してみて欲しい。 入力はすべて整数からなる。\n1行目には、山手線モドキの駅の数Nと乗車賃dが空白区切りで与えられる。\n2行目には、各駅でもらえる報酬が空白区切りで与えられ、i番目の値p_iは駅iの報酬を表している。 ゲームで得られる金額の最大値を1行に出力せよ。1円以上の金額を得ることができない場合は\"kusoge\"と1行に出力せよ。出力の最後は改行し余計な文字を含んではならない。",
        "difficulty": "Easy",
        "category": "Simulation",
        "tags": [
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01899.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3 ≤ N ≤ 1{,}000\n1 ≤ d ≤ 1{,}000\n1 ≤ p_i ≤ 1{,}000 (1 ≤ i ≤ N)",
          "ranges": "3 1; 1 1; 1 1; 1; 1; 1; 3; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 130\n130 170 100 120 140",
            "output": "50",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01899.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01899"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01900",
        "title": "C : Mod!Mod!",
        "description": "じゃん！探してますよ目撃証言！\n会津に怪盗が現れた！みんなのウマウマ棒が盗まれた！犯人は誰だ！？\n解きあかせ！Mod!Mod! \"アイズ\"...それは選ばれし者の心に膨らむ奇跡のつぼみ...。特殊能力\"アイズ\"を使えばどんなものだって盗むことができる。 会津一の大怪盗、あいずまるは世界を謎で満たすためにn人の探偵から「ウマウマ棒」を盗むことにした。ウマウマ棒とはあいずまるが大好きなただのお菓子であり、n人の探偵はそれぞれ数本のウマウマ棒を持っている。また、あいずまるは強欲なためそれぞれの探偵からウマウマ棒を盗むとき、その探偵が所持する全てのウマウマ棒を盗む。 ウマウマ棒の3本同時食いにハマっているあいずまるは、3本以上のウマウマ棒が手元にあるとき、誘惑に負けて手持ちのウマウマ棒が3本未満になるまで、3本ずつウマウマ棒を食べてしまう。しかし、あいずまるは手元にウマウマ棒がないとショックでアイズを失ってしまい、それ以上ウマウマ棒を盗むことができなくなってしまう。つまり、ウマウマ棒を盗むためには手持ちのウマウマ棒の本数を1本以上にしておく必要があり、0本になるとそれ以上ウマウマ棒を盗むことができなくなる。 少しでも多くの探偵からウマウマ棒を盗みたいあいずまるは、どの探偵から順にウマウマ棒を盗むかによって何人の探偵からウマウマ棒を盗めるのかが変わることに気づいた。しかし、あいずまるには難しいことは分からない。「ハテー？」あいずまるの優秀な部下であるあなたは、あいずまるの代わりに最大で何人の探偵からウマウマ棒を盗むことができるのかを求めるプログラムを書いてあげることにした。 探偵の人数nと、n人の探偵からそれぞれ何本のウマウマ棒を盗むのかが与えられるので、最適な順番で探偵からウマウマ棒を盗んだとき、最大で何人の探偵からウマウマ棒を盗むことができるかを出力するプログラムを作成せよ。ただし、はじめの手持ちのウマウマ棒の本数は0であるが、最初に限り手持ちが0本でもウマウマ棒を盗むことができるとする。 入力は2行からなり、以下の形式で与えられる。 1行目には、ウマウマ棒を盗む探偵の数である整数nが与えられる。\n2行目には、各探偵から盗むウマウマ棒の本数n個が空白区切りで与えられる。 最適な順番で探偵からウマウマ棒を盗んだとき、最大で何人の探偵からウマウマ棒を盗むことができるか一行に出力せよ。 2 5 1 2 5の順で盗むと5人から盗むことができる。どのような順序で盗んでも6人から盗むことはできない。 どの1人から盗んでも手持ちのウマウマ棒の本数は0になってしまい、アイズを失ってしまう。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01900.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 500{,}000\n1 ≤ a_i ≤ 9 (1 ≤ i ≤ n)",
          "ranges": "1 500; 1 9; 500; 9; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "6\n2 5 2 5 2 1",
            "output": "5 2 5 1 2 5の順で盗むと5人から盗むことができる。どのような順序で盗んでも6人から盗むことはできない。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01900.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01900"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01901",
        "title": "D: 日焼け - Suntan -",
        "description": "あいずにゃんは若ヶ松高校のプログラミングコンテスト部、通称ぷろこん部に所属する2年生である。天使のようにかわいい。\nあいずにゃんは今年の夏フェスに参加する予定なので、聴きに行くバンドのスケジュールを立てた。\nここで心配なのが日焼けだ。\nライブはすべて野外で行われるが、あいずにゃんは日焼けしやすい体質なので長時間野外で紫外線を浴びすぎるとすぐ日焼けしてしまう。\nライブがない間は屋内に避難することでできるだけ紫外線を回避するつもりだが、ライブ中はどうしても日に当たってしまう。\nそこであいずにゃんは日焼け止めを塗ることで紫外線対策をすることを考えた。 日焼け止めを塗ると、塗った時間からT分間だけその効果を得ることができる。\n日焼け止めは1回しか塗ることができないため、効果的に使いたい。\nあいずにゃんは、ライブの開始時刻から終了時刻までは野外にいて、それ以外では屋内にいる。\nあいずにゃんが聴く予定のライブスケジュールが与えられるので、野外にいる間で日焼け止めの効果を得られる最大の時間の長さを求めよ。 入力は次の形式で与えらえる。 1行目では日焼け止めの効果を得られる時間を表す整数Tが与えられる。\n2行目ではあいずにゃんが聴くライブの数を表す整数Nが与えられる。\n続くN行には、あいずにゃんがi番目に聴くライブの開始時刻を表す整数s_iと終了時刻を表す整数t_iが空白区切りで与えられる。 野外にいる間で日焼け止めの効果を得られる最大の時間の長さを1行で出力せよ。",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01901.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ T ≤ 10^{15}\n1 ≤ N ≤ 10^5\n0 ≤ s_i < t_i ≤ 10^{15} (1 ≤ i ≤ N)\n(i+1)番目のライブの開始時刻はi番目のライブの終了時刻と同じかそれよりも遅い。すなわち、t_i ≤ s_{i+1} (1 ≤ i < N)",
          "ranges": "1 10; 1 10; 10; 10; 10; 1; 1; 0; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "20\n1\n0 10",
            "output": "10",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01901.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01901"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01902",
        "title": "E: 鬼畜ババ抜き - Unbalanced Old Maid -",
        "description": "高坂さんと園田さんと南さんは子供の頃からの仲良し3人組だ。3人は沖縄に修学旅行に行くも、台風が来てしまい、海で遊ぶことができないのでババ抜きをすることにした。 園田さんは勝負事には強いが、ポーカーフェイスが苦手なため、自分のカードが引かれるときに無意識にかわいらしい顔芸を披露してしまう。園田さんを愛して止まない高坂さんと南さんは、園田さんの顔芸を見るだけで園田さんの手札が分かってしまうため、園田さんのカードを引くときは、自分が有利になるように引くことができる。\n一方、高坂さんと南さんは特に顔芸をしたりはしないので、手札がばれることはない。 よって、高坂さんと南さんのカードを引く人はそれぞれ、高坂さんと南さんが持っているカードの中から等確率で1枚引く。 どう考えても不利な園田さんは、ババ抜きでなかなか勝てないことに違和感を覚えている。 使用するカードの種類数nと初期の手札が与えられたとき、園田さんが負けとならない確率を求めてあげよう。 高坂さん、園田さん、南さんの3人は、以下の状況でババ抜きを行う。 使用するカードの種類数nと3人の初期の手札が与えられたとき、園田さんが負けとならない確率を求めてあげよう。 入力は4行からなり、以下の形式で与えられる。 1行目にジョーカー以外のカードの種類数nが与えられる。 \n続く入力は3行からなり、2行目に高坂さんの手札、3行目に園田さんの手札、4行目に南さんの手札の情報が与えられる。\ni+1 (1 ≤ i ≤ 3)行目では行頭に手持ちの枚数m_i、続けて手持ちのカードを表すm_i個の整数c_{i,j} (1 ≤ j ≤ m_i)が空白区切りで与えられる。 0はジョーカー、1からnはカードに書かれた整数を表す。 園田さんが負けとならない確率を1行に出力せよ。答えには10^{−6}を超える絶対誤差があってはならない。 高坂さんが南さんのカード1を引き、高坂さんと南さんは手札が空になる。\n園田さんはどうしても勝つことはできない。 はじめの高坂さんのターンは、高坂さんの手札が既に空なので何もしない。次の園田さんのターンでは、園田さんは南さんの手札のうちそれぞれ0.5の確率でカード1かジョーカーを引く。カード1を引いたとき、園田さんの手札は空となり勝利する。一方ジョーカーを引いたときは、次の南さんのターンで、南さんは確実にカード1を引くので園田さんが負けとなる。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01902.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 100\nm_1+m_2+m_3 = 4n+1\n3人の手札で0はちょうど1つ、1からnはちょうど4回ずつ現れる\n0 ≤ c_{i,j} ≤ n (1 ≤ i ≤ 3, 1 ≤ j ≤ m_i)",
          "ranges": "1 100; 1 3; 100; 4; 3; 1; 3; 0; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1\n1 1\n3 0 1 1\n1 1",
            "output": "0.0 高坂さんが南さんのカード1を引き、高坂さんと南さんは手札が空になる。\n園田さんはどうしても勝つことはできない。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01902.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01902"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01903",
        "title": "F: 風呂がオーバーフロー - Overflow of Furo -",
        "description": "温泉宿・パロは自慢の温泉に全ての情熱を注いでおり、風呂のプロフェッショナルを集めている。\n風呂のプロたちは主に温泉の配管を管理しており、複数の源泉から1つの大浴場へと繋がる、複雑に入り組んだ配管網を管理・調整している。 配管網の管理・調整業務もなかなかに大変なのだが、風呂のプロたちはその合間を縫って、さらに多くの湯を浴槽へと供給できるよう日々努力を積み重ねていた。\n結果、風呂のプロたちは「1本だけ配管をオーバーフローさせることができる」という荒技を習得した。\nすなわち、自由に配管1本を選び、その配管の湯量の制限をなくすことができるようになったのだ。 今まで最大湯量を実現する配管網の設定をあなたのプログラムに依存していた風呂のプロたちは、この技術を使ってさらに浴槽への供給湯量を増やすにはどうすればよいか、あなたに再びプログラムを書くよう依頼してきた。 1つの浴槽、K個の源泉、N個の結合点を含む配管網がある。\n配管網はM本の配管からなり、配管1つ1つは流すことのできる湯量の制限を持つ。\n配管それぞれは湯を流す方向が決められていないので、自由に決めて使ってよい。\nN個の結合点では何本かの配管から流れてきた湯をそれ以外の何本かの配管へと自由な配分で流すことができる。\nすべての源泉、および浴槽は一部の配管の端点になっており、源泉からの湯量、および結合点での湯量を調整することで源泉から浴槽へと湯を供給している。 M個の配管のうち1本だけオーバーフローさせる、すなわち流せる湯量を無限に増やすことで浴槽に供給できるようになる最大湯量はいくらか。\nただし、最大供給湯量を無限に増やすことができる場合も考えられるが、その場合は風呂がオーバーフローしてしまうので、\"overfuro\"と出力すること。 入力は以下の形式で与えられる。 入力は全て整数からなる。\n最初の行では源泉の数K、結合点の数N、配管の数Mが与えられる。\n続くM行のうちi行目には、i番目の配管の情報を表す3つの整数 a_i, b_i, c_i が与えられる。\nこれはi番目の配管の両端点がそれぞれa_iとb_iであり、湯量の制限がc_iであることを示す。\nここで、配管の端点 x が0のときは大浴場、1からKまでのときは x 番目の源泉、K+1からK+Nまでのときは x − K 番目の結合点であることを表す。 1本だけ配管をオーバーフローさせて源泉から浴槽への供給湯量を最大化するときの最大供給湯量を1行に出力せよ。\nただし、最大湯量を無限に増やせるときは、\"overfuro\"と1行に出力せよ。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01903.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ K\n0 ≤ N\nN+K ≤ 100\n1 ≤ M ≤ (N+K+1)(N+K)/2\n0 ≤ a_i, b_i ≤ K+N\na_i ≠ b_i\n1 ≤ c_i ≤ 5{,}000\n同じ2端点を持つ配管は2つ以上存在しないことが保証される。\n与えられる配管網は、配管をオーバーフローさせることなく最低1以上の湯を源泉から浴槽に供給できることが保証される。",
          "ranges": "1 5; 100; 5; 1; 0; 1; 0; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 2 4\n1 3 4\n2 4 2\n0 3 3\n4 0 5",
            "output": "8",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01903.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01903"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01904",
        "title": "G: 最小包含矩形 - Minimum Enclosing Rectangle -",
        "description": "みんなぁ、こんにちは！　八森中ぷろこん部の藍座あいりだよぉ。\n突然だけど、あいりがこの前解けなかった問題をみんなに解いて欲しいんだぁ～。\nこの前部活でICPC2010のA問題を解いたんだけど、その時の問題が難しかったんだぁ。 あ、ICPCについて説明しなきゃ！　ICPCは、い、いんたーなしょなる……ちゅうがくせい……ぷろぐらみんぐ……こんてすとの略で、日本語に直すと、国際中学生対抗プログラミングコンテストらしいよぉ！ あいりにはちょっとむずかしい言葉がいっぱいだよぉ。\nあいり達はこの世界大会に出るために毎日頑張ってるんだぁ！ 部活から帰った後お姉ちゃんにも聞いてみたんだけど、「わ、わからないわ……A問題からわからないなんて……お姉ちゃん失格ね……」って落ち込んじゃって…… \nでも、「『プロ』の人たちが一杯集まるところを知ってるの、お姉ちゃんちょっと連絡してみるわ。あいり、そこで聞いてみなさい！」って言ってここの合宿を教えてもらったんだぁ～ 。\nここに集まる『プロ』のみんなには簡単かもしれないけど……この問題を解いてほしいの！ 長さが1の正方形がN個、2次元平面上にある。これらN個の正方形を全て内包する、最小面積の長方形を求めよ。 入力はN行からなる。 最初の行には、正方形の個数Nが与えられる。\n以下N − 1行は、正方形の置き方を表している。そのうち上からi行目は、空白区切りで1つの整数n_{i}と1つの文字d_{i}が与えられる。これはi番目の正方形の置き方を指示している。ここで正方形の番号付けは、最初の正方形を0番目とし、その後置いた順番に1, 2, ..., N − 1と番号付けられるものとする。0番目の正方形に対する置き方の指示はない。\ni番目の正方形に対する置き方の指示n_i, d_iは、i番目の正方形をn_i番目の正方形に対してd_iで示される方向に隣接して置くことを指示する。\nここで、n_iはi未満の非負整数である。また、d_iは0,1,2,3のいずれかの値をとり、それぞれd_iの値が、0ならば左側、1ならば下側、2ならば右側、3ならば上側を表す。\n以下にそれぞれの入力例に対応した最終的な正方形の配置を図示している。左から入力例1、入力例2、入力例3、入力例4の最終的な正方形の配置となっている。図中の番号は正方形の番号に相当する。また、図中の緑線は求める最小面積の長方形を示している。 与えられたN個の点を全て包含する最小面積の長方形の面積を1行で出力する。\n出力には10^{−5}以上の誤差を含んではならない。",
        "difficulty": "Easy",
        "category": "Geometry",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01904.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力はすべて整数\n1 ≤ N ≤ 100,000\n1 ≤ n_i < i (1 ≤ i < N)\n0 ≤ d_i ≤ 3 (1 ≤ i < N)\n既に正方形が置かれている位置に、新たな正方形を置くような指示は与えられない。",
          "ranges": "1 100; 0 3; 100; 3; 1; 1; 1; 0; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1",
            "output": "1",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01904.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01904"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01919",
        "title": "D：歪みの国 - Country In Distortion -",
        "description": "アリスはすっかり退屈していました。いつも一緒に遊んでいる白ウサギが、トランプ城へ出かけているからです。（あーあ、こんなことなら一緒に出かければよかったわ。）とアリスは思いました。けれども、ここは歪みの国。そうやすやすと出かけては、ひどく疲れてしまいます。どういうことかというと— 白ウサギは困っていました。トランプ城への道中、ちょっとだけ道を間違えてしまったのです。（困ったなあ。一度戻って、道を良く知っているアリスに案内してもらうことにしよう。）と白ウサギは考えました。それにしても、白ウサギはとっても疲れているみたい。白ウサギは懐中時計を見ながら、 「なんだってこの国の道は、通る度に長さが変わったように感じるんだ！この道、さっきは100メートルくらいに感じたけど、今度は1キロはあるんじゃないか？それも、通り抜けるのにかかる時間はほとんど変わってないって言うのに！」 と叫んでいます。そう、ここは歪みの国。まさに、時々刻々と道が歪み続ける不思議な国なのです。\nやっとの思いでアリスの家に着いた白ウサギが開口一番、 「ごめんよアリス。トランプ城まで、道案内をお願いできるかい。」 と言うと、退屈のあまりオフトゥンに突っ伏してしていたアリスは元気に飛び起きました。 「もちろんよ！一緒に行きましょう！」 嬉しい一方で、疲れた様子の白ウサギを見て（でも、あまりに疲れてしまうのは悪いわね。）と思ったアリスは、家の奥から歪みの国の地図を取り出してきました。 「さあ、トランプ城までの疲れない道のりを探すわ！」 n頂点とm辺からなる無向グラフが与えられる。各辺iの移動にかかる時間はt_iで表される。また、初めの体感移動速度としてv_0が与えられる。その後、辺を1本通る度に体感移動速度が変化する。辺をj本通った後の体感移動速度は、整数a, b, cをパラメータとして以下の式で与えられる。 辺iを速度v_jで通ると体感移動距離がt_i \\times v_jとなる。なお、歪みの国では体感移動速度が0でも移動可能であり、そのときの体感移動距離は0である。 今、頂点1から出発し頂点nを経由して頂点1に戻ってくるような経路を考える。考えうる経路の中で体感移動距離の総和を最小化せよ。 入力は全て整数からなる。\n1行目には、グラフの頂点数と辺数を表すn,mがこの順で空白区切りで与えられる。\n続くm行のうちi行目には、i番目の辺が接続する2頂点x_i,y_iと、通過するのにかかる時間t_iがこの順で空白区切りで与えられる。\nm+2行目には、初速度を表すv_0が与えられる。\nm+3行目には、速度の計算式のパラメータa,b,cがこの順に空白区切りで与えられる。 体感移動距離の総和の最小値を1行に出力せよ。 通過するのに時間がかかる辺 (2,3) と (4,5) を通る前に、短い時間で通れる道を往復して、なるべく速度を落とした方が体感移動距離は短い。 体感移動距離が非常に長くなる場合もある。",
        "difficulty": "Hard",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01919.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "各値は整数である。\n2 \\leq n \\leq 500\n1 \\leq m \\leq min\\{5000, n(n - 1) / 2\\}\n各i=1,...,mについて1 \\leq x_i < y_i \\leq nである。また、1 \\leq i < j \\leq mを満たすi, jについて、x_i \\neq x_jまたはy_i \\neq y_jである。つまり自己ループおよび多重辺はない。\n各i=1,...,mについて1 \\leq t_i \\leq 10^8\n0 \\leq v_0 \\leq 49\n0 < a < c, 0 \\leq b < c, v_0 < c \\leq 50\nグラフは連結である。すなわち任意の2頂点間に経路があることが保証される。",
          "ranges": "1; 1; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 4\n1 2 3\n2 3 1\n2 4 5\n3 4 2\n5\n4 5 6",
            "output": "34",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01919.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01919"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01920",
        "title": "E：バイナリ列 - Binary Sequence -",
        "description": "わしはバイナリ大好きBonald.Brvin.Bnuthじゃ！\nオフトゥンフォード大学でバイナリ列の性質を研究しておってのお、Bnuthおじさんと呼ばれて、親しまれておるぞい！\nちなみに、わしの名前「Bonald.Brvin.Bnuth」をASCIIコードからバイナリ化すると「1000010 1101111 1101110 1100001 1101100 1100100 101110 1000010 1110010 1110110 1101001 1101110 101110 1000010 1101110 1110101 1110100 1101000」になるぞい！\n楽しいのお！ 今日は、弟子が何やら面白そうな実験をすると言うからのお、朝から楽しみなんじゃ！\nどれどれ、どんなことをするんじゃの？ なんと！バイナリ列を書き換え続けることで、何らかの性質を見出したいとな！\nふむ！これは、重要な発見の匂いがぷんぷんするぞい！\nさあ、さあ、実験を始めようではないか！\nより詳細な設定を文章としてまとめておくぞい！ 長さnのバイナリ列x = (x_1, ..., x_n) (x_i \\in \\{0,1\\}, i = 1,...,n) が与えられる。バイナリ列xに対して2つの関数f(x)とg(x)を以下のように定義する。 今、バイナリ列xに対して以下のような変更操作をq回行う。j回目の変更操作はl_j, r_j, b_j (1 \\leq l_j \\leq  r_j \\leq n, b_j \\in \\{0,1\\}, j = 1,...,q) で与えられ、これはバイナリ列xのl_j番目からr_j番目をb_jに置き換える操作に対応する。各変更操作の後でf(x) - g(x)を求めよ。 1行目にはバイナリ列の長さを表す整数nが与えられる。\n2行目にはバイナリ列xを表せす文字列が与えられる。\n3行目にはクエリの回数を表す整数qが与えられる。\n続くq行のうちi行目には、i回目のクエリに関する情報l_i, r_i, b_iがこの順で空白区切りで与えられる。 各i=1,...,qについて、i行目にi回目のクエリを処理した後のf(x) - g(x)の値を出力せよ。",
        "difficulty": "Medium",
        "category": "Arrays & Strings",
        "tags": [
          "array"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01920.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 \\leq n \\leq 100000\nxは’0’、’1’からなる文字列\n|x| = n\n1 \\leq q \\leq 100000\n1 \\leq l_j \\leq r_j \\leq n, b_j \\in \\{0,1\\}, j = 1,...,q",
          "ranges": "1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "10\n0101100110\n3\n3 3 1\n1 6 0\n2 5 1",
            "output": "2\n1\n2",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01920.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01920"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01933",
        "title": "C: ツイート数",
        "description": "AORイカちゃんが利用するSNSであるイカったーでは、投稿のことをツイートと呼ぶ。 そして、イカったーでは、ツイートへの返信が多くなると視認性が悪くなることが懸念されるため、あるツイートが次の規則のいずれかを満たすときに画面にそのツイートを表示する仕様になっている。 なお、同じツイートは重複して表示されることはない。 いま、 $N$ 個のツイートがあり、 $A_i$ が $0$ のとき $i$ 番目のツイートは返信でないツイートで、 $A_i$ が $0$ でないとき $i$ 番目のツイートは $A_i$ 番目のツイートへの返信のツイートである。 画面に表示されるツイート数を答えよ。 入力は以下の形式で与えられる。 $N \\ K$$A_1$$A_2$$\\vdots$$A_N$ 画面に表示されるツイート数を出力せよ。また、末尾に改行も出力せよ。 この時、表示されるツイートは、図の青いツイートである。 よって、この例の解は $5$ である。",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01933.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "$1 \\le N \\le 10^5$\n$1 \\le K \\le 10^5$\n$0 \\le A_i \\lt i (i = 1, 2, \\dots, N)$\nツイートは時系列順に与えられる。\n入力は全て整数で与えられる。",
          "ranges": "1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "入力は以下の形式で与えられる。 $N \\ K$$A_1$$A_2$$\\vdots$$A_N$",
            "output": "画面に表示されるツイート数を出力せよ。また、末尾に改行も出力せよ。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01933.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01933"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01968",
        "title": "B： 階層的計算機 (Hierarchical Calculator)",
        "description": "Ebi-chan has N formulae: y = a_i x for i =1, ..., N (inclusive).  Now she considers a subsequence of indices with length k: s_1, s_2, ..., s_k.  At first, let x_0 be 1 and evaluate s_1-th formulae with x = x_0.  Next, let x_1 be the output of s_1 and evaluate s_2-th formulae with x = x_1, and so on. She wants to maximize the final output of the procedure, x_{s_k}.  If there are many candidates, she wants the \"\"\"shortest one\"\"\".  If there are still many candidates, she wants the \"\"\"lexicographically smallest one\"\"\". Sequence s is lexicographically smaller than sequence t, if and only if either of the following conditions hold: where |s| is the length of the s. She evaluates the first one and gets the maximum value 2. She evaluates all of them and gets the maximum value 8. She evaluates none of them and gets the maximum value 0.  Empty sequence is the shorter and lexicographically smaller than any other sequences. She evaluates $\\langle$ 1, 2, 4 $\\rangle$ ones and gets the maximum value 4.  Note that $\\langle$ 2, 4, 5 $\\rangle$ is not lexicographically smallest one.",
        "difficulty": "Medium",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "sorting",
          "graph",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01968.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N \\leq 60\n -2 \\leq a_i \\leq 2 for i=1, ...,N (inclusive)\n Every input is given as the integer.",
          "ranges": "1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n2 0 -2 1",
            "output": "1\n1 She evaluates the first one and gets the maximum value 2.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01968.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01968"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01979",
        "title": "F: ごちうさ数",
        "description": "ごちうさが大好きなAORイカちゃんは「ごちうさ数」を定義した。\nごちうさ数とは、 $10$ 進表記において「 $51?3$ 」を含む自然数のことである。\n$?$ は $0$ 〜 $9$ のどの数字であってもよい。 $N$ 以下の自然数のうち、ごちうさ数の個数を求めよ。 $N$ ごちうさ数の個数を一行で出力せよ。また末尾に改行を出力せよ。 $5124$ 以下のごちうさ数は、$5103$ , $5113$ , $5123$ の 三つである。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01979.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "$1 \\le N < 10^{18}$",
          "ranges": "10"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "$N$",
            "output": "ごちうさ数の個数を一行で出力せよ。また末尾に改行を出力せよ。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01979.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01979"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01992",
        "title": "D: しりとり圧縮 (Shiritori Compression)",
        "description": "えびちゃんとかにちゃんの二人はしりとりをしました。えびちゃんはしりとりで出た単語のメモを見ています。 えびちゃんは、この単語列 w_1, w_2, ..., w_N から冗長な連続部分列を、存在しなくなるまで取り除きたいと思っています。えびちゃんの思う冗長な連続部分列とは以下のように定義されます。 このとき、えびちゃんは添字 i 以上 j-1 以下の単語を取り除きます。 たとえば、次のような単語列を考えます。 これは、次のように圧縮されます。 editor と edge の先頭の文字が e で一致しているため、editor から edge の直前（me）までの単語が取り除かれます。 えびちゃんの判断基準では、末尾の文字が同じであっても冗長とは見なさないことに注意してください。たとえば、上の圧縮済み単語列において、apple と edge の末尾の文字はどちらも e ですが、このことによって単語が取り除かれることはありません。 また、以下のような例も考えられます。 これらはそれぞれ次のように圧縮できます。いずれも、最後の単語は保存されることに注意してください。 えびちゃんのメモが与えられるので、それらを圧縮して得られる単語列の長さ（単語数）の最小値 L を出力してください。 なお、「同じ単語が複数回現れる」または「ある単語の先頭の文字が直前の単語の末尾の文字と一致していない」ことは起こらないと仮定して構いません。 一行目に単語数 N が与えられ、1+i 行目には i 番目の単語が与えられます。 L を一行に出力してください。それ以外の余計な文字は含まれてはいけません。 上で挙げた例です。 上で挙げた別の例です。",
        "difficulty": "Easy",
        "category": "Trees & Graphs",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01992.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1\\leq N\\leq 10^5\n1\\leq  $\\sum_{i=1}^N$|w_i| \\leq 10^6\nw_i の各文字は英小文字",
          "ranges": "1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "7\nbanana\nat\ntomb\nbus\nsound\ndoes\nsome",
            "output": "2 上で挙げた例です。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01992.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01992"
      }
    },
    {
      "basicInfo": {
        "questionId": "p01997",
        "title": "B: 直角三角形",
        "description": "直角三角形の斜辺でない $2$ 辺の長さ $A$ , $B$ が与えられる。\n  長さ $A$ の辺は $x$ 軸と重なっており、長さ $B$ の辺は $y$ 軸と重なっている。 次の操作を行う。 三角形を $x$ 軸周りに回転させる。\n操作 $1$ を行ってできた図形を $y$ 軸周りに回転させる。 操作 $2$ を行ってできた図形の体積を求めよ。 入力は以下の形式で与えられる。 $A\\ B$ 図形の体積を出力せよ。また、末尾に改行も出力せよ。なお、 $0.000001$ 未満の絶対誤差または相対誤差が許容される。",
        "difficulty": "Easy",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01997.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力値は全て整数である。\n$1 < A < B < 1000$",
          "ranges": "1000; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "入力は以下の形式で与えられる。 $A\\ B$",
            "output": "図形の体積を出力せよ。また、末尾に改行も出力せよ。なお、 $0.000001$ 未満の絶対誤差または相対誤差が許容される。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p01997.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p01997"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02033",
        "title": "D: 矢 / Arrow",
        "description": "rodea 君は 1 次元座標系の中におり、x = 0 の場所に立っている。この位置から、x = N の位置にある的を目がけて、 常に速さ 1 で移動する正の整数の長さの矢を投げる。しかし、rodea 君は非力なため、  区間 0 \\leq x \\leq N の中に合計 M 個の送風機を置くことにしている。 ここで、矢の先端から根元までの位置に 1 つの送風機も含まれない場合を「損失」と定義する。損失の判定は、矢の先端が x = 1, 2, 3, $\\ldots$, N に到達した際に行う（つまり、合計 N 回行う）。 このとき、以下のクエリを Q 回処理せよ。 1 行目に距離 N と送風機の個数 M が空白区切りで与えられる。 2 行目に、M 個の送風機それぞれの位置が与えられる。m_i=j のとき、 i 番目の送風機は x=j-1 と x=j の丁度中間に位置している。 3 行目にクエリの個数 Q が与えられ、4 行目に「損失」許容可能な回数 l_i が Q 個与えられる。 与えられる Q 個の l_i に対して考えられる最短の矢の長さを、順に改行して出力せよ。 ただし、条件を満たす正の整数の長さの矢が存在しない場合は -1 を出力するものとする。 矢の先端が x = 1 に到達したとき、先端から根元までに送風機は含まれないので、「損失」回数は 1 になる。 矢の先端が x = 2 に到達したとき、先端から根元までに送風機は含まれるので、「損失」回数は 1 のままである。 矢の先端が x = 3 に到達したとき、先端から根元までに送風機は含まれるので、「損失」回数は 1 のままである。 矢の先端が x = 4 に到達したとき、先端から根元までに送風機は含まれないので、「損失」回数は 2 になる。 矢の先端が x = 5 に到達したとき、先端から根元までに送風機は含まれないので、「損失」回数は 3 になる。 長さ 2 より短い矢を投げる場合、「損失」回数が 3 よりも多くなるため、長さ 2 の矢を投げるときが条件を満たす最短の矢の長さである。",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02033.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N \\leq 10^5\n1 \\leq M \\leq N\n1 \\leq m_1 < m_2 < $\\ldots$ < m_M \\leq N\n1 \\leq Q \\leq 10^5\n0 \\leq l_i \\leq 10^5 (1 \\leq i \\leq Q)",
          "ranges": "1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 1\n2\n1\n3",
            "output": "2 矢の先端が x = 1 に到達したとき、先端から根元までに送風機は含まれないので、「損失」回数は 1 になる。 矢の先端が x = 2 に到達したとき、先端から根元までに送風機は含まれるので、「損失」回数は 1 のままである。 矢の先端が x = 3 に到達したとき、先端から根元までに送風機は含まれるので、「損失」回数は 1 のままである。 矢の先端が x = 4 に到達したとき、先端から根元までに送風機は含まれないので、「損失」回数は 2 になる。 矢の先端が x = 5 に到達したとき、先端から根元までに送風機は含まれないので、「損失」回数は 3 になる。 長さ 2 より短い矢を投げる場合、「損失」回数が 3 よりも多くなるため、長さ 2 の矢を投げるときが条件を満たす最短の矢の長さである。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02033.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02033"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02063",
        "title": "D: 貪欲が最適？",
        "description": "1, 5, 10, 50, 100, 500 円玉がある日本では、ある金額を支払う時、大きい金額の硬貨をできるだけ多く使うという方法で支払うと、硬貨の枚数を最小化できることが知られている。 硬貨の金額が日本とは異なる場合、貪欲に支払うと必ずしも最小化できるとは限らない。 貪欲に支払うのが最適になるために、硬貨の金額が満たすべき条件は何なのだろうか。 TAB 君は上のことが気になったので、まずは硬貨が 1, A, B の 3 種類しかない場合について考えることにした。 A, B が与えられるので、貪欲に支払った場合枚数が最小にならないような金額のうち、最小のものを出力せよ。 また、どんな金額でも貪欲法が最適な場合は、-1 を出力せよ。 8 円を貪欲に支払うと、 6 + 1 \\times 2 で支払うことになり、合計 3 枚必要だが、4 \\times 2 で合計 2 枚で支払うことができる。 どんな金額であっても貪欲に支払うのが最適である。",
        "difficulty": "Hard",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02063.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 < A \\leq 10^5\nA < B \\leq 10^9",
          "ranges": "1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 6",
            "output": "8 8 円を貪欲に支払うと、 6 + 1 \\times 2 で支払うことになり、合計 3 枚必要だが、4 \\times 2 で合計 2 枚で支払うことができる。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02063.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02063"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02079",
        "title": "B: Spent Fuel Disposal",
        "description": "$N$ 個の下水処理施設が $M$ 本のパイプで繋がっており、$i$ 番目のパイプは $u_i$ 番目と $v_i$ 番目の施設を繋いでいます。\nパイプは全て、毎秒最大 $1$ リットルの液体を流すことができます、 今、$S$ 番目の施設から $T$ 番目の施設へ工業廃水を、 $U$ 番目の施設から $V$ 番目の施設へ純水を流したいです。$S$ 番目および $U$ 番目の施設は、それぞれ工業廃水および純水を十分な量有しており、パイプで繋がっている別の施設へこれらの液体を好きに送ることができます。 \nまた、各施設では、送られてきた液体をパイプで繋がっている別の処理施設へ流すことができます。 パイプはハイテクなので、$2$ 種類の液体を同時に好きな方向へ流すことができます。 \n例えば、$i$ 番目のパイプは、$u_i$ から $v_i$ へ工業廃水を、$v_i$ から $u_i$ へ純水を流すことができます。\n反対に $v_i$ から $u_i$ へ工業廃水を、$u_i$ から $v_i$ へ純水を流すことも可能です。\nもちろん、$2$ 種類の液体を同じ方向へ流すこともできます。 ただし、どの場合においても、$1$ つのパイプに流す液体の総量は毎秒 $1$ リットルを超えることはできません。 $S$ から $T$ へ流す工業廃水の総量と $U$ から $V$ へ流す純水の総量の合計は、最大で毎秒何リットルにできますか。\n答えは整数になることが証明できるため、整数で出力してください。 入力は標準入力から以下の形式で与えられます。 答えを1行に出力してください。 例えば、$1$ から $5$、$5$ から $4$ へ工業排水を毎秒 $1$ リットル、$2$ から $3$ へ純水を毎秒 $1$ リットル流せば良いです。 $T$ と $V$ が同一の施設であるケースなどに注意してください。",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02079.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は全て整数\n$1 \\leq N, M \\leq 10^5$\n$1 \\leq S, T, U, V \\leq N$\n$S \\neq T$\n$U \\neq V$\n$1 \\leq u_i, v_i \\leq N$\n$u_i < v_i$ ($i = 1, \\ldots, M$)\n$i \\neq j  \\rightarrow (u_i, v_i) \\neq (u_j, v_j)$\n全ての施設はパイプを通じて連結である",
          "ranges": "1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 6 1 4 2 3\n1 2\n2 3\n3 4\n4 5\n3 5\n1 5",
            "output": "答えを1行に出力してください。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02079.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02079"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02081",
        "title": "D: Nose And Lung",
        "description": "あなたは謎の敵対的なエイリアンについて研究しています。 エイリアンには鼻の穴が $N$ 個あり、肺が $1$ 個以上あります。 \nしかし、肺がいくつあるか、および、どの鼻の穴とどの肺が繋がっているかが分かっていません。 あなたはエイリアンに関して、以下の仮説を立てました: 政府はあなたの仮説を検証するために、肺と鼻の穴の接続関係がわかっていないエイリアンを $1$ 匹捕獲し、$2^N$ 匹に複製しました。これらのエイリアンで以下のような実験を行いました: あなたはこれらの $2^N$ 個の実験の結果を全て与えられました。\n実験の結果が仮説に矛盾していないか判定し、矛盾していない場合には\n考えられる肺の最小個数を答えてください。 入力は標準入力から以下の形式で与えられます。\nただし、$a_i=1$のとき、$i$番目のエイリアンは死亡し、$a_i=0$のとき、$i$番目のエイリアンは生きていることを表します。 実験の結果が仮説に矛盾している場合には $-1$、そうでない場合はエイリアンが持つと考えられる肺の最小個数を答えてください。 考えられる肺のつなげ方としては{{1},{1,2}}や{{1}}があり、最小の個数は1個です。 2番目の鼻の穴だけを塞いでも3番目の鼻の穴だけを塞いでも死ぬが、両方の穴を塞いだエイリアンは生きているため、仮説に矛盾しています。",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02081.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "全ての入力は整数である\n$2 \\leq N \\leq 20$\n$0 \\leq a_i \\leq 1$\n$a_0 = 0$\n$a_{2^N-1} = 1$",
          "ranges": "0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\n0\n1\n0\n1",
            "output": "実験の結果が仮説に矛盾している場合には $-1$、そうでない場合はエイリアンが持つと考えられる肺の最小個数を答えてください。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02081.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02081"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02084",
        "title": "G: Human Seperation",
        "description": "単位円の上に人が $10^6$ 人、等間隔に立っています。\n$t = \\frac{2\\pi}{10^6}$ として、$i$ 番目の人は 座標 $(\\cos{(it)}, \\sin{(it)})$ に立っています。 これら $10^6$ 人の中で、非常に仲が悪いペアが $N$ 組あります。\n具体的には、$i = 1, \\ldots, N$ について、人 $a_i$ と人 $b_i$ は仲が悪いです。 単位円の管理人である松崎くんは、壁を建設することによって仲の悪いペアを全て分断することにしました。\n建設する壁は厚さがなく、とてつもなく長いため、直線と同一視することができます。また、壁同士は交わっても構いません。\nただし、人が立っている場所に壁を建設することは出来ません。\n壁を建設するにはコストがかかるので、なるべく少ない数の壁で全てのペアを分断したいです。\n目的を達成するためには、いくつの壁を建設する必要があるか求めてください。 定式的に問題を言い換えると以下のようになります: 「2点が直線によって分離されている」とは、2点をどのような曲線で結んでも、曲線が直線と交わる状態を指します。 入力は以下の形式で標準入力から与えられます。 答えを1行に出力してください。 円周上の点 $(1, 0)$ と点 $(-1, 0)$ がペアとして与えられます。\nペアは1組しかないので、明らかに1本の直線によって条件を満たすことができます。",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02084.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は全て整数\n$1 \\leq N \\leq 2 \\times 10^5$\n$0 \\leq a_i < b_i < 10^6$",
          "ranges": "10"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1\n0 500000",
            "output": "答えを1行に出力してください。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02084.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02084"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02089",
        "title": "B: AddMulSubDiv",
        "description": "You have an array A of N integers. A_i denotes the i-th element of A. You have to process one of the following queries Q times: After applying Q queries one by one, how many elements in A are no less than L and no more than R? You have an array A of N integers. A_i denotes the i-th element of A. You have to process one of the following queries Q times: Query 1: The query consists of non-negative integer x, and two positive integers s, t. For all the elements greater than or equal to x in A, you have to add s to the elements, and then multiply them by t. That is, an element with v (v \\geq x) becomes t(v + s) after this query. Query 2: The query consists of non-negative integer x, and two positive integers s, t. For all the elements less than or equal to x in A, you have to subtract s from the elements, and then divide them by t. If the result is not an integer, you truncate it towards zero. That is, an element with v (v \\leq x) becomes $\\mathrm{trunc}$ ( \\frac{v - s}{t} ) after this query, where $\\mathrm{trunc}$ ( y ) is the integer obtained by truncating y towards zero. \"Truncating towards zero\" means converting a decimal number to an integer so that if x = 0.0 then 0 , otherwise an integer whose absolute value is the maximum integer no more than |x| and whose sign is same as x. For example, truncating 3.5 towards zero is 3, and truncating -2.8 towards zero is -2. After applying Q queries one by one, how many elements in A are no less than L and no more than R?",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "array",
          "math",
          "sorting",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02089.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N \\leq 2 \\times 10^5\n 1 \\leq Q \\leq 2 \\times 10^5\n -2^{63} < L \\leq R < 2^{63}\n 0 \\leq |A_i| \\leq 10^9\n q_j \\in \\{ 1, 2 \\}\n 0 \\leq x_j < 2^{63}\n 1 \\leq s_j, t_j \\leq 10^9\n Inputs consist only of integers.\n The absolute value of any element in the array dosen't exceed 2^{63} at any point during query processing.",
          "ranges": "2; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 3 3 10\n1 -2 3\n1 2 2 3\n2 20 1 3\n2 1 20 5",
            "output": "Output the number of elements in A that are no less than L and no more than R after processing all given queries in one line.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02089.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02089"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02090",
        "title": "C: Shuttle Run",
        "description": "University H has a unique physical fitness test program, aiming to grow the mindset of students.\nAmong the items in the program, shuttle run is well-known as especially eccentric one. Surprisingly, there are yokans (sweet beans jellies) on a route of the shuttle run. Greedy Homura-chan would like to challenge to eat all the yokans. And lazy Homura-chan wants to make the distance she would run as short as possible. For her, you decided to write a program to compute the minimum distance she would run required to eat all the yokans. At the beginning of a shuttle run, Homura-chan is at 0  in a positive direction on a number line. During the shuttle run, Homura-chan repeats the following moves: During the moves, Homura-chan also eats yokans on the number line. There are N yokans on the number line. Initially, the i-th yokan, whose length is R_i - L_i, is at an interval [L_i, R_i] on the number line. When Homura-chan reaches L_i in a positive direction (or R_i in a negative direction), she can start eating the i-th yokan from L_i to R_i (or from R_i to L_i), and then the i-th yokan  disappears. Unfortunately, Homura-chan has only one mouth. So she cannot eat two yokans at the same moment, including even when she starts eating and finishes eating (See the example below). Also, note that she cannot stop eating in the middle of yokan and has to continue eating until she reaches the other end of the yokan she starts eating; it's her belief. Calculate the minimum distance Homura-chan runs to finish eating all the yokans. The shuttle run never ends until Homura-chan eats all the yokans. The first line contains two integers N and M. The following N lines represent the information of yokan, where the i-th of them contains two integers L_i and R_i corresponding to the interval [L_i, R_i] the i-th yokan is. Note that when Homura-chan is at the coordinate 2, she cannot eat the first and second yokan at the same time. At the beginning of a shuttle run, Homura-chan is at 0  in a positive direction on a number line. During the shuttle run, Homura-chan repeats the following moves: Move in a positive direction until reaching M.\n When reaching M, change the direction to negative.\n Move in a negative direction until reaching 0 .\n When reaching 0 , change the direction to positive. During the moves, Homura-chan also eats yokans on the number line. There are N yokans on the number line. Initially, the i-th yokan, whose length is R_i - L_i, is at an interval [L_i, R_i] on the number line. When Homura-chan reaches L_i in a positive direction (or R_i in a negative direction), she can start eating the i-th yokan from L_i to R_i (or from R_i to L_i), and then the i-th yokan  disappears. Unfortunately, Homura-chan has only one mouth. So she cannot eat two yokans at the same moment, including even when she starts eating and finishes eating (See the example below). Also, note that she cannot stop eating in the middle of yokan and has to continue eating until she reaches the other end of the yokan she starts eating; it's her belief. Calculate the minimum distance Homura-chan runs to finish eating all the yokans. The shuttle run never ends until Homura-chan eats all the yokans.",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math",
          "geometry",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02090.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N \\leq 2 \\times 10^5\n3 \\leq M \\leq 10^9\n0 < L_i < R_i < M\n Inputs consist only of integers.",
          "ranges": "0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1 3\n1 2",
            "output": "Output the minimum distance Homura-chan runs to eat all the given yokan in a line.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02090.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02090"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02091",
        "title": "D: XORANDORBAN",
        "description": "You are given a positive integer N. Your task is to determine a set S of 2^N integers satisfying the following conditions: If there is no set satisfying the conditions mentioned in the problem statement, output No in a line. Otherwise, output Yes in the first line, and then output 2^N integers in such a set in the second line. If there are multiple sets satisfying the conditions, you can output any of them. You are given a positive integer N. Your task is to determine a set S of 2^N integers satisfying the following conditions: All the integers in S are at least 0  and less than 2^{N+1}.\n All the integers in S are distinct.\n You are also given three integers X, A, and O, where 0 \\leq X, A, O < 2^{N+1}. Then, any two integers (a, b) in S must satisfy a {\\it xor} b \\neq X, a {\\it and} b \\neq A, a {\\it or} b \\neq O, where {\\it xor}, {\\it and}, {\\it or} are bitwise xor, bitwise and, bitwise or, respectively. Note that a and b are not necessarily different.",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02091.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N \\leq 13\n 0 \\leq X, A, O < 2^{N+1}\n Inputs consist only of integers.",
          "ranges": "2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 6 1 5",
            "output": "If there is no set satisfying the conditions mentioned in the problem statement, output No in a line. Otherwise, output Yes in the first line, and then output 2^N integers in such a set in the second line. If there are multiple sets satisfying the conditions, you can output any of them.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02091.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02091"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02098",
        "title": "Problem A: The Mean of Angles",
        "description": "与えられた2つの角度θ1,θ2 のちょうど間の角度を求めよ。ここで、ちょうど間の角度を、下図のように「θ1 + t = θ2 − t を満たすtのうち絶対値が最も小さいものをt’としたときのθ1 + t’」と定義する。 入力は以下の形式で与えられる。 入力は以下の条件を満たす。 θ1,θ2のちょうど間の角度を度数法で[0,360)の範囲で1行に出力せよ。ただし0.0001を超える誤差を含んではならない。",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02098.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 角度は度数法(degree)で表される\n0 ≤ θ1, θ2 < 360\nθ1, θ2は整数\n|θ1 − θ2| ≠ 180\n解答が[0,0.0001]または[359.999, 360)になるような入力は与えられない",
          "ranges": "360; 0; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "10\n20",
            "output": "15.0",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02098.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02098"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02099",
        "title": "Problem B: GPA JANKEN",
        "description": "GPAとは「Galaxy Point of Aizu」の略で、0から4までの実数値を取る。\nGPAじゃんけんは二人で行うゲームである。各々が「じゃんけん、ぽん（ほい）」の合図で互いにグー、チョキ、パーのどれか好きな手を出した後、GPAが高い人が勝者となり、低い人が敗者となる。同じ場合は引き分けとなる。 N 人のGPAのデータが与えられるので、総当たり戦をした時のそれぞれの勝ち点を出力せよ。\nただし、勝ち点は勝ちの時3、引き分けの時1、負けの時0とする。 総当たり戦とはすべての参加者が自分以外の参加者と丁度一回ずつ対戦する方式である。 入力は以下の形式で与えられる。 一行目にGPAじゃんけんをする人数 N が与えられる。\n    続く N 行に i 番目の人のGPAのデータ ai が一行に与えられる。 入力は以下の条件を満たす。 i 行目に i 番目の人の勝ち点を一行に出力せよ。\n  ( 1 ≤ i  ≤ N )",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02099.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 2 ≤ N ≤ 105\nN は整数\n0.000 ≤ ai ≤ 4.000 ( 1 ≤ i ≤ N )\nai は実数 ( 1 ≤ i ≤ N )\n各GPAは小数点以下3桁まで与えられる",
          "ranges": "2 105; 000 4; 105; 4; 2; 000; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n1.000\n3.000\n3.000",
            "output": "0\n4\n4",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02099.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02099"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02100",
        "title": "Problem C: Factorization",
        "description": "ukuku1333さんはおっちょこちょいなので、\nx の一次式の積を展開したら、元の一次式がわからなくなってしまった。\nx の n 次多項式が与えられるので、因数分解して元のxの一次式の積の形にせよ。 x の n 次多項式は以下のBNFによって与えられる。 指数及び係数が省略されている場合は1とみなす。 入力は以下の形式で与えられる。 x の n 次多項式を表す文字列 S が一行に与えられる。 入力は以下の条件を満たす。 S をx の一次式の積の形に因数分解したものを、定数項の小さいものから順に出力せよ。\n出力の最後には改行を入れること。",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02100.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 2 ≤ n ≤ 5\n与えられる式の項の数を m とすると、1 ≤ i < j ≤ m  なる任意の i, j  の組に対して、\ni 番目の項の次数は j 番目の項の次数より大きいことが保証される\n    \n与えられるx の n 次多項式は、x の一次式の積の形に因数分解したもので表すことができることが保証される\n係数、定数の絶対値はそれぞれ2×103以下である\n次数が最大のものの係数は1であり、省略されていることが保証される\n展開する前のそれぞれの一次式の元の定数項は0ではない整数であることが保証される\n展開する前のそれぞれの一次式の元の定数項は相異なることが保証される",
          "ranges": "2 5; 5; 2; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "x^2+3x+2",
            "output": "(x+1)(x+2)",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02100.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02100"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02101",
        "title": "Problem D: Let's Go To School",
        "description": "がっちょ君は期末試験が近づくとやる気がなくなってしまい、しばしば学校を休むようになる。\n期末試験まで残りN日である。\nがっちょ君のi日目のやる気はXiであり、i日目に学校に行くために必要なやる気はYiである。\nがっちょ君は Xi ≥ Yi となる日のみ学校に行く。\n\nがっちょ君を心配したハジ君は、がっちょ君を励ますことで、可能な限り学校に行かせようと考えた。\nハジ君は最初、励まし力Pを持っている。\n\nハジ君がi日目に励まし力t(tは0以上の任意の実数)を消費してがっちょ君を励ますと、\nがっちょ君のi日目のやる気はtだけ増加して、ハジ君の励まし力はtだけ減少する。さらに、i+1 ≤ Nのとき、i+1日目のがっちょ君のやる気Xi+1はmax(0, Xi+1 − t) に変化する。\nハジ君は自分の持っている励まし力を超えて励ますことはできない。 ハジ君が最適な励まし方をしたときの、がっちょ君が学校に行く最大日数を求めよ。 入力は以下の形式で与えられる。 入力はすべて整数で与えられる。\n  1行目に期末試験までの日数Nとハジ君が最初に持っている励まし力Pが空白区切りで与えられる。\n  2行目から続くN行にはがっちょ君のi(i=1,2,...,N)日目のやる気Xiと学校に行くために必要なやる気Yiが空白区切りで与えられる。 入力は以下の条件を満たす。 がっちょ君が学校に行くことができる最大の日数を1行に出力せよ。",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02101.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 1 ≤ N ≤ 100\n0 ≤ P ≤ 106\n0 ≤ Xi ≤ 106\n0 ≤ Yi ≤ 106",
          "ranges": "1 100; 0 106; 0 106; 0 106; 100; 106; 106; 106; 1; 0; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 10\n1 6\n5 10\n0 5",
            "output": "2",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02101.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02101"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02103",
        "title": "Problem F: Great Devil Sakanikia",
        "description": "大悪魔サカーニャは今日も天敵の猫に襲われていた。\nいつもやられている訳にはいかないので、秘密兵器を購入した。\nこの秘密兵器は、巨大な岩を生成することで猫の移動経路を塞ぎ、猫がこちらに近づけないようにすることができる。 今、サカーニャと一匹の猫がマス(0,0),(n−1,0),(n−1,m−1),(0,m−1)で囲まれた長方形の閉区間内にいる。\nマス(0,0)に猫、マス(n−1,m−1)にサカーニャがいる。\n猫は上下左右の隣接したマスに移動することができるが、区間外に出ることはできない。\nいくつかのマスは、穴や障害物の影響で侵入することができない。\nサカーニャは、あるマスに1つ岩を生成することでそのマスに猫が侵入できなくすることができる。\nただし、マス(0,0)とマス(n−1,m−1)に岩を生成することはできない。 マス(0,0)からマス(n−1,m−1)までの移動経路を塞ぐために必要な、生成する岩の数の最小値を求めよ。 入力はすべて整数で与えられる。\n1行目にマスの大きさを表す２つの整数nとm、侵入できないマスの数kが空白区切りで与えられる。\n2行目からk行に侵入できないマスの座標が与えられる。 入力は以下の条件を満たす。 マス(0,0)からマス(n−1,m−1)までの移動経路を塞ぐために必要な、生成する岩の数の最小値を1行に出力せよ。",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02103.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 2 ≤ n,m ≤ 105\n0 ≤ k ≤ min(n×m−2,105)\n0 ≤ xi ≤ n − 1\n0 ≤ yi ≤ m − 1\n(xi,yi) ≠ (xj,yj) (i ≠ j)\n(xi,yi) ≠ (0,0) ≠ (n−1,m−1)",
          "ranges": "105; 2; 0; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 5 2\n0 2\n2 2",
            "output": "1",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02103.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02103"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02104",
        "title": "Problem G: Chairs",
        "description": "1からNの番号が割り当てられたN脚の椅子に、1からNのIDが割り当てられたN人の人が座ろうとしている。IDがiの人は椅子piに座りたいと思っている。 N人の人はIDが小さい順に1列に並び、列の先頭の人が以下の行動をとる。 全ての人が椅子に座るまでこの行動が繰り返されたとき、最終的に各椅子に座っている人のIDを出力せよ。 入力は以下の形式で与えられる。 1行目に整数Nが与えられる。\n2行目にN個の整数p1, p2, ..., pNが空白区切りで与えられる。 入力は以下の条件を満たす。 N行に最終的な状態を出力する。\ni行目に椅子iに座っている人のIDを出力する。",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02104.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 1 ≤ N ≤ 105\n1 ≤ pi ≤ N",
          "ranges": "1 105; 105; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n1 2 3 4 5",
            "output": "1\n2\n3\n4\n5",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02104.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02104"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02105",
        "title": "Problem H: Zombie Hunter",
        "description": "がっちょ君は人気のゲーム、Zombie Hunterに熱中している。このゲームには、頭、胴、腕、腰、足専用の5種類の防具があり、がっちょ君が操作するプレイヤーキャラクター(PC)は、体の各部に対応する防具をそれぞれ最大1つまで装備することができる。\nまた、各防具には重さと防御力が設定されており、PCの装備している防具の重さの合計がA以上B以下であり、かつ防御力の合計もA以上B以下であるとき、そのPCはスキルを発動することができる。 がっちょ君はN個の防具を所持している。装備する防具を適切に選ぶことで、PCがスキルを発動することができるかを調べて欲しい。 入力は以下の形式で与えられる。 入力はすべて整数で与えられる。\n  1行目にがっちょ君が所有している防具の数N, スキルの発動条件に用いられる２つの整数AとBが与えられる。\n  2行目から続くN行に、N個の防具の情報が与えられる。ti, xi, yi はそれぞれi番目の防具の種類、重さ、防御力を表す。\n  防具の種類tiの値はそれぞれ、1のとき頭の防具、2のとき胴の防具、3のとき腕の防具、4のとき腰の防具、5のとき足の防具であることを示す。 入力は以下の条件を満たす。 スキルを発動することができる場合は”Yes”、できない場合は”No”を1行に出力せよ。 頭に(0,1)\n胴に(2,2)\n腕に(3,5)\n腰に(1,3)\n足に(5,-1)\nの防具を装備すると、重さの和が 0+2+3+1+5 = 11、守備力の和が 1+2+5+3+1 = 10 となり、両方の値がA以上でかつB以下となるのでスキルを発動させることができる。",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02105.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 1 ≤ N ≤ 500\n1 ≤ A ≤ B ≤ 1012\n1 ≤ ti ≤ 5\n−1012 ≤ xi,yi ≤ 1012",
          "ranges": "1 500; 1 5; 500; 1012; 5; 1012; 1; 1; 1; 1012"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "7 10 11\n1 1 0\n1 0 1\n2 2 2\n3 3 5\n4 1 3\n5 1 3\n5 5 -1",
            "output": "Yes 頭に(0,1)\n胴に(2,2)\n腕に(3,5)\n腰に(1,3)\n足に(5,-1)\nの防具を装備すると、重さの和が 0+2+3+1+5 = 11、守備力の和が 1+2+5+3+1 = 10 となり、両方の値がA以上でかつB以下となるのでスキルを発動させることができる。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02105.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02105"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02106",
        "title": "Problem I: Tree-Light",
        "description": "あなたはツリーライトというツリー状の照明器具を買ってきた。 この照明器具にはn個の接点があり、それぞれ0からn−1までの番号がついている。各接点は10段階の明るさを表現できる電球と、電球の状態を切り替えるための装置で構成されている。最初、すべての接点の電球の明るさは0である。 また、接点と接点の間にはケーブル線がある。すべての接点はn−1本のケーブル線によって繋がれており、接点0を上にして吊り下げられる。ここで、接点iから下方向に0本以上のケーブル線を介して、接点iと繋がる接点の集合を、接点iを根とした部分木と呼ぶ。 あなたはこの照明器具に対し、以下のいずれかの行動をとる。 q回の行動が与えられるので、count(r, x, y)が与えられるたびにその時点での電球の数を出力せよ。 入力は以下の形式で与えられる。 1行目にツリーライトを構成する接点の数n、あなたのとる行動の数qが空白区切りで与えられる。\n続くn−1行にはケーブル線の情報が空白区切りで与えられる。i番目のケーブル線の情報は、ケーブル線iが接点uiを上にして、接点uiと接点viを繋ぐことを表す。\nn+1行目以降のq行にはあなたのとる行動が空白区切りで与えられる。ti = 1ならcount(ri, xi, yi)を、ti = 2ならchange(ri, xi, yi)を表す。 各count(ri, xi, yi)について、その答えを1行に出力する。",
        "difficulty": "Medium",
        "category": "Trees & Graphs",
        "tags": [
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02106.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 105\n1 ≤ q ≤ 105\n0 ≤ ui, vi, ri ≤ n−1 (ui ≠ vi)\n0 ≤ xi, yi ≤ 9 (ti = 1の時xi ≤ yi)",
          "ranges": "1 105; 1 105; 105; 105; 9; 1; 1; 1; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "7 5\n0 1\n1 2\n1 3\n0 4\n4 5\n4 6\n1 0 0 9\n2 0 0 5\n2 1 5 8\n1 0 5 8\n1 0 8 8",
            "output": "7\n7\n3",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02106.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02106"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02107",
        "title": "Problem J: Demon's Plan",
        "description": "デーモンズプランでは慾を司る108体の悪魔が日夜プログラミングコンテストでしのぎを削っている。主催であるパトローンは、全ての慾が集う場所”リクス＝マグナ”に悪魔たちを招待しようとしている。\n    パトローンはまだ招待を送っていない悪魔に招待を送りたいが、悪魔は世界各地におり、自分で行くのは面倒くさいので自身の使い魔達にやらせることにした。\n    パトローンは気が利くので使い魔同士がより平等に働くようにどの使い魔がどの悪魔を担当するかを割り振ろうとしている。 N体の使い魔とM体の悪魔がいる。\n    使い魔i と 悪魔j の距離は Hi jである。 各悪魔に必ず1人の使い魔を向かわせたい。どの使い魔がどの悪魔を訪問するかは以下の条件に従って割り振ることにした。 1行目に使い魔1体あたりの訪問する悪魔の数の差の最大を、2行目に悪魔と担当する使い魔の距離の最大を出力せよ。 入力は以下の形式で与えられる。 1行目に使い魔の数Nと悪魔の数Mが整数で空白区切りで与えられる。\n    続くN行に使い魔と悪魔の距離が整数で与えられる。Hijは使い魔iと悪魔jの距離を表す。 問題文の条件に従い、1行目に使い魔1体あたりの訪問する悪魔の数の差の最大を、2行目に悪魔と担当する使い魔の距離の最大を出力せよ。 使い魔0 - 悪魔0 \n    使い魔1 - 悪魔1 \n    使い魔2 - 悪魔2 \n    と割り振ることで訪問する悪魔の数の差が0になり、担当使い魔と悪魔の距離の最大が1になり最適な組み合わせになる。 使い魔0 - 悪魔0 \n    使い魔0 - 悪魔1 \n    使い魔1 - 悪魔4 \n    使い魔2 - 悪魔3 \n    使い魔2 - 悪魔2 \n    と割り振ることで訪問する悪魔の差が1になり、担当使い魔と悪魔の距離の最大が2になり最適な組み合わせになる。",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02107.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 108\n    \n\n        1 ≤ M ≤ 108\n    \n\n        1 ≤ Hi j ≤ 109 ( 0 ≤ i < N, 0 ≤ j < M ) ( 使い魔iから悪魔jまでの距離 )",
          "ranges": "1 108; 1 108; 108; 108; 109; 1; 1; 1; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 3\n1 2 3\n2 1 2\n3 2 1",
            "output": "0\n1 使い魔0 - 悪魔0 \n    使い魔1 - 悪魔1 \n    使い魔2 - 悪魔2 \n    と割り振ることで訪問する悪魔の数の差が0になり、担当使い魔と悪魔の距離の最大が1になり最適な組み合わせになる。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02107.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02107"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02108",
        "title": "Problem K: Donuts Purchase",
        "description": "ラフイは休暇の間することがなく暇で、なんとなくドーナツが食べたくなったので、店を巡りドーナツを購入していくことにした。\n各街には1軒のドーナツ店があり、すべてのドーナツ店は奇数日が定休日となっている。\nラフイにはドーナツの好みがあるので、店によって得られる満足度が違う。\nそこでラフイは最適に行動することで、できるだけ多くの満足度を得ることにした。 ラフイが住んでいる世界には、それぞれ0からn-1の番号が割り当てられたn個の街があり、それらはm本の道で繋がれている。\nそれぞれの道は一方通行になっており、ラフイは街aiから街biへ移動することができる。\n最初ラフイは偶数日に街0にいる。\nラフイは街には留まらずに、1日に道を1本渡り別の街に移動する。\nラフイは街iに到着した日に、店が営業していれば1つドーナツを購入し、満足度ciを得る。\n同じ街は何度でも訪れることができるが、1つの店では1度しか購入しない。\nラフイがこれ以上満足度を得られない状態になるまで最適に行動した時の満足度の合計の最大を求めよ。 入力はすべて整数で与えられる。\n1行目に街の数nと道の数mが空白区切りで与えられる。\n2行目に街iの店でドーナツを購入した際に得られる満足度ciが空白区切りで与えられる。\n続くm行に道の情報を表すaiとbiが空白区切りで与えられる。 入力は以下の条件を満たす。 満足度の合計の最大値を1行に出力せよ。",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02108.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 1 ≤ n ≤ 105\n0 ≤ m ≤ min(n×(n−1),105)\n0 ≤ ci ≤ 1000\n0 ≤ ai,bi ≤ n − 1\n自己ループ、多重辺は存在しない",
          "ranges": "1 105; 0 1000; 105; 1000; 1; 0; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 1\n1 2\n0 1",
            "output": "1",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02108.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02108"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02109",
        "title": "Problem L: Select Sets",
        "description": "整数の集合がN個ある。 これらの集合にはそれぞれ1からNまでの番号が割り振られている。i番目の集合の要素数はKiであり、その集合の要素の中でj番目に小さい整数はai,jである。 太郎君はこの中から任意の数だけ集合を選ぶことになった。  ただ適当に選ぶだけではつまらないと思った太郎君は、少なくとも3つの集合を選ぶことにした。また、\"選んだ集合の和集合の要素数\"と\"選んだ集合の積集合の要素数\"の積ができるだけ大きくなるように選ぶことにした。 太郎君が最適に集合を選んだとき、\"選んだ集合の和集合の要素数\"と\"選んだ集合の積集合の要素数\"の積の最大値を求めよ。 入力は以下の形式で与えられる。 入力は以下の条件を満たす。 太郎君が最適に選んだときの\"選んだ集合の和集合の要素数\"と\"選んだ集合の積集合の要素数\"の積の最大値を出力せよ。",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02109.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 入力は全て整数である。\n3 ≤ N ≤ 20,000\n1 ≤ ai,j ≤ 22\n ai,j < ai,j+1\n    ( 1 ≤ i ≤ N )\n    ( 1 ≤ j < Ki)",
          "ranges": "3 20; 20; 22; 3; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n1 5\n2 3 5\n3 3 5 7\n4 3 5 7 9",
            "output": "8",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02109.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02109"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02110",
        "title": "Problem M: Settler",
        "description": "二次元平面上にN個の空き地がある。空き地にはそれぞれ1からNまでの番号が割り振られている。どの空き地もとても小さいので、点とみなすことができる。i番目の空き地は(xi,yi)に存在している。 太郎君はこのN個の空き地の中からちょうどK個を選び、それらの空き地に建物を建てることにした。\n  しかし、あまりにも近い場所に複数の建物を建てても面白くないと思ったので、太郎君はそれぞれの空き地どうしのユークリッド距離が必ず2以上となるように空き地を選ぶことにした。 太郎君が選ぶ空き地の組み合わせとして考えられるものを出力するプログラムを作成せよ。\n  組み合わせが複数存在する場合は、辞書順で最小のものを出力せよ。\n  ただし、どのようにK個の空き地を選んだとしても、いずれか2つの空き地のユークリッド距離が2より小さくなってしまう場合は、かわりに-1を出力せよ。 入力は以下の形式で与えられる。 入力は以下の条件を満たす。 太郎君が選ぶ空き地の番号を昇順に1行ずつ出力せよ。",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02110.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 入力は全て整数である。\n2 ≤ K ≤ N ≤ 6,000\n1 ≤ xi , yi ≤ 1,000,000    ( 1 ≤ i ≤ N )\n xi mod 2 = floor ( yi ÷ 2 ) mod 2 ( 1 ≤ i ≤ N )\n    (ここでfloor ( yi ÷ 2 ) とはyiを2で割り小数点以下を切り捨てた値である)\n同じ座標に複数の空き地が存在することはない。",
          "ranges": "6; 1; 2; 1; 1; 2; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 2\n2 1\n1 2\n1 3",
            "output": "1\n3",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02110.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02110"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02111",
        "title": "Problem A: Clock",
        "description": "がっちょ君はお気に入りの時計を持っている。ある日時計の長針が取れてしまい、どこかへなくしてしまった。しかし、がっちょ君はその時計を使い続けたいため短針だけで時刻を読み取りたいと考えている。 短針の情報θに対する時刻(時h、分m)を出力せよ。時計はいわゆるアナログ時計で、1から12の数が等間隔に時計回りに昇順に並んでいるものである。 入力は以下の形式で与えられる。 1行に短針の角度 θを表す整数が度数法(degree)で与えられる。\n短針が指す方向は、12時を指す方向を0度としたとき、時計回りにθ度回転した方向である。 短針が与えられた角度をとる時の時刻を\nh m\n  の形で1行に出力する。\n\n  時刻に午前午後の区別はないため0 ≤ h ≤ 11とする。",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02111.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0 ≤ θ ≤ 359",
          "ranges": "0 359; 359; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "0",
            "output": "0 0",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02111.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02111"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02112",
        "title": "Problem B: Hating Crowd",
        "description": "ニート君は1年12ヶ月毎月30日まで計360日の世界線で暮らしています。その世界では毎年同じ日程のN個の連休が世界中の人に適用されていました。連休iはMi月Di日から始まる連続したVi日間です。 ニート君はNEETなので連休に関係なく毎日休みです。ある日ニート君は珍しく出かけようと思いましたが、人混みが嫌いなので、連休の影響で混雑する日はなるべく外に出たくありません。そこで、ニート君は以下の方法で各日の混雑度を計算し、混雑度が一番小さい日を探そうとしています。 1年の中で一番小さい混雑度を出力してください。 ただし、連休iは年を跨ぐ事があります。また、連休の日程は重複する事があります。 入力は以下の形式で与えられる。 1行目に整数Nが与えられる。\n    2行目からN+1行目に整数Mi, Di, Vi, Siが空白区切りで与えられる。（1 ≤ i ≤ N） 入力は以下の条件を満たす。 一番小さい混雑度を1行に出力する。",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02112.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 1 ≤ N ≤ 100\n1 ≤ Mi ≤ 12\n1 ≤ Di ≤ 30\n1 ≤ Vi, Si ≤ 360",
          "ranges": "1 100; 1 12; 1 30; 100; 12; 30; 360; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1\n1 1 359 1",
            "output": "0",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02112.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02112"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02113",
        "title": "Problem C: Palindrome",
        "description": "太郎君はそれぞれの長さがLの文字列をN個持っている。太郎君は回文が大好きなので、N個のうちいくつかの文字列を選んで好きな順番に並べることで、できるだけ長い回文を作りたい。 太郎君が作ることのできる回文の中で、最長のものを求めよ。複数ある場合は、そのうち辞書順で最小のものを出力せよ。どのように選んで並べても回文が作れない場合は、空行を出力せよ。 入力は以下の形式で与えられる。 1行目に、文字列の数Nと文字列の長さLが与えられる。続く2行目からN + 1行目に太郎君が持っている文字列s_iが与えられる。 入力は以下の条件を満たす。 最長の回文の中で辞書順最小のものを出力せよ。回文が作れない場合は空行を出力せよ。",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02113.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 1 ≤ N ≤ 1000\n1 ≤ L ≤ 30\ns_iは英小文字からなる文字列である。",
          "ranges": "1 1000; 1 30; 1000; 30; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 2\noi\nio\nrr\nrr",
            "output": "iorrrroi",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02113.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02113"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02115",
        "title": "Problem E: Piano",
        "description": "がっちょ君はピアノを弾こうとしている。ピアノは右側にある鍵盤ほど高い音が出る。がっちょ君はある楽譜を持っており、その楽譜に従って弾く。 楽譜には、ある時刻にどの鍵盤を弾くべきかを示す音符が時系列順に記載されている。この楽譜には和音(複数の鍵盤を押したときに出る音)は現れず、音の長さも考えないことにする。 がっちょ君はピアノを弾くとき、以下のルールに従う。 がっちょ君が使う楽譜が与えられるので、ルールに従ってその楽譜を演奏しきるには、演奏する方の腕に最小何本の指が必要かを求めよ。ただし、必要な指は6本以上になることがあることに注意せよ。 入力は以下の形式で与えられる。 1行目に、楽譜に書かれている音符の総数を表す整数Nが与えられる。 続く2行目からN+1行目までに、時刻i(1 ≤ i ≤ N)に弾くべき鍵盤が最も左の鍵盤から何番目かを表す整数aiが与えられる。 入力は以下の条件を満たす。 がっちょ君が上記ルールに従って弾くために必要な最小の指の本数を1行に出力する。 この場合、図1の①、②\t、③\tの順で鍵盤を弾く。指が2本あると、左側の指で鍵盤2を、右側の指で鍵盤5を、また左側の指で鍵盤1を弾くことができる。",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02115.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 1 ≤ N ≤ 105\n0 ≤ ai ≤ 109",
          "ranges": "1 105; 0 109; 105; 109; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n2\n5\n1",
            "output": "2 この場合、図1の①、②\t、③\tの順で鍵盤を弾く。指が2本あると、左側の指で鍵盤2を、右側の指で鍵盤5を、また左側の指で鍵盤1を弾くことができる。 図1: Sample1 の図解",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02115.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02115"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02116",
        "title": "Problem F: nCm",
        "description": "整数nが与えられた時、nCm(異なるn個のものからm個を選ぶ組み合わせの数)が偶数となるような最小のmを出力せよ。 入力は以下の形式で与えられる。 入力は以下の条件を満たす。 nCmが偶数となるような最小のmを1行に出力する。",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02116.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 1 ≤ n ≤ 1018",
          "ranges": "1 1018; 1018; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2",
            "output": "1",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02116.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02116"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02121",
        "title": "Problem K: Chinol Choco",
        "description": "チョコレート会社チノルチョコは新しい店をn店建てることにした。\nそれぞれの店は各店長に建てたい場所の候補を2つ用意してもらい、どちらかの場所に建てる。 チノルチョコではm種類のチョコレートを販売しており、それぞれ別の工場で製造している。\nすべての店で全種類のチョコレートを販売する。\nチノルチョコではチョコレートを搬送するためのトラックを1台しか所有しておらず、1台のトラックでは1店分のチョコレートしか運べない。\nそのため、トラックは店から別の店へ移動する際にすべての工場を回る必要がある。 ある店から別の店へ移動する時の最短移動距離の最大が最小になるように店を配置した時の、最大の移動距離を求めよ。 同じ場所に複数の店や工場が存在することができる。 入力は以下の形式で与えられる。 入力はすべて整数で与えられる。\n1行目にチノルチョコの店の数n、チョコレートを製造している工場の数mが空白区切りで与えられる。\n2行目からn行にそれぞれの店を建てる場所の候補の座標(ai,bi),(ci,di)が空白区切りで与えられる。\n2+n行目からm行に工場の座標(xi,yi)が空白区切りで与えられる。 入力は以下の条件を満たす。 最短移動距離の最大が最小になるように店を配置した時の、最大の移動距離を出力せよ。\n誤差が10−6を超えてはならない。",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02121.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 2 ≤ n ≤ 200\n1 ≤ m ≤ 15\n0 ≤ ai,bi,ci,di,xi,yi ≤ 1000",
          "ranges": "2 200; 1 15; 200; 15; 1000; 2; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 1\n0 0 5 5\n3 3 6 6\n2 2",
            "output": "4.2426406871",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02121.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02121"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02122",
        "title": "Problem L: RMQ 2",
        "description": "長さ$N$の2つの数列$A$と$B$が与えられる。はじめ、数列$A$の$i$項目は$a_i$であり、数列$B$の$i$項目は$b_i$である。 以下のような形式の命令文が合計$Q$個与えられるので、与えられた順に処理を行うプログラムを作成せよ。 各命令文は3つの整数$x,y,z$で表される。 入力は以下の形式で与えられる。 $N$\n$a_{1}$ $a_{2}$ ... $a_{N}$\n$b_{1}$ $b_{2}$ ... $b_{N}$\n$Q$\n$x_1$ $y_1$ $z_1$\n$x_2$ $y_2$ $z_2$\n...\n$x_Q$ $y_Q$ $z_Q$ 入力は以下の条件を満たす。 $x=3$または$x=4$の命令文が入力で与えられる度に、見つけた値を1行に出力する。",
        "difficulty": "Hard",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02122.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 $2 \\le N \\le 2 \\times 10^5$\n$2 \\le Q \\le 2 \\times 10^5$\n$1 \\le a_i \\le 10^9$\n$1 \\le b_i \\le 10^9$\n$1 \\le x_i \\le 6$\n$1 \\le y_i \\le N $ ($1 \\le x_i \\le 4$のとき)\n$y_i = -1$ ($x_i=5, 6$のとき)\n$1 \\le z_i \\le 10^9$ ($x_i=1, 2$のとき)\n$y_i \\le z_i \\le N$ ($x_i=3, 4$のとき)\n$z_i = -1$ ($x_i=5, 6$のとき)\n入力はすべて整数",
          "ranges": "5; 1; 3; 5"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n1 3 5 7 9\n6 2 3 2 6\n10\n1 3 4\n3 4 5\n4 2 3\n5 -1 -1\n2 3 8\n3 2 5\n4 3 3\n1 1 1\n6 -1 -1\n3 1 5",
            "output": "7\n2\n2\n8\n1",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02122.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02122"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02136",
        "title": "Problem M: Manhattan Bomb",
        "description": "2次元平面上に$n$個の爆弾がある。爆弾にはそれぞれ1から$n$までの番号が割り振られており、$i$番目の爆弾は座標$(x_i,y_i)$に存在している。\n  なお、どの爆弾も原点からのマンハッタン距離が等しいことが分かっている。\n  $i$番目の爆弾が爆発したとき、座標$(x_i,y_i)$からのマンハッタン距離が$r_i$以内の座標に存在している爆弾も連鎖的に爆発する。\n  $n$個の爆弾それぞれについて、その爆弾のみに着火した場合に、爆発せずに残る爆弾の個数を求めよ。 入力はすべて整数で与えられる。\n1行目に爆弾の個数$n$が与えられる。\n続く$n$行のうち$i$行目には$i$番目の爆弾の情報を表す$x_i,y_i,r_i$が空白区切りで与えられる。 入力は以下の条件を満たす。 $i$行目には$i$番目の爆弾のみに着火した場合に、爆発せずに残る爆弾の個数を出力せよ。",
        "difficulty": "Hard",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02136.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "入力は以下の条件を満たす。 $2$ ≤ $n$ ≤ $2 \\times 10^5$\n$-10^9$ ≤ $x_i,y_i$ ≤ $10^9$\n$1$ ≤ $r_i$ ≤ $10^9$\n$|x_i|+|y_i| = |x_j|+|y_j|$  $( 1 ≤ i , j ≤ n )$\n同じ座標に複数の爆弾が存在することはない",
          "ranges": "1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\n-1 -1 10\n1 1 1",
            "output": "0\n1",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02136.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02136"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02184",
        "title": "C: カニサル暗号",
        "description": "えびちゃんは、ある非負整数 D を「カニサル暗号」で暗号化して得られた文字列 C を与えられました。この暗号は、非負整数を 10 進法で表したときの各数字をある（元と異なるとは限らない）決められた数字で置き換えるものです。異なる数字が同じ数字に置き換えられたり、同じ数字が出現位置によって異なる数字に書き換えられることはありません。 たとえば、この暗号化方式によって 2646 が 0545 になることはありますが、3456 が 1333 になったり 1333 が 3456 になることはありません。 いま、えびちゃんは D を 10^9+7 で割った余りが M になることを教えてもらいました。このとき、D として考えられるものを一つ出力してください。複数考えられる場合はどれを出力しても構いません。ただし、D の先頭には余分な 0 はついていないものとします。 D として考えられる非負整数を一行に出力してください。存在しない場合は -1 を出力してください。 今回の暗号化方式は、0 を 0 に、1 を 1 に、9 を 7 に置き換えるものでした。 D の先頭に余分な 0 がついていることはありません。 1000000052 や 2000000059 なども条件を満たすので、それを出力してもかまいません。",
        "difficulty": "Hard",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02184.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0\\leq M < 10^9+7\n1\\leq |C| \\leq 10^5",
          "ranges": "10"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\n1000000007",
            "output": "1000000009 今回の暗号化方式は、0 を 0 に、1 を 1 に、9 を 7 に置き換えるものでした。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02184.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02184"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02195",
        "title": "Bichrome Tree Connectivity",
        "description": "木が与えられます。 はじめ、すべての頂点は白いです。 白い頂点の色を反転すると黒になり、黒い頂点の色を反転すると白になります。 二種類のクエリを処理してください。 一種類目のクエリでは、頂点vの色を反転します。 二種類目のクエリでは、白い頂点vから白い頂点とそれらを結ぶ辺だけを使ってたどり着ける頂点の個数を答えます。 t_iが1のとき一種類目のクエリ、2のとき二種類目のクエリであることを表す。 二種類目のクエリに対する答えを順に出力せよ。",
        "difficulty": "Medium",
        "category": "Trees & Graphs",
        "tags": [
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02195.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N,Q \\leq 10^5 \n1 \\leq a_i,b_i \\leq N\n1 \\leq t_i \\leq 2\n1 \\leq v_i \\leq N\n与えられるグラフは木である。\nt_i=2のとき、頂点v_iは必ず白である。",
          "ranges": "2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "10 3\n1 2\n2 5\n2 6\n1 4\n1 3\n3 7\n3 8\n3 9\n9 10\n1 3\n2 1\n2 8",
            "output": "5\n1",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02195.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02195"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02207",
        "title": "地震 (Earthquakes)",
        "description": "E869120 君は地震が苦手です。 具体的には、ある作業をしている時に震度 $p$ の地震が発生した際、その作業のパフォーマンスが $10 \\times p$ パーセント低下します。 昨日、$N$ 回地震が発生しました。より具体的に言うと、昨日の i 回目の地震は時刻 $T_i$ に発生し、その震度は $A_i$ でした。 ここで $Q$ 個の質問が与えられます。$i$ 個目の質問の内容は以下の通りです。 ただし、作業開始時のパフォーマンスは $1000000000 \\ (= 10^9)$ であり、地震以外に作業のパフォ―マンスに影響を及ぼすものはないものとします。 また、作業開始時、終了時と同時に地震が発生していることはありません。 入力は以下の形式で標準入力から与えられる。 質問 $1, 2, 3, \\dots, Q$ の答えをこの順に改行区切りで出力しなさい。 ただし、最後には改行を入れること。 なお、想定解答との絶対誤差又は相対誤差が $10^{-7}$ 以内ならば正解と判定される。 どの質問に対しても、出力された値が実際の答えの値との絶対誤差または相対誤差が $10^{-7}$ 以内であれば、正解と判定されます。",
        "difficulty": "Hard",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02207.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "$1 \\leq N \\leq 100000 \\ (= 10^5)$\n$1 \\leq Q \\leq 100000 \\ (= 10^5)$\n$0 \\leq A_i \\leq 7$\n$1 \\leq T_1 < T_2 < \\cdots < T_N \\leq 1000000000 \\ (= 10^9)$\n$1 \\leq L_i < R_i \\leq 1000000000 \\ (= 10^9)$\n作業開始時刻ちょうどや作業終了時刻ちょうどに、地震が発生するような入力は与えられない。\n入力は全て整数である。",
          "ranges": "1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n3 3\n5 4\n8 1\n2\n1 4\n4 9",
            "output": "700000000.000000000000\n539999999.999999880791 どの質問に対しても、出力された値が実際の答えの値との絶対誤差または相対誤差が $10^{-7}$ 以内であれば、正解と判定されます。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02207.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02207"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02214",
        "title": "C: サボテンクエリ",
        "description": "問題文単純無向グラフで、任意の辺が高々 $1$ つの単純閉路にしか含まれないようなものをサボテングラフと呼ぶことにします。\n$N$ 頂点 $M$ 辺の連結なサボテングラフ $G$ が与えられます。\n各頂点は $1$ から $N$ まで番号が付いています。\nまた、$i$ 個目の辺は頂点 $a_i$ と頂点 $b_i$ を結んでおり、コストは $c_i$ です。\nグラフ $G$ 上の単純パスのコストを、そのパス上に含まれる全ての辺のコストの XOR と定めます。\n以下のような形式の $Q$ 個のクエリに答えてください。\n\nx_i y_i k_i ― 頂点 $x_i$ と頂点 $y_i$ を繋ぐすべての単純パスのコストを列挙して重複する値を除き、小さい順に並べた列を $d = d_1, d_2, ... , d_L$ としたときに、$d_{k_i}$ を求めよ。ただし、このコスト列 $d$ の長さ $L$ が $k_i$ より小さい場合は $-1$ とする。 単純無向グラフで、任意の辺が高々 $1$ つの単純閉路にしか含まれないようなものをサボテングラフと呼ぶことにします。 $N$ 頂点 $M$ 辺の連結なサボテングラフ $G$ が与えられます。 各頂点は $1$ から $N$ まで番号が付いています。 また、$i$ 個目の辺は頂点 $a_i$ と頂点 $b_i$ を結んでおり、コストは $c_i$ です。 グラフ $G$ 上の単純パスのコストを、そのパス上に含まれる全ての辺のコストの XOR と定めます。 以下のような形式の $Q$ 個のクエリに答えてください。 制約\n$2 \\leq N \\leq 10^5$\n$N - 1 \\leq M \\leq 2 \\times 10^5$\n$1 \\leq a_i, b_i \\leq N$\n$a_i \\neq b_i$\n$0 \\leq c_i < 2^{30}$\n$1 \\leq Q \\leq 2 \\times 10^5$\n$1 \\leq x_i, y_i \\leq N$\n$x_i \\neq y_i$\n$1 \\leq k_i \\leq 2^{30}$\n与えられるグラフは連結なサボテングラフである。\n入力は全て整数である。 入力入力は以下の形式で標準入力から与えられる。\n$N$ $M$\n$a_1$ $b_1$ $c_1$\n$a_2$ $b_2$ $c_2$\n$:$\n$a_M$ $b_M$ $c_M$\n$Q$\n$x_1$ $y_1$ $k_1$\n$x_2$ $y_2$ $k_2$\n$:$\n$x_Q$ $y_Q$ $k_Q$\n\n\n\n\n\n出力$Q$ 個のクエリの答えを一行ごとに順番に出力せよ。 入力入力は以下の形式で標準入力から与えられる。\n$N$ $M$\n$a_1$ $b_1$ $c_1$\n$a_2$ $b_2$ $c_2$\n$:$\n$a_M$ $b_M$ $c_M$\n$Q$\n$x_1$ $y_1$ $k_1$\n$x_2$ $y_2$ $k_2$\n$:$\n$x_Q$ $y_Q$ $k_Q$ 入力は以下の形式で標準入力から与えられる。 出力$Q$ 個のクエリの答えを一行ごとに順番に出力せよ。 $Q$ 個のクエリの答えを一行ごとに順番に出力せよ。 入力例 14 4\n1 2 1\n1 3 8\n3 2 0\n1 4 7\n4\n1 2 1\n2 1 2\n1 4 1\n3 4 1073741824 出力例 11\n8\n7\n-1\n\n\n\n頂点 $1$ から頂点 $2$ への単純パスは、辺 $1$ のみを経由するものと、辺 $2, 3$ を経由するもので、コストはそれぞれ $1$, $8$ です。なので、$1$ つめのクエリの答えは $1$となります。\n\n\n頂点 $2$ から頂点 $1$ への単純パスも上記と同様なので、 $2$ つ目のクエリの答えは $8$ となります。\n\n\n頂点 $1$ から頂点 $4$ への単純パスは、辺 $4$ のみを経由するもののみで、コストは $7$ です。なので、$3$ つ目のクエリの答えは $7$ となります。\n\n\n頂点 $3$ から頂点 $4$ への単純パスは、辺 $2$, $4$ を経由するものと、辺 $3$, $1$, $4$ を経由するもので、コストはそれぞれ $15$, $6$ です。$1073741824$ 番目に小さいコストは存在しないので、$4$ つ目のクエリの答えは $-1$ となります。 頂点 $1$ から頂点 $2$ への単純パスは、辺 $1$ のみを経由するものと、辺 $2, 3$ を経由するもので、コストはそれぞれ $1$, $8$ です。なので、$1$ つめのクエリの答えは $1$となります。 頂点 $2$ から頂点 $1$ への単純パスも上記と同様なので、 $2$ つ目のクエリの答えは $8$ となります。 頂点 $1$ から頂点 $4$ への単純パスは、辺 $4$ のみを経由するもののみで、コストは $7$ です。なので、$3$ つ目のクエリの答えは $7$ となります。 頂点 $3$ から頂点 $4$ への単純パスは、辺 $2$, $4$ を経由するものと、辺 $3$, $1$, $4$ を経由するもので、コストはそれぞれ $15$, $6$ です。$1073741824$ 番目に小さいコストは存在しないので、$4$ つ目のクエリの答えは $-1$ となります。 入力例 213 15\n1 2 1\n2 3 2\n3 4 3\n4 5 1\n5 1 2\n5 6 4\n6 7 15\n7 8 9\n8 6 7\n2 9 5\n9 10 5\n10 2 2\n3 11 3\n11 12 2\n11 13 1\n8\n12 13 1\n1 11 2\n9 5 4\n2 7 3\n6 12 2\n9 7 5\n10 3 3\n3 12 2 出力例 23\n3\n7\n10\n7\n-1\n2\n-1",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02214.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "$2 \\leq N \\leq 10^5$\n$N - 1 \\leq M \\leq 2 \\times 10^5$\n$1 \\leq a_i, b_i \\leq N$\n$a_i \\neq b_i$\n$0 \\leq c_i < 2^{30}$\n$1 \\leq Q \\leq 2 \\times 10^5$\n$1 \\leq x_i, y_i \\leq N$\n$x_i \\neq y_i$\n$1 \\leq k_i \\leq 2^{30}$\n与えられるグラフは連結なサボテングラフである。\n入力は全て整数である。",
          "ranges": "2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 4\n1 2 1\n1 3 8\n3 2 0\n1 4 7\n4\n1 2 1\n2 1 2\n1 4 1\n3 4 1073741824",
            "output": "1\n8\n7\n-1 頂点 $1$ から頂点 $2$ への単純パスは、辺 $1$ のみを経由するものと、辺 $2, 3$ を経由するもので、コストはそれぞれ $1$, $8$ です。なので、$1$ つめのクエリの答えは $1$となります。\n\n\n頂点 $2$ から頂点 $1$ への単純パスも上記と同様なので、 $2$ つ目のクエリの答えは $8$ となります。\n\n\n頂点 $1$ から頂点 $4$ への単純パスは、辺 $4$ のみを経由するもののみで、コストは $7$ です。なので、$3$ つ目のクエリの答えは $7$ となります。\n\n\n頂点 $3$ から頂点 $4$ への単純パスは、辺 $2$, $4$ を経由するものと、辺 $3$, $1$, $4$ を経由するもので、コストはそれぞれ $15$, $6$ です。$1073741824$ 番目に小さいコストは存在しないので、$4$ つ目のクエリの答えは $-1$ となります。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02214.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02214"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02218",
        "title": "G: 一番遠い町",
        "description": "問題文$N$ 個の町と $N-1$ 個の道があります。\nすべての町と道にはそれぞれ $1$ から $N$, $1$ から $N-1$ の番号がついています。\n道 $i$ は町 $a_i$ と町 $b_i$ を距離 $d_i$ で双方向につないでいます。\n最初はすべての道が通行可能な状態であり、どの町からもいくつかの道を通ることですべての町に行くことができます。\nすいばかくんは最初、町 $1$ にいます。\n$Q$ 個のクエリが与えられるので順番に処理してください。クエリは $3$ 種類あり、以下の形式で与えられます。\n\nクエリ $1$ : 1 x ― すいばかくんが町 $x$ に移動する。ただし、このクエリ時点で、すいばかくんがいる町と町 $x$ は通行可能な $1$ つの道で直接つながれていることが保証される。\nクエリ $2$ : 2 y ― 道 $y$ が封鎖される。ただし、このクエリ時点で、道 $y$ は通行可能であることが保証される。\nクエリ $3$ : 3 z ― 道 $z$ が通行可能になる。ただし、このクエリ時点で、道 $z$ は封鎖されていることが保証される。\n\nさらに、各クエリを行った直後に、すいばかくんがその時点で通行可能な道のみを使って到達可能な町のうち、すいばかくんがいる町から一番遠い町の番号を昇順ですべて出力してください。 $N$ 個の町と $N-1$ 個の道があります。 すべての町と道にはそれぞれ $1$ から $N$, $1$ から $N-1$ の番号がついています。 道 $i$ は町 $a_i$ と町 $b_i$ を距離 $d_i$ で双方向につないでいます。 最初はすべての道が通行可能な状態であり、どの町からもいくつかの道を通ることですべての町に行くことができます。 すいばかくんは最初、町 $1$ にいます。 $Q$ 個のクエリが与えられるので順番に処理してください。クエリは $3$ 種類あり、以下の形式で与えられます。 さらに、各クエリを行った直後に、すいばかくんがその時点で通行可能な道のみを使って到達可能な町のうち、すいばかくんがいる町から一番遠い町の番号を昇順ですべて出力してください。 制約\n$1 \\leq N \\leq 2 \\times 10^5$\n$1 \\leq a_i, b_i \\leq N$, $a_i \\neq b_i$\n$1 \\leq d_i \\leq 10^6$\n$1 \\leq Q \\leq 2 \\times 10^5$\nクエリ $1$ において、$1 \\leq x \\leq N$ を満たす。また、このクエリ時点で、すいばかくんがいる町と町 $x$ は通行可能な $1$ つの道で直接つながれている。\nクエリ $2$ において、$1 \\leq y \\leq N-1$ を満たす。また、このクエリ時点で、道 $y$ は通行可能である。\nクエリ $3$ において、$1 \\leq z \\leq N-1$ を満たす。また、このクエリ時点で、道 $z$ は封鎖されている。\n$i$ 番目のクエリで出力すべき町の個数を $c_i$ とするとき、$\\sum_{i=1}^{Q}c_i \\leq 4 \\times 10^5$ を満たす。\n入力はすべて整数である。 入力以下の形式で標準入力から与えられる。\n$N$\n$a_1$ $b_1$ $d_1$\n$a_2$ $b_2$ $d_2$\n$:$\n$a_{N-1}$ $b_{N-1}$ $d_{N-1}$\n$Q$\n$Query_1$\n$Query_2$\n$:$\n$Query_Q$\n\n$Query_i$ は問題文にある $3$ 種類のクエリのいずれかの形式で与えらえる。\n\n\n\n\n出力$Q$ 行出力せよ。\n$i$ 行目には、$i$ 番目クエリ後の出力すべき町の番号が昇順で $v_1$, $v_2$, $...$, $v_c$ の $c$ 個であるとき、以下のように空白区切りで出力せよ。\n$c$ $v_1$ $v_2$ $...$ $v_c$ 入力以下の形式で標準入力から与えられる。\n$N$\n$a_1$ $b_1$ $d_1$\n$a_2$ $b_2$ $d_2$\n$:$\n$a_{N-1}$ $b_{N-1}$ $d_{N-1}$\n$Q$\n$Query_1$\n$Query_2$\n$:$\n$Query_Q$\n\n$Query_i$ は問題文にある $3$ 種類のクエリのいずれかの形式で与えらえる。 以下の形式で標準入力から与えられる。 $Query_i$ は問題文にある $3$ 種類のクエリのいずれかの形式で与えらえる。 出力$Q$ 行出力せよ。\n$i$ 行目には、$i$ 番目クエリ後の出力すべき町の番号が昇順で $v_1$, $v_2$, $...$, $v_c$ の $c$ 個であるとき、以下のように空白区切りで出力せよ。\n$c$ $v_1$ $v_2$ $...$ $v_c$ $Q$ 行出力せよ。\n$i$ 行目には、$i$ 番目クエリ後の出力すべき町の番号が昇順で $v_1$, $v_2$, $...$, $v_c$ の $c$ 個であるとき、以下のように空白区切りで出力せよ。 入力例 16\n2 4 1\n1 2 1\n4 6 1\n2 3 1\n4 5 1\n5\n2 5\n2 3\n1 2\n3 5\n1 4 出力例 11 6\n2 3 4\n3 1 3 4\n1 5\n2 1 3\n\n\n\n$1$ つ目のクエリで、道 $5$ が封鎖されます。この直後に、すいばかくんが到達可能な町は $1$, $2$, $3$, $4$, $6$ であり、すいばかくんがいる町 $1$ からの距離はそれぞれ $0$, $1$, $2$, $2$, $3$ なので、答えは町 $6$ になります。\n\n\n$2$ つ目のクエリで、道 $3$ が封鎖されます。この直後に、すいばかくんが到達可能な町は $1$, $2$, $3$, $4$ であり、すいばかくんがいる町 $1$ からの距離はそれぞれ $0$, $1$, $2$, $2$ なので、答えは町 $3$, $4$ になります。\n\n\n$3$ つ目のクエリで、すいばかくんは町 $2$ に移動します。この直後に、すいばかくんが到達可能な町は $1$, $2$, $3$, $4$ であり、すいばかくんがいる町 $2$ からの距離はそれぞれ $1$, $0$, $1$, $1$ なので、答えは町 $1$, $3$, $4$ になります。\n\n\n$4$ つ目のクエリで、道 $5$ が通行可能になります。この直後に、すいばかくんが到達可能な町は $1$, $2$, $3$, $4$, $5$ であり、すいばかくんがいる町 $2$ からの距離はそれぞれ $1$, $0$, $1$, $1$, $2$ なので、答えは町 $5$ になります。\n\n\n$5$ つ目のクエリで、すいばかくんは町 $4$ に移動します。この直後に、すいばかくんが到達可能な町は $1$, $2$, $3$, $4$, $5$ であり、すいばかくんがいる町 $4$ からの距離はそれぞれ $2$, $1$, $2$, $0$, $1$ なので、答えは町 $1$, $3$ になります。 $1$ つ目のクエリで、道 $5$ が封鎖されます。この直後に、すいばかくんが到達可能な町は $1$, $2$, $3$, $4$, $6$ であり、すいばかくんがいる町 $1$ からの距離はそれぞれ $0$, $1$, $2$, $2$, $3$ なので、答えは町 $6$ になります。 $2$ つ目のクエリで、道 $3$ が封鎖されます。この直後に、すいばかくんが到達可能な町は $1$, $2$, $3$, $4$ であり、すいばかくんがいる町 $1$ からの距離はそれぞれ $0$, $1$, $2$, $2$ なので、答えは町 $3$, $4$ になります。 $3$ つ目のクエリで、すいばかくんは町 $2$ に移動します。この直後に、すいばかくんが到達可能な町は $1$, $2$, $3$, $4$ であり、すいばかくんがいる町 $2$ からの距離はそれぞれ $1$, $0$, $1$, $1$ なので、答えは町 $1$, $3$, $4$ になります。 $4$ つ目のクエリで、道 $5$ が通行可能になります。この直後に、すいばかくんが到達可能な町は $1$, $2$, $3$, $4$, $5$ であり、すいばかくんがいる町 $2$ からの距離はそれぞれ $1$, $0$, $1$, $1$, $2$ なので、答えは町 $5$ になります。 $5$ つ目のクエリで、すいばかくんは町 $4$ に移動します。この直後に、すいばかくんが到達可能な町は $1$, $2$, $3$, $4$, $5$ であり、すいばかくんがいる町 $4$ からの距離はそれぞれ $2$, $1$, $2$, $0$, $1$ なので、答えは町 $1$, $3$ になります。 入力例 25\n3 4 1\n2 1 1\n4 5 1\n3 2 1\n6\n2 2\n3 2\n1 2\n1 3\n2 4\n1 4 出力例 21 1\n1 5\n1 5\n2 1 5\n1 5\n2 3 5",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02218.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "$1 \\leq N \\leq 2 \\times 10^5$\n$1 \\leq a_i, b_i \\leq N$, $a_i \\neq b_i$\n$1 \\leq d_i \\leq 10^6$\n$1 \\leq Q \\leq 2 \\times 10^5$\nクエリ $1$ において、$1 \\leq x \\leq N$ を満たす。また、このクエリ時点で、すいばかくんがいる町と町 $x$ は通行可能な $1$ つの道で直接つながれている。\nクエリ $2$ において、$1 \\leq y \\leq N-1$ を満たす。また、このクエリ時点で、道 $y$ は通行可能である。\nクエリ $3$ において、$1 \\leq z \\leq N-1$ を満たす。また、このクエリ時点で、道 $z$ は封鎖されている。\n$i$ 番目のクエリで出力すべき町の個数を $c_i$ とするとき、$\\sum_{i=1}^{Q}c_i \\leq 4 \\times 10^5$ を満たす。\n入力はすべて整数である。",
          "ranges": "1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "6\n2 4 1\n1 2 1\n4 6 1\n2 3 1\n4 5 1\n5\n2 5\n2 3\n1 2\n3 5\n1 4",
            "output": "1 6\n2 3 4\n3 1 3 4\n1 5\n2 1 3 $1$ つ目のクエリで、道 $5$ が封鎖されます。この直後に、すいばかくんが到達可能な町は $1$, $2$, $3$, $4$, $6$ であり、すいばかくんがいる町 $1$ からの距離はそれぞれ $0$, $1$, $2$, $2$, $3$ なので、答えは町 $6$ になります。\n\n\n$2$ つ目のクエリで、道 $3$ が封鎖されます。この直後に、すいばかくんが到達可能な町は $1$, $2$, $3$, $4$ であり、すいばかくんがいる町 $1$ からの距離はそれぞれ $0$, $1$, $2$, $2$ なので、答えは町 $3$, $4$ になります。\n\n\n$3$ つ目のクエリで、すいばかくんは町 $2$ に移動します。この直後に、すいばかくんが到達可能な町は $1$, $2$, $3$, $4$ であり、すいばかくんがいる町 $2$ からの距離はそれぞれ $1$, $0$, $1$, $1$ なので、答えは町 $1$, $3$, $4$ になります。\n\n\n$4$ つ目のクエリで、道 $5$ が通行可能になります。この直後に、すいばかくんが到達可能な町は $1$, $2$, $3$, $4$, $5$ であり、すいばかくんがいる町 $2$ からの距離はそれぞれ $1$, $0$, $1$, $1$, $2$ なので、答えは町 $5$ になります。\n\n\n$5$ つ目のクエリで、すいばかくんは町 $4$ に移動します。この直後に、すいばかくんが到達可能な町は $1$, $2$, $3$, $4$, $5$ であり、すいばかくんがいる町 $4$ からの距離はそれぞれ $2$, $1$, $2$, $0$, $1$ なので、答えは町 $1$, $3$ になります。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02218.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02218"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02219",
        "title": "H: 魔法使いの塔",
        "description": "問題文あなたが持っている魔導書には、 $N$ 個の魔法が載っています。\n魔法には $1$ から $N$ までの番号がついていて、魔法 $i (1 \\le i \\le N)$ のコストははじめ整数 $A_i$ です。\nあなたの目的は、魔導書に載っているすべての魔法を $1$ 回ずつ唱えることです。\n魔法を唱えはじめる前に、あなたはクッキーを $K$ 枚食べることができます。クッキーを食べるのに時間はかかりません。\nあなたはクッキーを $1$ 枚食べるたびに、コストが正の魔法を $1$ つ選び、そのコストを $1$ 下げることができます。\nクッキーを食べたあと、あなたは魔法を唱え始めます。\nあなたの MP ははじめ $M$ です。あなたは以下のどちらかを繰り返して、 $N$ 個の魔法を任意の順番で $1$ 回ずつ唱えます。\n\n整数 $i (1 \\le i \\le N)$ を $1$ つ選び、魔法 $i$ を唱える。ただし、 現在の MP は魔法 $i$ のコスト以上でなければならない。\n時間は経過しない。\nMP を魔法 $i$ のコストだけ消費する。\n\n\n休憩する。ただし、現在の MP を $m$ とすると、 $m < M$ でなければならない。 \n時間が $M - m$ 経過する。\nMP を $1$ 回復する。\n\n\n\nあなたが $N$ 個の魔法を任意の順番で $1$ 回ずつ唱えるためにかかる時間の最小値を求めてください。 あなたが持っている魔導書には、 $N$ 個の魔法が載っています。 魔法には $1$ から $N$ までの番号がついていて、魔法 $i (1 \\le i \\le N)$ のコストははじめ整数 $A_i$ です。 あなたの目的は、魔導書に載っているすべての魔法を $1$ 回ずつ唱えることです。 魔法を唱えはじめる前に、あなたはクッキーを $K$ 枚食べることができます。クッキーを食べるのに時間はかかりません。 あなたはクッキーを $1$ 枚食べるたびに、コストが正の魔法を $1$ つ選び、そのコストを $1$ 下げることができます。 クッキーを食べたあと、あなたは魔法を唱え始めます。 あなたの MP ははじめ $M$ です。あなたは以下のどちらかを繰り返して、 $N$ 個の魔法を任意の順番で $1$ 回ずつ唱えます。 あなたが $N$ 個の魔法を任意の順番で $1$ 回ずつ唱えるためにかかる時間の最小値を求めてください。 制約\n$1 \\leq N \\leq 10^5$\n$1 \\leq M \\leq 10^6$\n$0 \\leq K \\leq \\sum_{i=1}^{N} A_i$\n$1 \\leq A_i \\leq M$\n入力はすべて整数である。 入力入力は以下の形式で標準入力から与えられる。\n$N$ $M$ $K$\n$A_1$ $A_2$ $\\ldots$ $A_N$\n\n\n\n\n\n出力$N$ 個の魔法を $1$ 回ずつ唱えるためにかかる時間の最小値を出力せよ。 入力入力は以下の形式で標準入力から与えられる。\n$N$ $M$ $K$\n$A_1$ $A_2$ $\\ldots$ $A_N$ 入力は以下の形式で標準入力から与えられる。 出力$N$ 個の魔法を $1$ 回ずつ唱えるためにかかる時間の最小値を出力せよ。 $N$ 個の魔法を $1$ 回ずつ唱えるためにかかる時間の最小値を出力せよ。 入力例12 4 0\n2 4 出力例13\n\nどの魔法のコストも減らすことができないので、このまま魔法を唱えていくことにします。\n\nまず、魔法 $1$ を唱えます。 MP を $2$ 消費するので、残りの MP は $4 - 2 = 2$ になります。\n\n魔法 $2$ を唱えるには MP が $4$ 必要なので、このままでは魔法 $2$ を唱えることはできません。\n\n休憩します。時間が $4 - 2 = 2$ 秒経過します。 MP を $1$ 回復するので、残りの MP は $2 + 1 = 3$ になります。\n休憩します。時間が $4 - 3 = 1$ 秒経過します。 MP を $1$ 回復するので、残りの MP は $3 + 1 = 4$ になります。\n魔法 $2$ を唱えます。 MP を $4$ 消費するので、残りの MP は $4 - 4 = 0$ になります。\n\n以上より、時間を $2 + 1 = 3$ 秒かければ、魔法 $1,2$ を $1$ 回ずつ唱えることができます。\nこれより短い時間ですべての魔法を唱えることはできないので、求める答えは $3$ となります。 どの魔法のコストも減らすことができないので、このまま魔法を唱えていくことにします。 魔法 $2$ を唱えるには MP が $4$ 必要なので、このままでは魔法 $2$ を唱えることはできません。 以上より、時間を $2 + 1 = 3$ 秒かければ、魔法 $1,2$ を $1$ 回ずつ唱えることができます。\nこれより短い時間ですべての魔法を唱えることはできないので、求める答えは $3$ となります。 入力例23 9 6\n2 3 9 出力例20\n\n最終的な魔法のコストを $2, 2, 4$ とすると、休憩することなくすべての魔法を唱えることができます。 最終的な魔法のコストを $2, 2, 4$ とすると、休憩することなくすべての魔法を唱えることができます。 入力例33 16 2\n6 9 9 出力例321 入力例42 1000000 0\n1000000 1000000 出力例4500000500000\n\n答えは 32bit 整数で表せる範囲に収まらないことがあります。 答えは 32bit 整数で表せる範囲に収まらないことがあります。",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02219.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "$1 \\leq N \\leq 10^5$\n$1 \\leq M \\leq 10^6$\n$0 \\leq K \\leq \\sum_{i=1}^{N} A_i$\n$1 \\leq A_i \\leq M$\n入力はすべて整数である。",
          "ranges": "1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 4 0\n2 4",
            "output": "3 どの魔法のコストも減らすことができないので、このまま魔法を唱えていくことにします。 まず、魔法 $1$ を唱えます。 MP を $2$ 消費するので、残りの MP は $4 - 2 = 2$ になります。 魔法 $2$ を唱えるには MP が $4$ 必要なので、このままでは魔法 $2$ を唱えることはできません。 休憩します。時間が $4 - 2 = 2$ 秒経過します。 MP を $1$ 回復するので、残りの MP は $2 + 1 = 3$ になります。\n休憩します。時間が $4 - 3 = 1$ 秒経過します。 MP を $1$ 回復するので、残りの MP は $3 + 1 = 4$ になります。\n魔法 $2$ を唱えます。 MP を $4$ 消費するので、残りの MP は $4 - 4 = 0$ になります。 以上より、時間を $2 + 1 = 3$ 秒かければ、魔法 $1,2$ を $1$ 回ずつ唱えることができます。\nこれより短い時間ですべての魔法を唱えることはできないので、求める答えは $3$ となります。",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02219.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02219"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02236",
        "title": "Optimal Binary Search Tree",
        "description": "Optimal Binary Search Tree is a binary search tree constructed from $n$ keys and $n+1$ dummy keys so as to minimize the expected value of cost for a search operation. We are given a sequence $K = {k_1, k_2, ..., k_n}$ of $n$ distinct keys in sorted order $(k_1 < k_2 < ... < k_n)$, and we wish to construct a binary search tree. For each key $k_i$, we have a probability $p_i$ that a search will be for $k_i$. Some searches may be for values not in $K$, and so we also have $n+1$ dummy keys $d_0, d_1, d_2, ..., d_n$ representing values not in $K$. The dummy keys $d_i (0 \\le i \\le n)$ are defined as follows: For each dummy key $d_i$, we have a probability $q_i$ that a search will correspond to $d_i$.\nFor $p_i (1 \\le i \\le n)$ and $q_i (0 \\le i \\le n)$, we have \n\n  \\[\n  \\sum_{i=1}^n p_i + \\sum_{i=0}^n q_i = 1\n  \\]\n\n  Then the expected cost of a search in a binary search tree $T$ is\n\n  \\[\n  E_T = \\sum_{i=1}^n (depth_T(k_i) + 1) \\cdot p_i + \\sum_{i=0}^n (depth_T(d_i) + 1) \\cdot q_i\n  \\]\n\n  where $depth_T(v)$ is the depth of node $v$ in $T$.\n\n  For a given set of probabilities, our goal is to construct a binary search tree whose expected search cost is smallest. We call such a tree an optimal binary search tree. Write a program which calculates the expected value of a search operation on the optimal binary search tree obtained by given $p_i$ that a search will be for $k_i$ and $q_i$ that a search will correspond to $d_i$. In the first line, an integer $n$ which represents the number of keys is given.\nIn the second line, $p_i (1 \\le i \\le n)$ are given in real numbers with four decimal places.\nIn the third line, $q_i (0 \\le i \\le n)$ are given in real numbers with four decimal places. Print the expected value for a search operation on the optimal binary search tree in a line.\nThe output must not contain an error greater than $10^{−4}$.",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "array",
          "math",
          "sorting",
          "graph",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02236.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "$1 \\le n \\le 500$\n$0 \\lt p_i, q_i \\lt 1$\n$\\displaystyle \\sum_{i=1}^n p_i + \\sum_{i=0}^n q_i = 1$",
          "ranges": "1; 0; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n0.1500 0.1000 0.0500 0.1000 0.2000\n0.0500 0.1000 0.0500 0.0500 0.0500 0.1000",
            "output": "2.75000000",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02236.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02236"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02247",
        "title": "Naive String Search",
        "description": "Find places where a string P is found within a text T.\n  \n  Print all indices of T where P found. The indices of T start with 0. In the first line, a text T is given. In the second line, a string P is given. Print an index of T where P found in a line. Print the indices in ascending order. The ouput should be empty.",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "string",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02247.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ length of T ≤ 1000 \n 1 ≤ length of P ≤ 1000 \nThe input consists of alphabetical characters and digits",
          "ranges": "1000; 1000; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "aabaaa\naa",
            "output": "0\n3\n4",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02247.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02247"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02248",
        "title": "String Search",
        "description": "Find places where a string P is found within a text T.\n  Print all indices of T where P found. The indices of T start with 0. In the first line, a text T is given. In the second line, a string P is given. Print an index of T where P found in a line. Print the indices in ascending order. The output should be empty.",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "string",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02248.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ length of T ≤ 1000000 \n 1 ≤ length of P ≤ 10000 \nThe input consists of alphabetical characters and digits",
          "ranges": "1000000; 10000; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "aabaaa\naa",
            "output": "0\n3\n4",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02248.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02248"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02249",
        "title": "Pattern Search",
        "description": "Find places where a R × C pattern is found within a  H × W region. Print top-left coordinates (i, j) of sub-regions where the pattern found. The top-left and bottom-right coordinates of the region is (0, 0) and (H-1, W-1) respectively. In the first line, two integers H and W are given. In the following H lines, i-th lines of the region are given. In the next line, two integers R and C are given. In the following R lines, i-th lines of the pattern are given. For each sub-region found, print a coordinate i and j separated by a space character in a line. Print the coordinates in ascending order of the row numbers (i), or the column numbers (j) in case of a tie.",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "string",
          "math",
          "geometry",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02249.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ H, W ≤ 1000 \n 1 ≤ R, C ≤ 1000 \nThe input consists of alphabetical characters and digits",
          "ranges": "1000; 1000; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 5\n00010\n00101\n00010\n00100\n3 2\n10\n01\n10",
            "output": "0 3\n1 2",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02249.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02249"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02250",
        "title": "String Search",
        "description": "Determine whether a text T includes a pattern P. Your program should answer for given queries consisting of P_i. In the first line, a text T is given. In the second line, an integer Q denoting the number of queries is given. In the following Q lines, the patterns P_i are given respectively. For each question, print 1 if the text includes P_i, or print 0 otherwise.",
        "difficulty": "Medium",
        "category": "Arrays & Strings",
        "tags": [
          "string",
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02250.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ length of T ≤ 1000000 \n 1 ≤ length of P_i ≤ 1000 \n 1 ≤ Q ≤ 10000 \nThe input consists of alphabetical characters and digits",
          "ranges": "1 10000; 1000000; 1000; 10000; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "aabaaa\n4\naa\nba\nbb\nxyz",
            "output": "1\n1\n0\n0",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02250.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02250"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02255",
        "title": "Insertion Sort",
        "description": "Write a program of the Insertion Sort algorithm which sorts a sequence A in ascending order. The algorithm should be based on the following pseudocode: Note that, indices for array elements are based on 0-origin. To illustrate the algorithms, your program should trace intermediate result for each step. The first line of the input includes an integer N, the number of elements in the sequence. In the second line, N elements of the sequence are given separated by a single space. The output consists of N lines. Please output the intermediate sequence in a line for each step. Elements of the sequence should be separated by single space. 1 ≤ N ≤ 100",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "array",
          "math",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02255.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 100",
          "ranges": "1 100; 100; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "6\n5 2 4 6 1 3",
            "output": "5 2 4 6 1 3\n2 5 4 6 1 3\n2 4 5 6 1 3\n2 4 5 6 1 3\n1 2 4 5 6 3\n1 2 3 4 5 6",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02255.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02255"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02257",
        "title": "Prime Numbers",
        "description": "A prime number is a natural number which has exactly two distinct natural number divisors: 1 and itself. For example, the first four prime numbers are: 2, 3, 5 and 7. Write a program which reads a list of N integers and prints the number of prime numbers in the list. The first line contains an integer N, the number of elements in the list. N numbers are given in the following lines. Print the number of prime numbers in the given list. 1 ≤ N ≤ 10000 2 ≤ an element of the list ≤ 108",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "array",
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02257.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10000 2 ≤ an element of the list ≤ 108",
          "ranges": "1 10000; 10000; 108; 1; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n2\n3\n4\n5\n6",
            "output": "3",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02257.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02257"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02259",
        "title": "Bubble Sort",
        "description": "Write a program of the Bubble Sort algorithm which sorts a sequence A in ascending order. The algorithm should be based on the following pseudocode: Note that, indices for array elements are based on 0-origin. Your program should also print the number of swap operations defined in line 4 of the pseudocode. The first line of the input includes an integer N, the number of elements in the sequence. In the second line, N elements of the sequence are given separated by spaces characters. The output consists of 2 lines. In the first line, please print the sorted sequence. Two contiguous elements of the sequence should be separated by a space character. In the second line, please print the number of swap operations. 1 ≤ N ≤ 100",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "array",
          "string",
          "math",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02259.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 100",
          "ranges": "1 100; 100; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n5 3 2 4 1",
            "output": "1 2 3 4 5\n8",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02259.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02259"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02260",
        "title": "Selection Sort",
        "description": "Write a program of the Selection Sort algorithm which sorts a sequence A in ascending order. The algorithm should be based on the following pseudocode: Note that, indices for array elements are based on 0-origin. Your program should also print the number of swap operations defined in line 6 of the pseudocode in the case where i ≠ mini. The first line of the input includes an integer N, the number of elements in the sequence. In the second line, N elements of the sequence are given separated by space characters. The output consists of 2 lines. In the first line, please print the sorted sequence. Two contiguous elements of the sequence should be separated by a space character. In the second line, please print the number of swap operations. 1 ≤ N ≤ 100",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "array",
          "string",
          "math",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02260.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 100",
          "ranges": "1 100; 100; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "6\n5 6 4 2 1 3",
            "output": "1 2 3 4 5 6\n4",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02260.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02260"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02261",
        "title": "Stable Sort",
        "description": "Let's arrange a deck of cards. There are totally 36 cards of 4 suits(S, H, C, D) and 9 values (1, 2, ... 9). For example, 'eight of heart' is represented by H8 and 'one of diamonds' is represented by D1. Your task is to write a program which sorts a given set of cards in ascending order by their values using the Bubble Sort algorithms and the Selection Sort algorithm respectively. These algorithms should be based on the following pseudocode: Note that, indices for array elements are based on 0-origin. The first line contains an integer N, the number of cards. N cards are given in the following line. Each card is represented by two characters. Two consecutive cards are separated by a space character. In the first line, print the arranged cards provided by the Bubble Sort algorithm. Two consecutive cards should be separated by a space character. In the second line, print the stability (\"Stable\" or \"Not stable\") of this output. In the third line, print the arranged cards provided by the Selection Sort algorithm. Two consecutive cards should be separated by a space character. In the fourth line, print the stability (\"Stable\" or \"Not stable\") of this output. 1 ≤ N ≤ 36",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "array",
          "string",
          "math",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02261.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 36",
          "ranges": "1 36; 36; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\nH4 C9 S4 D2 C3",
            "output": "D2 C3 H4 S4 C9\nStable\nD2 C3 S4 H4 C9\nNot stable",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02261.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02261"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02263",
        "title": "Sample Input 1",
        "description": "Reverse Polish notation is a notation where every operator follows all of its operands. For example, an expression (1+2)*(5+4) in the conventional Polish notation can be represented as 1 2 + 5 4 + * in the Reverse Polish notation. One of advantages of the Reverse Polish notation is that it is parenthesis-free. Write a program which reads an expression in the Reverse Polish notation and prints the computational result. An expression in the Reverse Polish notation is calculated using a stack. To evaluate the expression, the program should read symbols in order. If the symbol is an operand, the corresponding value should be pushed into the stack. On the other hand, if the symbols is an operator, the program should pop two elements from the stack, perform the corresponding operations, then push the result in to the stack. The program should repeat this operations. An expression is given in a line. Two consequtive symbols (operand or operator) are separated by a space character. You can assume that +, - and * are given as the operator and an operand is a positive integer less than 106 Print the computational result in a line. 2 ≤ the number of operands in the expression ≤ 100\n1 ≤ the number of operators in the expression ≤ 99\n-1 × 109 ≤ values in the stack ≤ 109",
        "difficulty": "Medium",
        "category": "Math & Logic",
        "tags": [
          "string",
          "math",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02263.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ the number of operands in the expression ≤ 100\n1 ≤ the number of operators in the expression ≤ 99\n-1 × 109 ≤ values in the stack ≤ 109",
          "ranges": "100; 99; 109; 2; 1; 109"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1 2 +",
            "output": "3",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02263.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02263"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02264",
        "title": "Sample Input 1",
        "description": "There are n processes in a queue. Each process has namei and timei.  The round-robin scheduling handles the processes in order. A round-robin scheduler gives each process a quantum (a time slot) and interrupts the process if it is not completed by then. The process is resumed and moved to the end of the queue, then the scheduler handles the next process in the queue. For example, we have the following queue with the quantum of 100ms. First, process A is handled for 100ms, then the process is moved to the end of the queue with the remaining time (50ms). Next, process B is handled for 80ms. The process is completed with the time stamp of 180ms and removed from the queue. Your task is to write a program which simulates the round-robin scheduling. n q\nname1 time1\nname2 time2\n...\nnamen timen In the first line the number of processes n and the quantum q are given separated by a single space. In the following n lines, names and times for the n processes are given. namei and timei are separated by a single space. For each process, prints its name and the time the process finished in order.",
        "difficulty": "Medium",
        "category": "Simulation",
        "tags": [
          "math",
          "sorting",
          "simulation",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02264.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 100000\n1 ≤ q ≤ 1000\n1 ≤ timei ≤ 50000\n1 ≤ length of namei ≤ 10\n1 ≤ Sum of timei ≤ 1000000",
          "ranges": "1 100000; 1 1000; 1 50000; 100000; 1000; 50000; 10; 1000000; 1; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 100\np1 150\np2 80\np3 200\np4 350\np5 20",
            "output": "p2 180\np5 400\np1 450\np3 550\np4 800",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02264.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02264"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02265",
        "title": "Doubly Linked List",
        "description": "Your task is to implement a double linked list. Write a program which performs the following operations: The input is given in the following format: n\ncommand1 \ncommand2 \n...\ncommandn In the first line, the number of operations n is given. In the following n lines, the above mentioned operations are given in the following format: Print all the element (key) in the list after the given operations. Two consequtive keys should be separated by a single space.",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "array",
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02265.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "The number of operations ≤ 2,000,000\nThe number of delete operations ≤ 20\n0 ≤ value of a key ≤ 109\nThe number of elements in the list does not exceed 106\nFor a delete, deleteFirst or deleteLast operation, there is at least one element in the list.",
          "ranges": "2; 20; 109; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "7\ninsert 5\ninsert 2\ninsert 3\ninsert 1\ndelete 3\ninsert 6\ndelete 5",
            "output": "6 1 2",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02265.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02265"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02267",
        "title": "Search I",
        "description": "You are given a sequence of n integers S and a sequence of different q integers T. Write a program which outputs C, the number of integers in T which are also in the set S. In the first line n is given. In the second line, n integers are given. In the third line q is given. Then, in the fourth line, q integers are given. Print C in a line.",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "array",
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02267.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "n ≤ 10000\n q ≤ 500 \n0 ≤ an element in S ≤ 109\n0 ≤ an element in T ≤ 109",
          "ranges": "10000; 500; 109; 109; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n1 2 3 4 5\n3\n3 4 1",
            "output": "3",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02267.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02267"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02268",
        "title": "Search II",
        "description": "You are given a sequence of n integers S and a sequence of different q integers T. Write a program which outputs C, the number of integers in T which are also in the set S. In the first line n is given. In the second line, n integers are given. In the third line q is given. Then, in the fourth line, q integers are given. Print C in a line.",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "array",
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02268.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "Elements in S is sorted in ascending order\nn ≤ 100000\n q ≤ 50000 \n0 ≤ an element in S ≤ 109\n0 ≤ an element in T ≤ 109",
          "ranges": "100000; 50000; 109; 109; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n1 2 3 4 5\n3\n3 4 1",
            "output": "3",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02268.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02268"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02269",
        "title": "Search III",
        "description": "Your task is to write a program of a simple dictionary which implements the following instructions: In the first line n, the number of instructions is given. In the following n lines, n instructions are given in the above mentioned format. Print yes or no for each find instruction in a line.",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02269.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "A string consists of 'A', 'C', 'G', or 'T'\n1 ≤ length of a string ≤ 12\n n ≤ 1000000",
          "ranges": "12; 1000000; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\ninsert A\ninsert T\ninsert C\nfind G\nfind A",
            "output": "no\nyes",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02269.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02269"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02271",
        "title": "Exhaustive Search",
        "description": "Write a program which reads a sequence A of n elements and an integer M, and outputs \"yes\" if you can make M by adding elements in A, otherwise \"no\". You can use an element only once. You are given the sequence A and q questions where each question contains Mi. In the first line n is given. In the second line, n integers are given. In the third line q is given. Then, in the fourth line, q integers (Mi) are given. For each question Mi, print yes or no. You can solve this problem by a Burte Force approach. Suppose solve(p, t) is a function which checkes whether you can make t by selecting elements after p-th element (inclusive). Then you can recursively call the following functions: solve(0, M) \nsolve(1, M-{sum created from elements before 1st element}) \nsolve(2, M-{sum created from elements before 2nd element}) \n... The recursive function has two choices: you selected p-th element and not. So, you can check solve(p+1, t-A[p]) and solve(p+1, t) in solve(p, t) to check the all combinations. For example, the following figure shows that 8 can be made by A[0] + A[2].",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "array",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02271.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "n ≤ 20\n q ≤ 200 \n1 ≤ elements in A ≤ 2000\n1 ≤ Mi ≤ 2000",
          "ranges": "1 2000; 20; 200; 2000; 2000; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n1 5 7 10 21\n8\n2 4 17 8 22 21 100 35",
            "output": "no\nno\nyes\nyes\nyes\nyes\nno\nno",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02271.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02271"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02272",
        "title": "Merge Sort",
        "description": "Write a program of a Merge Sort algorithm implemented by the following pseudocode. You should also report the number of comparisons in the Merge function. In the first line n is given. In the second line, n integers are given. In the first line, print the sequence S. Two consequtive elements should be separated by a space character. In the second line, print the number of comparisons.",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "array",
          "string",
          "math",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02272.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "n ≤ 500000\n0 ≤ an element in S ≤ 109",
          "ranges": "500000; 109; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "10\n8 5 9 2 6 3 7 1 10 4",
            "output": "1 2 3 4 5 6 7 8 9 10\n34",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02272.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02272"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02273",
        "title": "Koch Curve",
        "description": "Write a program which reads an integer n and draws a Koch curve based on recursive calles of depth n. The Koch curve is well known as a kind of fractals. You can draw a Koch curve in the following algorithm: You should start (0, 0), (100, 0) as the first segment. An integer n is given. Print each point (x, y) of the Koch curve. Print a point in a line. You should start the point(0, 0), which is the endpoint of the first segment and end with the point (100, 0), the other endpoint so that you can draw the Koch curve as an unbroken line. Each solution should be given as a decimal with an arbitrary number of fractional digits, and with an absolute error of at most 10-4.",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02273.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0 ≤ n ≤ 6",
          "ranges": "0 6; 6; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1",
            "output": "0.00000000 0.00000000\n33.33333333 0.00000000\n50.00000000 28.86751346\n66.66666667 0.00000000\n100.00000000 0.00000000",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02273.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02273"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02275",
        "title": "Counting Sort",
        "description": "Counting sort can be used for sorting elements in an array which each of the n input elements is an integer in the range 0 to k. The idea of counting sort is to determine, for each input element x, the number of elements less than x as C[x]. This information can be used to place element x directly into its position in the output array B. This scheme must be modified to handle the situation in which several elements have the same value. Please see the following pseudocode for the detail: Write a program which sorts elements of given array ascending order based on the counting sort. The first line of the input includes an integer n, the number of elements in the sequence. In the second line, n elements of the sequence are given separated by spaces characters. Print the sorted sequence. Two contiguous elements of the sequence should be separated by a space character.",
        "difficulty": "Medium",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "string",
          "math",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02275.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 2,000,000\n0 ≤ A[i] ≤ 10,000",
          "ranges": "1 2; 2; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "7\n2 5 1 3 2 3 0",
            "output": "0 1 2 2 3 3 5",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02275.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02275"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02276",
        "title": "Partition",
        "description": "Quick sort is based on the Divide-and-conquer approach. In QuickSort(A, p, r), first, a procedure Partition(A, p, r) divides an array A[p..r] into two subarrays A[p..q-1] and A[q+1..r] such that each element of A[p..q-1] is less than or equal to A[q], which is, inturn, less than or equal to each element of A[q+1..r]. It also computes the index q. In the conquer processes, the two subarrays A[p..q-1] and A[q+1..r] are sorted by recursive calls of QuickSort(A, p, q-1) and QuickSort(A, q+1, r). Your task is to read a sequence A and perform the Partition based on the following pseudocode: The first line of the input includes an integer n, the number of elements in the sequence A. In the second line, Ai (i = 1,2,...,n), elements of the sequence are given separated by space characters. Print the sorted sequence. Two contiguous elements of the sequence should be separated by a space character. The element which is selected as the pivot of the partition should be indicated by [  ].",
        "difficulty": "Medium",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "string",
          "math",
          "sorting",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02276.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 100,000\n0 ≤ Ai ≤ 100,000",
          "ranges": "1 100; 0 100; 100; 100; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "12\n13 19 9 5 12 8 7 4 21 2 6 11",
            "output": "9 5 8 7 4 2 6 [11] 21 13 19 12",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02276.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02276"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02277",
        "title": "Quick Sort",
        "description": "Let's arrange a deck of cards. Your task is to sort totally n cards. A card consists of a part of a suit (S, H, C or D) and an number. Write a program which sorts such cards based on the following pseudocode: Here, A is an array which represents a deck of cards and comparison operations are performed based on the numbers. Your program should also report the stability of the output for the given input (instance). Here, 'stability of the output' means that: cards with the same value appear in the output in the same order as they do in the input (instance). The first line contains an integer n, the number of cards. n cards are given in the following lines. Each card is given in a line and represented by a pair of a character and an integer separated by a single space. In the first line, print the stability (\"Stable\" or \"Not stable\") of this output. In the following lines, print the arranged cards in the same manner of that of the input.",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "array",
          "string",
          "math",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02277.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 100,000\n1 ≤ the number of a card  ≤ 109\nThere are no identical card in the input",
          "ranges": "1 100; 100; 109; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "6\nD 3\nH 2\nD 1\nS 3\nD 2\nC 1",
            "output": "Not stable\nD 1\nC 1\nD 2\nH 2\nD 3\nS 3",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02277.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02277"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02279",
        "title": "Rooted Trees",
        "description": "A graph G = (V, E) is a data structure where V is a finite set of vertices and E is a binary relation on V represented by a set of edges. Fig. 1 illustrates an example of a graph (or graphs). A free tree is a connnected, acyclic, undirected graph. A rooted tree is a free tree in which one of the vertices is distinguished from the others. A vertex of a rooted tree is called \"node.\" Your task is to write a program which reports the following information for each node u of a given rooted tree T: If the last edge on the path from the root r of a tree T to a node x is (p, x), then p is the parent of x, and x is a child of p. The root is the only node in T with no parent. A node with no children is an external node or leaf. A nonleaf node is an internal node The number of children of a node x in a rooted tree T is called the degree of x. The length of the path from the root r to a node x is the depth of x in T. Here, the given tree consists of n nodes and evey node has a unique ID from 0 to n-1. Fig. 2 shows an example of rooted trees where ID of each node is indicated by a number in a circle (node). The example corresponds to the first sample input. The first line of the input includes an integer n, the number of nodes of the tree. In the next n lines, the information of each node u is given in the following format: id k c1 c2 ... ck where id is the node ID of u, k is the degree of u, c1 ... ck are node IDs of 1st, ... kth child of u. If the node does not have a child, the k is 0. Print the information of each node in the following format ordered by IDs: node id: parent = p, depth = d, type, [c1...ck] p is ID of its parent. If the node does not have a parent, print -1. d is depth of the node. type is a type of nodes represented by a string (root, internal node or leaf). If the root can be considered as a leaf or an internal node, print root. c1...ck is the list of children as a ordered tree. Please follow the format presented in a sample output below. You can use a left-child, right-sibling representation to implement a tree which has the following data: Introduction to Algorithms, Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein. The MIT Press.",
        "difficulty": "Medium",
        "category": "Trees & Graphs",
        "tags": [
          "array",
          "string",
          "math",
          "geometry",
          "sorting",
          "graph",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02279.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 100000",
          "ranges": "1 100000; 100000; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "13\n0 3 1 4 10\n1 2 2 3\n2 0\n3 0\n4 3 5 6 7\n5 0\n6 0\n7 2 8 9\n8 0\n9 0\n10 2 11 12\n11 0\n12 0",
            "output": "node 0: parent = -1, depth = 0, root, [1, 4, 10]\nnode 1: parent = 0, depth = 1, internal node, [2, 3]\nnode 2: parent = 1, depth = 2, leaf, []\nnode 3: parent = 1, depth = 2, leaf, []\nnode 4: parent = 0, depth = 1, internal node, [5, 6, 7]\nnode 5: parent = 4, depth = 2, leaf, []\nnode 6: parent = 4, depth = 2, leaf, []\nnode 7: parent = 4, depth = 2, internal node, [8, 9]\nnode 8: parent = 7, depth = 3, leaf, []\nnode 9: parent = 7, depth = 3, leaf, []\nnode 10: parent = 0, depth = 1, internal node, [11, 12]\nnode 11: parent = 10, depth = 2, leaf, []\nnode 12: parent = 10, depth = 2, leaf, []",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02279.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02279"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02280",
        "title": "Binary Tree",
        "description": "A rooted binary tree is a tree with a root node in which every node has at most two children. Your task is to write a program which reads a rooted binary tree T and prints the following information for each node u of T: If two nodes have the same parent, they are siblings. Here, if u and v have the same parent, we say u is a sibling of v (vice versa). The height of a node in a tree is the number of edges on the longest simple downward path from the node to a leaf. Here, the given binary tree consists of n nodes and evey node has a unique ID from 0 to n-1. The first line of the input includes an integer n, the number of nodes of the tree. In the next n lines, the information of each node is given in the following format: id left right id is the node ID, left is ID of the left child and right is ID of the right child. If the node does not have the left (right) child, the left(right) is indicated by -1. Print the information of each node in the following format: node id: parent = p, sibling = s, degree = deg, depth = dep, height = h, type p is ID of its parent. If the node does not have a parent, print -1. s is ID of its sibling. If the node does not have a sibling, print -1. deg, dep and h are the number of children, depth and height of the node respectively. type is a type of nodes represented by a string (root, internal node or leaf. If the root can be considered as a leaf or an internal node, print root. Please follow the format presented in a sample output below. Introduction to Algorithms, Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein. The MIT Press.",
        "difficulty": "Medium",
        "category": "Trees & Graphs",
        "tags": [
          "string",
          "math",
          "graph",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02280.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 25",
          "ranges": "1 25; 25; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "9\n0 1 4\n1 2 3\n2 -1 -1\n3 -1 -1\n4 5 8\n5 6 7\n6 -1 -1\n7 -1 -1\n8 -1 -1",
            "output": "node 0: parent = -1, sibling = -1, degree = 2, depth = 0, height = 3, root\nnode 1: parent = 0, sibling = 4, degree = 2, depth = 1, height = 1, internal node\nnode 2: parent = 1, sibling = 3, degree = 0, depth = 2, height = 0, leaf\nnode 3: parent = 1, sibling = 2, degree = 0, depth = 2, height = 0, leaf\nnode 4: parent = 0, sibling = 1, degree = 2, depth = 1, height = 2, internal node\nnode 5: parent = 4, sibling = 8, degree = 2, depth = 2, height = 1, internal node\nnode 6: parent = 5, sibling = 7, degree = 0, depth = 3, height = 0, leaf\nnode 7: parent = 5, sibling = 6, degree = 0, depth = 3, height = 0, leaf\nnode 8: parent = 4, sibling = 5, degree = 0, depth = 2, height = 0, leaf",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02280.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02280"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02281",
        "title": "Tree Walk",
        "description": "Binary trees are defined recursively. A binary tree T is a structure defined on a finite set of nodes that either Your task is to write a program which perform tree walks (systematically traverse all nodes in a tree) based on the following algorithms: Here, the given binary tree consists of n nodes and evey node has a unique ID from 0 to n-1. The first line of the input includes an integer n, the number of nodes of the tree. In the next n linen, the information of each node is given in the following format: id left right id is the node ID, left is ID of the left child and right is ID of the right child. If the node does not have the left (right) child, the left(right) is indicated by -1 In the 1st line, print \"Preorder\", and in the 2nd line print a list of node IDs obtained by the preorder tree walk. In the 3rd line, print \"Inorder\", and in the 4th line print a list of node IDs obtained by the inorder tree walk. In the 5th line, print \"Postorder\", and in the 6th line print a list of node IDs obtained by the postorder tree walk. Print a space character before each node ID. Introduction to Algorithms, Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein. The MIT Press.",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "array",
          "string",
          "math",
          "sorting",
          "graph",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02281.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 25",
          "ranges": "1 25; 25; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "9\n0 1 4\n1 2 3\n2 -1 -1\n3 -1 -1\n4 5 8\n5 6 7\n6 -1 -1\n7 -1 -1\n8 -1 -1",
            "output": "Preorder\n 0 1 2 3 4 5 6 7 8\nInorder\n 2 1 3 0 6 5 7 4 8\nPostorder\n 2 3 1 6 7 5 8 4 0",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02281.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02281"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02290",
        "title": "Projection",
        "description": "For given three points p1, p2, p, find the projection point x of p onto p1p2. In the first line, integer coordinates of p1 and p2 are given. Then, q queries are given for integer coordinates of p. For each query, print the coordinate of the projection point x. The output values should be in a decimal fraction with an error less than 0.00000001.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "geometry",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02290.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ q ≤ 1000\n\n\n-10000 ≤ xi, yi ≤ 10000\n\n\np1 and p2 are not identical.",
          "ranges": "1 1000; 1000; 10000; 1; 10000"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "0 0 2 0\n3\n-1 1\n0 1\n1 1",
            "output": "-1.0000000000 0.0000000000\n0.0000000000 0.0000000000\n1.0000000000 0.0000000000",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02290.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02290"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02291",
        "title": "Reflection",
        "description": "For given three points p1, p2, p, find the reflection point x of p onto p1p2. In the first line, integer coordinates of p1 and p2 are given. Then, q queries are given for integer coordinates of p. For each query, print the coordinate of the reflection point x. The output values should be in a decimal fraction with an error less than 0.00000001.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "geometry",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02291.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ q ≤ 1000\n\n\n-10000 ≤ xi, yi ≤ 10000\n\n\np1 and p2 are not identical.",
          "ranges": "1 1000; 1000; 10000; 1; 10000"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "0 0 2 0\n3\n-1 1\n0 1\n1 1",
            "output": "-1.0000000000 -1.0000000000\n0.0000000000 -1.0000000000\n1.0000000000 -1.0000000000",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02291.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02291"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02292",
        "title": "Counter-Clockwise",
        "description": "For given three points p0, p1, p2, print if p0, p1, p2 make a counterclockwise turn (1), if p0, p1, p2 make a clockwise turn (2), if p2 is on a line p2, p0, p1 in this order (3), if p2 is on a line p0, p1, p2 in this order (4), if p2 is on a segment p0p1 (5). In the first line, integer coordinates of p0 and p1 are given. Then, q queries are given for integer coordinates of p2. For each query, print the above mentioned status.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "geometry",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02292.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ q ≤ 1000\n\n\n-10000 ≤ xi, yi ≤ 10000\n\n\np0 and p1 are not identical.",
          "ranges": "1 1000; 1000; 10000; 1; 10000"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "0 0 2 0\n2\n-1 1\n-1 -1",
            "output": "COUNTER_CLOCKWISE\nCLOCKWISE",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02292.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02292"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02293",
        "title": "Parallel/Orthogonal",
        "description": "For given two lines s1 and s2, print \"2\" if they are parallel, \"1\" if they are orthogonal, or \"0\" otherwise. s1 crosses points p0 and p1, and\ns2 crosses points p2 and p3. The entire input looks like: Each query consists of integer coordinates of the points p0, p1, p2, p3 in the following format: For each query, print \"2\", \"1\" or \"0\".",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "geometry"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02293.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ q ≤ 1000\n\n\n-10000 ≤ xpi, ypi ≤ 10000\n\n\np0 ≠ p1 and\np2 ≠ p3.",
          "ranges": "1 1000; 1000; 10000; 1; 10000"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n0 0 3 0 0 2 3 2\n0 0 3 0 1 1 1 4\n0 0 3 0 1 1 2 2",
            "output": "2\n1\n0",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02293.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02293"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02294",
        "title": "Intersection",
        "description": "For given two segments s1 and s2, print \"1\" if they are intersect, \"0\" otherwise. s1 is formed by end points p0 and p1, and\ns2 is formed by end points p2 and p3. The entire input looks like: Each query consists of integer coordinates of end points of s1 and s2 in the following format: For each query, print \"1\" or \"0\".",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "geometry"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02294.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ q ≤ 1000\n\n\n-10000 ≤ xpi, ypi ≤ 10000\n\n\np0 ≠ p1 and\np2 ≠ p3.",
          "ranges": "1 1000; 1000; 10000; 1; 10000"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n0 0 3 0 1 1 2 -1\n0 0 3 0 3 1 3 -1\n0 0 3 0 3 -2 5 0",
            "output": "1\n1\n0",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02294.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02294"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02295",
        "title": "Cross Point",
        "description": "For given two segments s1 and s2, print the coordinate of the cross point of them. s1 is formed by end points p0 and p1, and\ns2 is formed by end points p2 and p3. The entire input looks like: Each query consists of integer coordinates of end points of s1 and s2 in the following format: For each query, print the coordinate of the cross point. The output values should be in a decimal fraction with an error less than 0.00000001.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "geometry",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02295.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ q ≤ 1000\n\n\n-10000 ≤ xpi, ypi ≤ 10000\n\n\np0 ≠ p1 and\np2 ≠ p3.\n\n\nThe given segments have a cross point and are not in parallel.",
          "ranges": "1 1000; 1000; 10000; 1; 10000"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n0 0 2 0 1 1 1 -1\n0 0 1 1 0 1 1 0\n0 0 1 1 1 0 0 1",
            "output": "1.0000000000 0.0000000000\n0.5000000000 0.5000000000\n0.5000000000 0.5000000000",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02295.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02295"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02296",
        "title": "Distance",
        "description": "For given two segments s1 and s2, print the distance between them. s1 is formed by end points p0 and p1, and\ns2 is formed by end points p2 and p3. The entire input looks like: Each query consists of integer coordinates of end points of s1 and s2 in the following format: For each query, print the distance. The output values should be in a decimal fraction with an error less than 0.00000001.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "geometry",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02296.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ q ≤ 1000\n\n\n-10000 ≤ xpi, ypi ≤ 10000\n\n\np0 ≠ p1 and\np2 ≠ p3.",
          "ranges": "1 1000; 1000; 10000; 1; 10000"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n0 0 1 0 0 1 1 1\n0 0 1 0 2 1 1 2\n-1 0 1 0 0 1 0 -1",
            "output": "1.0000000000\n1.4142135624\n0.0000000000",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02296.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02296"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02297",
        "title": "Area",
        "description": "For a given polygon g, computes the area of the polygon. g is represented by a sequence of points p1, p2,..., pn where line segments connecting pi and pi+1 (1 ≤ i ≤ n-1) are sides of g. The line segment connecting pn and p1 is also a side of the polygon. Note that the polygon is not necessarily convex. The input consists of coordinates of the points p1,..., pn in the following format: The first integer n is the number of points. The coordinate of a point pi is given by two integers xi and yi. The coordinates of points are given in the order of counter-clockwise visit of them. Print the area of the polygon in a line. The area should be printed with one digit to the right of the decimal point.",
        "difficulty": "Medium",
        "category": "Math & Logic",
        "tags": [
          "array",
          "math",
          "geometry",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02297.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3 ≤ n ≤ 100\n\n\n-10000 ≤ xi, yi ≤ 10000\n\nNo point will occur more than once.\nTwo sides can intersect only at a common endpoint.",
          "ranges": "3 100; 100; 10000; 3; 10000"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n0 0\n2 2\n-1 1",
            "output": "2.0",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02297.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02297"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02298",
        "title": "Is-Convex",
        "description": "For a given polygon g, print \"1\" if g is a convex polygon, \"0\" otherwise. Here, in a convex polygon, all interior angles are less than or equal to 180 degrees. g is represented by a sequence of points p1, p2,..., pn where line segments connecting pi and pi+1 (1 ≤ i ≤ n-1) are sides of the polygon. The line segment connecting pn and p1 is also a side of the polygon. g is given by coordinates of the points p1,..., pn in the following format: The first integer n is the number of points. The coordinate of a point pi is given by two integers xi and yi. The coordinates of points are given in the order of counter-clockwise visit of them. Print \"1\" or \"0\" in a line.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "array",
          "math",
          "geometry",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02298.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3 ≤ n ≤ 100\n\n\n-10000 ≤ xi, yi ≤ 10000\n\nNo point of the polygon will occur more than once.\nTwo sides of the polygon can intersect only at a common endpoint.",
          "ranges": "3 100; 100; 10000; 3; 10000"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n0 0\n3 1\n2 3\n0 3",
            "output": "1",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02298.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02298"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02299",
        "title": "Polygon-Point-Containment",
        "description": "For a given polygon g and target points t, print \"2\" if g contains t, \"1\" if t is on a segment of g, \"0\" otherwise. g is represented by a sequence of points p1, p2,..., pn where line segments connecting pi and pi+1 (1 ≤ i ≤ n-1) are sides of the polygon. The line segment connecting pn and p1 is also a side of the polygon. Note that the polygon is not necessarily convex. The entire input looks like: g is given by coordinates of the points p1,..., pn in the following format: The first integer n is the number of points. The coordinate of a point pi is given by two integers xi and yi. The coordinates of points are given in the order of counter-clockwise visit of them. Each query consists of the coordinate of a target point t. The coordinate is given by two intgers x and y. For each query, print \"2\", \"1\" or \"0\".",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "array",
          "math",
          "geometry",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02299.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3 ≤ n ≤ 100\n\n\n1 ≤ q ≤ 1000\n\n\n-10000 ≤ xi, yi ≤ 10000\n\nNo point of the polygon will occur more than once.\nTwo sides of the polygon can intersect only at a common endpoint.",
          "ranges": "3 100; 1 1000; 100; 1000; 10000; 3; 1; 10000"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n0 0\n3 1\n2 3\n0 3\n3\n2 1\n0 2\n3 2",
            "output": "2\n1\n0",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02299.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02299"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02300",
        "title": "Convex Hull",
        "description": "Find the convex hull of a given set of points P. In other words, find the smallest convex polygon containing all the points of P. Here, in a convex polygon, all interior angles are less than or equal to 180 degrees. Please note that you should find all the points of P on both corner and boundary of the convex polygon. The first integer n is the number of points in P. The coordinate of the i-th point pi is given by two integers xi and yi. In the first line, print the number of points on the corner/boundary of the convex polygon. In the following lines, print x y coordinates of the set of points.\nThe coordinates should be given in the order of counter-clockwise visit of them starting from the point in P with the minimum y-coordinate, or the leftmost such point in case of a tie.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02300.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3 ≤ n ≤ 100000\n\n\n-10000 ≤ xi, yi ≤ 10000\n\nNo point in the P will occur more than once.",
          "ranges": "3 100000; 100000; 10000; 3; 10000"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "7\n2 1\n0 0\n1 2\n2 2\n4 2\n1 3\n3 3",
            "output": "5\n0 0\n2 1\n4 2\n3 3\n1 3",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02300.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02300"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02301",
        "title": "Diameter of a Convex Polygon",
        "description": "Find the diameter of a convex polygon g. In other words, find a pair of points that have maximum distance between them. The first integer n is the number of points in g. In the following lines, the coordinate of the i-th point pi is given by two real numbers xi and yi. The coordinates of points are given in the order of counter-clockwise visit of them. Each value is a real number with at most 6 digits after the decimal point. Print the diameter of g in a line. The output values should be in a decimal fraction with an error less than 0.000001.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02301.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3 ≤ n ≤ 80000\n\n\n-100 ≤ xi, yi ≤ 100\n\nNo point in the g will occur more than once.",
          "ranges": "3 80000; 80000; 100; 3; 100"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n0.0 0.0\n4.0 0.0\n2.0 2.0",
            "output": "4.00",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02301.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02301"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02302",
        "title": "Convex Cut",
        "description": "As shown in the figure above, cut a convex polygon g by a line p1p2 and print the area of the cut polygon which is on the left-hand side of the line. g is represented by a sequence of points p1, p2,..., pn where line segments connecting pi and pi+1 (1 ≤ i ≤ n−1) are sides of the convex polygon. The line segment connecting pn and p1 is also a side of the polygon. The input is given in the following format: g is given as a sequence of points p1,..., pn in the following format: The first integer n is the number of points. The coordinate of the i-th point pi is given by two integers xi and yi. The coordinates of points are given in the order of counter-clockwise visit of them. Note that all interior angles of given convex polygons are less than or equal to 180. For each query, a line represented by two points p1 and p2 is given. The coordinates of the points are given by four integers p1x, p1y, p2x and p2y. For each query, print the area of the cut polygon. The output values should be in a decimal fraction with an error less than 0.00001.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "array",
          "math",
          "geometry",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02302.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3 ≤ n ≤ 100\n\n\n1 ≤ q ≤ 100\n\n-10000 ≤ xi, yi ≤ 10000\n-10000 ≤ p1x,p1y,p2x,p2y ≤ 10000\nNo point in g will occur more than once.\np1 ≠ p2",
          "ranges": "3 100; 1 100; 100; 100; 10000; 10000; 3; 1; 10000; 10000"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n1 1\n4 1\n4 3\n1 3\n2\n2 0 2 4\n2 4 2 0",
            "output": "2.00000000\n4.00000000",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02302.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02302"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02303",
        "title": "Closest Pair",
        "description": "For given n points in metric space, find the distance of the closest points. The first integer n is the number of points. In the following n lines, the coordinate of the i-th point is given by two real numbers xi and yi. Each value is a real number with at most 6 digits after the decimal point. Print the distance in a line. The output values should be in a decimal fraction with an error less than 0.000001.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02303.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ n ≤ 100,000\n-100 ≤ x, y ≤ 100",
          "ranges": "2 100; 100; 100; 2; 100"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\n0.0 0.0\n1.0 0.0",
            "output": "1.000000",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02303.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02303"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02314",
        "title": "Coin Changing Problem",
        "description": "Find the minimum number of coins to make change for n cents using coins of denominations d1, d2,.., dm. The coins can be used any number of times. Two integers n and m are given in the first line. The available denominations are given in the second line. Print the minimum number of coins in a line.",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02314.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 50000\n\n\n1 ≤ m ≤ 20\n\n\n1 ≤ denomination ≤ 10000\n\n\nThe denominations are all different and contain 1.",
          "ranges": "1 50000; 1 20; 1 10000; 50000; 20; 10000; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "55 4\n1 5 10 50",
            "output": "2",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02314.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02314"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02315",
        "title": "0-1 Knapsack Problem",
        "description": "You have N items that you want to put them into a knapsack. Item i has value vi and weight wi. You want to find a subset of items to put such that: Find the maximum total value of items in the knapsack. The first line consists of the integers N and W. In the following lines, the value and weight of the i-th item are given. Print the maximum total values of the items in a line.",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02315.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 100\n 1 ≤ vi ≤ 1000\n 1 ≤ wi ≤ 1000\n 1 ≤ W ≤ 10000",
          "ranges": "1 100; 1 1000; 1 1000; 1 10000; 100; 1000; 1000; 10000; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 5\n4 2\n5 2\n2 1\n8 3",
            "output": "13",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02315.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02315"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02316",
        "title": "Knapsack Problem",
        "description": "You have N kinds of items that you want to put them into a knapsack. Item i has value vi and weight wi. You want to find a subset of items to put such that: Find the maximum total value of items in the knapsack. The first line consists of the integers N and W. In the following lines, the value and weight of the i-th item are given. Print the maximum total values of the items in a line.",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02316.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 100\n 1 ≤ vi ≤ 1000\n 1 ≤ wi ≤ 1000\n 1 ≤ W ≤ 10000",
          "ranges": "1 100; 1 1000; 1 1000; 1 10000; 100; 1000; 1000; 10000; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 8\n4 2\n5 2\n2 1\n8 3",
            "output": "21",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02316.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02316"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02317",
        "title": "Longest Increasing Subsequence",
        "description": "For a given sequence A = {a0, a1, ... , an-1}, find the length of the longest increasing subsequnece (LIS) in A. An increasing subsequence of A is defined by a subsequence {ai0, ai1, ... , aik} where 0 ≤ i0 < i1 < ... < ik < n and ai0 < ai1 < ... < aik. In the first line, an integer n is given. In the next n lines, elements of A are given. The length of the longest increasing subsequence of A.",
        "difficulty": "Medium",
        "category": "Arrays & Strings",
        "tags": [
          "array"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02317.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 100000\n0 ≤ ai ≤ 109",
          "ranges": "1 100000; 0 109; 100000; 109; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n5\n1\n3\n2\n4",
            "output": "3",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02317.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02317"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02318",
        "title": "Edit Distance (Levenshtein Distance)",
        "description": "Find the edit distance between given two words s1 and s2. The disntace is the minimum number of single-character edits required to change one word into the other. The edits including the following operations: Two words s1 and s2 are given in the first line and the second line respectively. The words will consist of lower case characters. Print the edit distance in a line.",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "string",
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02318.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ length of s1 ≤ 1000\n1 ≤ length of s2 ≤ 1000",
          "ranges": "1000; 1000; 1; 1; 1; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "acac\nacm",
            "output": "2",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02318.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02318"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02319",
        "title": "0-1 Knapsack Problem II",
        "description": "You have N items that you want to put them into a knapsack. Item i has value vi and weight wi. You want to find a subset of items to put such that: Find the maximum total value of items in the knapsack. The first line consists of the integers N and W. In the following N lines, the value and weight of the i-th item are given. Print the maximum total values of the items in a line.",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02319.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 100\n 1 ≤ vi ≤ 100\n 1 ≤ wi ≤ 10,000,000\n 1 ≤ W ≤ 1,000,000,000",
          "ranges": "1 100; 1 100; 1 10; 1 1; 100; 100; 10; 1; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 5\n4 2\n5 2\n2 1\n8 3",
            "output": "13",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02319.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02319"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02320",
        "title": "Knapsack Problem with Limitations",
        "description": "You have N items that you want to put them into a knapsack. Item i has value vi, weight wi and limitation mi. You want to find a subset of items to put such that: Find the maximum total value of items in the knapsack. The first line consists of the integers N and W. In the following N lines, the value, weight and limitation of the i-th item are given. Print the maximum total values of the items in a line.",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02320.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 100\n 1 ≤ vi ≤ 1,000\n 1 ≤ wi ≤ 1,000\n 1 ≤ mi ≤ 10,000\n 1 ≤ W ≤ 10,000",
          "ranges": "1 100; 1 1; 1 1; 1 10; 1 10; 100; 1; 1; 10; 10; 1; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 8\n4 3 2\n2 1 1\n1 2 4\n3 2 2",
            "output": "12",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02320.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02320"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02321",
        "title": "Huge Knapsack Problem",
        "description": "You have N items that you want to put them into a knapsack. Item i has value vi and weight wi. You want to find a subset of items to put such that: Find the maximum total value of items in the knapsack. The first line consists of the integers N and W. In the following N lines, the value and weight of the i-th item are given. Print the maximum total values of the items in a line.",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02321.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 40\n 1 ≤ vi ≤ 1015\n 1 ≤ wi ≤ 1015\n 1 ≤ W ≤ 1015",
          "ranges": "1 40; 1 1015; 1 1015; 1 1015; 40; 1015; 1015; 1015; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 5\n4 2\n5 2\n2 1\n8 3",
            "output": "13",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02321.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02321"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02323",
        "title": "Traveling Salesman Problem",
        "description": "For a given weighted directed graph G(V, E), find the distance of the shortest route that meets the following criteria: |V| is the number of vertices and |E| is the number of edges in the graph. The graph vertices are named with the numbers 0, 1,..., |V|-1 respectively. si and ti represent source and target vertices of i-th edge (directed) and di represents the distance between si and ti (the i-th edge). Print the shortest distance in a line. If there is no solution, print -1.",
        "difficulty": "Medium",
        "category": "Trees & Graphs",
        "tags": [
          "math",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02323.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ |V| ≤ 15\n 0 ≤ di ≤ 1,000\n There are no multiedge",
          "ranges": "0 1; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 6\n0 1 2\n1 2 3\n1 3 9\n2 0 1\n2 3 6\n3 2 4",
            "output": "16",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02323.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02323"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02324",
        "title": "Chinese Postman Problem",
        "description": "For a given weighted undirected graph G(V, E), find the distance of the shortest route that meets the following criteria: , where |V| is the number of vertices and |E| is the number of edges in the graph. The graph vertices are named with the numbers 0, 1,..., |V|-1 respectively. si and ti represent source and target verticess of i-th edge (undirected) and di represents the distance between si and ti (the i-th edge). Note that there can be multiple edges between a pair of vertices. Print the shortest distance in a line.",
        "difficulty": "Medium",
        "category": "Trees & Graphs",
        "tags": [
          "math",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02324.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ |V| ≤ 15\n0 ≤ |E| ≤ 1,000\n0 ≤ di ≤ 1,000\n si ≠ ti\nThe graph is connected",
          "ranges": "0 1; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 4\n0 1 1\n0 2 2\n1 3 3\n2 3 4",
            "output": "10",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02324.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02324"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02326",
        "title": "Largest Square",
        "description": "Given a matrix (H × W) which contains only 1 and 0, find the area of the largest square matrix which only contains 0s. In the first line, two integers H and W separated by a space character are given. In the following H lines, ci,j, elements of the H × W matrix, are given. Print the area (the number of 0s) of the largest square.",
        "difficulty": "Medium",
        "category": "Arrays & Strings",
        "tags": [
          "string",
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02326.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ H, W ≤ 1,400",
          "ranges": "1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 5\n0 0 1 0 0\n1 0 0 0 0\n0 0 0 1 0\n0 0 0 1 0",
            "output": "4",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02326.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02326"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02327",
        "title": "Largest Rectangle",
        "description": "Given a matrix (H × W) which contains only 1 and 0, find the area of the largest rectangle which only contains 0s. In the first line, two integers H and W separated by a space character are given. In the following H lines, ci,j, elements of the H × W matrix, are given. Print the area (the number of 0s) of the largest rectangle.",
        "difficulty": "Medium",
        "category": "Arrays & Strings",
        "tags": [
          "string",
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02327.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ H, W ≤ 1,400",
          "ranges": "1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 5\n0 0 1 0 0\n1 0 0 0 0\n0 0 0 1 0\n0 0 0 1 0",
            "output": "6",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02327.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02327"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02329",
        "title": "Coin Combination Problem",
        "description": "You have 4 bags A, B, C and D each of which includes N coins (there are totally 4N coins). Values of the coins in each bag are ai, bi, ci and di respectively. Find the number of combinations that result when you choose one coin from each bag (totally 4 coins) in such a way that the total value of the coins is V. You should distinguish the coins in a bag. The input is given in the following format. Print the number of combinations in a line.",
        "difficulty": "Medium",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02329.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 1000 \n  1 ≤ ai, bi, ci, di ≤ 1016\n  1 ≤ V ≤ 1016\n All input values are given in integers",
          "ranges": "1 1000; 1 1016; 1000; 1016; 1016; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 14\n3 1 2\n4 8 2\n1 2 3\n7 3 2",
            "output": "9",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02329.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02329"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02330",
        "title": "Coin Combination Problem II",
        "description": "You have N coins each of which has a value ai.\nFind the number of combinations that result when you choose K different coins in such a way that the total value of the coins is greater than or equal to L and less than or equal to R. The input is given in the following format. Print the number of combinations in a line.",
        "difficulty": "Medium",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02330.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ K ≤ N ≤ 40 \n  1 ≤ ai ≤ 1016\n  1 ≤ L ≤ R ≤ 1016\n All input values are given in integers",
          "ranges": "1 1016; 40; 1016; 1016; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 2 1 9\n5 1",
            "output": "1",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02330.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02330"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02343",
        "title": "Disjoint Set",
        "description": "Write a program which manipulates a disjoint set S = {S1, S2, . . . , Sk}. First of all, the program should read an integer n, then make a disjoint set where each element consists of 0, 1, ... n−1 respectively. Next, the program should read an integer q and manipulate the set for q queries. There are two kinds of queries for different operations: In the first line, n and q are given. Then, q queries are given where com represents the type of queries. '0' denotes unite and '1' denotes same operation. For each same operation, print 1 if x and y are in the same set, otherwise 0, in a line.",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02343.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 10000\n\n\n1 ≤ q ≤ 100000\n\n\nx ≠ y",
          "ranges": "1 10000; 1 100000; 10000; 100000; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 12\n0 1 4\n0 2 3\n1 1 2\n1 3 4\n1 1 4\n1 3 2\n0 1 3\n1 2 4\n1 3 0\n0 0 4\n1 0 2\n1 3 0",
            "output": "0\n0\n1\n1\n1\n0\n1\n1",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02343.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02343"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02345",
        "title": "Range Minimum Query (RMQ)",
        "description": "Write a program which manipulates a sequence A = {a0, a1, . . .  , an-1} with the following operations: Note that the initial values of ai (i = 0, 1, . . .  , n−1) are  231-1. In the first line, n (the number of elements in A) and q (the number of queries) are given. Then, q queries are given where com represents the type of queries. '0' denotes update(xi, yi) and '1' denotes find(xi, yi). For each find operation, print the minimum element.",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "array",
          "math",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02345.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 100000\n\n\n1 ≤ q ≤ 100000\n\n\nIf comi is 0, then 0 ≤ xi < n, 0 ≤ yi < 231-1.\n\n\nIf comi is 1, then 0 ≤ xi < n, 0 ≤ yi < n.",
          "ranges": "1 100000; 1 100000; 0 231; 100000; 100000; 231; 1; 1; 0; 0; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 5\n0 0 1\n0 1 2\n0 2 3\n1 0 2\n1 1 2",
            "output": "1\n2",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02345.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02345"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02346",
        "title": "Range Sum Query",
        "description": "Write a program which manipulates a sequence A = {a1, a2, . . . , an} with the following operations: Note that the initial values of ai (i = 1, 2, . . . , n) are 0. In the first line, n (the number of elements in A) and q (the number of queries) are given. Then, q queries are given where com represents the type of queries. '0' denotes add(xi, yi) and '1' denotes getSum(xi, yi). For each getSum operation, print the sum in a line.",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "array",
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02346.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 100000\n\n\n1 ≤ q ≤ 100000\n\n\nIf comi is 0, then 1 ≤ xi ≤ n, 0 ≤ yi ≤ 1000.\n\n\nIf comi is 1, then 1 ≤ xi ≤ n, 1 ≤ yi ≤ n.",
          "ranges": "1 100000; 1 100000; 0 1000; 100000; 100000; 1000; 1; 1; 1; 0; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 5\n0 1 1\n0 2 2\n0 3 3\n1 1 2\n1 2 2",
            "output": "3\n2",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02346.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02346"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02347",
        "title": "Range Search (kD Tree)",
        "description": "The range search problem consists of a set of attributed records S to determine which records from  S intersect with a given range. For n points on a plane, report a set of points which are within in a given range. Note that you do not need to consider insert and delete operations for the set. The first integer n is the number of points. In the following n lines, the coordinate of the i-th point is given by two integers xi and yi. The next integer q is the number of queries. In the following q lines, each query is given by four integers, \nsxi, \ntxi, \nsyi, \ntyi. For each query, report IDs of points such that \nsxi ≤ x ≤ txi and\nsyi ≤ y ≤ tyi.\nThe IDs should be reported in ascending order. Print an ID in a line, and print a blank line at the end of output for the each query.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry",
          "sorting",
          "graph",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02347.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0 ≤ n ≤ 500,000\n0 ≤ q ≤ 20,000\n-1,000,000,000 ≤ x, y, sx, tx, sy, ty ≤ 1,000,000,000\nsx ≤ tx\nsy ≤ ty\nFor each query, the number of points which are within the range is less than or equal to 100.",
          "ranges": "0 500; 0 20; 500; 20; 1; 0; 0; 000"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "6\n2 1\n2 2\n4 2\n6 2\n3 3\n5 4\n2\n2 4 0 4\n4 10 2 5",
            "output": "0\n1\n2\n4\n\n2\n3\n5",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02347.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02347"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02348",
        "title": "Range Update Query (RUQ)",
        "description": "Write a program which manipulates a sequence A = {a0, a1, . . .  , an−1} with the following operations: Note that the initial values of ai (i = 0, 1, . . .  , n−1) are  231-1. In the first line, n (the number of elements in A) and q (the number of queries) are given. Then, ith query queryi is given in the following format: or The first digit represents the type of the query. '0' denotes update(s, t, x) and '1' denotes find(i). For each find operation, print the value.",
        "difficulty": "Medium",
        "category": "Math & Logic",
        "tags": [
          "array",
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02348.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 100000\n\n\n1 ≤ q ≤ 100000\n\n\n0 ≤ s ≤ t < n\n\n\n0 ≤ i < n\n\n\n0 ≤ x < 231−1",
          "ranges": "1 100000; 1 100000; 0 231; 100000; 100000; 231; 1; 1; 0; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 5\n0 0 1 1\n0 1 2 3\n0 2 2 2\n1 0\n1 1",
            "output": "1\n3",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02348.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02348"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02349",
        "title": "Range Add Query (RAQ)",
        "description": "Write a program which manipulates a sequence A = {a1, a2, . . .  , an} with the following operations: Note that the initial values of ai (i = 1, 2, . . .  , n) are 0. In the first line, n (the number of elements in A) and q (the number of queries) are given. Then, ith query queryi is given in the following format: or The first digit represents the type of the query. '0' denotes add(s, t, x) and '1' denotes get(i). For each get operation, print the value.",
        "difficulty": "Medium",
        "category": "Math & Logic",
        "tags": [
          "array",
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02349.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 100000\n\n\n1 ≤ q ≤ 100000\n\n\n1 ≤ s ≤ t ≤ n\n\n\n1 ≤ i ≤ n\n\n\n0 ≤ x ≤ 1000",
          "ranges": "1 100000; 1 100000; 0 1000; 100000; 100000; 1000; 1; 1; 1; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 5\n0 1 2 1\n0 2 3 2\n0 3 3 3\n1 2\n1 3",
            "output": "3\n5",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02349.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02349"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02350",
        "title": "RMQ and RUQ",
        "description": "Write a program which manipulates a sequence A = {a0, a1, . . .  , an−1} with the following operations: Note that the initial values of ai (i = 0, 1, . . .  , n−1) are 231-1. In the first line, n (the number of elements in A) and q (the number of queries) are given. Then, ith query queryi is given in the following format: or The first digit represents the type of the query. '0' denotes update(s, t, x) and '1' denotes find(s, t). For each find operation, print the minimum value.",
        "difficulty": "Medium",
        "category": "Math & Logic",
        "tags": [
          "array",
          "math",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02350.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 100000\n\n\n1 ≤ q ≤ 100000\n\n\n0 ≤ s ≤ t < n\n\n\n0 ≤ x < 231−1",
          "ranges": "1 100000; 1 100000; 0 231; 100000; 100000; 231; 1; 1; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 5\n0 0 1 1\n0 1 2 3\n0 2 2 2\n1 0 2\n1 1 2",
            "output": "1\n2",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02350.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02350"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02351",
        "title": "RSQ and RAQ",
        "description": "Write a program which manipulates a sequence A = {a1, a2, . . .  , an} with the following operations: Note that the initial values of ai (i = 1, 2, . . .  , n) are 0. In the first line, n (the number of elements in A) and q (the number of queries) are given. Then, ith query queryi is given in the following format: or The first digit represents the type of the query. '0' denotes add(s, t, x) and '1' denotes getSum(s, t). For each getSum operation, print the sum;",
        "difficulty": "Medium",
        "category": "Math & Logic",
        "tags": [
          "array",
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02351.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 100000\n\n\n1 ≤ q ≤ 100000\n\n\n1 ≤ s ≤ t ≤ n\n\n\n0 ≤ x < 1000",
          "ranges": "1 100000; 1 100000; 0 1000; 100000; 100000; 1000; 1; 1; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 5\n0 1 2 1\n0 2 3 2\n0 3 3 3\n1 1 2\n1 2 3",
            "output": "4\n8",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02351.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02351"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02352",
        "title": "RMQ and RAQ",
        "description": "Write a program which manipulates a sequence $A$ = {$a_0, a_1, ..., a_{n-1}$} with the following operations: Note that the initial values of $a_i ( i = 0, 1, ..., n-1 )$ are 0. In the first line, $n$ (the number of elements in $A$) and $q$ (the number of queries) are given. Then, $i$th query $query_i$ is given in the following format: or The first digit represents the type of the query. '0' denotes $add(s, t, x)$  and '1' denotes $find(s, t)$. For each $find$ query, print the minimum value.",
        "difficulty": "Medium",
        "category": "Math & Logic",
        "tags": [
          "array",
          "math",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02352.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "$1 ≤ n ≤ 100000$\n$1 ≤ q ≤ 100000$\n$0 ≤ s ≤ t < n$\n$-1000 ≤ x ≤ 1000$",
          "ranges": "1 100000; 1 100000; 1000 1000; 100000; 100000; 1000; 1; 1; 0; 1000"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "6 7\n0 1 3 1\n0 2 4 -2\n1 0 5\n1 0 1\n0 3 5 3\n1 3 4\n1 0 5",
            "output": "-2\n0\n1\n-1",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02352.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02352"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02353",
        "title": "RSQ and RUQ",
        "description": "Write a program which manipulates a sequence $A$ = {$a_0, a_1, ..., a_{n-1}$} with the following operations: $update(s, t, x)$: change $a_s, a_{s+1}, ..., a_t$ to $x$.\n $getSum(s, t)$: print the sum of $a_s, a_{s+1}, ..., a_t$. Note that the initial values of $a_i ( i = 0, 1, ..., n-1 )$ are 0. In the first line, $n$ (the number of elements in $A$) and $q$ (the number of queries) are given. Then, $i$-th query $query_i$ is given in the following format: or The first digit represents the type of the query. '0' denotes $update(s, t, x)$\n and '1' denotes $find(s, t)$. For each $getSum$ query, print the sum in a line.",
        "difficulty": "Medium",
        "category": "Math & Logic",
        "tags": [
          "array",
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02353.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "$1 ≤ n ≤ 100000$\n$1 ≤ q ≤ 100000$\n$0 ≤ s ≤ t < n$\n$-1000 ≤ x ≤ 1000$",
          "ranges": "1 100000; 1 100000; 1000 1000; 100000; 100000; 1000; 1; 1; 0; 1000"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "6 7\n0 1 3 1\n0 2 4 -2\n1 0 5\n1 0 1\n0 3 5 3\n1 3 4\n1 0 5",
            "output": "-5\n1\n6\n8",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02353.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02353"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02361",
        "title": "Single Source Shortest Path",
        "description": "For a given weighted graph G(V, E) and a source r, find the source shortest path to each vertex from the source (SSSP: Single Source Shortest Path). An edge-weighted graph G (V, E) and the source r. |V| is the number of vertices and |E| is the number of edges in G. The graph vertices are named with the numbers 0, 1,..., |V|-1 respectively. r is the source of the graph. si and ti  represent source and target vertices of i-th edge (directed) and di represents the cost of the i-th edge. Print the costs of SSSP in the following format. The output consists of |V| lines. Print the cost of the shortest path from the source r to each vertex 0, 1, ... |V|-1 in order. If there is no path from the source to a vertex, print INF.",
        "difficulty": "Medium",
        "category": "Trees & Graphs",
        "tags": [
          "math",
          "sorting",
          "graph",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02361.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ |V| ≤ 100000\n0 ≤ di ≤ 10000\n 0 ≤ |E| ≤ 500000\n There are no parallel edges\n There are no self-loops",
          "ranges": "0 10000; 10000; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 5 0\n0 1 1\n0 2 4\n1 2 2\n2 3 1\n1 3 5",
            "output": "0\n1\n3\n4",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02361.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02361"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02362",
        "title": "Single Source Shortest Path (Negative Edges)",
        "description": "An edge-weighted graph G (V, E) and the source r. |V| is the number of vertices and |E| is the number of edges in G. The graph vertices are named with the numbers 0, 1,..., |V|-1 respectively. r is the source of the graph. si and ti  represent source and target vertices of i-th edge (directed) and di represents the cost of the i-th edge. in a line. Otherwise, print The output consists of |V| lines. Print the cost of the shortest path from the source r to each vertex 0, 1, ... |V|-1 in order. If there is no path from the source to a vertex, print \"INF\".",
        "difficulty": "Medium",
        "category": "Trees & Graphs",
        "tags": [
          "math",
          "sorting",
          "graph",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02362.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ |V| ≤ 1000\n 0 ≤ |E| ≤ 2000\n -10000 ≤ di ≤ 10000\n There are no parallel edges\n There are no self-loops",
          "ranges": "10000 10000; 10000; 10000"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 5 0\n0 1 2\n0 2 3\n1 2 -5\n1 3 1\n2 3 2",
            "output": "0\n2\n-3\n-1",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02362.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02362"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02363",
        "title": "All Pairs Shortest Path",
        "description": "An edge-weighted graph G (V, E). |V| is the number of vertices and |E| is the number of edges in G. The graph vertices are named with the numbers 0, 1,..., |V|-1 respectively. si and ti  represent source and target vertices of i-th edge (directed) and di represents the cost of the i-th edge. in a line. Otherwise, print The output consists of |V| lines. For each ith line, print the cost of the shortest path from vertex i to each vertex j (j = 0, 1, ... |V|-1) respectively. If there is no path from vertex i to vertex j, print \"INF\". Print a space between the costs.",
        "difficulty": "Medium",
        "category": "Trees & Graphs",
        "tags": [
          "math",
          "graph",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02363.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ |V| ≤ 100\n 0 ≤ |E| ≤ 9900\n -2 × 107 ≤ di ≤ 2 × 107\n There are no parallel edges\n There are no self-loops",
          "ranges": "107 2; 2; 107"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 6\n0 1 1\n0 2 5\n1 2 2\n1 3 4\n2 3 1\n3 2 7",
            "output": "0 1 3 4\nINF 0 2 3\nINF INF 0 1\nINF INF 7 0",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02363.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02363"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02364",
        "title": "Minimum Spanning Tree",
        "description": "Find the sum of weights of edges of the Minimum Spanning Tree for a given weighted undirected graph G = (V, E). , where |V| is the number of vertices and |E| is the number of edges in the graph. The graph vertices are named with the numbers 0, 1,..., |V|-1 respectively. si and ti represent source and target verticess of i-th edge (undirected) and wi represents the weight of the i-th edge. Print the sum of the weights of the Minimum Spanning Tree.",
        "difficulty": "Medium",
        "category": "Trees & Graphs",
        "tags": [
          "math",
          "sorting",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02364.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ |V| ≤ 10,000\n0 ≤ |E| ≤ 100,000\n0 ≤ wi ≤ 10,000\nThe graph is connected\nThere are no parallel edges\nThere are no self-loops",
          "ranges": "0 10; 10; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 6\n0 1 2\n1 2 1\n2 3 1\n3 0 1\n0 2 3\n1 3 5",
            "output": "3",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02364.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02364"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02365",
        "title": "Minimum-Cost Arborescence",
        "description": "Find the sum of the weights of edges of the Minimum-Cost Arborescence with the root r for a given weighted directed graph G = (V, E). , where |V| is the number of vertices and |E| is the number of edges in the graph. The graph vertices are named with the numbers 0, 1,..., |V|-1 respectively. r is the root of the Minimum-Cost Arborescence. si and ti represent source and target verticess of i-th directed edge. wi represents the weight of the i-th directed edge. Print the sum of the weights the Minimum-Cost Arborescence.",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02365.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ |V| ≤ 100\n0 ≤ |E| ≤ 1,000\n0 ≤ wi ≤ 10,000\nG has arborescence(s) with the root r",
          "ranges": "0 10; 10; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 6 0\n0 1 3\n0 2 2\n2 0 1\n2 3 1\n3 0 1\n3 1 5",
            "output": "6",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02365.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02365"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02368",
        "title": "Strongly Connected Components",
        "description": "A direced graph is strongly connected if every two nodes are reachable from each other. In a strongly connected component of a directed graph, every two nodes of the component are mutually reachable. A directed graph G(V, E) and a sequence of queries where each query contains a pair of nodes u and v. |V| is the number of nodes and |E| is the number of edges in the graph. The graph nodes are named with the numbers 0, 1,..., |V|-1 respectively. si and ti represent source and target nodes of i-th edge (directed). ui and vi represent a pair of nodes given as the i-th query. For each query, pinrt \"1\" if the given nodes belong to the same strongly connected component, \"0\" otherwise.",
        "difficulty": "Medium",
        "category": "Trees & Graphs",
        "tags": [
          "array",
          "math",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02368.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ |V| ≤ 10,000\n0 ≤ |E| ≤ 30,000\n1 ≤ Q ≤ 100,000",
          "ranges": "1 100; 100; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 6\n0 1\n1 0\n1 2\n2 4\n4 3\n3 2\n4\n0 1\n0 3\n2 3\n3 4",
            "output": "1\n0\n1\n1",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02368.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02368"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02371",
        "title": "Diameter of a Tree Given a tree T with non-negative weight, find the diameter of the tree. The diameter of a tree is the maximum distance between two nodes in a tree. Input n s1 t1 w1 s2 t2 w2 : sn-1 tn-1 wn-1 The first line consists of an integer n which represents the number of nodes in the tree. Every node has a unique ID from 0 to n-1 respectively. In the following n-1 lines, edges of the tree are given. si and ti represent end-points of the i-th edge (undirected) and wi represents the weight (distance) of the i-th edge. Output Print the diameter of the tree in a line. Constraints 1 ≤ n ≤ 100,000 0 ≤ wi ≤ 1,000 Sample Input 1 4 0 1 2 1 2 1 1 3 3 Sample Output 1 5 Sample Input 2 4 0 1 1 1 2 2 2 3 4 Sample Output 2 7",
        "description": "Given a tree T with non-negative weight, find the diameter of the tree. The diameter of a tree is the maximum distance between two nodes in a tree. The first line consists of an integer n which represents the number of nodes in the tree. Every node has a unique ID from 0 to n-1 respectively. In the following n-1 lines, edges of the tree are given.\n\nsi and ti represent end-points of the i-th edge (undirected) and wi represents the weight (distance) of the i-th edge. Print the diameter of the tree in a line.",
        "difficulty": "Medium",
        "category": "Trees & Graphs",
        "tags": [
          "math",
          "sorting",
          "graph",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02371.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 100,000\n 0 ≤ wi ≤ 1,000",
          "ranges": "1 100; 0 1; 100; 1; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n0 1 2\n1 2 1\n1 3 3",
            "output": "5",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02371.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02371"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02372",
        "title": "Height of a Tree",
        "description": "Given a tree T with non-negative weight, find the height of each node of the tree. For each node, the height is the distance to the most distant leaf from the node. The first line consists of an integer n which represents the number of nodes in the tree. Every node has a unique ID from 0 to n-1 respectively. In the following n-1 lines, edges of the tree are given.\n\nsi and ti represent end-points of the i-th edge (undirected) and wi represents the weight (distance) of the i-th edge. The output consists of n lines. Print the height of each node 0, 1, 2, ..., n-1 in order.",
        "difficulty": "Medium",
        "category": "Trees & Graphs",
        "tags": [
          "math",
          "sorting",
          "graph",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02372.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 10,000\n 0 ≤ wi ≤ 1,000",
          "ranges": "1 10; 0 1; 10; 1; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n0 1 2\n1 2 1\n1 3 3",
            "output": "5\n3\n4\n5",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02372.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02372"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02373",
        "title": "LCA: Lowest Common Ancestor",
        "description": "For a rooted tree, find the lowest common ancestor of two nodes u and v. The given tree consists of n nodes and every node has a unique ID from 0 to n-1 where 0 is the root. The first line of the input includes an integer n, the number of nodes of the tree. In the next n lines, the information of node i is given. ki is the number of children of node i, and c1, ... cki are node IDs of 1st, ... kth child of node i. In the next line, the number of queryies q is given. In the next q lines, pairs of u and v are given as the queries. For each query, print the LCA of u and v in a line.",
        "difficulty": "Medium",
        "category": "Trees & Graphs",
        "tags": [
          "math",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02373.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ n ≤ 100000\n\n\n1 ≤ q ≤ 100000",
          "ranges": "1 100000; 1 100000; 100000; 100000; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "8\n3 1 2 3\n2 4 5\n0\n0\n0\n2 6 7\n0\n0\n4\n4 6\n4 7\n4 3\n5 2",
            "output": "1\n1\n0\n0",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02373.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02373"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02381",
        "title": "Standard Deviation",
        "description": "You have final scores of an examination for n students. Calculate standard deviation of the scores s1, s2 ... sn. The variance α2 is defined by α2  = (∑ni=1(si - m)2)/n where m is an average of si.\n\n  The standard deviation of the scores is the square root of their variance. The input consists of multiple datasets. Each dataset is given in the following format: The input ends with single zero for n. For each dataset, print the standard deviation in a line. The output should not contain an absolute error greater than 10-4.",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02381.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "n ≤ 1000\n0 ≤ si ≤ 100",
          "ranges": "0 100; 1000; 100; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n70 80 100 90 20\n3\n80 80 80\n0",
            "output": "27.85677655\n0.00000000",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02381.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02381"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02388",
        "title": "X Cubic",
        "description": "Write a program which calculates the cube of a given integer x. An integer x is given in a line. Print the cube of x in a line.",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02388.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ x ≤ 100",
          "ranges": "1 100; 100; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2",
            "output": "8",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02388.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02388"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02389",
        "title": "Rectangle",
        "description": "Write a program which calculates the area and perimeter of a given rectangle. The length a and breadth b of the rectangle are given in a line separated by a single space. Print the area and perimeter of the rectangle in a line. The two integers should be separated by a single space.",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02389.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ a, b ≤ 100",
          "ranges": "100; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 5",
            "output": "15 16",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02389.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02389"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02391",
        "title": "Small, Large, or Equal",
        "description": "Write a program which prints small/large/equal relation of given two integers a and b. Two integers a and b separated by a single space are given in a line. For given two integers a and b, print if a is less than b, if a is greater than b, and if a equals to b.",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02391.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "-1000 ≤ a, b ≤ 1000",
          "ranges": "1000; 1000"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1 2",
            "output": "a < b",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02391.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02391"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02392",
        "title": "Range",
        "description": "Write a program which reads three integers a, b and c, and prints \"Yes\" if a < b < c, otherwise \"No\". Three integers a, b and c separated by a single space are given in a line. Print \"Yes\" or \"No\" in a line.",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02392.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0 ≤ a, b, c ≤ 100",
          "ranges": "100; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1 3 8",
            "output": "Yes",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02392.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02392"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02393",
        "title": "Sorting Three Numbers",
        "description": "Write a program which reads three integers, and prints them in ascending order. Three integers separated by a single space are given in a line. Print the given integers in ascending order in a line. Put a single space between two integers.",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02393.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ the three integers ≤ 10000",
          "ranges": "10000; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 8 1",
            "output": "1 3 8",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02393.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02393"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02394",
        "title": "Circle in a Rectangle",
        "description": "Write a program which reads a rectangle and a circle, and determines whether the circle is arranged inside the rectangle. As shown in the following figures, the upper right coordinate $(W, H)$ of the rectangle and the central coordinate $(x, y)$ and radius $r$ of the circle are given. Five integers $W$, $H$, $x$, $y$ and $r$ separated by a single space are given in a line. Print \"Yes\" if the circle is placed inside the rectangle, otherwise \"No\" in a line.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "geometry",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02394.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "$ -100  \\leq x, y \\leq 100$\n$ 0  < W, H, r \\leq 100$",
          "ranges": "0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 4 2 2 1",
            "output": "Yes",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02394.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02394"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02396",
        "title": "Print Test Cases",
        "description": "In the online judge system, a judge file may include multiple datasets to check whether the submitted program outputs a correct answer for each test case. This task is to practice solving a problem with multiple datasets. Write a program which reads an integer x and print it as is. Note that multiple datasets are given for this problem. The input consists of multiple datasets. Each dataset consists of an integer x in a line. The input ends with an integer 0. You program should not process (print) for this terminal symbol. For each dataset, print x in the following format: where i is the case number which starts with 1. Put a single space between \"Case\" and i. Also, put a single space between ':' and x.",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "math",
          "simulation",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02396.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ x ≤ 10000\nThe number of datasets ≤ 10000",
          "ranges": "1 10000; 10000; 10000; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n5\n11\n7\n8\n19\n0",
            "output": "Case 1: 3\nCase 2: 5\nCase 3: 11\nCase 4: 7\nCase 5: 8\nCase 6: 19",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02396.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02396"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02397",
        "title": "Swapping Two Numbers",
        "description": "Write a program which reads two integers x and y, and prints them in ascending order. The input consists of multiple datasets. Each dataset consists of two integers x and y separated by a single space. The input ends with two 0 (when both x and y are zero). Your program should not process for these terminal symbols. For each dataset, print x and y in ascending order in a line. Put a single space between x and y.",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "math",
          "sorting",
          "simulation",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02397.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0 ≤ x, y ≤ 10000\n the number of datasets ≤ 3000",
          "ranges": "10000; 3000; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 2\n2 2\n5 3\n0 0",
            "output": "2 3\n2 2\n3 5",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02397.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02397"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02398",
        "title": "How Many Divisors? Write a program which reads three integers a, b and c, and prints the number of divisors of c between a and b. Input Three integers a, b and c are given in a line separated by a single space. Output Print the number of divisors in a line. Constraints 1 ≤ a, b, c ≤ 10000 a ≤ b Sample Input 1 5 14 80 Sample Output 1 3",
        "description": "Write a program which reads three integers a, b and c, and prints the number of divisors of c between a and b. Three integers a, b and c are given in a line separated by a single space. Print the number of divisors in a line.",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02398.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ a, b, c ≤ 10000\n a ≤ b",
          "ranges": "10000; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 14 80",
            "output": "3",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02398.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02398"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02399",
        "title": "A/B Problem",
        "description": "Write a program which reads two integers a and b, and calculates the following values: Two integers a and b are given in a line. Print d, r and f separated by a space in a line. For f, the output should not contain an absolute error greater than 10-5.",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02399.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ a, b ≤ 109",
          "ranges": "109; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 2",
            "output": "1 1 1.50000",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02399.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02399"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02400",
        "title": "Circle",
        "description": "Write a program which calculates the area and circumference of a circle for given radius r. A real number r is given. Print the area and circumference of the circle in a line. Put a single space between them. The output should not contain an absolute error greater than 10-5.",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "math",
          "geometry",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02400.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0 < r < 10000",
          "ranges": "0 10000; 10000; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2",
            "output": "12.566371 12.566371",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02400.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02400"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02401",
        "title": "Simple Calculator",
        "description": "Write a program which reads two integers a, b and an operator op, and then prints the value of a op b. The operator op is '+', '-', '*' or '/' (sum, difference, product or quotient). The division should truncate any fractional part. The input consists of multiple datasets. Each dataset is given in the following format. The input ends with a dataset where op = '?'. Your program should not process for this dataset. For each dataset, print the value in a line.",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "simulation",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02401.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0 ≤ a, b ≤ 20000\nNo divisions by zero are given.",
          "ranges": "20000; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1 + 2\n56 - 18\n13 * 2\n100 / 10\n27 + 81\n0 ? 0",
            "output": "3\n38\n26\n10\n108",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02401.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02401"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02402",
        "title": "Min, Max and Sum",
        "description": "Write a program which reads a sequence of $n$ integers $a_i (i = 1, 2, ... n)$, and prints the minimum value, maximum value and sum of the sequence. In the first line, an integer $n$ is given. In the next line, $n$ integers $a_i$ are given in a line. Print the minimum value, maximum value and sum in a line. Put a single space between the values.",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "array",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02402.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "$0 < n \\leq 10000$\n$-1000000 \\leq a_i \\leq 1000000$",
          "ranges": "0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n10 1 5 4 17",
            "output": "1 17 37",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02402.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02402"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02403",
        "title": "Print a Rectangle",
        "description": "Draw a rectangle which has a height of H cm and a width of W cm. Draw a 1-cm square by single '#'. The input consists of multiple datasets. Each dataset consists of two integers H and W separated by a single space. The input ends with two 0 (when both H and W are zero). For each dataset, print the rectangle made of H × W '#'. Print a blank line after each dataset.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02403.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ H ≤ 300\n1 ≤ W ≤ 300",
          "ranges": "1 300; 1 300; 300; 300; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 4\n5 6\n2 2\n0 0",
            "output": "####\n####\n####\n\n######\n######\n######\n######\n######\n\n##\n##",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02403.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02403"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02404",
        "title": "Print a Frame",
        "description": "Draw a frame which has a height of H cm and a width of W cm. For example, the following figure shows a frame which has a height of 6 cm and a width of 10 cm. The input consists of multiple datasets. Each dataset consists of two integers H and W separated by a single space. The input ends with two 0 (when both H and W are zero). For each dataset, print the frame made of '#' and '.'. Print a blank line after each dataset.",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02404.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3 ≤ H ≤ 300\n3 ≤ W ≤ 300",
          "ranges": "3 300; 3 300; 300; 300; 3; 3"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 4\n5 6\n3 3\n0 0",
            "output": "####\n#..#\n####\n\n######\n#....#\n#....#\n#....#\n######\n\n###\n#.#\n###",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02404.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02404"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02405",
        "title": "Print a Chessboard",
        "description": "Draw a chessboard which has a height of H cm and a width of W cm. For example, the following figure shows a chessboard which has a height of 6 cm and a width of 10 cm. Note that the top left corner should be drawn by '#'. The input consists of multiple datasets. Each dataset consists of two integers H and W separated by a single space. The input ends with two 0 (when both H and W are zero). For each dataset, print the chessboard made of '#' and '.'. Print a blank line after each dataset.",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02405.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ H ≤ 300\n1 ≤ W ≤ 300",
          "ranges": "1 300; 1 300; 300; 300; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 4\n5 6\n3 3\n2 2\n1 1\n0 0",
            "output": "#.#.\n.#.#\n#.#.\n\n#.#.#.\n.#.#.#\n#.#.#.\n.#.#.#\n#.#.#.\n\n#.#\n.#.\n#.#\n\n#.\n.#\n\n#",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02405.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02405"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02406",
        "title": "Structured Programming",
        "description": "In programming languages like C/C++, a goto statement provides an unconditional jump from the \"goto\" to a labeled statement. For example, a statement \"goto CHECK_NUM;\" is executed, control of the program jumps to CHECK_NUM. Using these constructs, you can implement, for example, loops. Note that use of goto statement is highly discouraged, because it is difficult to trace the control flow of a program which includes goto. Write a program which does precisely the same thing as the following program (this example is wrtten in C++). Let's try to write the program without goto statements. An integer n is given in a line. Print the output result of the above program for given integer n. Put a single space character before each element.",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "string",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02406.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3 ≤ n ≤ 10000",
          "ranges": "3 10000; 10000; 3"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "30",
            "output": "3 6 9 12 13 15 18 21 23 24 27 30 Put a single space character before each element.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02406.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02406"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02407",
        "title": "Reversing Numbers",
        "description": "Write a program which reads a sequence and prints it in the reverse order. The input is given in the following format: n is the size of the sequence and ai is the ith element of the sequence. Print the reversed sequence in a line. Print a single space character between adjacent elements (Note that your program should not put a space character after the last element). 解説",
        "difficulty": "Medium",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "string",
          "math",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02407.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "n ≤ 100\n0 ≤ ai < 1000",
          "ranges": "0 1000; 100; 1000; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n1 2 3 4 5",
            "output": "5 4 3 2 1",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02407.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02407"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02409",
        "title": "Official House",
        "description": "You manage 4 buildings, each of which has 3 floors, each of which consists of 10 rooms. Write a program which reads a sequence of tenant/leaver notices, and reports the number of tenants for each room. For each notice, you are given four integers b, f, r and v which represent that v persons entered to room r of fth floor at building b. If v is negative, it means that −v persons left. Assume that initially no person lives in the building. In the first line, the number of notices n is given. In the following n lines, a set of four integers b, f, r and v which represents ith notice is given in a line. For each building, print the information of 1st, 2nd and 3rd floor in this order. For each floor information, print the number of tenants of 1st, 2nd, .. and 10th room in this order. Print a single space character before the number of tenants. Print \"####################\" (20 '#') between buildings.",
        "difficulty": "Medium",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "string",
          "math",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02409.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "No incorrect building, floor and room numbers are given.\n0 ≤ the number of tenants during the management ≤ 9",
          "ranges": "9; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n1 1 3 8\n3 2 2 7\n4 3 8 1",
            "output": "0 0 8 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0\n####################\n 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0\n####################\n 0 0 0 0 0 0 0 0 0 0\n 0 7 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0\n####################\n 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 1 0 0",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02409.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02409"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02412",
        "title": "How many ways?",
        "description": "Write a program which identifies the number of combinations of three integers which satisfy the following conditions: For example, there are two combinations for n = 5 and x = 9. The input consists of multiple datasets. For each dataset, two integers n and x are given in a line. The input ends with two zeros for n and x respectively. Your program should not process for these terminal symbols. For each dataset, print the number of combinations in a line. 解説",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "math",
          "simulation",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02412.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3 ≤ n ≤ 100\n0 ≤ x ≤ 300",
          "ranges": "3 100; 0 300; 100; 300; 3; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 9\n0 0",
            "output": "2",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02412.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02412"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02413",
        "title": "Spreadsheet",
        "description": "Your task is to perform a simple table calculation. Write a program which reads the number of rows r, columns c and a table of r × c elements, and prints a new table, which includes the total sum for each row and column. In the first line, two integers r and c are given. Next, the table is given by r lines, each of which consists of c integers separated by space characters. Print the new table of (r+1) × (c+1) elements. Put a single space character between adjacent elements. For each row, print the sum of it's elements in the last column. For each column, print the sum of it's elements in the last row. Print the total sum of the elements at the bottom right corner of the table.",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "string",
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02413.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ r, c ≤ 100\n 0 ≤ an element of the table ≤ 100",
          "ranges": "100; 100; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 5\n1 1 3 4 5\n2 2 2 4 5\n3 3 0 1 1\n2 3 4 4 6",
            "output": "1 1 3 4 5 14\n2 2 2 4 5 15\n3 3 0 1 1 8\n2 3 4 4 6 19\n8 9 9 13 17 56",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02413.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02413"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02415",
        "title": "Toggling Cases",
        "description": "Write a program which converts uppercase/lowercase letters to lowercase/uppercase for a given string. A string is given in a line. Print the converted string in a line. Note that you do not need to convert any characters other than alphabetical letters.",
        "difficulty": "Medium",
        "category": "Arrays & Strings",
        "tags": [
          "string",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02415.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "The length of the input string < 1200",
          "ranges": "1200"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "fAIR, LATER, OCCASIONALLY CLOUDY.",
            "output": "Fair, later, occasionally cloudy.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02415.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02415"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02417",
        "title": "Counting Characters",
        "description": "Write a program which counts and reports the number of each alphabetical letter. Ignore the case of characters. A sentence in English is given in several lines. Prints the number of alphabetical letters in the following format:",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "string",
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02417.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "The number of characters in the sentence < 1200",
          "ranges": "1200"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "This is a pen.",
            "output": "a : 1\nb : 0\nc : 0\nd : 0\ne : 1\nf : 0\ng : 0\nh : 1\ni : 2\nj : 0\nk : 0\nl : 0\nm : 0\nn : 1\no : 0\np : 1\nq : 0\nr : 0\ns : 2\nt : 1\nu : 0\nv : 0\nw : 0\nx : 0\ny : 0\nz : 0",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02417.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02417"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02419",
        "title": "Finding a Word",
        "description": "Write a program which reads a word W and a text T, and prints the number of word W which appears in text T T consists of string Ti separated by space characters and newlines. Count the number of Ti which equals to W. The word and text are case insensitive. In the first line, the word W is given. In the following lines, the text T is given separated by space characters and newlines. \"END_OF_TEXT\" indicates the end of the text. Print the number of W in the text.",
        "difficulty": "Medium",
        "category": "Arrays & Strings",
        "tags": [
          "string",
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02419.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "The length of W ≤ 10\nW consists of lower case letters\nThe length of T in a line ≤ 1000",
          "ranges": "10; 1000"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "computer\nNurtures computer scientists and highly-skilled computer engineers\nwho will create and exploit \"knowledge\" for the new era.\nProvides an outstanding computer environment.\nEND_OF_TEXT",
            "output": "3",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02419.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02419"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02420",
        "title": "Shuffle",
        "description": "Your task is to shuffle a deck of n cards, each of which is marked by a alphabetical letter. A single shuffle action takes out h cards from the bottom of the deck and moves them to the top of the deck. The deck of cards is represented by a string as follows. The first character and the last character correspond to the card located at the bottom of the deck and the card on the top of the deck respectively. For example, a shuffle with h = 4 to the above deck, moves the first 4 characters \"abcd\" to the end of the remaining characters \"eefab\", and generates the following deck: You can repeat such shuffle operations. Write a program which reads a deck (a string) and a sequence of h, and prints the final state (a string). The input consists of multiple datasets. Each dataset is given in the following format: The input ends with a single character '-' for the string. For each dataset, print a string which represents the final state in a line.",
        "difficulty": "Medium",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "string",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02420.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "The length of the string ≤ 200\n1 ≤ m ≤ 100\n1 ≤ hi < The length of the string\n The number of datasets ≤ 10",
          "ranges": "1 100; 200; 100; 10; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "aabc\n3\n1\n2\n1\nvwxyz\n2\n3\n4\n-",
            "output": "aabc\nxyzvw",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02420.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02420"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02421",
        "title": "Card Game",
        "description": "Taro and Hanako are playing card games. They have n cards each, and they compete n turns. At each turn Taro and Hanako respectively puts out a card.\n  The name of the animal consisting of alphabetical letters is written on each card, and the bigger one in lexicographical order becomes the winner of that turn. The winner obtains 3 points. In the case of a draw, they obtain 1 point each. Write a program which reads a sequence of cards Taro and Hanako have and reports the final scores of the game. In the first line, the number of cards n is given. In the following n lines, the cards for n turns are given respectively. For each line, the first string represents the Taro's card and the second one represents Hanako's card. Print the final scores of Taro and Hanako respectively. Put a single space character between them.",
        "difficulty": "Medium",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "string",
          "math",
          "sorting",
          "graph",
          "simulation",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02421.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "n ≤ 1000\nThe length of the string ≤ 100",
          "ranges": "1000; 100"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\ncat dog\nfish fish\nlion tiger",
            "output": "1 7",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02421.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02421"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02425",
        "title": "Bit Flag",
        "description": "A state with $n$ flags of ON or OFF can be represented by a sequence of bits where $0, 1, ..., n-1$ -th flag corresponds to 1 (ON) or 0 (OFF).\n  The state can be managed by the corresponding decimal integer, because the sequence of bits is a binary representation where each bit is 0 or 1. Given a sequence of bits with 64 flags which represent a state, perform the following operations. Note that each flag of the bits is initialized by OFF. The input is given in the following format. Each query $query_i$ is given in the following format: or or or or or or or or The first digit 0, 1,...,8 represents the operation test(i), set(i), clear(i), flip(i), all, any, none, count or val respectively. Print the result in a line for each test, all, any, none, count and val operation.",
        "difficulty": "Medium",
        "category": "Arrays & Strings",
        "tags": [
          "array"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02425.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "$1 \\leq q \\leq 200,000$\n$0 \\leq i < 64$",
          "ranges": "64"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "14\n1 0\n1 1\n1 2\n2 1\n0 0\n0 1\n0 2\n0 3\n3 3\n4\n5\n6\n7\n8",
            "output": "1\n0\n1\n0\n0\n1\n0\n3\n13",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02425.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02425"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02426",
        "title": "Bit Mask",
        "description": "A state with $n$ flags of ON or OFF can be represented by a sequence of bits where $0, 1, ..., n-1$ th flag corresponds to 1 (ON) or 0 (OFF).\n  The state can be managed by the corresponding decimal integer, because the sequence of bits is a binary representation where each bit is 0 or 1. On the other hand, a mask is a special bit sequence which can be used to set specified bits of a given bit sequence to ON/OFF. It can also be used to extract/exclude a  bit sequence based on a specified pattern. Given a sequence of bits with 64 flags which represent a state, perform the following operations using a set of pre-defined masks. Note that each flag of the bits is initialized by OFF. The input is given in the following format. $n$ represents the number of masks. $mask_i$ represents state of $i$-th mask and is given in the following format: $k$ is the number of ON in the bits. The following $k$ integers $b_j$ show that $b_j$-th bit is ON. $query_i$ represents $i$-th query and is given in the following format: or or or or or or or or The first digit 0, 1,...,8 represents the operation test(i), set(m), clear(m), flip(m), all(m), any(m), none(m), count(m) or val(m) respectively. Print the result in a line for each test, all, any, none, count and val operation.",
        "difficulty": "Medium",
        "category": "Math & Logic",
        "tags": [
          "array",
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02426.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "$1 \\leq n \\leq 10$\n$1 \\leq k \\leq 64$\n$1 \\leq q \\leq 200,000$\n$0 \\leq i < 64$\n$0 \\leq m < n$",
          "ranges": "64"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n3 0 1 3\n1 3\n3 0 1 2\n8\n1 0\n2 1\n3 1\n4 2\n5 2\n6 2\n7 2\n8 2",
            "output": "0\n1\n0\n2\n3",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02426.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02426"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02452",
        "title": "Includes",
        "description": "For given two sequneces $A = \\{a_0, a_1, ..., a_{n-1}\\}$ and $B = \\{b_0, b_1, ..., b_{m-1}\\}$, determine whether all elements of $B$ are included in $A$. Note that, elements of $A$ and $B$ are sorted by ascending order respectively. The input is given in the following format. The number of elements in $A$ and its elements $a_i$ are given in the first and second\n lines respectively.\n  The number of elements in $B$ and its elements $b_i$ are given in the third and fourth\n lines respectively. Print 1, if $A$ contains all elements of $B$, otherwise 0.",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02452.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "$1 \\leq n, m \\leq 200,000$\n$-1,000,000,000 \\leq a_0 < a_1 < ... < a_{n-1} \\leq 1,000,000,000$\n$-1,000,000,000 \\leq b_0 < b_1 < ... < b_{m-1} \\leq 1,000,000,000$",
          "ranges": "0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n1 2 3 4\n2\n2 4",
            "output": "1",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02452.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02452"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02463",
        "title": "Set Union",
        "description": "Find the union of two sets $A = \\{a_0, a_1, ..., a_{n-1}\\}$ and $B = \\{b_0, b_1, ..., b_{m-1}\\}$. The input is given in the following format. Elements of $A$ and $B$ are given in ascending order respectively. There are no duplicate elements in each set. Print elements in the union in ascending order. Print an element in a line.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02463.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "$1 \\leq n, m \\leq 200,000$\n$0 \\leq a_0 < a_1 < ... < a_{n-1} \\leq 10^9$\n$0 \\leq b_0 < b_1 < ... < b_{m-1} \\leq 10^9$",
          "ranges": "0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n1 5 8\n2\n5 9",
            "output": "1\n5\n8\n9",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02463.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02463"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02464",
        "title": "Set Intersection",
        "description": "Find the intersection of two sets $A = \\{a_0, a_1, ..., a_{n-1}\\}$ and $B = \\{b_0, b_1, ..., b_{m-1}\\}$. The input is given in the following format. Elements of $A$ and $B$ are given in ascending order respectively. There are no duplicate elements in each set. Print elements in the intersection in ascending order. Print an element in a line.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02464.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "$1 \\leq n, m \\leq 200,000$\n$0 \\leq a_0 < a_1 < ... < a_{n-1} \\leq 10^9$\n$0 \\leq b_0 < b_1 < ... < b_{m-1} \\leq 10^9$",
          "ranges": "0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n1 2 5 8\n5\n2 3 5 9 11",
            "output": "2\n5",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02464.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02464"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02465",
        "title": "Set Difference",
        "description": "Find the difference of two sets $A = \\{a_0, a_1, ..., a_{n-1}\\}$ and $B = \\{b_0, b_1, ..., b_{m-1}\\}$,  $A - B$. The input is given in the following format. Elements in $A$ and $B$ are given in ascending order. There are no duplicate elements in each set. Print elements in the difference in ascending order. Print an element in a line.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02465.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "$1 \\leq n, m \\leq 200,000$\n$0 \\leq a_0 < a_1 < ... < a_{n-1} \\leq 10^9$\n$0 \\leq b_0 < b_1 < ... < b_{m-1} \\leq 10^9$",
          "ranges": "0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n1 2 3 5 8\n2\n2 5",
            "output": "1\n3\n8",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02465.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02465"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02466",
        "title": "Set Symmetric Difference",
        "description": "Find the symmetric difference of two sets $A = \\{a_0, a_1, ..., a_{n-1}\\}$ and $B = \\{b_0, b_1, ..., b_{m-1}\\}$. The input is given in the following format. Elements in $A$ and $B$ are given in ascending order. There are no duplicate elements in each set. Print elements in the symmetric difference in ascending order. Print an element in a line.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02466.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "$1 \\leq n, m \\leq 200,000$\n$0 \\leq a_0 < a_1 < ... < a_{n-1} \\leq 10^9$\n$0 \\leq b_0 < b_1 < ... < b_{m-1} \\leq 10^9$",
          "ranges": "0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "7\n1 2 3 4 5 6 7\n4\n2 4 6 8",
            "output": "1\n3\n5\n7\n8",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02466.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02466"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02467",
        "title": "Prime Factorization",
        "description": "Factorize a given integer n. An integer n is given in a line. Print the given integer n and :. Then, print prime factors in ascending order. If n is divisible by a prime factor several times, the prime factor should be printed according to the number of times. Print a space before each prime factor.",
        "difficulty": "Medium",
        "category": "Math & Logic",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02467.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ n ≤ 109",
          "ranges": "2 109; 109; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "12",
            "output": "12: 2 2 3",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02467.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02467"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02468",
        "title": "Power",
        "description": "For given integers m and n, compute mn (mod 1,000,000,007). Here, A (mod M) is the remainder when A is divided by M. Two integers m and n are given in a line. Print mn (mod 1,000,000,007) in a line.",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02468.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ m ≤ 100\n1 ≤ n ≤ 109",
          "ranges": "1 100; 1 109; 100; 109; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 3",
            "output": "8",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02468.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02468"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02469",
        "title": "Least Common Multiple",
        "description": "Find the least common multiple (LCM) of given n integers. n is given in the first line. Then, n integers are given in the second line. Print the least common multiple of the given integers in a line.",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02469.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ n ≤ 10\n\n\n1 ≤ ai ≤ 1000\n\n\nProduct of given integers ai(i = 1, 2, ... n) does not exceed 231-1",
          "ranges": "2 10; 1 1000; 10; 1000; 1; 2; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n3 4 6",
            "output": "12",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02469.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02469"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02471",
        "title": "Extended Euclid Algorithm Given positive integers a and b, find the integer solution (x, y) to ax + by = gcd(a, b), where gcd(a, b) is the greatest common divisor of a and b. Input a b Two positive integers a and b are given separated by a space in a line. Output Print two integers x and y separated by a space. If there are several pairs of such x and y, print that pair for which |x| + |y| is the minimal (primarily) and x ≤ y (secondarily). Constraints 1 ≤ a, b ≤ 109 Sample Input 1 4 12 Sample Output 1 1 0 Sample Input 2 3 8 Sample Output 2 3 -1",
        "description": "Given positive integers a and b, find the integer solution (x, y) to ax + by = gcd(a, b), where gcd(a, b) is the greatest common divisor of a and b. Two positive integers a and b are given separated by a space in a line. Print two integers x and y separated by a space. If there are several pairs of such x and y, print that pair for which |x| + |y| is the minimal (primarily) and x ≤ y (secondarily).",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02471.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ a, b ≤ 109",
          "ranges": "109; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 12",
            "output": "1 0",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02471.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02471"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02543",
        "title": "These points are numbered in the increasing order of coordinates.",
        "description": "Score : 800 points Problem StatementThere are N points on a number line, i-th of which is placed on coordinate X_i.\nThese points are numbered in the increasing order of coordinates.\nIn other words, for all i (1 \\leq i \\leq N-1), X_i < X_{i+1} holds.\nIn addition to that, an integer K is given.\nProcess Q queries.\nIn the i-th query, two integers L_i and R_i are given.\nHere, a set s of points is said to be a good set if it satisfies all of the following conditions.\nNote that the definition of good sets varies over queries.\n\nEach point in s is one of X_{L_i},X_{L_i+1},\\ldots,X_{R_i}.\nFor any two distinct points in s, the distance between them is greater than or equal to K.\nThe size of s is maximum among all sets that satisfy the aforementioned conditions.\n\nFor each query, find the size of the union of all good sets. There are N points on a number line, i-th of which is placed on coordinate X_i.\nThese points are numbered in the increasing order of coordinates.\nIn other words, for all i (1 \\leq i \\leq N-1), X_i < X_{i+1} holds.\nIn addition to that, an integer K is given. Process Q queries. In the i-th query, two integers L_i and R_i are given.\nHere, a set s of points is said to be a good set if it satisfies all of the following conditions.\nNote that the definition of good sets varies over queries. For each query, find the size of the union of all good sets. For each query, print the size of the union of all good sets in a line. In the first query, you can have at most 3 points in a good set.\nThere exist two good sets: \\{1,4,7\\} and \\{1,4,8\\}.\nTherefore, the size of the union of all good sets is |\\{1,4,7,8\\}|=4. In the second query, you can have at most 1 point in a good set.\nThere exist two good sets: \\{1\\} and \\{2\\}.\nTherefore, the size of the union of all good sets is |\\{1,2\\}|=2. There are N points on a number line, i-th of which is placed on coordinate X_i.\nThese points are numbered in the increasing order of coordinates.\nIn other words, for all i (1 \\leq i \\leq N-1), X_i < X_{i+1} holds.\nIn addition to that, an integer K is given. Process Q queries. In the i-th query, two integers L_i and R_i are given.\nHere, a set s of points is said to be a good set if it satisfies all of the following conditions.\nNote that the definition of good sets varies over queries. Each point in s is one of X_{L_i},X_{L_i+1},\\ldots,X_{R_i}.\nFor any two distinct points in s, the distance between them is greater than or equal to K.\nThe size of s is maximum among all sets that satisfy the aforementioned conditions. For each query, find the size of the union of all good sets.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry",
          "sorting",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02543.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N \\leq 2 \\times 10^5\n1 \\leq K \\leq 10^9\n0 \\leq X_1 < X_2 < \\cdots < X_N \\leq 10^9\n1 \\leq Q \\leq 2 \\times 10^5\n1 \\leq L_i \\leq R_i \\leq N\nAll values in input are integers.",
          "ranges": "1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 3\n1 2 4 7 8\n2\n1 5\n1 2",
            "output": "4\n2 In the first query, you can have at most 3 points in a good set.\nThere exist two good sets: \\{1,4,7\\} and \\{1,4,8\\}.\nTherefore, the size of the union of all good sets is |\\{1,4,7,8\\}|=4. In the second query, you can have at most 1 point in a good set.\nThere exist two good sets: \\{1\\} and \\{2\\}.\nTherefore, the size of the union of all good sets is |\\{1,2\\}|=2.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02543.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02543"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02563",
        "title": "Problem Statement",
        "description": "Score : 100 points Problem StatementYou are given two integer arrays a_0, a_1, ..., a_{N - 1} and b_0, b_1, ..., b_{M - 1}. Calculate the array c_0, c_1, ..., c_{(N - 1) + (M - 1)}, defined by c_i = \\sum_{j = 0}^i a_j b_{i - j} \\bmod 998244353. You are given two integer arrays a_0, a_1, ..., a_{N - 1} and b_0, b_1, ..., b_{M - 1}. Calculate the array c_0, c_1, ..., c_{(N - 1) + (M - 1)}, defined by c_i = \\sum_{j = 0}^i a_j b_{i - j} \\bmod 998244353. Print the answer in the following format: You are given two integer arrays a_0, a_1, ..., a_{N - 1} and b_0, b_1, ..., b_{M - 1}. Calculate the array c_0, c_1, ..., c_{(N - 1) + (M - 1)}, defined by c_i = \\sum_{j = 0}^i a_j b_{i - j} \\bmod 998244353.",
        "difficulty": "Medium",
        "category": "Arrays & Strings",
        "tags": [
          "array"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02563.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N, M \\leq 524288\n0 \\leq a_i, b_i < 998244353\nAll values in Input are integer.",
          "ranges": "998244353"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 5\n1 2 3 4\n5 6 7 8 9",
            "output": "5 16 34 60 70 70 59 36",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02563.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02563"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02567",
        "title": "The type of i-th query is represented by T_i.",
        "description": "Score : 100 points Problem StatementYou are given an array a_0, a_1, ..., a_{N-1} of length N. Process Q queries of the following types.\nThe type of i-th query is represented by T_i.\n\nT_i=1: You are given two integers X_i,V_i. Replace the value of A_{X_i} with V_i.\nT_i=2: You are given two integers L_i,R_i. Calculate the maximum value among A_{L_i},A_{L_i+1},\\cdots,A_{R_i}.\nT_i=3: You are given two integers X_i,V_i. Calculate the minimum j such that X_i \\leq j \\leq N, V_i \\leq A_j. If there is no such j, answer j=N+1 instead. You are given an array a_0, a_1, ..., a_{N-1} of length N. Process Q queries of the following types. The type of i-th query is represented by T_i. Each query is given in the following format: If T_i=1,3, If T_i=2, For each query with T_i=2, 3, print the answer. You are given an array a_0, a_1, ..., a_{N-1} of length N. Process Q queries of the following types. The type of i-th query is represented by T_i. T_i=1: You are given two integers X_i,V_i. Replace the value of A_{X_i} with V_i.\nT_i=2: You are given two integers L_i,R_i. Calculate the maximum value among A_{L_i},A_{L_i+1},\\cdots,A_{R_i}.\nT_i=3: You are given two integers X_i,V_i. Calculate the minimum j such that X_i \\leq j \\leq N, V_i \\leq A_j. If there is no such j, answer j=N+1 instead.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "array",
          "sorting",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02567.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N \\leq 2 \\times 10^5\n0 \\leq A_i \\leq 10^9\n1 \\leq Q \\leq 2 \\times 10^5\n1 \\leq T_i \\leq 3\n1 \\leq X_i \\leq N, 0 \\leq V_i \\leq 10^9 (T_i=1,3)\n1 \\leq L_i \\leq R_i \\leq N (T_i=2)\nAll values in Input are integer.",
          "ranges": "1; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 5\n1 2 3 2 1\n2 1 5\n3 2 3\n1 3 1\n2 2 4\n3 1 3",
            "output": "3\n3\n2\n6 First query: Print 3, which is the maximum of (A_1,A_2,A_3,A_4,A_5)=(1,2,3,2,1).\nSecond query: Since 3>A_2, j=2 does not satisfy the condition．Since 3 \\leq A_3, print j=3.\nThird query: Replace the value of A_3 with 1. It becomes A=(1,2,1,2,1).\nFourth query: Print 2, which is the maximum of (A_2,A_3,A_4)=(2,1,2).\nFifth query: Since there is no j that satisfies the condition, print j=N+1=6.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02567.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02567"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02568",
        "title": "0 l r b c: For each i = l, l+1, \\dots, {r - 1}, set a_i \\gets b \\times a_i + c.",
        "description": "Score : 100 points Problem StatementYou are given an array a_0, a_1, ..., a_{N-1} of length N. Process Q queries of the following types.\n\n0 l r b c: For each i = l, l+1, \\dots, {r - 1}, set a_i \\gets b \\times a_i + c.\n1 l r: Print \\sum_{i = l}^{r - 1} a_i \\bmod 998244353. You are given an array a_0, a_1, ..., a_{N-1} of length N. Process Q queries of the following types. For each query of the latter type, print the answer. You are given an array a_0, a_1, ..., a_{N-1} of length N. Process Q queries of the following types. 0 l r b c: For each i = l, l+1, \\dots, {r - 1}, set a_i \\gets b \\times a_i + c.\n1 l r: Print \\sum_{i = l}^{r - 1} a_i \\bmod 998244353.",
        "difficulty": "Medium",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02568.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N, Q \\leq 500000\n0 \\leq a_i, c < 998244353\n1 \\leq b < 998244353\n0 \\leq l < r \\leq N\nAll values in Input are integer.",
          "ranges": "998244353; 998244353"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 7\n1 2 3 4 5\n1 0 5\n0 2 4 100 101\n1 0 3\n0 1 3 102 103\n1 2 5\n0 2 5 104 105\n1 0 5",
            "output": "15\n404\n41511\n4317767",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02568.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02568"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02577",
        "title": "Determine whether N is a multiple of 9.",
        "description": "Score : 200 points Problem StatementAn integer N is a multiple of 9 if and only if the sum of the digits in the decimal representation of N is a multiple of 9.\nDetermine whether N is a multiple of 9. An integer N is a multiple of 9 if and only if the sum of the digits in the decimal representation of N is a multiple of 9. Determine whether N is a multiple of 9. If N is a multiple of 9, print Yes; otherwise, print No. The sum of these digits is 1+2+3+4+5+6+7+8+9=45, which is a multiple of 9, so 123456789 is a multiple of 9. An integer N is a multiple of 9 if and only if the sum of the digits in the decimal representation of N is a multiple of 9. Determine whether N is a multiple of 9.",
        "difficulty": "Medium",
        "category": "Math & Logic",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02577.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0 \\leq N < 10^{200000}\nN is an integer.",
          "ranges": "10"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "123456789",
            "output": "Yes The sum of these digits is 1+2+3+4+5+6+7+8+9=45, which is a multiple of 9, so 123456789 is a multiple of 9.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02577.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02577"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02588",
        "title": "Compute the number of pairs of indices (i, j)",
        "description": "Score : 300 points Problem StatementYou are given N real values A_1, A_2, \\ldots, A_N.\nCompute the number of pairs of indices (i, j)\n    such that i < j and the product A_i \\cdot A_j is integer. You are given N real values A_1, A_2, \\ldots, A_N.\nCompute the number of pairs of indices (i, j)\n    such that i < j and the product A_i \\cdot A_j is integer. Print the number of pairs with integer product A_i \\cdot A_j (and i < j). There are 3 pairs with integer product: You are given N real values A_1, A_2, \\ldots, A_N.\nCompute the number of pairs of indices (i, j)\n    such that i < j and the product A_i \\cdot A_j is integer.",
        "difficulty": "Medium",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02588.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 \\leq N \\leq 200\\,000\n0 < A_i < 10^4\nA_i is given with at most 9 digits after the decimal.",
          "ranges": "0 10; 10; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n7.5\n2.4\n17.000000001\n17\n16.000000000",
            "output": "3 There are 3 pairs with integer product: 7.5 \\cdot 2.4 = 18\n7.5 \\cdot 16 = 120\n17 \\cdot 16 = 272",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02588.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02588"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02590",
        "title": "You are given N integers A_1, A_2, \\ldots, A_N.",
        "description": "Score : 800 points Problem StatementLet’s take a prime P = 200\\,003.\nYou are given N integers A_1, A_2, \\ldots, A_N.\nFind the sum of ((A_i \\cdot A_j) \\bmod P) over all N \\cdot (N-1) / 2 unordered pairs of elements (i < j).\nPlease note that the sum isn't computed modulo P. Let’s take a prime P = 200\\,003.\nYou are given N integers A_1, A_2, \\ldots, A_N.\nFind the sum of ((A_i \\cdot A_j) \\bmod P) over all N \\cdot (N-1) / 2 unordered pairs of elements (i < j). Please note that the sum isn't computed modulo P. Print one integer — the sum over ((A_i \\cdot A_j) \\bmod P). The non-zero products are: So the answer is 0 + 78320 + 197984 + 0 + 0 + 197983 = 474287. Let’s take a prime P = 200\\,003.\nYou are given N integers A_1, A_2, \\ldots, A_N.\nFind the sum of ((A_i \\cdot A_j) \\bmod P) over all N \\cdot (N-1) / 2 unordered pairs of elements (i < j). Please note that the sum isn't computed modulo P.",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02590.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 \\leq N \\leq 200\\,000\n0 \\leq A_i < P = 200\\,003\nAll values in input are integers.",
          "ranges": "200"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n2019 0 2020 200002",
            "output": "474287 The non-zero products are: 2019 \\cdot 2020 \\bmod P = 78320\n2019 \\cdot 200002 \\bmod P = 197984\n2020 \\cdot 200002 \\bmod P = 197983 So the answer is 0 + 78320 + 197984 + 0 + 0 + 197983 = 474287.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02590.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02590"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02591",
        "title": "There are two perfect binary trees of height H,",
        "description": "Score : 1000 points Problem StatementInspired by the tv series Stranger Things, bear Limak is going for a walk between two mirror worlds.\nThere are two perfect binary trees of height H,\n    each with the standard numeration of vertices from 1 to 2^H-1.\nThe root is 1 and the children of x are 2 \\cdot x and 2 \\cdot x + 1.\nLet L denote the number of leaves in a single tree, L = 2^{H-1}.\nYou are given a permutation P_1, P_2, \\ldots, P_L of numbers 1 through L.\nIt describes L special edges that connect leaves of the two trees.\nThere is a special edge between vertex L+i-1 in the first tree and vertex L+P_i-1 in the second tree.\n\ndrawing for the first sample test, permutation P = (2, 3, 1, 4), special edges in green\nLet's define product of a cycle as the product of numbers in its vertices.\nCompute the sum of products of all simple cycles that have exactly two special edges, modulo (10^9+7).\nA simple cycle is a cycle of length at least 3, without repeated vertices or edges. Inspired by the tv series Stranger Things, bear Limak is going for a walk between two mirror worlds. There are two perfect binary trees of height H,\n    each with the standard numeration of vertices from 1 to 2^H-1.\nThe root is 1 and the children of x are 2 \\cdot x and 2 \\cdot x + 1. Let L denote the number of leaves in a single tree, L = 2^{H-1}. You are given a permutation P_1, P_2, \\ldots, P_L of numbers 1 through L.\nIt describes L special edges that connect leaves of the two trees.\nThere is a special edge between vertex L+i-1 in the first tree and vertex L+P_i-1 in the second tree. drawing for the first sample test, permutation P = (2, 3, 1, 4), special edges in green Let's define product of a cycle as the product of numbers in its vertices.\nCompute the sum of products of all simple cycles that have exactly two special edges, modulo (10^9+7). A simple cycle is a cycle of length at least 3, without repeated vertices or edges. Compute the sum of products of simple cycles that have exactly two special edges.\nPrint the answer modulo (10^9+7). The following drawings show two valid cycles (but there are more!) with products\n    2 \\cdot 5 \\cdot 6 \\cdot 3 \\cdot 1 \\cdot 2 \\cdot 5 \\cdot 4 = 7200\n    and 1 \\cdot 3 \\cdot 7 \\cdot 7 \\cdot 3 \\cdot 1 \\cdot 2 \\cdot 5 \\cdot 4 \\cdot 2 = 35280.\nThe third cycle is invalid because it doesn't have exactly two special edges. The only simple cycle in the graph indeed has two special edges, and the product of vertices is\n    1 \\cdot 3 \\cdot 3 \\cdot 1 \\cdot 2 \\cdot 2 = 36. Inspired by the tv series Stranger Things, bear Limak is going for a walk between two mirror worlds. There are two perfect binary trees of height H,\n    each with the standard numeration of vertices from 1 to 2^H-1.\nThe root is 1 and the children of x are 2 \\cdot x and 2 \\cdot x + 1. Let L denote the number of leaves in a single tree, L = 2^{H-1}. You are given a permutation P_1, P_2, \\ldots, P_L of numbers 1 through L.\nIt describes L special edges that connect leaves of the two trees.\nThere is a special edge between vertex L+i-1 in the first tree and vertex L+P_i-1 in the second tree. drawing for the first sample test, permutation P = (2, 3, 1, 4), special edges in green Let's define product of a cycle as the product of numbers in its vertices.\nCompute the sum of products of all simple cycles that have exactly two special edges, modulo (10^9+7). A simple cycle is a cycle of length at least 3, without repeated vertices or edges.",
        "difficulty": "Medium",
        "category": "Trees & Graphs",
        "tags": [
          "math",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02591.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 \\leq H \\leq 18\n1 \\leq P_i \\leq L where L = 2^{H-1}\nP_i \\neq P_j (so this is a permutation)",
          "ranges": "2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n2 3 1 4",
            "output": "121788 The following drawings show two valid cycles (but there are more!) with products\n    2 \\cdot 5 \\cdot 6 \\cdot 3 \\cdot 1 \\cdot 2 \\cdot 5 \\cdot 4 = 7200\n    and 1 \\cdot 3 \\cdot 7 \\cdot 7 \\cdot 3 \\cdot 1 \\cdot 2 \\cdot 5 \\cdot 4 \\cdot 2 = 35280.\nThe third cycle is invalid because it doesn't have exactly two special edges.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02591.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02591"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02592",
        "title": "There is no input in this problem, you just print a sequence of operations.",
        "description": "Score : 1800 points Problem StatementThis is an output-only problem. You shouldn't read anything from the input.\nIn short, your task is to simulate multiplication by using only comparison (x < y) and addition (x + y).\nThere is no input in this problem, you just print a sequence of operations.\nImagine that there is a big array a[0], a[1], ..., a[N-1] of length N.\nThe first two values are initially two non-negative integers A and B (which are unknown to you),\n    the other elements are zeros.\nYour goal is to get the product A \\cdot B in a[2] at the end.\nYou are allowed operations of two types, with the following format (where 0 \\leq i, j, k < N):\n\n+ i j k — applies operation a[k] = a[i] + a[j].\n< i j k — applies operation a[k] = a[i] < a[j].\n    That is, if a[i] < a[j] then a[k] becomes 1, otherwise it becomes 0.\n\nYou can use at most Q operations.\nElements of a can't exceed V.\nIndices (i, j, k) don't have to be distinct.\nIt's allowed to modify any element of the array (including the first two).\nThe actual checker simulates the process for multiple pairs (A, B) within a single test.\nEach time, the checker chooses values A and B, creates the array a = [A, B, 0, 0, \\ldots, 0],\n    applies all your operations and ensures that a[2] = A \\cdot B. This is an output-only problem. You shouldn't read anything from the input. In short, your task is to simulate multiplication by using only comparison (x < y) and addition (x + y).\nThere is no input in this problem, you just print a sequence of operations. Imagine that there is a big array a[0], a[1], ..., a[N-1] of length N.\nThe first two values are initially two non-negative integers A and B (which are unknown to you),\n    the other elements are zeros.\nYour goal is to get the product A \\cdot B in a[2] at the end. You are allowed operations of two types, with the following format (where 0 \\leq i, j, k < N): You can use at most Q operations.\nElements of a can't exceed V.\nIndices (i, j, k) don't have to be distinct.\nIt's allowed to modify any element of the array (including the first two).\nThe actual checker simulates the process for multiple pairs (A, B) within a single test.\nEach time, the checker chooses values A and B, creates the array a = [A, B, 0, 0, \\ldots, 0],\n    applies all your operations and ensures that a[2] = A \\cdot B. Partial Score\n800 points will be awarded for passing tests that satisfy A, B \\leq 10.\nAnother 1000 points will be awarded for passing all tests. In the first line, print the number of operations.\nEach operation should then be printed in a single line of format + i j k or < i j k. In the first sample test, the checker checks your sequence only for a pair (A, B) = (2, 3).\nThe provided output is correct for this test: This is an output-only problem. You shouldn't read anything from the input. In short, your task is to simulate multiplication by using only comparison (x < y) and addition (x + y).\nThere is no input in this problem, you just print a sequence of operations. Imagine that there is a big array a[0], a[1], ..., a[N-1] of length N.\nThe first two values are initially two non-negative integers A and B (which are unknown to you),\n    the other elements are zeros.\nYour goal is to get the product A \\cdot B in a[2] at the end. You are allowed operations of two types, with the following format (where 0 \\leq i, j, k < N): + i j k — applies operation a[k] = a[i] + a[j].\n< i j k — applies operation a[k] = a[i] < a[j].\n    That is, if a[i] < a[j] then a[k] becomes 1, otherwise it becomes 0. You can use at most Q operations.\nElements of a can't exceed V.\nIndices (i, j, k) don't have to be distinct.\nIt's allowed to modify any element of the array (including the first two).\nThe actual checker simulates the process for multiple pairs (A, B) within a single test.\nEach time, the checker chooses values A and B, creates the array a = [A, B, 0, 0, \\ldots, 0],\n    applies all your operations and ensures that a[2] = A \\cdot B.",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "math",
          "simulation",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02592.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0 \\leq A, B \\leq 10^9\nN = Q = 200\\,000\nV = 10^{19} = 10\\,000\\,000\\,000\\,000\\,000\\,000",
          "ranges": "200; 10"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "The Standard Input is empty.",
            "output": "4\n< 0 1 8\n+ 0 1 2\n+ 2 8 2\n+ 0 0 0 In the first sample test, the checker checks your sequence only for a pair (A, B) = (2, 3).\nThe provided output is correct for this test: Initially, a[0] = 2, a[1] = 3, a[2] = a[3] = \\ldots = a[N-1] = 0.\n< 0 1 8 applies a[8] = 1 because a[0] < a[1].\n+ 0 1 2 applies a[2] = a[0] + a[1] = 5.\n+ 2 8 2 applies a[2] = a[2] + a[8] = 6.\n+ 0 0 0 applies a[0] = a[0] + a[0] = 4.\nAs required, at the end we have a[2] = 6 = A \\cdot B.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02592.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02592"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02618",
        "title": "The satisfaction at the beginning of day 1 is 0. Satisfaction can be negative.",
        "description": "Problem StatementAtCoder currently hosts three types of contests: ABC, ARC, and AGC. As the number of users has grown, in order to meet the needs of more users, AtCoder has decided to increase the number of contests to 26 types, from AAC to AZC. For convenience, we number these 26 types as type 1 through type 26. AtCoder wants to schedule contests for D days so that user satisfaction is as high as possible. For every day, AtCoder will hold exactly one contest, and each contest will end on that day. The satisfaction is calculated as follows.\n\nThe satisfaction at the beginning of day 1 is 0. Satisfaction can be negative.\nHolding contests increases satisfaction. The amount of increase will vary depending on a variety of factors. Specifically, we know in advance that holding a contest of type i on day d will increase the satisfaction by s_{d,i}.\nIf a particular type of contest is not held for a while, the satisfaction decreases. Each contest type i has an integer c_i, and at the end of each day d=1,2,...,D, the satisfaction decreases as follows. Let \\mathrm{last}(d,i) be the last day before day d (including d) on which a contest of type i was held. If contests of type i have never been held yet, we define \\mathrm{last}(d,i)=0. At the end of day d, the satisfaction decreases by \\sum _{i=1}^{26}c_i \\times (d-\\mathrm{last}(d,i)).\n\nPlease schedule contests on behalf of AtCoder.\nIf the satisfaction at the end of day D is S, you will get a score of \\max(10^6 + S, 0).\nThere are 50 test cases, and the score of a submission is the total scores for each test case.\nYou can make submissions multiple times, and the highest score among your submissions will be your score. AtCoder currently hosts three types of contests: ABC, ARC, and AGC. As the number of users has grown, in order to meet the needs of more users, AtCoder has decided to increase the number of contests to 26 types, from AAC to AZC. For convenience, we number these 26 types as type 1 through type 26. AtCoder wants to schedule contests for D days so that user satisfaction is as high as possible. For every day, AtCoder will hold exactly one contest, and each contest will end on that day. The satisfaction is calculated as follows. Please schedule contests on behalf of AtCoder.\nIf the satisfaction at the end of day D is S, you will get a score of \\max(10^6 + S, 0).\nThere are 50 test cases, and the score of a submission is the total scores for each test case.\nYou can make submissions multiple times, and the highest score among your submissions will be your score. Any output that does not follow the above format may result in 0 pointsWA for that test case. Each integer c_i and s_{d,i} is generated independently and uniformly at random from the integers in the range described in the problem statement. Note that this example is a small one for checking the problem specification. It does not satisfy the constraint D=365 and is never actually given as a test case. The final satisfaction with this output is 79325, so the score is 1079325. Beginner's GuideIf you don't know what to do, proceed to problem B or C. If you don't know what to do, proceed to problem B or C. AtCoder currently hosts three types of contests: ABC, ARC, and AGC. As the number of users has grown, in order to meet the needs of more users, AtCoder has decided to increase the number of contests to 26 types, from AAC to AZC. For convenience, we number these 26 types as type 1 through type 26. AtCoder wants to schedule contests for D days so that user satisfaction is as high as possible. For every day, AtCoder will hold exactly one contest, and each contest will end on that day. The satisfaction is calculated as follows. The satisfaction at the beginning of day 1 is 0. Satisfaction can be negative.\nHolding contests increases satisfaction. The amount of increase will vary depending on a variety of factors. Specifically, we know in advance that holding a contest of type i on day d will increase the satisfaction by s_{d,i}.\nIf a particular type of contest is not held for a while, the satisfaction decreases. Each contest type i has an integer c_i, and at the end of each day d=1,2,...,D, the satisfaction decreases as follows. Let \\mathrm{last}(d,i) be the last day before day d (including d) on which a contest of type i was held. If contests of type i have never been held yet, we define \\mathrm{last}(d,i)=0. At the end of day d, the satisfaction decreases by \\sum _{i=1}^{26}c_i \\times (d-\\mathrm{last}(d,i)). Please schedule contests on behalf of AtCoder.\nIf the satisfaction at the end of day D is S, you will get a score of \\max(10^6 + S, 0).\nThere are 50 test cases, and the score of a submission is the total scores for each test case.\nYou can make submissions multiple times, and the highest score among your submissions will be your score.",
        "difficulty": "Medium",
        "category": "Math & Logic",
        "tags": [
          "math",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02618.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "D = 365\nEach c_i is an integer satisfying 0\\leq c_i \\leq 100.\nEach s_{d,i} is an integer satisfying 0\\leq s_{d,i} \\leq 20000.",
          "ranges": "365"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n86 90 69 51 2 96 71 47 88 34 45 46 89 34 31 38 97 84 41 80 14 4 50 83 7 82\n19771 12979 18912 10432 10544 12928 13403 3047 10527 9740 8100 92 2856 14730 1396 15905 6534 4650 11469 3628 8433 2994 10899 16396 18355 11424\n6674 17707 13855 16407 12232 2886 11908 1705 5000 1537 10440 10711 4917 10770 17272 15364 19277 18094 3929 3705 7169 6159 18683 15410 9092 4570\n6878 4239 19925 1799 375 9563 3445 5658 19857 11401 6997 6498 19933 3848 2426 2146 19745 16880 17773 18359 3921 14172 16730 11157 5439 256\n8633 15862 15303 10749 18499 7792 10317 5901 9395 11433 3514 3959 5202 19850 19469 9790 5653 784 18500 10552 17975 16615 7852 197 8471 7452\n19855 17918 7990 10572 4333 438 9140 9104 12622 4985 12319 4028 19922 12132 16259 17476 2976 547 19195 19830 16285 4806 4471 9457 2864 2192",
            "output": "1\n17\n13\n14\n13 Note that this example is a small one for checking the problem specification. It does not satisfy the constraint D=365 and is never actually given as a test case. The final satisfaction with this output is 79325, so the score is 1079325. Input generator, score calculator, and visualizer",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02618.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02618"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02638",
        "title": "The in-degree of every vertex in G is at most K.",
        "description": "Score : 2000 points Problem StatementGiven are integers N and K, and a prime number P. Find the number, modulo P, of directed graphs G with N vertices that satisfy below. Here, the vertices are distinguishable from each other.\n\nG is a tournament, that is, G contains no duplicated edges or self-loops, and exactly one of the edges u\\to v and v\\to u exists for any two vertices u and v.\nThe in-degree of every vertex in G is at most K.\nFor any four distinct vertices a, b, c, and d in G, it is not the case that all of the six edges a\\to b, b\\to c, c\\to a, a\\to d, b\\to d, and c\\to d exist simultaneously. Given are integers N and K, and a prime number P. Find the number, modulo P, of directed graphs G with N vertices that satisfy below. Here, the vertices are distinguishable from each other. Print the number of directed graphs that satisfy the conditions, modulo P. Among the 64 graphs with four vertices, 8 are isomorphic to the forbidden induced subgraphs, and the other 56 satisfy the conditions. Given are integers N and K, and a prime number P. Find the number, modulo P, of directed graphs G with N vertices that satisfy below. Here, the vertices are distinguishable from each other. G is a tournament, that is, G contains no duplicated edges or self-loops, and exactly one of the edges u\\to v and v\\to u exists for any two vertices u and v.\nThe in-degree of every vertex in G is at most K.\nFor any four distinct vertices a, b, c, and d in G, it is not the case that all of the six edges a\\to b, b\\to c, c\\to a, a\\to d, b\\to d, and c\\to d exist simultaneously.",
        "difficulty": "Hard",
        "category": "Trees & Graphs",
        "tags": [
          "math",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02638.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "4 \\leq N \\leq 200\n\\frac{N-1}{2} \\leq K \\leq N-1\n10^8<P<10^9\nN and K are integers.\nP is a prime number.",
          "ranges": "8 10; 10; 8"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 3 998244353",
            "output": "56 Among the 64 graphs with four vertices, 8 are isomorphic to the forbidden induced subgraphs, and the other 56 satisfy the conditions.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02638.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02638"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02648",
        "title": "Vertex 1 is the root, and the parent of Vertex i (i \\geq 2) is Vertex \\left[ \\frac{i}{2} \\right].",
        "description": "Score : 700 points Problem StatementWe have a rooted binary tree with N vertices, where the vertices are numbered 1 to N.\nVertex 1 is the root, and the parent of Vertex i (i \\geq 2) is Vertex \\left[ \\frac{i}{2} \\right].\nEach vertex has one item in it. The item in Vertex i has a value of V_i and a weight of W_i.\nNow, process the following query Q times:\n\nGiven are a vertex v of the tree and a positive integer L.\n  Let us choose some (possibly none) of the items in v and the ancestors of v so that their total weight is at most L.\n  Find the maximum possible total value of the chosen items.\n\nHere, Vertex u is said to be an ancestor of Vertex v when u is an indirect parent of v, that is, there exists a sequence of vertices w_1,w_2,\\ldots,w_k (k\\geq 2) where w_1=v, w_k=u, and w_{i+1} is the parent of w_i for each i. We have a rooted binary tree with N vertices, where the vertices are numbered 1 to N.\nVertex 1 is the root, and the parent of Vertex i (i \\geq 2) is Vertex \\left[ \\frac{i}{2} \\right]. Each vertex has one item in it. The item in Vertex i has a value of V_i and a weight of W_i.\nNow, process the following query Q times: Here, Vertex u is said to be an ancestor of Vertex v when u is an indirect parent of v, that is, there exists a sequence of vertices w_1,w_2,\\ldots,w_k (k\\geq 2) where w_1=v, w_k=u, and w_{i+1} is the parent of w_i for each i. For each integer i from 1 through Q,\nthe i-th line should contain the response to the i-th query. In the first query, we are given only one choice: the item with (V, W)=(1,2). Since L = 1, we cannot actually choose it, so our response should be 0. In the second query, we are given two choices: the items with (V, W)=(1,2) and (V, W)=(2,3). Since L = 5, we can choose both of them, so our response should be 3. We have a rooted binary tree with N vertices, where the vertices are numbered 1 to N.\nVertex 1 is the root, and the parent of Vertex i (i \\geq 2) is Vertex \\left[ \\frac{i}{2} \\right]. Each vertex has one item in it. The item in Vertex i has a value of V_i and a weight of W_i.\nNow, process the following query Q times: Given are a vertex v of the tree and a positive integer L.\n  Let us choose some (possibly none) of the items in v and the ancestors of v so that their total weight is at most L.\n  Find the maximum possible total value of the chosen items. Here, Vertex u is said to be an ancestor of Vertex v when u is an indirect parent of v, that is, there exists a sequence of vertices w_1,w_2,\\ldots,w_k (k\\geq 2) where w_1=v, w_k=u, and w_{i+1} is the parent of w_i for each i.",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "array",
          "math",
          "sorting",
          "graph",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02648.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "All values in input are integers.\n1 \\leq N < 2^{18}\n1 \\leq Q \\leq 10^5\n1 \\leq V_i \\leq 10^5\n1 \\leq W_i \\leq 10^5\nFor the values v and L given in each query, 1 \\leq v \\leq N and 1 \\leq L \\leq 10^5.",
          "ranges": "2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n1 2\n2 3\n3 4\n3\n1 1\n2 5\n3 5",
            "output": "0\n3\n3 In the first query, we are given only one choice: the item with (V, W)=(1,2). Since L = 1, we cannot actually choose it, so our response should be 0. In the second query, we are given two choices: the items with (V, W)=(1,2) and (V, W)=(2,3). Since L = 5, we can choose both of them, so our response should be 3.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02648.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02648"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02649",
        "title": "The bitwise AND of the chosen numbers is S.",
        "description": "Score : 800 points Problem StatementGiven are N pairwise distinct non-negative integers A_1,A_2,\\ldots,A_N.\nFind the number of ways to choose a set of between 1 and K numbers (inclusive) from the given numbers so that the following two conditions are satisfied:\n\nThe bitwise AND of the chosen numbers is S.\nThe bitwise OR of the chosen numbers is T. Given are N pairwise distinct non-negative integers A_1,A_2,\\ldots,A_N.\nFind the number of ways to choose a set of between 1 and K numbers (inclusive) from the given numbers so that the following two conditions are satisfied: Print the answer. The conditions are satisfied when we choose \\{1,2\\} or \\{1,2,3\\}. Given are N pairwise distinct non-negative integers A_1,A_2,\\ldots,A_N.\nFind the number of ways to choose a set of between 1 and K numbers (inclusive) from the given numbers so that the following two conditions are satisfied: The bitwise AND of the chosen numbers is S.\nThe bitwise OR of the chosen numbers is T.",
        "difficulty": "Medium",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02649.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N \\leq 50\n1 \\leq K \\leq N\n0 \\leq A_i < 2^{18}\n0 \\leq S < 2^{18}\n0 \\leq T < 2^{18}\nA_i \\neq A_j (1 \\leq i < j \\leq N)",
          "ranges": "2; 2; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 3 0 3\n1 2 3",
            "output": "2 The conditions are satisfied when we choose \\{1,2\\} or \\{1,2,3\\}.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02649.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02649"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02659",
        "title": "Problem Statement",
        "description": "Score : 300 points Problem StatementCompute A \\times B, truncate its fractional part, and print the result as an integer. Compute A \\times B, truncate its fractional part, and print the result as an integer. Print the answer as an integer. We have 198 \\times 1.10 = 217.8. After truncating the fractional part, we have the answer: 217. Compute A \\times B, truncate its fractional part, and print the result as an integer.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02659.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0 \\leq A \\leq 10^{15}\n0 \\leq B < 10\nA is an integer.\nB is a number with two digits after the decimal point.",
          "ranges": "10"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "198 1.10",
            "output": "217 We have 198 \\times 1.10 = 217.8. After truncating the fractional part, we have the answer: 217.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02659.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02659"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02673",
        "title": "What is the expected gain of an optimal strategy?",
        "description": "Score : 1300 points Problem StatementYou are playing a game and your goal is to maximize your expected gain.\nAt the beginning of the game, a pawn is put, uniformly at random, at a position p\\in\\{1,2,\\dots, N\\}. The N positions are arranged on a circle (so that 1 is between N and 2).\nThe game consists of turns. At each turn you can either end the game, and get A_p dollars (where p is the current position of the pawn), or pay B_p dollar to keep playing.\nIf you decide to keep playing, the pawn is randomly moved to one of the two adjacent positions p-1, p+1 (with the identifications 0 = N and N+1=1).\nWhat is the expected gain of an optimal strategy?\nNote: The \"expected gain of an optimal strategy\" shall be defined as the supremum of the expected gain among all strategies such that the game ends in a finite number of turns. You are playing a game and your goal is to maximize your expected gain.\nAt the beginning of the game, a pawn is put, uniformly at random, at a position p\\in\\{1,2,\\dots, N\\}. The N positions are arranged on a circle (so that 1 is between N and 2). The game consists of turns. At each turn you can either end the game, and get A_p dollars (where p is the current position of the pawn), or pay B_p dollar to keep playing.\nIf you decide to keep playing, the pawn is randomly moved to one of the two adjacent positions p-1, p+1 (with the identifications 0 = N and N+1=1). What is the expected gain of an optimal strategy? Note: The \"expected gain of an optimal strategy\" shall be defined as the supremum of the expected gain among all strategies such that the game ends in a finite number of turns. Print a single real number, the expected gain of an optimal strategy. \nYour answer will be considered correct if its relative or absolute error does not exceed 10^{-10}. You are playing a game and your goal is to maximize your expected gain.\nAt the beginning of the game, a pawn is put, uniformly at random, at a position p\\in\\{1,2,\\dots, N\\}. The N positions are arranged on a circle (so that 1 is between N and 2). The game consists of turns. At each turn you can either end the game, and get A_p dollars (where p is the current position of the pawn), or pay B_p dollar to keep playing.\nIf you decide to keep playing, the pawn is randomly moved to one of the two adjacent positions p-1, p+1 (with the identifications 0 = N and N+1=1). What is the expected gain of an optimal strategy? Note: The \"expected gain of an optimal strategy\" shall be defined as the supremum of the expected gain among all strategies such that the game ends in a finite number of turns.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02673.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 \\le N \\le 200,000\n0 \\le A_p \\le 10^{12} for any p = 1,\\ldots, N\n0 \\le B_p \\le 100 for any p = 1, \\ldots, N\nAll values in input are integers.",
          "ranges": "1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n4 2 6 3 5\n1 1 1 1 1",
            "output": "4.700000000000",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02673.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02673"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02695",
        "title": "Consider a sequence A satisfying the following conditions:",
        "description": "Score : 300 points Problem StatementGiven are positive integers N, M, Q, and Q quadruples of integers ( a_i , b_i , c_i , d_i ).\nConsider a sequence A satisfying the following conditions:\n\nA is a sequence of N positive integers.\n1 \\leq A_1 \\leq A_2 \\le \\cdots \\leq A_N \\leq M.\n\nLet us define a score of this sequence as follows:\n\nThe score is the sum of d_i over all indices i such that A_{b_i} - A_{a_i} = c_i. (If there is no such i, the score is 0.)\n\nFind the maximum possible score of A. Given are positive integers N, M, Q, and Q quadruples of integers ( a_i , b_i , c_i , d_i ). Consider a sequence A satisfying the following conditions: Let us define a score of this sequence as follows: Find the maximum possible score of A. Print the maximum possible score of A. When A = \\{1, 3, 4\\}, its score is 110. Under these conditions, no sequence has a score greater than 110, so the answer is 110. Given are positive integers N, M, Q, and Q quadruples of integers ( a_i , b_i , c_i , d_i ). Consider a sequence A satisfying the following conditions: A is a sequence of N positive integers.\n1 \\leq A_1 \\leq A_2 \\le \\cdots \\leq A_N \\leq M. Let us define a score of this sequence as follows: The score is the sum of d_i over all indices i such that A_{b_i} - A_{a_i} = c_i. (If there is no such i, the score is 0.) Find the maximum possible score of A.",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "array",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02695.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "All values in input are integers.\n2 ≤ N ≤ 10\n1 \\leq M \\leq 10\n1 \\leq Q \\leq 50\n1 \\leq a_i < b_i \\leq N ( i = 1, 2, ..., Q )\n0 \\leq c_i \\leq M - 1 ( i = 1, 2, ..., Q )\n(a_i, b_i, c_i) \\neq (a_j, b_j, c_j) (where i \\neq j)\n1 \\leq d_i \\leq 10^5 ( i = 1, 2, ..., Q )",
          "ranges": "2 10; 10; 1; 1; 1; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10",
            "output": "110 When A = \\{1, 3, 4\\}, its score is 110. Under these conditions, no sequence has a score greater than 110, so the answer is 110.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02695.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02695"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02696",
        "title": "Here floor(t) denotes the greatest integer not greater than the real number t.",
        "description": "Score : 400 points Problem StatementGiven are integers A, B, and N.\nFind the maximum possible value of floor(Ax/B) - A × floor(x/B) for a non-negative integer x not greater than N.\nHere floor(t) denotes the greatest integer not greater than the real number t. Given are integers A, B, and N. Find the maximum possible value of floor(Ax/B) - A × floor(x/B) for a non-negative integer x not greater than N. Here floor(t) denotes the greatest integer not greater than the real number t. Print the maximum possible value of floor(Ax/B) - A × floor(x/B) for a non-negative integer x not greater than N, as an integer. When x=3, floor(Ax/B)-A×floor(x/B) = floor(15/7) - 5×floor(3/7) = 2. This is the maximum value possible. Given are integers A, B, and N. Find the maximum possible value of floor(Ax/B) - A × floor(x/B) for a non-negative integer x not greater than N. Here floor(t) denotes the greatest integer not greater than the real number t.",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02696.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ A ≤ 10^{6}\n1 ≤ B ≤ 10^{12}\n1 ≤ N ≤ 10^{12}\nAll values in input are integers.",
          "ranges": "1 10; 1 10; 1 10; 10; 10; 10; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 7 4",
            "output": "2 When x=3, floor(Ax/B)-A×floor(x/B) = floor(15/7) - 5×floor(3/7) = 2. This is the maximum value possible.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02696.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02696"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02703",
        "title": "There are N cities numbered 1 to N, connected by M railroads.",
        "description": "Score : 500 points Problem Statement\nThere are N cities numbered 1 to N, connected by M railroads.\nYou are now at City 1, with 10^{100} gold coins and S silver coins in your pocket.\nThe i-th railroad connects City U_i and City V_i bidirectionally, and a one-way trip costs A_i silver coins and takes B_i minutes.\nYou cannot use gold coins to pay the fare.\nThere is an exchange counter in each city. At the exchange counter in City i, you can get C_i silver coins for 1 gold coin.\nThe transaction takes D_i minutes for each gold coin you give.\nYou can exchange any number of gold coins at each exchange counter.\nFor each t=2, ..., N, find the minimum time needed to travel from City 1 to City t. You can ignore the time spent waiting for trains. There are N cities numbered 1 to N, connected by M railroads. You are now at City 1, with 10^{100} gold coins and S silver coins in your pocket. The i-th railroad connects City U_i and City V_i bidirectionally, and a one-way trip costs A_i silver coins and takes B_i minutes.\nYou cannot use gold coins to pay the fare. There is an exchange counter in each city. At the exchange counter in City i, you can get C_i silver coins for 1 gold coin.\nThe transaction takes D_i minutes for each gold coin you give.\nYou can exchange any number of gold coins at each exchange counter. For each t=2, ..., N, find the minimum time needed to travel from City 1 to City t. You can ignore the time spent waiting for trains. For each t=2, ..., N in this order, print a line containing the minimum time needed to travel from City 1 to City t. The railway network in this input is shown in the figure below. In this figure, each city is labeled as follows: Similarly, each railroad is labeled as follows: You can travel from City 1 to City 2 in 2 minutes, as follows: You can travel from City 1 to City 3 in 14 minutes, as follows: The railway network in this input is shown in the figure below: You can travel from City 1 to City 4 in 7 minutes, as follows: The railway network in this input is shown in the figure below: You can travel from City 1 to City 6 in 16576 minutes, as follows: The railway network in this input is shown in the figure below: The railway network in this input is shown in the figure below: You can travel from City 1 to City 2 in 1000000001 minutes, as follows: There are N cities numbered 1 to N, connected by M railroads. You are now at City 1, with 10^{100} gold coins and S silver coins in your pocket. The i-th railroad connects City U_i and City V_i bidirectionally, and a one-way trip costs A_i silver coins and takes B_i minutes.\nYou cannot use gold coins to pay the fare. There is an exchange counter in each city. At the exchange counter in City i, you can get C_i silver coins for 1 gold coin.\nThe transaction takes D_i minutes for each gold coin you give.\nYou can exchange any number of gold coins at each exchange counter. For each t=2, ..., N, find the minimum time needed to travel from City 1 to City t. You can ignore the time spent waiting for trains.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02703.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 \\leq N \\leq 50\nN-1 \\leq M \\leq 100\n0 \\leq S \\leq 10^9\n1 \\leq A_i \\leq 50\n1 \\leq B_i,C_i,D_i \\leq 10^9\n1 \\leq U_i < V_i \\leq N\nThere is no pair i, j(i \\neq j) such that (U_i,V_i)=(U_j,V_j).\nEach city t=2,...,N can be reached from City 1 with some number of railroads.\nAll values in input are integers.",
          "ranges": "2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 2 1\n1 2 1 2\n1 3 2 4\n1 11\n1 2\n2 5",
            "output": "2\n14 The railway network in this input is shown in the figure below. In this figure, each city is labeled as follows: The first line: the ID number i of the city (i for City i)\nThe second line: C_i / D_i Similarly, each railroad is labeled as follows: The first line: the ID number i of the railroad (i for the i-th railroad in input)\nThe second line: A_i / B_i You can travel from City 1 to City 2 in 2 minutes, as follows: Use the 1-st railroad to move from City 1 to City 2 in 2 minutes. You can travel from City 1 to City 3 in 14 minutes, as follows: Use the 1-st railroad to move from City 1 to City 2 in 2 minutes.\nAt the exchange counter in City 2, exchange 3 gold coins for 3 silver coins in 6 minutes.\nUse the 1-st railroad to move from City 2 to City 1 in 2 minutes.\nUse the 2-nd railroad to move from City 1 to City 3 in 4 minutes.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02703.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02703"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02719",
        "title": "Operation: Replace x with the absolute difference of x and K.",
        "description": "Score : 300 points Problem StatementGiven any integer x, Aoki can do the operation below.\nOperation: Replace x with the absolute difference of x and K.\nYou are given the initial value of an integer N. Find the minimum possible value taken by N after Aoki does the operation zero or more times. Given any integer x, Aoki can do the operation below. Operation: Replace x with the absolute difference of x and K. You are given the initial value of an integer N. Find the minimum possible value taken by N after Aoki does the operation zero or more times. Print the minimum possible value taken by N after Aoki does the operation zero or more times. Initially, N=7. After one operation, N becomes |7-4| = 3. After two operations, N becomes |3-4| = 1, which is the minimum value taken by N. N=2 after zero operations is the minimum. Given any integer x, Aoki can do the operation below. Operation: Replace x with the absolute difference of x and K. You are given the initial value of an integer N. Find the minimum possible value taken by N after Aoki does the operation zero or more times.",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02719.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0 ≤ N ≤ 10^{18}\n1 ≤ K ≤ 10^{18}\nAll values in input are integers.",
          "ranges": "0 10; 1 10; 10; 10; 0; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "7 4",
            "output": "1 Initially, N=7. After one operation, N becomes |7-4| = 3. After two operations, N becomes |3-4| = 1, which is the minimum value taken by N.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02719.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02719"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02726",
        "title": "We have an undirected graph G with N vertices numbered 1 to N and N edges as follows:",
        "description": "Score : 400 points Problem Statement\nWe have an undirected graph G with N vertices numbered 1 to N and N edges as follows:\n\nFor each i=1,2,...,N-1, there is an edge between Vertex i and Vertex i+1.\nThere is an edge between Vertex X and Vertex Y.\n\nFor each k=1,2,...,N-1, solve the problem below:\n\nFind the number of pairs of integers (i,j) (1 \\leq i < j \\leq N) such that the shortest distance between Vertex i and Vertex j in G is k. We have an undirected graph G with N vertices numbered 1 to N and N edges as follows: For each k=1,2,...,N-1, solve the problem below: For each k=1, 2, ..., N-1 in this order, print a line containing the answer to the problem. The graph in this input is as follows:\n\n\n\n\n\nThere are five pairs (i,j) (1 \\leq i < j \\leq N) such that the shortest distance between Vertex i and Vertex j is 1: (1,2)\\,,(2,3)\\,,(2,4)\\,,(3,4)\\,,(4,5).\n\nThere are four pairs (i,j) (1 \\leq i < j \\leq N) such that the shortest distance between Vertex i and Vertex j is 2: (1,3)\\,,(1,4)\\,,(2,5)\\,,(3,5).\n\nThere is one pair (i,j) (1 \\leq i < j \\leq N) such that the shortest distance between Vertex i and Vertex j is 3: (1,5).\n\nThere are no pairs (i,j) (1 \\leq i < j \\leq N) such that the shortest distance between Vertex i and Vertex j is 4. The graph in this input is as follows: We have an undirected graph G with N vertices numbered 1 to N and N edges as follows: For each i=1,2,...,N-1, there is an edge between Vertex i and Vertex i+1.\nThere is an edge between Vertex X and Vertex Y. For each k=1,2,...,N-1, solve the problem below: Find the number of pairs of integers (i,j) (1 \\leq i < j \\leq N) such that the shortest distance between Vertex i and Vertex j in G is k.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "math",
          "sorting",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02726.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3 \\leq N \\leq 2 \\times 10^3\n1 \\leq X,Y \\leq N\nX+1 < Y\nAll values in input are integers.",
          "ranges": "1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 2 4",
            "output": "5\n4\n1\n0 The graph in this input is as follows:\n\n\n\n\n\nThere are five pairs (i,j) (1 \\leq i < j \\leq N) such that the shortest distance between Vertex i and Vertex j is 1: (1,2)\\,,(2,3)\\,,(2,4)\\,,(3,4)\\,,(4,5).\n\nThere are four pairs (i,j) (1 \\leq i < j \\leq N) such that the shortest distance between Vertex i and Vertex j is 2: (1,3)\\,,(1,4)\\,,(2,5)\\,,(3,5).\n\nThere is one pair (i,j) (1 \\leq i < j \\leq N) such that the shortest distance between Vertex i and Vertex j is 3: (1,5).\n\nThere are no pairs (i,j) (1 \\leq i < j \\leq N) such that the shortest distance between Vertex i and Vertex j is 4.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02726.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02726"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02731",
        "title": "Problem Statement",
        "description": "Score : 300 points Problem StatementGiven is a positive integer L.\nFind the maximum possible volume of a rectangular cuboid whose sum of the dimensions (not necessarily integers) is L. Given is a positive integer L.\nFind the maximum possible volume of a rectangular cuboid whose sum of the dimensions (not necessarily integers) is L. Print the maximum possible volume of a rectangular cuboid whose sum of the dimensions (not necessarily integers) is L.\nYour output is considered correct if its absolute or relative error from our answer is at most 10^{-6}. For example, a rectangular cuboid whose dimensions are 0.8, 1, and 1.2 has a volume of 0.96. On the other hand, if the dimensions are 1, 1, and 1, the volume of the rectangular cuboid is 1, which is greater. Given is a positive integer L.\nFind the maximum possible volume of a rectangular cuboid whose sum of the dimensions (not necessarily integers) is L.",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02731.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ L ≤ 1000\nL is an integer.",
          "ranges": "1 1000; 1000; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3",
            "output": "1.000000000000 For example, a rectangular cuboid whose dimensions are 0.8, 1, and 1.2 has a volume of 0.96. On the other hand, if the dimensions are 1, 1, and 1, the volume of the rectangular cuboid is 1, which is greater.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02731.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02731"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02736",
        "title": "Let x_{i,j} defined as follows:",
        "description": "Score : 700 points Problem StatementGiven is a sequence of N digits a_1a_2\\ldots a_N, where each element is 1, 2, or 3.\nLet x_{i,j} defined as follows:\n\nx_{1,j} := a_j \\quad (1 \\leq j \\leq N)\nx_{i,j} := | x_{i-1,j} - x_{i-1,j+1} | \\quad (2 \\leq i \\leq N and 1 \\leq j \\leq N+1-i)\n\nFind x_{N,1}. Given is a sequence of N digits a_1a_2\\ldots a_N, where each element is 1, 2, or 3.\nLet x_{i,j} defined as follows: Find x_{N,1}. Print x_{N,1}. x_{1,1},x_{1,2},x_{1,3},x_{1,4} are respectively 1,2,3,1. x_{2,1},x_{2,2},x_{2,3} are respectively |1-2| = 1,|2-3| = 1,|3-1| = 2. x_{3,1},x_{3,2} are respectively |1-1| = 0,|1-2| = 1. Finally, x_{4,1} = |0-1| = 1, so the answer is 1. Given is a sequence of N digits a_1a_2\\ldots a_N, where each element is 1, 2, or 3.\nLet x_{i,j} defined as follows: x_{1,j} := a_j \\quad (1 \\leq j \\leq N)\nx_{i,j} := | x_{i-1,j} - x_{i-1,j+1} | \\quad (2 \\leq i \\leq N and 1 \\leq j \\leq N+1-i) Find x_{N,1}.",
        "difficulty": "Medium",
        "category": "Arrays & Strings",
        "tags": [
          "array"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02736.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 \\leq N \\leq 10^6\na_i = 1,2,3 (1 \\leq i \\leq N)",
          "ranges": "1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n1231",
            "output": "1 x_{1,1},x_{1,2},x_{1,3},x_{1,4} are respectively 1,2,3,1. x_{2,1},x_{2,2},x_{2,3} are respectively |1-2| = 1,|2-3| = 1,|3-1| = 2. x_{3,1},x_{3,2} are respectively |1-1| = 0,|1-2| = 1. Finally, x_{4,1} = |0-1| = 1, so the answer is 1.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02736.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02736"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02739",
        "title": "Let x = \\sum_{i \\in S} 2^i and B_S be the set of points \\{ (i+0.5,0.5) | i \\in S \\}.",
        "description": "Score : 1400 points Given are a positive integer N and a sequence of length 2^N consisting of 0s and 1s: A_0,A_1,\\ldots,A_{2^N-1}.\nDetermine whether there exists a closed curve C that satisfies the condition below for all 2^N sets S \\subseteq \\{0,1,\\ldots,N-1 \\}. If the answer is yes, construct one such closed curve. NotesC is said to be a closed curve if and only if:\n\nC is a continuous function from [0,1] to \\mathbb{R}^2 such that C(0) = C(1).\n\nWe say that a closed curve C can be continuously moved without touching a set of points X so that it becomes a closed curve D if and only if:\n\nThere exists a function f : [0,1] \\times [0,1] \\rightarrow \\mathbb{R}^2 that satisfies all of the following.\nf is continuous.\nf(0,t) = C(t).\nf(1,t) = D(t).\nf(x,t) \\notin X. C is said to be a closed curve if and only if: We say that a closed curve C can be continuously moved without touching a set of points X so that it becomes a closed curve D if and only if: If there is no closed curve that satisfies the condition, print Impossible. If such a closed curve exists, print Possible in the first line.\nThen, print one such curve in the following format: This represents the closed polyline that passes (x_0,y_0),(x_1,y_1),\\ldots,(x_L,y_L) in this order. Here, all of the following must be satisfied: Additionally, the length of the closed curve L must satisfy 0 \\leq L \\leq 250000. It can be proved that, if there is a closed curve that satisfies the condition in Problem Statement, there is also a closed curve that can be expressed in this format. When S = \\emptyset, we can move this curve so that every point on it has a negative y-coordinate. When S = \\{0\\}, we cannot do so. The output represents the following curve: Given are a positive integer N and a sequence of length 2^N consisting of 0s and 1s: A_0,A_1,\\ldots,A_{2^N-1}.\nDetermine whether there exists a closed curve C that satisfies the condition below for all 2^N sets S \\subseteq \\{0,1,\\ldots,N-1 \\}. If the answer is yes, construct one such closed curve. Let x = \\sum_{i \\in S} 2^i and B_S be the set of points \\{ (i+0.5,0.5) | i \\in S \\}.\nIf there is a way to continuously move the closed curve C without touching B_S so that every point on the closed curve has a negative y-coordinate, A_x = 1.\nIf there is no such way, A_x = 0. For instruction on printing a closed curve, see Output below.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "array",
          "math",
          "geometry",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02739.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N \\leq 8\nA_i = 0,1 \\quad (0 \\leq i \\leq 2^N-1)\nA_0 = 1",
          "ranges": "0; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1\n10",
            "output": "Possible\n4\n0 0\n0 1\n1 1\n1 0\n0 0 When S = \\emptyset, we can move this curve so that every point on it has a negative y-coordinate. When S = \\{0\\}, we cannot do so.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02739.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02739"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02754",
        "title": "Initially, there is no ball placed.",
        "description": "Score : 200 points Problem StatementTakahashi has many red balls and blue balls. Now, he will place them in a row.\nInitially, there is no ball placed.\nTakahashi, who is very patient, will do the following operation 10^{100} times:\n\nPlace A blue balls at the end of the row of balls already placed. Then, place B red balls at the end of the row.\n\nHow many blue balls will be there among the first N balls in the row of balls made this way? Takahashi has many red balls and blue balls. Now, he will place them in a row. Initially, there is no ball placed. Takahashi, who is very patient, will do the following operation 10^{100} times: How many blue balls will be there among the first N balls in the row of balls made this way? Print the number of blue balls that will be there among the first N balls in the row of balls. Let b denote a blue ball, and r denote a red ball. The first eight balls in the row will be bbbrrrrb, among which there are four blue balls. He placed only red balls from the beginning. Among bbrrrr, there are two blue balls. Takahashi has many red balls and blue balls. Now, he will place them in a row. Initially, there is no ball placed. Takahashi, who is very patient, will do the following operation 10^{100} times: Place A blue balls at the end of the row of balls already placed. Then, place B red balls at the end of the row. How many blue balls will be there among the first N balls in the row of balls made this way?",
        "difficulty": "Medium",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02754.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N \\leq 10^{18}\nA, B \\geq 0\n0 < A + B \\leq 10^{18}\nAll values in input are integers.",
          "ranges": "0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "8 3 4",
            "output": "4 Let b denote a blue ball, and r denote a red ball. The first eight balls in the row will be bbbrrrrb, among which there are four blue balls.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02754.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02754"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02756",
        "title": "Starting with this string, he will produce a new one in the procedure given as follows.",
        "description": "Score : 400 points Problem StatementTakahashi has a string S consisting of lowercase English letters.\nStarting with this string, he will produce a new one in the procedure given as follows.\nThe procedure consists of Q operations. In Operation i (1 \\leq i \\leq Q), an integer T_i is provided, which means the following:\n\n\nIf T_i = 1: reverse the string S.\n\n\nIf T_i = 2: An integer F_i and a lowercase English letter C_i are additionally provided.\n\nIf F_i = 1 : Add C_i to the beginning of the string S.\nIf F_i = 2 : Add C_i to the end of the string S.\n\n\n\nHelp Takahashi by finding the final string that results from the procedure. Takahashi has a string S consisting of lowercase English letters. Starting with this string, he will produce a new one in the procedure given as follows. The procedure consists of Q operations. In Operation i (1 \\leq i \\leq Q), an integer T_i is provided, which means the following: If T_i = 1: reverse the string S. If T_i = 2: An integer F_i and a lowercase English letter C_i are additionally provided. Help Takahashi by finding the final string that results from the procedure. In the 3-rd through the (Q+2)-th lines, Query_i is one of the following: which means T_i = 1, and: which means T_i = 2. Print the resulting string. There will be Q = 4 operations. Initially, S is a. Operation 1: Add p at the beginning of S. S becomes pa. Operation 2: Reverse S. S becomes ap. Operation 3: Add c at the end of S. S becomes apc. Operation 4: Reverse S. S becomes cpa. Thus, the resulting string is cpa. There will be Q = 6 operations. Initially, S is a. Operation 1: S becomes aa. Operation 2: S becomes baa. Operation 3: S becomes aab. Operation 4: S becomes aabc. Operation 5: S becomes cbaa. Operation 6: S becomes aabc. Thus, the resulting string is aabc. Takahashi has a string S consisting of lowercase English letters. Starting with this string, he will produce a new one in the procedure given as follows. The procedure consists of Q operations. In Operation i (1 \\leq i \\leq Q), an integer T_i is provided, which means the following: If T_i = 1: reverse the string S.\n\n\nIf T_i = 2: An integer F_i and a lowercase English letter C_i are additionally provided.\n\nIf F_i = 1 : Add C_i to the beginning of the string S.\nIf F_i = 2 : Add C_i to the end of the string S. Help Takahashi by finding the final string that results from the procedure.",
        "difficulty": "Medium",
        "category": "Arrays & Strings",
        "tags": [
          "string"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02756.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq |S| \\leq 10^5\nS consists of lowercase English letters.\n1 \\leq Q \\leq 2 \\times 10^5\nT_i = 1 or 2.\nF_i = 1 or 2, if provided.\nC_i is a lowercase English letter, if provided.",
          "ranges": "1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "a\n4\n2 1 p\n1\n2 2 c\n1",
            "output": "cpa There will be Q = 4 operations. Initially, S is a. Operation 1: Add p at the beginning of S. S becomes pa.\n\n\nOperation 2: Reverse S. S becomes ap.\n\n\nOperation 3: Add c at the end of S. S becomes apc.\n\n\nOperation 4: Reverse S. S becomes cpa. Thus, the resulting string is cpa.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02756.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02756"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02762",
        "title": "Between these N users, there are some relationships - M friendships and K blockships.",
        "description": "Score : 400 points Problem StatementAn SNS has N users - User 1, User 2, \\cdots, User N.\nBetween these N users, there are some relationships - M friendships and K blockships.\nFor each i = 1, 2, \\cdots, M, there is a bidirectional friendship between User A_i and User B_i.\nFor each i = 1, 2, \\cdots, K, there is a bidirectional blockship between User C_i and User D_i.\nWe define User a to be a friend candidate for User b when all of the following four conditions are satisfied:\n\na \\neq b.\nThere is not a friendship between User a and User b.\nThere is not a blockship between User a and User b.\nThere exists a sequence c_0, c_1, c_2, \\cdots, c_L consisting of integers between 1 and N (inclusive) such that c_0 = a, c_L = b, and there is a friendship between User c_i and c_{i+1} for each i = 0, 1, \\cdots, L - 1.\n\nFor each user i = 1, 2, ... N, how many friend candidates does it have? An SNS has N users - User 1, User 2, \\cdots, User N. Between these N users, there are some relationships - M friendships and K blockships. For each i = 1, 2, \\cdots, M, there is a bidirectional friendship between User A_i and User B_i. For each i = 1, 2, \\cdots, K, there is a bidirectional blockship between User C_i and User D_i. We define User a to be a friend candidate for User b when all of the following four conditions are satisfied: For each user i = 1, 2, ... N, how many friend candidates does it have? Print the answers in order, with space in between. There is a friendship between User 2 and 3, and between 3 and 4. Also, there is no friendship or blockship between User 2 and 4. Thus, User 4 is a friend candidate for User 2. However, neither User 1 or 3 is a friend candidate for User 2, so User 2 has one friend candidate. Everyone is a friend of everyone else and has no friend candidate. An SNS has N users - User 1, User 2, \\cdots, User N. Between these N users, there are some relationships - M friendships and K blockships. For each i = 1, 2, \\cdots, M, there is a bidirectional friendship between User A_i and User B_i. For each i = 1, 2, \\cdots, K, there is a bidirectional blockship between User C_i and User D_i. We define User a to be a friend candidate for User b when all of the following four conditions are satisfied: a \\neq b.\nThere is not a friendship between User a and User b.\nThere is not a blockship between User a and User b.\nThere exists a sequence c_0, c_1, c_2, \\cdots, c_L consisting of integers between 1 and N (inclusive) such that c_0 = a, c_L = b, and there is a friendship between User c_i and c_{i+1} for each i = 0, 1, \\cdots, L - 1. For each user i = 1, 2, ... N, how many friend candidates does it have?",
        "difficulty": "Medium",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02762.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "All values in input are integers.\n2 ≤ N ≤ 10^5\n0 \\leq M \\leq 10^5\n0 \\leq K \\leq 10^5\n1 \\leq A_i, B_i \\leq N\nA_i \\neq B_i\n1 \\leq C_i, D_i \\leq N\nC_i \\neq D_i\n(A_i, B_i) \\neq (A_j, B_j) (i \\neq j)\n(A_i, B_i) \\neq (B_j, A_j)\n(C_i, D_i) \\neq (C_j, D_j) (i \\neq j)\n(C_i, D_i) \\neq (D_j, C_j)\n(A_i, B_i) \\neq (C_j, D_j)\n(A_i, B_i) \\neq (D_j, C_j)",
          "ranges": "2 10; 10; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 4 1\n2 1\n1 3\n3 2\n3 4\n4 1",
            "output": "0 1 0 1 There is a friendship between User 2 and 3, and between 3 and 4. Also, there is no friendship or blockship between User 2 and 4. Thus, User 4 is a friend candidate for User 2. However, neither User 1 or 3 is a friend candidate for User 2, so User 2 has one friend candidate.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02762.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02762"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02779",
        "title": "If its elements are pairwise distinct, print YES; otherwise, print NO.",
        "description": "Score : 300 points Problem StatementGiven is a sequence of integers A_1, A_2, ..., A_N.\nIf its elements are pairwise distinct, print YES; otherwise, print NO. Given is a sequence of integers A_1, A_2, ..., A_N.\nIf its elements are pairwise distinct, print YES; otherwise, print NO. If the elements of the sequence are pairwise distinct, print YES; otherwise, print NO. The elements are pairwise distinct. The second and fourth elements are identical. Given is a sequence of integers A_1, A_2, ..., A_N.\nIf its elements are pairwise distinct, print YES; otherwise, print NO.",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "array"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02779.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 200000\n1 ≤ A_i ≤ 10^9\nAll values in input are integers.",
          "ranges": "2 200000; 1 10; 200000; 10; 2; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n2 6 1 4 5",
            "output": "YES The elements are pairwise distinct.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02779.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02779"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02780",
        "title": "Problem Statement",
        "description": "Score : 400 points Problem StatementWe have N dice arranged in a line from left to right. The i-th die from the left shows p_i numbers from 1 to p_i with equal probability when thrown.\nWe will choose K adjacent dice, throw each of them independently, and compute the sum of the numbers shown. Find the maximum possible value of the expected value of this sum. We have N dice arranged in a line from left to right. The i-th die from the left shows p_i numbers from 1 to p_i with equal probability when thrown. We will choose K adjacent dice, throw each of them independently, and compute the sum of the numbers shown. Find the maximum possible value of the expected value of this sum. Print the maximum possible value of the expected value of the sum of the numbers shown. Your output will be considered correct when its absolute or relative error from our answer is at most 10^{-6}. When we throw the third, fourth, and fifth dice from the left, the expected value of the sum of the numbers shown is 7. This is the maximum value we can achieve. Regardless of which die we choose, the expected value of the number shown is 3.5. We have N dice arranged in a line from left to right. The i-th die from the left shows p_i numbers from 1 to p_i with equal probability when thrown. We will choose K adjacent dice, throw each of them independently, and compute the sum of the numbers shown. Find the maximum possible value of the expected value of this sum.",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02780.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ K ≤ N ≤ 200000\n1 ≤ p_i ≤ 1000\nAll values in input are integers.",
          "ranges": "1 1000; 200000; 1000; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 3\n1 2 2 4 5",
            "output": "7.000000000000 When we throw the third, fourth, and fifth dice from the left, the expected value of the sum of the numbers shown is 7. This is the maximum value we can achieve.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02780.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02780"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02781",
        "title": "Problem Statement",
        "description": "Score : 500 points Problem StatementFind the number of integers between 1 and N (inclusive) that contains exactly K non-zero digits when written in base ten. Find the number of integers between 1 and N (inclusive) that contains exactly K non-zero digits when written in base ten. Print the count. The following 19 integers satisfy the condition: The following 14 integers satisfy the condition: Find the number of integers between 1 and N (inclusive) that contains exactly K non-zero digits when written in base ten.",
        "difficulty": "Medium",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02781.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N < 10^{100}\n1 \\leq K \\leq 3",
          "ranges": "10"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "100\n1",
            "output": "19 The following 19 integers satisfy the condition: 1,2,3,4,5,6,7,8,9,10,20,30,40,50,60,70,80,90,100",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02781.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02781"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02782",
        "title": "Let us define a function f(r, c) as follows:",
        "description": "Score : 600 points Problem StatementSnuke is standing on a two-dimensional plane. In one operation, he can move by 1 in the positive x-direction, or move by 1 in the positive y-direction.\nLet us define a function f(r, c) as follows:\n\nf(r,c) :=  (The number of paths from the point (0, 0) to the point (r, c) that Snuke can trace by repeating the operation above)\n\nGiven are integers r_1, r_2, c_1, and c_2.\nFind the sum of f(i, j) over all pair of integers (i, j) such that r_1 ≤ i ≤ r_2 and c_1 ≤ j ≤ c_2, and compute this value modulo (10^9+7). Snuke is standing on a two-dimensional plane. In one operation, he can move by 1 in the positive x-direction, or move by 1 in the positive y-direction. Let us define a function f(r, c) as follows: Given are integers r_1, r_2, c_1, and c_2.\nFind the sum of f(i, j) over all pair of integers (i, j) such that r_1 ≤ i ≤ r_2 and c_1 ≤ j ≤ c_2, and compute this value modulo (10^9+7). Print the sum of f(i, j) modulo (10^9+7). For example, there are two paths from the point (0, 0) to the point (1, 1): (0,0) → (0,1) → (1,1) and (0,0) → (1,0) → (1,1), so f(1,1)=2. Similarly, f(1,2)=3, f(2,1)=3, and f(2,2)=6. Thus, the sum is 14. Snuke is standing on a two-dimensional plane. In one operation, he can move by 1 in the positive x-direction, or move by 1 in the positive y-direction. Let us define a function f(r, c) as follows: f(r,c) :=  (The number of paths from the point (0, 0) to the point (r, c) that Snuke can trace by repeating the operation above) Given are integers r_1, r_2, c_1, and c_2.\nFind the sum of f(i, j) over all pair of integers (i, j) such that r_1 ≤ i ≤ r_2 and c_1 ≤ j ≤ c_2, and compute this value modulo (10^9+7).",
        "difficulty": "Medium",
        "category": "Math & Logic",
        "tags": [
          "math",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02782.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ r_1 ≤ r_2 ≤ 10^6\n1 ≤ c_1 ≤ c_2 ≤ 10^6\nAll values in input are integers.",
          "ranges": "1 10; 1 10; 10; 10; 1; 2; 1; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1 1 2 2",
            "output": "14 For example, there are two paths from the point (0, 0) to the point (1, 1): (0,0) → (0,1) → (1,1) and (0,0) → (1,0) → (1,1), so f(1,1)=2. Similarly, f(1,2)=3, f(2,1)=3, and f(2,2)=6. Thus, the sum is 14.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02782.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02782"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02807",
        "title": "There are N slimes standing on a number line.",
        "description": "Score : 600 points Problem Statement\nThere are N slimes standing on a number line.\nThe i-th slime from the left is at position x_i.\nIt is guaruanteed that 1 \\leq x_1 < x_2 < \\ldots < x_N \\leq 10^{9}.\nNiwango will perform N-1 operations. The i-th operation consists of the following procedures:\n\nChoose an integer k between 1 and N-i (inclusive) with equal probability.\nMove the k-th slime from the left, to the position of the neighboring slime to the right.\nFuse the two slimes at the same position into one slime.\n\nFind the total distance traveled by the slimes multiplied by (N-1)! (we can show that this value is an integer), modulo (10^{9}+7). If a slime is born by a fuse and that slime moves, we count it as just one slime. There are N slimes standing on a number line.\nThe i-th slime from the left is at position x_i. It is guaruanteed that 1 \\leq x_1 < x_2 < \\ldots < x_N \\leq 10^{9}. Niwango will perform N-1 operations. The i-th operation consists of the following procedures: Find the total distance traveled by the slimes multiplied by (N-1)! (we can show that this value is an integer), modulo (10^{9}+7). If a slime is born by a fuse and that slime moves, we count it as just one slime. Subtasks\n\n400 points will be awarded for passing the test cases satisfying N \\leq 2000. Print the answer. There are N slimes standing on a number line.\nThe i-th slime from the left is at position x_i. It is guaruanteed that 1 \\leq x_1 < x_2 < \\ldots < x_N \\leq 10^{9}. Niwango will perform N-1 operations. The i-th operation consists of the following procedures: Choose an integer k between 1 and N-i (inclusive) with equal probability.\nMove the k-th slime from the left, to the position of the neighboring slime to the right.\nFuse the two slimes at the same position into one slime. Find the total distance traveled by the slimes multiplied by (N-1)! (we can show that this value is an integer), modulo (10^{9}+7). If a slime is born by a fuse and that slime moves, we count it as just one slime.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02807.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 \\leq N \\leq 10^{5}\n1 \\leq x_1 < x_2 < \\ldots < x_N \\leq 10^{9}\nx_i is an integer.",
          "ranges": "1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n1 2 3",
            "output": "5 With probability \\frac{1}{2}, the leftmost slime is chosen in the first operation, in which case the total distance traveled is 2.\nWith probability \\frac{1}{2}, the middle slime is chosen in the first operation, in which case the total distance traveled is 3.\nThe answer is the expected total distance traveled, 2.5, multiplied by 2!, which is 5.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02807.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02807"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02816",
        "title": "a_i'= a_{i+k \\mod N}\\ XOR \\ x",
        "description": "Score : 600 points Problem StatementGiven are two sequences a=\\{a_0,\\ldots,a_{N-1}\\} and b=\\{b_0,\\ldots,b_{N-1}\\} of N non-negative integers each.\nSnuke will choose an integer k such that 0 \\leq k < N and an integer x not less than 0, to make a new sequence of length N, a'=\\{a_0',\\ldots,a_{N-1}'\\}, as follows:\n\na_i'= a_{i+k \\mod N}\\ XOR \\ x\n\nFind all pairs (k,x) such that a' will be equal to b.\n\nWhat is \\mbox{ XOR }?\n\nThe XOR of integers A and B, A \\mbox{ XOR } B, is defined as follows:\n\nWhen A \\mbox{ XOR } B is written in base two, the digit in the 2^k's place (k \\geq 0) is 1 if either A or B, but not both, has 1 in the 2^k's place, and 0 otherwise.\n\nFor example, 3 \\mbox{ XOR } 5 = 6. (In base two: 011 \\mbox{ XOR } 101 = 110.) Given are two sequences a=\\{a_0,\\ldots,a_{N-1}\\} and b=\\{b_0,\\ldots,b_{N-1}\\} of N non-negative integers each. Snuke will choose an integer k such that 0 \\leq k < N and an integer x not less than 0, to make a new sequence of length N, a'=\\{a_0',\\ldots,a_{N-1}'\\}, as follows: Find all pairs (k,x) such that a' will be equal to b. The XOR of integers A and B, A \\mbox{ XOR } B, is defined as follows:\n\nWhen A \\mbox{ XOR } B is written in base two, the digit in the 2^k's place (k \\geq 0) is 1 if either A or B, but not both, has 1 in the 2^k's place, and 0 otherwise.\n\nFor example, 3 \\mbox{ XOR } 5 = 6. (In base two: 011 \\mbox{ XOR } 101 = 110.) Print all pairs (k, x) such that a' and b will be equal, using one line for each pair, in ascending order of k (ascending order of x for pairs with the same k). If there are no such pairs, the output should be empty. If (k,x)=(1,3), a_0'=(a_1\\ XOR \\ 3)=1 a_1'=(a_2\\ XOR \\ 3)=2 a_2'=(a_0\\ XOR \\ 3)=3 and we have a' = b. No pairs may satisfy the condition. Given are two sequences a=\\{a_0,\\ldots,a_{N-1}\\} and b=\\{b_0,\\ldots,b_{N-1}\\} of N non-negative integers each. Snuke will choose an integer k such that 0 \\leq k < N and an integer x not less than 0, to make a new sequence of length N, a'=\\{a_0',\\ldots,a_{N-1}'\\}, as follows: a_i'= a_{i+k \\mod N}\\ XOR \\ x Find all pairs (k,x) such that a' will be equal to b. What is \\mbox{ XOR }?\n\nThe XOR of integers A and B, A \\mbox{ XOR } B, is defined as follows:\n\nWhen A \\mbox{ XOR } B is written in base two, the digit in the 2^k's place (k \\geq 0) is 1 if either A or B, but not both, has 1 in the 2^k's place, and 0 otherwise.\n\nFor example, 3 \\mbox{ XOR } 5 = 6. (In base two: 011 \\mbox{ XOR } 101 = 110.)",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "array",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02816.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N \\leq 2 \\times 10^5\n0 \\leq a_i,b_i < 2^{30}\nAll values in input are integers.",
          "ranges": "2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n0 2 1\n1 2 3",
            "output": "1 3 If (k,x)=(1,3), a_0'=(a_1\\ XOR \\ 3)=1\n\n\na_1'=(a_2\\ XOR \\ 3)=2\n\n\na_2'=(a_0\\ XOR \\ 3)=3 and we have a' = b.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02816.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02816"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02826",
        "title": "Problem i must get an integer score A_i between 1 and N, inclusive.",
        "description": "Score : 1200 points Problem StatementN problems have been chosen by the judges, now it's time to assign scores to them!\nProblem i must get an integer score A_i between 1 and N, inclusive.\nThe problems have already been sorted by difficulty: A_1 \\le A_2 \\le \\ldots \\le A_N must hold.\nDifferent problems can have the same score, though.\nBeing an ICPC fan, you want contestants who solve more problems to be ranked higher.\nThat's why, for any k (1 \\le k \\le N-1), you want the sum of scores of any k problems to be strictly less than the sum of scores of any k+1 problems.\nHow many ways to assign scores do you have? Find this number modulo the given prime M. N problems have been chosen by the judges, now it's time to assign scores to them! Problem i must get an integer score A_i between 1 and N, inclusive.\nThe problems have already been sorted by difficulty: A_1 \\le A_2 \\le \\ldots \\le A_N must hold.\nDifferent problems can have the same score, though. Being an ICPC fan, you want contestants who solve more problems to be ranked higher.\nThat's why, for any k (1 \\le k \\le N-1), you want the sum of scores of any k problems to be strictly less than the sum of scores of any k+1 problems. How many ways to assign scores do you have? Find this number modulo the given prime M. Print the number of ways to assign scores to the problems, modulo M. The possible assignments are (1, 1), (1, 2), (2, 2). The possible assignments are (1, 1, 1), (1, 2, 2), (1, 3, 3), (2, 2, 2), (2, 2, 3), (2, 3, 3), (3, 3, 3). N problems have been chosen by the judges, now it's time to assign scores to them! Problem i must get an integer score A_i between 1 and N, inclusive.\nThe problems have already been sorted by difficulty: A_1 \\le A_2 \\le \\ldots \\le A_N must hold.\nDifferent problems can have the same score, though. Being an ICPC fan, you want contestants who solve more problems to be ranked higher.\nThat's why, for any k (1 \\le k \\le N-1), you want the sum of scores of any k problems to be strictly less than the sum of scores of any k+1 problems. How many ways to assign scores do you have? Find this number modulo the given prime M.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02826.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 \\leq N \\leq 5000\n9 \\times 10^8 < M < 10^9\nM is a prime.\nAll input values are integers.",
          "ranges": "8 10; 10; 8"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 998244353",
            "output": "3 The possible assignments are (1, 1), (1, 2), (2, 2).",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02826.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02826"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02835",
        "title": "If A_1+A_2+A_3 is greater than or equal to 22, print bust; otherwise, print win.",
        "description": "Score : 100 points Problem StatementGiven are three integers A_1, A_2, and A_3.\nIf A_1+A_2+A_3 is greater than or equal to 22, print bust; otherwise, print win. Given are three integers A_1, A_2, and A_3. If A_1+A_2+A_3 is greater than or equal to 22, print bust; otherwise, print win. If A_1+A_2+A_3 is greater than or equal to 22, print bust; otherwise, print win. 5+7+9=21, so print win. 13+7+2=22, so print bust. Given are three integers A_1, A_2, and A_3. If A_1+A_2+A_3 is greater than or equal to 22, print bust; otherwise, print win.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02835.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq A_i \\leq 13 \\ \\ (i=1,2,3)\nAll values in input are integers.",
          "ranges": "1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 7 9",
            "output": "win 5+7+9=21, so print win.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02835.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02835"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02838",
        "title": "Find \\sum_{i=1}^{N-1}\\sum_{j=i+1}^{N} (A_i \\mbox{ XOR } A_j), modulo (10^9+7).",
        "description": "Score : 400 points Problem StatementWe have N integers. The i-th integer is A_i.\nFind \\sum_{i=1}^{N-1}\\sum_{j=i+1}^{N} (A_i \\mbox{ XOR } A_j), modulo (10^9+7).\n\nWhat is \\mbox{ XOR }?\n\nThe XOR of integers A and B, A \\mbox{ XOR } B, is defined as follows:\n\nWhen A \\mbox{ XOR } B is written in base two, the digit in the 2^k's place (k \\geq 0) is 1 if either A or B, but not both, has 1 in the 2^k's place, and 0 otherwise.\n\nFor example, 3 \\mbox{ XOR } 5 = 6. (In base two: 011 \\mbox{ XOR } 101 = 110.) We have N integers. The i-th integer is A_i. Find \\sum_{i=1}^{N-1}\\sum_{j=i+1}^{N} (A_i \\mbox{ XOR } A_j), modulo (10^9+7). The XOR of integers A and B, A \\mbox{ XOR } B, is defined as follows:\n\nWhen A \\mbox{ XOR } B is written in base two, the digit in the 2^k's place (k \\geq 0) is 1 if either A or B, but not both, has 1 in the 2^k's place, and 0 otherwise.\n\nFor example, 3 \\mbox{ XOR } 5 = 6. (In base two: 011 \\mbox{ XOR } 101 = 110.) Print the value \\sum_{i=1}^{N-1}\\sum_{j=i+1}^{N} (A_i \\mbox{ XOR } A_j), modulo (10^9+7). We have (1\\mbox{ XOR } 2)+(1\\mbox{ XOR } 3)+(2\\mbox{ XOR } 3)=3+2+1=6. Print the sum modulo (10^9+7). We have N integers. The i-th integer is A_i. Find \\sum_{i=1}^{N-1}\\sum_{j=i+1}^{N} (A_i \\mbox{ XOR } A_j), modulo (10^9+7). What is \\mbox{ XOR }?\n\nThe XOR of integers A and B, A \\mbox{ XOR } B, is defined as follows:\n\nWhen A \\mbox{ XOR } B is written in base two, the digit in the 2^k's place (k \\geq 0) is 1 if either A or B, but not both, has 1 in the 2^k's place, and 0 otherwise.\n\nFor example, 3 \\mbox{ XOR } 5 = 6. (In base two: 011 \\mbox{ XOR } 101 = 110.)",
        "difficulty": "Medium",
        "category": "Math & Logic",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02838.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 \\leq N \\leq 3 \\times 10^5\n0 \\leq A_i < 2^{60}\nAll values in input are integers.",
          "ranges": "2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n1 2 3",
            "output": "6 We have (1\\mbox{ XOR } 2)+(1\\mbox{ XOR } 3)+(2\\mbox{ XOR } 3)=3+2+1=6.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02838.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02838"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02871",
        "title": "Problem Setting",
        "description": "Problem Setting Overview\n\nConcept: In this programming contest, you will run a delivery service. Customers will place orders with your shop. Each order has a unique \\text{ID} and should be delivered to the corresponding customer. Your delivery service has one car. The car will fetch the ordered item from the shop and deliver it to the customer.\nScore: Your goal is to deliver as many items as possible, as quickly as possible in a given amount of time T_{\\text{max}}. (Orders are expected until 0.95 \\times T_{\\text{max}}).\nConstraint: In this contest there is no constraint on the number of items you can place in the car. However, an item can only be loaded in the car, by fetching it from the shop, after the order has been placed.\nProblem A/B: In problem A all order positions and times are given to the contestant in advance and the contestant algorithm shall optimize the moves of the car to make as many deliveries as possible as fast as possible. On the other hand, in problem B orders appear online, that is new orders appear, while you move your car to make as many deliveries as possible as fast as possible. Specification of Car Locations and Moves:\nIn order to make deliveries you will operate a delivery car, which can take positions and make moves as specified below.\n\n\nCar position: A car can generally take two types of position:\n\non a vertex u \\in V.\non an edge \\left\\{ u, v \\right\\} \\in E. More specifically, it is located at a distance x (0 \\lt x \\lt d_{u, v}) from  u  to  v .\n\n\n\nCar move: At each step   0 \\le t < T_{\\text{max}}  you have to choose one of the following actions in order to control your delivery car.\n\nstay: stay at the current position.\nmove w: Take one step towards vertex w \\in V.\n\nIn case of choosing move w, w must obey the following constraints. A failure to obey these constraints results in a wrong answer WA.\n\n w must be a vertex, i.e., w \\in V.\n If the car is on vertex u \\in V, there must be an edge connecting u and v, i.e., \\left\\{ u, w \\right\\} \\in E.\n If the car is on the edge \\left\\{ u, v \\right\\} \\in E, w must either be w = u or w = v. In order to make deliveries you will operate a delivery car, which can take positions and make moves as specified below. Car position: A car can generally take two types of position: Car move: At each step   0 \\le t < T_{\\text{max}}  you have to choose one of the following actions in order to control your delivery car. In case of choosing move w, w must obey the following constraints. A failure to obey these constraints results in a wrong answer WA.\n\n w must be a vertex, i.e., w \\in V.\n If the car is on vertex u \\in V, there must be an edge connecting u and v, i.e., \\left\\{ u, w \\right\\} \\in E.\n If the car is on the edge \\left\\{ u, v \\right\\} \\in E, w must either be w = u or w = v. Scoring\n\n During the contest the total score of a submission is determined by summing the score of the submission with respect to 30 input cases.\n After the contest a system test will be performed. To this end, the contestant's last submission will be scored by summing the score of the submission on 100 previously unseen input cases.\n For each input case, the score is calculated as follows:\n\n \\text{Score} =\n    \\sum_{i \\in D} {(T_{\\text{max}})}^{2} - {(\\mathrm{waitingTime}_i)}^{2}, \n\nHere we use the following definitions:\n\n  D  : the set of orders delivered until t=T_{\\text{max}}\n the waiting time of the ith order: \\mathrm{waitingTime}_i = \\mathrm{deliveredTime}_i - \\mathrm{orderedTime}_i.\nNote that an input case giving the output WA will receive 0 points. \\text{Score} =\n    \\sum_{i \\in D} {(T_{\\text{max}})}^{2} - {(\\mathrm{waitingTime}_i)}^{2}, Particulars of Problem A\nIn problem A we pass all orders which appear at time  0 \\le t < 0.95 \\times T_{\\text{max}}  as an input to the contestant code. The task is to provide an algorithm which optimizes the moves of the car such that the above score becomes maximal. In problem A we pass all orders which appear at time  0 \\le t < 0.95 \\times T_{\\text{max}}  as an input to the contestant code. The task is to provide an algorithm which optimizes the moves of the car such that the above score becomes maximal. In the following line, \\mathrm{info}_t is information about the order from the customer that occurs at time t. \\mathrm{info}_t is given in the form: Requirements\n\n All inputs are of non-negative integer value. \n T_{\\text{max}} = 10000\n 200 \\leq |V| \\leq 400 \n 1.5 |V| \\leq |E| \\leq  2 |V|\n1 \\leq u_{i}, v_{i} \\leq |V| (1 \\leq i \\leq |E|)\n1 \\leq d_{u_i, v_i} \\leq \\lceil 4\\sqrt{2|V|} \\rceil (1 \\leq i \\leq |E|)\nThe given graph has no self-loops / multiple edges and is guaranteed to be connected.\n0 \\leq N_{\\text{new}} \\leq 1\n1 \\leq \\mathrm{new\\_id}_{i} \\leq T_{\\text{last}}+1 (1 \\leq i \\leq N_{\\text{new}}). Note: If all orders are generated by the order generation rule as explained above, the total number of orders is at most T_{\\text{last}}+1. Therefore, the possible range of \\mathrm{new\\_id}_{i} should be from 1 to T_{\\text{last}}+1.\n2 \\leq \\mathrm{dst}_i \\leq |V| (1 \\leq i \\leq N_{\\text{new}})\nThe order IDs \\mathrm{new\\_{id}}_i are unique. In particular, \\mathrm{command}_{i} shall specify the movement of the delivery car by using one of the following two options: 1) stay, if the car shall not move: 2) move w, if the car shall be moved one step towards the neighboring vertex w Note that in case of 2) w has to satisfy the following conditions: Note that this input is an example of small size and does not meet the constraints of the contest. Explanation\nThe example operates on a graph with |V| = 5 vertices, |E| = 7 edges, and T_{\\text{max}} = 4 time steps. We now describe the orders which have occured and the movement of the car.\nTime t=0\nAt time t=0 an order is placed at the shop. This order has ID= 1 and should be delivered to vertex  2. Because your car is currently at vertex one, the order will be automatically transfered into your car. In this way, when your car is at the shop, all orders which have been made at present and before, will automatically be loaded into your car.\nTime 0 → 1\nYou choose to move towards vertex move 2. You will now move one step towards vertex 2.\nTime t=1\nA new order has appeared. It has ID =2 and shall be delivered at  vertex 5.\nTime 1 → 2\nYou decided to stay. You can now stay on the edge where you are.\nTime t=2\nA new order has appeared. It has ID =3 and shall be delivered at  vertex 4.\nTime 2 → 3\nYou decided to move move 1 back to vertex 1.\nYou are approaching one step towards vertex 1.\nDoing a U-turn in this way is explicitly allowed.\nTime t=3\nNew orders have not occurred. Now that you are at the vertex  1  (store), the orders with order ID  2, 3  are loaded into your car. In a similar way, whenever you return to the store, all the orders that have already been placed are loaded into your car automatically.\nTime 3 → 4\nBeing at vertex 1 you choose move 5. You are moving your car one step towards vertex 5. You arrive at vertex 5.\nTime t=4\nSince you arrived at vertex 5, the order with order ID 2 can be delivered. The example operates on a graph with |V| = 5 vertices, |E| = 7 edges, and T_{\\text{max}} = 4 time steps. We now describe the orders which have occured and the movement of the car. At time t=0 an order is placed at the shop. This order has ID= 1 and should be delivered to vertex  2. Because your car is currently at vertex one, the order will be automatically transfered into your car. In this way, when your car is at the shop, all orders which have been made at present and before, will automatically be loaded into your car. You choose to move towards vertex move 2. You will now move one step towards vertex 2. A new order has appeared. It has ID =2 and shall be delivered at  vertex 5. You decided to stay. You can now stay on the edge where you are. A new order has appeared. It has ID =3 and shall be delivered at  vertex 4. You decided to move move 1 back to vertex 1.\nYou are approaching one step towards vertex 1.\nDoing a U-turn in this way is explicitly allowed. New orders have not occurred. Now that you are at the vertex  1  (store), the orders with order ID  2, 3  are loaded into your car. In a similar way, whenever you return to the store, all the orders that have already been placed are loaded into your car automatically. Being at vertex 1 you choose move 5. You are moving your car one step towards vertex 5. You arrive at vertex 5. Since you arrived at vertex 5, the order with order ID 2 can be delivered. A software toolkit for generation of input samples, scoring and testing on a local contestant environment, and  sample codes for beginners\nis provided through the following link. In addition we provide software for visualizing the contestants results.",
        "difficulty": "Medium",
        "category": "Math & Logic",
        "tags": [
          "string",
          "math",
          "sorting",
          "graph",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02871.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "Orders: Throughout the contest each order is characterized by three quantities: A unique order ID, a vertex v \\in V indicating the order destination, and the order time t at which the order appeared. For the detailed format see below.\nOrder generation: At each time  0 \\le t \\le T_{\\text{last}} = 0.95 \\times T_{\\text{max}} up to one new order can appear with probability p_{\\text{order}}(t). In case there is an order, the order destination i is chosen from the vertex set V with probability proportional to the order frequency f_i. For details, see the pseudo-code below or the sample code further below. Pseudo code: Order generation \n\n Input: Last order time T_{\\text{last}} and average order probability p_{\\text{order}}(t). \n Init:  \\mathrm{ID} \\leftarrow 0. \n For each step t = 0, ..., T_{\\text{last}}  do:\n    \n Generate a uniform random number r \\in [0,1] . \n If  r \\le p_{\\text{order}}(t) :\n      \n Select a vertex position  u \\in V  at random with probability proportional to the order frequency  f_{u}  of the vertex. \n \\mathrm{ID} \\leftarrow \\mathrm{ID} + 1 \n place order (new order ID, order time t, vertex position\n       u \\in V )\n\n\n Else: place no order\n\n\n\n\n Note: The average order probability is defined as follows:\n\n p_{\\text{order}}(t) =\n\\begin{cases}\nt / T_{\\text{peak}},  &\n\\text{if } 0\\le t \\lt T_{\\text{peak}}, \\\\\n(T_{\\text{last}} - t) / (T_{\\text{last}}- T_{\\text{peak}}),  &\n\\text{if } T_{\\text{peak}} \\le t \\lt T_{\\text{last}}, \\\\\n0, &\n\\text{if } T_{\\text{last}} \\le t,\n\\end{cases}\n\nwhere T_{\\text{last}}:=0.95 \\times T_{\\max} and T_{\\text{peak}} is drawn randomly uniform from the interval [0, T_{\\text{last}}].\n Note: The value of T_{\\text{peak}} will not be given as an input. Delivery: To deliver an order, the contestant must do the following steps after the order has been placed:\n(1st) Move the car onto the shop: Note: When moving a car onto the shop, all orders with order time less than or equal to the current time, will be transfered into the car. On the other hand, orders which have not appeared yet, cannot be placed into the car.\n(2nd) Move the car to the customer position: To finalize a delivery, move the car onto the vertex of the customer position. Note: Orders which have not been transfered into the car yet, will not be delivered, even if you arrive at the customer position. Constraints: Throughout the contest, we assume each order has a unique \\text{ID} and should be delivered to the corresponding customer. It is further assumed that an unlimited number of orders can be placed in the car.",
          "ranges": "0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "Input is provided in the following form: |V| |E|\nu_{1} v_{1} d_{u_{1}, v_{1}}\nu_{2} v_{2} d_{u_{2}, v_{2}}\n:\nu_{|E|} v_{|E|} d_{u_{|E|}, v_{|E|}}\nT_{\\text{max}}\n\\mathrm{info}_{0}\n\\mathrm{info}_{1}\n:\n\\mathrm{info}_{T_{\\text{max}}-1} In the first line |V| denotes the number of vertices, while |E| denotes the number of edges.\n The following |E| lines denote the edges of the graph. In particular, in the ith line u_{i} and v_{i} denote the edge connecting u_{i} and v_{i} and d_{u_{i}, v_{i}} the corresponding distance.\n The following line denotes the number of steps T_{\\text{max}}. In the following line, \\mathrm{info}_t is information about the order from the customer that occurs at time t. \\mathrm{info}_t is given in the form: N_{\\text{new}}\n\\mathrm{new\\_id}_1 \\mathrm{dst}_1\n\\mathrm{new\\_id}_2 \\mathrm{dst}_2\n\\vdots\n\\mathrm{new\\_id}_{N_{\\text{new}}} \\mathrm{dst}_{N_{\\text{new}}} N_{\\text{new}} represents the number of new orders which appear at time t.\n The next N_{\\text{new}} lines give the newly generated order information. The i-th order information indicates that the order ID \\mathrm{new\\_{id}}_i of the new order, while \\mathrm{dst}_i\ndenotes the vertex to which the customer wishes the order to be delivered.\n Note: If N_{\\text{new}}=0, there are no new lines.",
            "output": "The Output expects T_{\\text{max}} integers in the format specified below. \\mathrm{command}_{0}\n\\mathrm{command}_{1}\n:\n\\mathrm{command}_{T_{\\text{max}}-1} In particular, \\mathrm{command}_{i} shall specify the movement of the delivery car by using one of the following two options: 1) stay, if the car shall not move: -1 2) move w, if the car shall be moved one step towards the neighboring vertex w w Note that in case of 2) w has to satisfy the following conditions: w \\in V\nIf the car is at vertex u: \\left\\{ u, w \\right\\} \\in E .\nIf the car is on the edge \\left\\{ u, v \\right\\}, w must either satisfy u = w or v = w.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02871.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02871"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02872",
        "title": "Problem Setting",
        "description": "Problem Setting Overview\n\nConcept: In this programming contest, you will run a delivery service. Customers will place orders with your shop. Each order has a unique \\text{ID} and should be delivered to the corresponding customer. Your delivery service has one car. The car will fetch the ordered item from the shop and deliver it to the customer.\nScore: Your goal is to deliver as many items as possible, as quickly as possible in a given amount of time T_{\\text{max}}. (Orders are expected until 0.95 \\times T_{\\text{max}}).\nConstraint: In this contest there is no constraint on the number of items you can place in the car. However, an item can only be loaded in the car, by fetching it from the shop, after the order has been placed.\nProblem A/B: In problem A all order positions and times are given to the contestant in advance and the contestant algorithm shall optimize the moves of the car to make as many deliveries as possible as fast as possible. On the other hand, in problem B orders appear online, that is new orders appear, while you move your car to make as many deliveries as possible as fast as possible. Specification of Car Locations and Moves:\nIn order to make deliveries you will operate a delivery car, which can take positions and make moves as specified below.\n\n\nCar position: A car can generally take two types of position:\n\non a vertex u \\in V.\non an edge \\left\\{ u, v \\right\\} \\in E. More specifically, it is located at a distance x (0 \\lt x \\lt d_{u, v}) from  u  to  v .\n\n\n\nCar move: At each step   0 \\le t < T_{\\text{max}}  you have to choose one of the following actions in order to control your delivery car.\n\nstay: stay at the current position.\nmove w: Take one step towards vertex w \\in V.\n\nIn case of choosing move w, w must obey the following constraints. A failure to obey these constraints results in a wrong answer WA.\n\n w must be a vertex, i.e., w \\in V.\n If the car is on vertex u \\in V, there must be an edge connecting u and v, i.e., \\left\\{ u, w \\right\\} \\in E.\n If the car is on the edge \\left\\{ u, v \\right\\} \\in E, w must either be w = u or w = v. In order to make deliveries you will operate a delivery car, which can take positions and make moves as specified below. Car position: A car can generally take two types of position: Car move: At each step   0 \\le t < T_{\\text{max}}  you have to choose one of the following actions in order to control your delivery car. In case of choosing move w, w must obey the following constraints. A failure to obey these constraints results in a wrong answer WA.\n\n w must be a vertex, i.e., w \\in V.\n If the car is on vertex u \\in V, there must be an edge connecting u and v, i.e., \\left\\{ u, w \\right\\} \\in E.\n If the car is on the edge \\left\\{ u, v \\right\\} \\in E, w must either be w = u or w = v. Scoring\n\n During the contest the total score of a submission is determined by summing the score of the submission with respect to 30 input cases.\n After the contest a system test will be performed. To this end, the contestant's last submission will be scored by summing the score of the submission on 100 previously unseen input cases.\n For each input case, the score is calculated as follows:\n\n \\text{Score} =\n    \\sum_{i \\in D} {(T_{\\text{max}})}^{2} - {(\\mathrm{waitingTime}_i)}^{2}, \n\nHere we use the following definitions:\n\n  D  : the set of orders delivered until t=T_{\\text{max}}\n the waiting time of the ith order: \\mathrm{waitingTime}_i = \\mathrm{deliveredTime}_i - \\mathrm{orderedTime}_i.\nNote that an input case giving the output WA will receive 0 points. \\text{Score} =\n    \\sum_{i \\in D} {(T_{\\text{max}})}^{2} - {(\\mathrm{waitingTime}_i)}^{2}, Particulars of Problem B:\n\nProblem B is an  interactive  contest, where the contestant code successively receives updates on newly generated and delivered orders from a host code, while simultaneously servicing the customer by moving the car to a neighboring position in every step t=0,...,T_{\\max}-1. The precise flow which details the interaction of the contestant and host code is shown below.\n\n\n\n\n\nContestant Code\nHost Code\n\n\n\n\n\n\nGenerate and output graph G\n\n\n+\n\nTime t: Generate and output new orders\n\n\n+\n\nTime t: If on shop, output orders loaded into car\n\n\n+\nTime t: Determine and output a move\n\n\n\n+\n\nCheck feasibility of move; If move unfeasible: output NG, If feasible: output OK\n\n\n+\n\nTime t+1: update and output information on delivered items (if any)\n\n\n\nNote: The host code outputs the graph only once. The processes marked by a \"+\" on the left side of the table are repeated iteratively for integers t in  t = 0,..., T_{\\max} - 1. Problem B is an  interactive  contest, where the contestant code successively receives updates on newly generated and delivered orders from a host code, while simultaneously servicing the customer by moving the car to a neighboring position in every step t=0,...,T_{\\max}-1. The precise flow which details the interaction of the contestant and host code is shown below. Note: The host code outputs the graph only once. The processes marked by a \"+\" on the left side of the table are repeated iteratively for integers t in  t = 0,..., T_{\\max} - 1. At first, the host code will output a graph G, the order frequencies f_{i} for each vertex i, which are proportional to the probability of an order to appear at vertex i, and the total number of steps T_{\\max}. At time t we first obtain the following information through the standard input. Next, in order to move the delivery car to a neighboring position the contestant code must at every time t (0 \\leq t \\lt T_{\\max}) output the following \\mathrm{command} to the standard output. Here, \\mathrm{command} must be of the following form Note: In case you choose move w, w must meet all of the following conditions. If any of the following conditions is violated, the host code will output NG and the contestant should terminate the program, ultimately leading to WA (incorrect). After your action at time  t  is send to the standard output, the host code will send the following information about time  t + 1  to the standard input. Finally, after receiving the standard input of the host code after the last step T_{\\max} you must terminate the program immediately. When returning your move instruction to the standard output, please use the flush command. As an example, consider the case where you want to output -1. This is how to do it in some of the major programming languages. System.out.println(\"-1\"); print(\"-1\", flush=True) A software toolkit for generation of input samples, scoring and testing on a local contestant environment, and  sample codes for beginners\nis provided through the following link. In addition we provide software for visualizing the contestants results.",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "string",
          "math",
          "sorting",
          "graph",
          "simulation",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02872.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "Orders: Throughout the contest each order is characterized by three quantities: A unique order ID, a vertex v \\in V indicating the order destination, and the order time t at which the order appeared. For the detailed format see below.\nOrder generation: At each time  0 \\le t \\le T_{\\text{last}} = 0.95 \\times T_{\\text{max}} up to one new order can appear with probability p_{\\text{order}}(t). In case there is an order, the order destination i is chosen from the vertex set V with probability proportional to the order frequency f_i. For details, see the pseudo-code below or the sample code further below. Pseudo code: Order generation \n\n Input: Last order time T_{\\text{last}} and average order probability p_{\\text{order}}(t). \n Init:  \\mathrm{ID} \\leftarrow 0. \n For each step t = 0, ..., T_{\\text{last}}  do:\n    \n Generate a uniform random number r \\in [0,1] . \n If  r \\le p_{\\text{order}}(t) :\n      \n Select a vertex position  u \\in V  at random with probability proportional to the order frequency  f_{u}  of the vertex. \n \\mathrm{ID} \\leftarrow \\mathrm{ID} + 1 \n place order (new order ID, order time t, vertex position\n       u \\in V )\n\n\n Else: place no order\n\n\n\n\n Note: The average order probability is defined as follows:\n\n p_{\\text{order}}(t) =\n\\begin{cases}\nt / T_{\\text{peak}},  &\n\\text{if } 0\\le t \\lt T_{\\text{peak}}, \\\\\n(T_{\\text{last}} - t) / (T_{\\text{last}}- T_{\\text{peak}}),  &\n\\text{if } T_{\\text{peak}} \\le t \\lt T_{\\text{last}}, \\\\\n0, &\n\\text{if } T_{\\text{last}} \\le t,\n\\end{cases}\n\nwhere T_{\\text{last}}:=0.95 \\times T_{\\max} and T_{\\text{peak}} is drawn randomly uniform from the interval [0, T_{\\text{last}}].\n Note: The value of T_{\\text{peak}} will not be given as an input. Delivery: To deliver an order, the contestant must do the following steps after the order has been placed:\n(1st) Move the car onto the shop: Note: When moving a car onto the shop, all orders with order time less than or equal to the current time, will be transfered into the car. On the other hand, orders which have not appeared yet, cannot be placed into the car.\n(2nd) Move the car to the customer position: To finalize a delivery, move the car onto the vertex of the customer position. Note: Orders which have not been transfered into the car yet, will not be delivered, even if you arrive at the customer position. Constraints: Throughout the contest, we assume each order has a unique \\text{ID} and should be delivered to the corresponding customer. It is further assumed that an unlimited number of orders can be placed in the car.",
          "ranges": "0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "At first, the host code will output a graph G, the order frequencies f_{i} for each vertex i, which are proportional to the probability of an order to appear at vertex i, and the total number of steps T_{\\max}. |V| |E|\nu_1 v_1 d_{u_1, v_1}\nu_2 v_2 d_{u_2, v_2}\n\\vdots\nu_{|E|} v_{|E|} d_{u_{|E|}, v_{|E|}}\nf_1 f_2 \\ldots f_{|V|}\nT_{\\max} First line: |V| number of vertices, |E| number of edges\nThe next |E| lines: The edges of the graph. In particular, the ith line denotes the vertices u_i and v_i which form an edge, along with the corresponding edge weight d_{u_i, v_i}.\nThe next line: The order frequencies f_i which determine the probability of an order at vertex i as p_{i}=\\frac{f_{i}}{\\sum_{i}f_{i}}.\nThe last line: The total number of car updates T_{\\max}. At time t we first obtain the following information through the standard input. N_{\\text{new}}\n\\mathrm{new\\_id}_1 \\mathrm{dst}_1\n\\mathrm{new\\_id}_2 \\mathrm{dst}_2\n\\vdots\n\\mathrm{new\\_id}_{N_{\\text{new}}} \\mathrm{dst}_{N_{\\text{new}}}\nN_{\\text{put}}\n\\mathrm{put\\_id}_1\n\\mathrm{put\\_id}_2\n\\mathrm{put\\_id}_{N_{\\text{put}}} N_{\\text{new}} represents the number of new orders which appeared at time t.\nThe next N_{\\text{new}} lines give the newly generated order information. The ith order information indicates that the order ID \\mathrm{new_{id}}_i of the new order, while \\mathrm{dst}_i denotes the vertex to which the customer wishes the order to be delivered.\nN_{\\text{put}} represents the number of items transfered into the car at time t.\nIf the car is not at the vertex of the store N_{\\text{put}} will be zero.\n\n\nThe subsequent N_{\\text{put}} lines indicate the order information for the newly loaded items. In particular, the ith line indicates that the order ID corresponding to the product loaded in the car is \\mathrm{put_{id}}_i. Next, in order to move the delivery car to a neighboring position the contestant code must at every time t (0 \\leq t \\lt T_{\\max}) output the following \\mathrm{command} to the standard output. \\mathrm{command} Here, \\mathrm{command} must be of the following form If you want the car to stay at its current position, send -1 to the standard output\nIf you want the car to move one step towards a neigboring vertex move w, send w to the standard output Note: In case you choose move w, w must meet all of the following conditions. If any of the following conditions is violated, the host code will output NG and the contestant should terminate the program, ultimately leading to WA (incorrect). w is a vertex index with w \\in \\left\\{1, ... , |V|\\right\\}\nIf the car is on a vertex u, the edge \\left\\{ u, w \\right\\} \\in E must exist\nIf the car is on an edge \\left\\{ u, v \\right\\}, w must either be w = u or w = v After your action at time  t  is send to the standard output, the host code will send the following information about time  t + 1  to the standard input. \\mathrm{verdict}\nN_{\\text{achieve}}\n\\mathrm{achieve\\_id}_1\n\\mathrm{achieve\\_id}_2\n\\vdots\n\\mathrm{achieve\\_id}_{N_{\\text{achieve}}} \\mathrm{verdict} is a string indicating whether your action at time  t  was valid. It can be one of the two following options.\nOK: Indicating that your action was feasible\nNG: Indicates that your action is infeasible. If you receive this input, you must terminate the program immediately. It is guaranteed to be WA (incorrect), if it is terminated immediately.If you do not terminate immediately the behavior is undefined.\n\n\nN_{\\text{achieve}} represents the number of orders that have been delivered at  time t.\nIf the car is not at a delivery vertex, no orders have been delivered and N_{\\text{achieve}}=0.\n\n\nThe subsequent N_{\\text{achieve}} lines indicate the delivered orders. In particular, the ith line indicates the order ID \\mathrm{achieve\\_{id}}_i. Finally, after receiving the standard input of the host code after the last step T_{\\max} you must terminate the program immediately.",
            "output": "At first, the host code will output a graph G, the order frequencies f_{i} for each vertex i, which are proportional to the probability of an order to appear at vertex i, and the total number of steps T_{\\max}. |V| |E|\nu_1 v_1 d_{u_1, v_1}\nu_2 v_2 d_{u_2, v_2}\n\\vdots\nu_{|E|} v_{|E|} d_{u_{|E|}, v_{|E|}}\nf_1 f_2 \\ldots f_{|V|}\nT_{\\max} First line: |V| number of vertices, |E| number of edges\nThe next |E| lines: The edges of the graph. In particular, the ith line denotes the vertices u_i and v_i which form an edge, along with the corresponding edge weight d_{u_i, v_i}.\nThe next line: The order frequencies f_i which determine the probability of an order at vertex i as p_{i}=\\frac{f_{i}}{\\sum_{i}f_{i}}.\nThe last line: The total number of car updates T_{\\max}. At time t we first obtain the following information through the standard input. N_{\\text{new}}\n\\mathrm{new\\_id}_1 \\mathrm{dst}_1\n\\mathrm{new\\_id}_2 \\mathrm{dst}_2\n\\vdots\n\\mathrm{new\\_id}_{N_{\\text{new}}} \\mathrm{dst}_{N_{\\text{new}}}\nN_{\\text{put}}\n\\mathrm{put\\_id}_1\n\\mathrm{put\\_id}_2\n\\mathrm{put\\_id}_{N_{\\text{put}}} N_{\\text{new}} represents the number of new orders which appeared at time t.\nThe next N_{\\text{new}} lines give the newly generated order information. The ith order information indicates that the order ID \\mathrm{new_{id}}_i of the new order, while \\mathrm{dst}_i denotes the vertex to which the customer wishes the order to be delivered.\nN_{\\text{put}} represents the number of items transfered into the car at time t.\nIf the car is not at the vertex of the store N_{\\text{put}} will be zero.\n\n\nThe subsequent N_{\\text{put}} lines indicate the order information for the newly loaded items. In particular, the ith line indicates that the order ID corresponding to the product loaded in the car is \\mathrm{put_{id}}_i. Next, in order to move the delivery car to a neighboring position the contestant code must at every time t (0 \\leq t \\lt T_{\\max}) output the following \\mathrm{command} to the standard output. \\mathrm{command} Here, \\mathrm{command} must be of the following form If you want the car to stay at its current position, send -1 to the standard output\nIf you want the car to move one step towards a neigboring vertex move w, send w to the standard output Note: In case you choose move w, w must meet all of the following conditions. If any of the following conditions is violated, the host code will output NG and the contestant should terminate the program, ultimately leading to WA (incorrect). w is a vertex index with w \\in \\left\\{1, ... , |V|\\right\\}\nIf the car is on a vertex u, the edge \\left\\{ u, w \\right\\} \\in E must exist\nIf the car is on an edge \\left\\{ u, v \\right\\}, w must either be w = u or w = v After your action at time  t  is send to the standard output, the host code will send the following information about time  t + 1  to the standard input. \\mathrm{verdict}\nN_{\\text{achieve}}\n\\mathrm{achieve\\_id}_1\n\\mathrm{achieve\\_id}_2\n\\vdots\n\\mathrm{achieve\\_id}_{N_{\\text{achieve}}} \\mathrm{verdict} is a string indicating whether your action at time  t  was valid. It can be one of the two following options.\nOK: Indicating that your action was feasible\nNG: Indicates that your action is infeasible. If you receive this input, you must terminate the program immediately. It is guaranteed to be WA (incorrect), if it is terminated immediately.If you do not terminate immediately the behavior is undefined.\n\n\nN_{\\text{achieve}} represents the number of orders that have been delivered at  time t.\nIf the car is not at a delivery vertex, no orders have been delivered and N_{\\text{achieve}}=0.\n\n\nThe subsequent N_{\\text{achieve}} lines indicate the delivered orders. In particular, the ith line indicates the order ID \\mathrm{achieve\\_{id}}_i. Finally, after receiving the standard input of the host code after the last step T_{\\max} you must terminate the program immediately.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02872.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02872"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02884",
        "title": "Problem Statement",
        "description": "Score : 600 points Problem StatementThere is a cave consisting of N rooms and M one-directional passages. The rooms are numbered 1 through N.\nTakahashi is now in Room 1, and Room N has the exit. The i-th passage connects Room s_i and Room t_i (s_i < t_i) and can only be traversed in the direction from Room s_i to Room t_i. It is known that, for each room except Room N, there is at least one passage going from that room.\nTakahashi will escape from the cave. Each time he reaches a room (assume that he has reached Room 1 at the beginning), he will choose a passage uniformly at random from the ones going from that room and take that passage.\nAoki, a friend of Takahashi's, can block one of the passages (or do nothing) before Takahashi leaves Room 1. However, it is not allowed to block a passage so that Takahashi is potentially unable to reach Room N.\nLet E be the expected number of passages Takahashi takes before he reaches Room N. Find the value of E when Aoki makes a choice that minimizes E. There is a cave consisting of N rooms and M one-directional passages. The rooms are numbered 1 through N. Takahashi is now in Room 1, and Room N has the exit. The i-th passage connects Room s_i and Room t_i (s_i < t_i) and can only be traversed in the direction from Room s_i to Room t_i. It is known that, for each room except Room N, there is at least one passage going from that room. Takahashi will escape from the cave. Each time he reaches a room (assume that he has reached Room 1 at the beginning), he will choose a passage uniformly at random from the ones going from that room and take that passage. Aoki, a friend of Takahashi's, can block one of the passages (or do nothing) before Takahashi leaves Room 1. However, it is not allowed to block a passage so that Takahashi is potentially unable to reach Room N. Let E be the expected number of passages Takahashi takes before he reaches Room N. Find the value of E when Aoki makes a choice that minimizes E. Print the value of E when Aoki makes a choice that minimizes E.\nYour output will be judged as correct when the absolute or relative error from the judge's output is at most 10^{-6}. If Aoki blocks the passage from Room 1 to Room 2, Takahashi will go along the path 1 → 3 → 4 with probability \\frac{1}{2} and 1 → 4 with probability \\frac{1}{2}. E = 1.5 here, and this is the minimum possible value of E. Blocking any one passage makes Takahashi unable to reach Room N, so Aoki cannot block a passage. There is a cave consisting of N rooms and M one-directional passages. The rooms are numbered 1 through N. Takahashi is now in Room 1, and Room N has the exit. The i-th passage connects Room s_i and Room t_i (s_i < t_i) and can only be traversed in the direction from Room s_i to Room t_i. It is known that, for each room except Room N, there is at least one passage going from that room. Takahashi will escape from the cave. Each time he reaches a room (assume that he has reached Room 1 at the beginning), he will choose a passage uniformly at random from the ones going from that room and take that passage. Aoki, a friend of Takahashi's, can block one of the passages (or do nothing) before Takahashi leaves Room 1. However, it is not allowed to block a passage so that Takahashi is potentially unable to reach Room N. Let E be the expected number of passages Takahashi takes before he reaches Room N. Find the value of E when Aoki makes a choice that minimizes E.",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting",
          "graph",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02884.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 \\leq N \\leq 600\nN-1 \\leq M \\leq \\frac{N(N-1)}{2}\ns_i < t_i\nIf i != j, (s_i, t_i) \\neq (s_j, t_j). (Added 21:23 JST)\nFor every v = 1, 2, ..., N-1, there exists i such that v = s_i.",
          "ranges": "1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 6\n1 4\n2 3\n1 3\n1 2\n3 4\n2 4",
            "output": "1.5000000000 If Aoki blocks the passage from Room 1 to Room 2, Takahashi will go along the path 1 → 3 → 4 with probability \\frac{1}{2} and 1 → 4 with probability \\frac{1}{2}. E = 1.5 here, and this is the minimum possible value of E.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02884.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02884"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02893",
        "title": "Problem Statement",
        "description": "Score : 800 points Problem StatementGiven are integers N and X. For each integer k between 0 and X (inclusive), find the answer to the following question, then compute the sum of all those answers, modulo 998244353.\n\nLet us repeat the following operation on the integer k. Operation: if the integer is currently odd, subtract 1 from it and divide it by 2; otherwise, divide it by 2 and add 2^{N-1} to it. How many operations need to be performed until k returns to its original value? (The answer is considered to be 0 if k never returns to its original value.) Given are integers N and X. For each integer k between 0 and X (inclusive), find the answer to the following question, then compute the sum of all those answers, modulo 998244353. Print the sum of the answers to the questions for the integers between 0 and X (inclusive), modulo 998244353. For example, for k=3, the operation changes k as follows: 1,0,4,6,7,3. Therefore the answer for k=3 is 6. Given are integers N and X. For each integer k between 0 and X (inclusive), find the answer to the following question, then compute the sum of all those answers, modulo 998244353. Let us repeat the following operation on the integer k. Operation: if the integer is currently odd, subtract 1 from it and divide it by 2; otherwise, divide it by 2 and add 2^{N-1} to it. How many operations need to be performed until k returns to its original value? (The answer is considered to be 0 if k never returns to its original value.)",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02893.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N \\leq 2\\times 10^5\n0 \\leq X < 2^N\nX is given in binary and has exactly N digits. (In case X has less than N digits, it is given with leading zeroes.)\nAll values in input are integers.",
          "ranges": "2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n111",
            "output": "40 For example, for k=3, the operation changes k as follows: 1,0,4,6,7,3. Therefore the answer for k=3 is 6.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02893.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02893"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02907",
        "title": "It generates an integer between 0 and N-1 (inclusive).",
        "description": "Score : 1600 points Problem StatementSnuke found a random number generator.\nIt generates an integer between 0 and N-1 (inclusive).\nAn integer sequence A_0, A_1, \\cdots, A_{N-1}  represents the probability that each of these integers is generated. The integer i (0 \\leq i \\leq N-1) is generated with probability A_i / S, where S = \\sum_{i=0}^{N-1} A_i. The process of generating an integer is done independently each time the generator is executed.\nNow, Snuke will repeatedly generate an integer with this generator until the following condition is satisfied:\n\nFor every i (0 \\leq i \\leq N-1), the integer i has been generated at least B_i times so far.\n\nFind the expected number of times Snuke will generate an integer, and print it modulo 998244353.\nMore formally, represent the expected number of generations as an irreducible fraction P/Q. Then, there exists a unique integer R such that R \\times Q \\equiv P \\pmod{998244353},\\ 0 \\leq R < 998244353, so print this R.\nFrom the constraints of this problem, we can prove that the expected number of generations is a finite rational number, and its integer representation modulo 998244353 can be defined. Snuke found a random number generator.\nIt generates an integer between 0 and N-1 (inclusive).\nAn integer sequence A_0, A_1, \\cdots, A_{N-1}  represents the probability that each of these integers is generated. The integer i (0 \\leq i \\leq N-1) is generated with probability A_i / S, where S = \\sum_{i=0}^{N-1} A_i. The process of generating an integer is done independently each time the generator is executed. Now, Snuke will repeatedly generate an integer with this generator until the following condition is satisfied: Find the expected number of times Snuke will generate an integer, and print it modulo 998244353.\nMore formally, represent the expected number of generations as an irreducible fraction P/Q. Then, there exists a unique integer R such that R \\times Q \\equiv P \\pmod{998244353},\\ 0 \\leq R < 998244353, so print this R. From the constraints of this problem, we can prove that the expected number of generations is a finite rational number, and its integer representation modulo 998244353 can be defined. Print the expected number of times Snuke will generate an integer, modulo 998244353. The expected number of times Snuke will generate an integer is 3. The expected number of times Snuke will generate an integer is 132929/7200. Snuke found a random number generator.\nIt generates an integer between 0 and N-1 (inclusive).\nAn integer sequence A_0, A_1, \\cdots, A_{N-1}  represents the probability that each of these integers is generated. The integer i (0 \\leq i \\leq N-1) is generated with probability A_i / S, where S = \\sum_{i=0}^{N-1} A_i. The process of generating an integer is done independently each time the generator is executed. Now, Snuke will repeatedly generate an integer with this generator until the following condition is satisfied: For every i (0 \\leq i \\leq N-1), the integer i has been generated at least B_i times so far. Find the expected number of times Snuke will generate an integer, and print it modulo 998244353.\nMore formally, represent the expected number of generations as an irreducible fraction P/Q. Then, there exists a unique integer R such that R \\times Q \\equiv P \\pmod{998244353},\\ 0 \\leq R < 998244353, so print this R. From the constraints of this problem, we can prove that the expected number of generations is a finite rational number, and its integer representation modulo 998244353 can be defined.",
        "difficulty": "Medium",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "math",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02907.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N \\leq 400\n1 \\leq A_i\n\\sum_{i=0}^{N-1} A_i \\leq 400\n1 \\leq B_i\n\\sum_{i=0}^{N-1} B_i \\leq 400\nAll values in input are integers.",
          "ranges": "0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\n1 1\n1 1",
            "output": "3 The expected number of times Snuke will generate an integer is 3.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02907.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02907"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02914",
        "title": "We have N non-negative integers: A_1, A_2, ..., A_N.",
        "description": "Score: 600 points Problem Statement\nWe have N non-negative integers: A_1, A_2, ..., A_N.\nConsider painting at least one and at most N-1 integers among them in red, and painting the rest in blue.\nLet the beauty of the painting be the \\mbox{XOR} of the integers painted in red, plus the \\mbox{XOR} of the integers painted in blue.\nFind the maximum possible beauty of the painting.\n\nWhat is \\mbox{XOR}?\n\nThe bitwise \\mbox{XOR} x_1 \\oplus x_2 \\oplus \\ldots \\oplus x_n of n non-negative integers x_1, x_2, \\ldots, x_n is defined as follows:\n\n When x_1 \\oplus x_2 \\oplus \\ldots \\oplus x_n is written in base two, the digit in the 2^k's place (k \\geq 0) is 1 if the number of integers among x_1, x_2, \\ldots, x_n whose binary representations have 1 in the 2^k's place is odd, and 0 if that count is even. \n\nFor example, 3 \\oplus 5 = 6. We have N non-negative integers: A_1, A_2, ..., A_N. Consider painting at least one and at most N-1 integers among them in red, and painting the rest in blue. Let the beauty of the painting be the \\mbox{XOR} of the integers painted in red, plus the \\mbox{XOR} of the integers painted in blue. Find the maximum possible beauty of the painting. The bitwise \\mbox{XOR} x_1 \\oplus x_2 \\oplus \\ldots \\oplus x_n of n non-negative integers x_1, x_2, \\ldots, x_n is defined as follows:\n\n When x_1 \\oplus x_2 \\oplus \\ldots \\oplus x_n is written in base two, the digit in the 2^k's place (k \\geq 0) is 1 if the number of integers among x_1, x_2, \\ldots, x_n whose binary representations have 1 in the 2^k's place is odd, and 0 if that count is even. \n\nFor example, 3 \\oplus 5 = 6. Print the maximum possible beauty of the painting. If we paint 3, 6, 5 in blue, red, blue, respectively, the beauty will be (6) + (3 \\oplus 5) = 12. There is no way to paint the integers resulting in greater beauty than 12, so the answer is 12. A_i and the answer may not fit into a 32-bit integer type. We have N non-negative integers: A_1, A_2, ..., A_N. Consider painting at least one and at most N-1 integers among them in red, and painting the rest in blue. Let the beauty of the painting be the \\mbox{XOR} of the integers painted in red, plus the \\mbox{XOR} of the integers painted in blue. Find the maximum possible beauty of the painting. What is \\mbox{XOR}?\n\nThe bitwise \\mbox{XOR} x_1 \\oplus x_2 \\oplus \\ldots \\oplus x_n of n non-negative integers x_1, x_2, \\ldots, x_n is defined as follows:\n\n When x_1 \\oplus x_2 \\oplus \\ldots \\oplus x_n is written in base two, the digit in the 2^k's place (k \\geq 0) is 1 if the number of integers among x_1, x_2, \\ldots, x_n whose binary representations have 1 in the 2^k's place is odd, and 0 if that count is even. \n\nFor example, 3 \\oplus 5 = 6.",
        "difficulty": "Medium",
        "category": "Math & Logic",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02914.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "All values in input are integers.\n2 \\leq N \\leq 10^5\n0 \\leq A_i < 2^{60}\\ (1 \\leq i \\leq N)",
          "ranges": "2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n3 6 5",
            "output": "12 If we paint 3, 6, 5 in blue, red, blue, respectively, the beauty will be (6) + (3 \\oplus 5) = 12. There is no way to paint the integers resulting in greater beauty than 12, so the answer is 12.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02914.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02914"
      }
    },
    {
      "basicInfo": {
        "questionId": "p02933",
        "title": "Write a program that prints s if a is not less than 3200 and prints red if a is less than 3200.",
        "description": "Score : 100 points Problem StatementYou will be given an integer a and a string s consisting of lowercase English letters as input.\nWrite a program that prints s if a is not less than 3200 and prints red if a is less than 3200. You will be given an integer a and a string s consisting of lowercase English letters as input. Write a program that prints s if a is not less than 3200 and prints red if a is less than 3200. If a is not less than 3200, print s; if a is less than 3200, print red. a = 3200 is not less than 3200, so we print s = pink. a = 3199 is less than 3200, so we print red. a = 4049 is not less than 3200, so we print s = red. You will be given an integer a and a string s consisting of lowercase English letters as input. Write a program that prints s if a is not less than 3200 and prints red if a is less than 3200.",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "string",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02933.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2800 \\leq a < 5000\ns is a string of length between 1 and 10 (inclusive).\nEach character of s is a lowercase English letter.",
          "ranges": "5000"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3200\npink",
            "output": "pink a = 3200 is not less than 3200, so we print s = pink.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p02933.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p02933"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03013",
        "title": "He can climb up one or two steps at a time.",
        "description": "Score : 300 points Problem StatementThere is a staircase with N steps. Takahashi is now standing at the foot of the stairs, that is, on the 0-th step.\nHe can climb up one or two steps at a time.\nHowever, the treads of the a_1-th, a_2-th, a_3-th, \\ldots, a_M-th steps are broken, so it is dangerous to set foot on those steps.\nHow many are there to climb up to the top step, that is, the N-th step, without setting foot on the broken steps?\nFind the count modulo 1\\ 000\\ 000\\ 007. There is a staircase with N steps. Takahashi is now standing at the foot of the stairs, that is, on the 0-th step.\nHe can climb up one or two steps at a time. However, the treads of the a_1-th, a_2-th, a_3-th, \\ldots, a_M-th steps are broken, so it is dangerous to set foot on those steps. How many are there to climb up to the top step, that is, the N-th step, without setting foot on the broken steps?\nFind the count modulo 1\\ 000\\ 000\\ 007. Print the number of ways to climb up the stairs under the condition, modulo 1\\ 000\\ 000\\ 007. There are four ways to climb up the stairs, as follows: There may be no way to climb up the stairs without setting foot on the broken steps. Be sure to print the count modulo 1\\ 000\\ 000\\ 007. There is a staircase with N steps. Takahashi is now standing at the foot of the stairs, that is, on the 0-th step.\nHe can climb up one or two steps at a time. However, the treads of the a_1-th, a_2-th, a_3-th, \\ldots, a_M-th steps are broken, so it is dangerous to set foot on those steps. How many are there to climb up to the top step, that is, the N-th step, without setting foot on the broken steps?\nFind the count modulo 1\\ 000\\ 000\\ 007.",
        "difficulty": "Medium",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03013.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N \\leq 10^5\n0 \\leq M \\leq N-1\n1 \\leq a_1 < a_2 <  ...  < a_M \\leq N-1",
          "ranges": "1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "6 1\n3",
            "output": "4 There are four ways to climb up the stairs, as follows: 0 \\to 1 \\to 2 \\to 4 \\to 5 \\to 6\n0 \\to 1 \\to 2 \\to 4 \\to 6\n0 \\to 2 \\to 4 \\to 5 \\to 6\n0 \\to 2 \\to 4 \\to 6",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03013.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03013"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03016",
        "title": "There is an arithmetic progression with L terms: s_0, s_1, s_2, ... , s_{L-1}.",
        "description": "Score : 600 points Problem Statement\nThere is an arithmetic progression with L terms: s_0, s_1, s_2, ... , s_{L-1}.\nThe initial term is A, and the common difference is B. That is, s_i = A + B \\times i holds.\nConsider the integer obtained by concatenating the terms written in base ten without leading zeros. For example, the sequence 3, 7, 11, 15, 19 would be concatenated into 37111519. What is the remainder when that integer is divided by M? There is an arithmetic progression with L terms: s_0, s_1, s_2, ... , s_{L-1}. The initial term is A, and the common difference is B. That is, s_i = A + B \\times i holds. Consider the integer obtained by concatenating the terms written in base ten without leading zeros. For example, the sequence 3, 7, 11, 15, 19 would be concatenated into 37111519. What is the remainder when that integer is divided by M? Print the remainder when the integer obtained by concatenating the terms is divided by M. Our arithmetic progression is 3, 7, 11, 15, 19, so the answer is 37111519 mod 10007, that is, 5563. There is an arithmetic progression with L terms: s_0, s_1, s_2, ... , s_{L-1}. The initial term is A, and the common difference is B. That is, s_i = A + B \\times i holds. Consider the integer obtained by concatenating the terms written in base ten without leading zeros. For example, the sequence 3, 7, 11, 15, 19 would be concatenated into 37111519. What is the remainder when that integer is divided by M?",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03016.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "All values in input are integers.\n1 \\leq L, A, B < 10^{18}\n2 \\leq M \\leq 10^9\nAll terms in the arithmetic progression are less than 10^{18}.",
          "ranges": "10"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 3 4 10007",
            "output": "5563 Our arithmetic progression is 3, 7, 11, 15, 19, so the answer is 37111519 mod 10007, that is, 5563.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03016.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03016"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03020",
        "title": "Snuke will now form S pairs of red and blue balls so that every ball belongs to exactly one pair.",
        "description": "Score : 1200 points Problem StatementSnuke is playing with red and blue balls, placing them on a two-dimensional plane.\nFirst, he performed N operations to place red balls. In the i-th of these operations, he placed RC_i red balls at coordinates (RX_i,RY_i).\nThen, he performed another N operations to place blue balls. In the i-th of these operations, he placed BC_i blue balls at coordinates (BX_i,BY_i).\nThe total number of red balls placed and the total number of blue balls placed are equal, that is, \\sum_{i=1}^{N} RC_i = \\sum_{i=1}^{N} BC_i. Let this value be S.\nSnuke will now form S pairs of red and blue balls so that every ball belongs to exactly one pair.\nLet us define the score of a pair of a red ball at coordinates (rx, ry) and a blue ball at coordinates (bx, by) as |rx-bx| + |ry-by|.\nSnuke wants to maximize the sum of the scores of the pairs.\nHelp him by finding the maximum possible sum of the scores of the pairs. Snuke is playing with red and blue balls, placing them on a two-dimensional plane. First, he performed N operations to place red balls. In the i-th of these operations, he placed RC_i red balls at coordinates (RX_i,RY_i).\nThen, he performed another N operations to place blue balls. In the i-th of these operations, he placed BC_i blue balls at coordinates (BX_i,BY_i).\nThe total number of red balls placed and the total number of blue balls placed are equal, that is, \\sum_{i=1}^{N} RC_i = \\sum_{i=1}^{N} BC_i. Let this value be S. Snuke will now form S pairs of red and blue balls so that every ball belongs to exactly one pair.\nLet us define the score of a pair of a red ball at coordinates (rx, ry) and a blue ball at coordinates (bx, by) as |rx-bx| + |ry-by|. Snuke wants to maximize the sum of the scores of the pairs.\nHelp him by finding the maximum possible sum of the scores of the pairs. Print the maximum possible sum of the scores of the pairs. If we pair the red ball at coordinates (0,0) and the blue ball at coordinates (2,2), the score of this pair is |0-2| + |0-2|=4.\nThen, if we pair the red ball at coordinates (3,2) and the blue ball at coordinates (5,0), the score of this pair is |3-5| + |2-0|=4.\nMaking these two pairs results in the total score of 8, which is the maximum result. Snuke may have performed multiple operations at the same coordinates. Snuke is playing with red and blue balls, placing them on a two-dimensional plane. First, he performed N operations to place red balls. In the i-th of these operations, he placed RC_i red balls at coordinates (RX_i,RY_i).\nThen, he performed another N operations to place blue balls. In the i-th of these operations, he placed BC_i blue balls at coordinates (BX_i,BY_i).\nThe total number of red balls placed and the total number of blue balls placed are equal, that is, \\sum_{i=1}^{N} RC_i = \\sum_{i=1}^{N} BC_i. Let this value be S. Snuke will now form S pairs of red and blue balls so that every ball belongs to exactly one pair.\nLet us define the score of a pair of a red ball at coordinates (rx, ry) and a blue ball at coordinates (bx, by) as |rx-bx| + |ry-by|. Snuke wants to maximize the sum of the scores of the pairs.\nHelp him by finding the maximum possible sum of the scores of the pairs.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03020.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N \\leq 1000\n0 \\leq RX_i,RY_i,BX_i,BY_i \\leq 10^9\n1 \\leq RC_i,BC_i \\leq 10\n\\sum_{i=1}^{N} RC_i = \\sum_{i=1}^{N} BC_i\nAll values in input are integers.",
          "ranges": "1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\n0 0 1\n3 2 1\n2 2 1\n5 0 1",
            "output": "8 If we pair the red ball at coordinates (0,0) and the blue ball at coordinates (2,2), the score of this pair is |0-2| + |0-2|=4.\nThen, if we pair the red ball at coordinates (3,2) and the blue ball at coordinates (5,0), the score of this pair is |3-5| + |2-0|=4.\nMaking these two pairs results in the total score of 8, which is the maximum result.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03020.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03020"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03025",
        "title": "Find the expected number of games that will be played, and print it as follows.",
        "description": "Score : 500 points Problem StatementTakahashi and Aoki will play a game. They will repeatedly play it until one of them have N wins in total.\nWhen they play the game once, Takahashi wins with probability A %, Aoki wins with probability B %, and the game ends in a draw (that is, nobody wins) with probability C %.\nFind the expected number of games that will be played, and print it as follows.\nWe can represent the expected value as P/Q with coprime integers P and Q.\nPrint the integer R between 0 and 10^9+6 (inclusive) such that R \\times Q \\equiv P\\pmod {10^9+7}.\n(Such an integer R always uniquely exists under the constraints of this problem.) Takahashi and Aoki will play a game. They will repeatedly play it until one of them have N wins in total. When they play the game once, Takahashi wins with probability A %, Aoki wins with probability B %, and the game ends in a draw (that is, nobody wins) with probability C %.\nFind the expected number of games that will be played, and print it as follows. We can represent the expected value as P/Q with coprime integers P and Q.\nPrint the integer R between 0 and 10^9+6 (inclusive) such that R \\times Q \\equiv P\\pmod {10^9+7}.\n(Such an integer R always uniquely exists under the constraints of this problem.) Print the expected number of games that will be played, in the manner specified in the statement. Since N=1, they will repeat the game until one of them wins.\nThe expected number of games played is 2. C may be 0. B may also be 0. Takahashi and Aoki will play a game. They will repeatedly play it until one of them have N wins in total. When they play the game once, Takahashi wins with probability A %, Aoki wins with probability B %, and the game ends in a draw (that is, nobody wins) with probability C %.\nFind the expected number of games that will be played, and print it as follows. We can represent the expected value as P/Q with coprime integers P and Q.\nPrint the integer R between 0 and 10^9+6 (inclusive) such that R \\times Q \\equiv P\\pmod {10^9+7}.\n(Such an integer R always uniquely exists under the constraints of this problem.)",
        "difficulty": "Medium",
        "category": "Math & Logic",
        "tags": [
          "math",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03025.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N \\leq 100000\n0 \\leq A,B,C \\leq 100\n1 \\leq A+B\nA+B+C=100\nAll values in input are integers.",
          "ranges": "100"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1 25 25 50",
            "output": "2 Since N=1, they will repeat the game until one of them wins.\nThe expected number of games played is 2.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03025.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03025"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03030",
        "title": "No two restaurants have the same score.",
        "description": "Score : 200 points Problem StatementYou have decided to write a book introducing good restaurants.\nThere are N restaurants that you want to introduce: Restaurant 1, Restaurant 2, ..., Restaurant N. Restaurant i is in city S_i, and your assessment score of that restaurant on a 100-point scale is P_i.\nNo two restaurants have the same score.\nYou want to introduce the restaurants in the following order:\n\nThe restaurants are arranged in lexicographical order of the names of their cities.\nIf there are multiple restaurants in the same city, they are arranged in descending order of score.\n\nPrint the identification numbers of the restaurants in the order they are introduced in the book. You have decided to write a book introducing good restaurants.\nThere are N restaurants that you want to introduce: Restaurant 1, Restaurant 2, ..., Restaurant N. Restaurant i is in city S_i, and your assessment score of that restaurant on a 100-point scale is P_i.\nNo two restaurants have the same score. You want to introduce the restaurants in the following order: Print the identification numbers of the restaurants in the order they are introduced in the book. Print N lines. The i-th line (1 ≤ i ≤ N) should contain the identification number of the restaurant that is introduced i-th in the book. The lexicographical order of the names of the three cities is kazan < khabarovsk < moscow. For each of these cities, the restaurants in it are introduced in descending order of score. Thus, the restaurants are introduced in the order 3,4,6,1,5,2. You have decided to write a book introducing good restaurants.\nThere are N restaurants that you want to introduce: Restaurant 1, Restaurant 2, ..., Restaurant N. Restaurant i is in city S_i, and your assessment score of that restaurant on a 100-point scale is P_i.\nNo two restaurants have the same score. You want to introduce the restaurants in the following order: The restaurants are arranged in lexicographical order of the names of their cities.\nIf there are multiple restaurants in the same city, they are arranged in descending order of score. Print the identification numbers of the restaurants in the order they are introduced in the book.",
        "difficulty": "Medium",
        "category": "Math & Logic",
        "tags": [
          "math",
          "sorting",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03030.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 100\nS is a string of length between 1 and 10 (inclusive) consisting of lowercase English letters.\n0 ≤ P_i ≤ 100\nP_i is an integer.\nP_i ≠ P_j (1 ≤ i < j ≤ N)",
          "ranges": "1 100; 0 100; 100; 100; 1; 0; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "6\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40",
            "output": "3\n4\n6\n1\n5\n2 The lexicographical order of the names of the three cities is kazan < khabarovsk < moscow. For each of these cities, the restaurants in it are introduced in descending order of score. Thus, the restaurants are introduced in the order 3,4,6,1,5,2.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03030.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03030"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03033",
        "title": "There are N roadworks scheduled on this street.",
        "description": "Score : 500 points Problem StatementThere is an infinitely long street that runs west to east, which we consider as a number line.\nThere are N roadworks scheduled on this street.\nThe i-th roadwork blocks the point at coordinate X_i from time S_i - 0.5 to time T_i - 0.5.\nQ people are standing at coordinate 0. The i-th person will start the coordinate 0 at time D_i, continue to walk with speed 1 in the positive direction and stop walking when reaching a blocked point.\nFind the distance each of the Q people will walk. There is an infinitely long street that runs west to east, which we consider as a number line. There are N roadworks scheduled on this street.\nThe i-th roadwork blocks the point at coordinate X_i from time S_i - 0.5 to time T_i - 0.5. Q people are standing at coordinate 0. The i-th person will start the coordinate 0 at time D_i, continue to walk with speed 1 in the positive direction and stop walking when reaching a blocked point. Find the distance each of the Q people will walk. Print Q lines. The i-th line should contain the distance the i-th person will walk or -1 if that person walks forever. The first person starts coordinate 0 at time 0 and stops walking at coordinate 2 when reaching a point blocked by the first roadwork at time 2. The second person starts coordinate 0 at time 1 and reaches coordinate 2 at time 3. The first roadwork has ended, but the fourth roadwork has begun, so this person also stops walking at coordinate 2. The fourth and sixth persons encounter no roadworks while walking, so they walk forever. The output for these cases is -1. There is an infinitely long street that runs west to east, which we consider as a number line. There are N roadworks scheduled on this street.\nThe i-th roadwork blocks the point at coordinate X_i from time S_i - 0.5 to time T_i - 0.5. Q people are standing at coordinate 0. The i-th person will start the coordinate 0 at time D_i, continue to walk with speed 1 in the positive direction and stop walking when reaching a blocked point. Find the distance each of the Q people will walk.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry",
          "graph",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03033.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "All values in input are integers.\n1 \\leq N, Q \\leq 2 \\times 10^5\n0 \\leq S_i < T_i \\leq 10^9\n1 \\leq X_i \\leq 10^9\n0 \\leq D_1 < D_2 < ... < D_Q \\leq 10^9\nIf i \\neq j and X_i = X_j, the intervals [S_i, T_i) and [S_j, T_j) do not overlap.",
          "ranges": "1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 6\n1 3 2\n7 13 10\n18 20 13\n3 4 2\n0\n1\n2\n3\n5\n8",
            "output": "2\n2\n10\n-1\n13\n-1 The first person starts coordinate 0 at time 0 and stops walking at coordinate 2 when reaching a point blocked by the first roadwork at time 2. The second person starts coordinate 0 at time 1 and reaches coordinate 2 at time 3. The first roadwork has ended, but the fourth roadwork has begun, so this person also stops walking at coordinate 2. The fourth and sixth persons encounter no roadworks while walking, so they walk forever. The output for these cases is -1.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03033.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03033"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03034",
        "title": "In this pond, there are N lotuses floating at coordinates 0, 1, 2, ..., N-2 and N-1.",
        "description": "Score : 600 points Problem StatementThere is an infinitely large pond, which we consider as a number line.\nIn this pond, there are N lotuses floating at coordinates 0, 1, 2, ..., N-2 and N-1.\nOn the lotus at coordinate i, an integer s_i is written.\nYou are standing on the lotus at coordinate 0. You will play a game that proceeds as follows:\n\n1. Choose positive integers A and B. Your score is initially 0.\n2. Let x be your current coordinate, and y = x+A. The lotus at coordinate x disappears, and you move to coordinate y.\nIf y = N-1, the game ends.\nIf y \\neq N-1 and there is a lotus floating at coordinate y, your score increases by s_y.\nIf y \\neq N-1 and there is no lotus floating at coordinate y, you drown. Your score decreases by 10^{100} points, and the game ends.\n\n\n3. Let x be your current coordinate, and y = x-B. The lotus at coordinate x disappears, and you move to coordinate y.\nIf y = N-1, the game ends.\nIf y \\neq N-1 and there is a lotus floating at coordinate y, your score increases by s_y.\nIf y \\neq N-1 and there is no lotus floating at coordinate y, you drown. Your score decreases by 10^{100} points, and the game ends.\n\n\n4. Go back to step 2.\n\nYou want to end the game with as high a score as possible.\nWhat is the score obtained by the optimal choice of A and B? There is an infinitely large pond, which we consider as a number line.\nIn this pond, there are N lotuses floating at coordinates 0, 1, 2, ..., N-2 and N-1.\nOn the lotus at coordinate i, an integer s_i is written. You are standing on the lotus at coordinate 0. You will play a game that proceeds as follows: You want to end the game with as high a score as possible.\nWhat is the score obtained by the optimal choice of A and B? Print the score obtained by the optimal choice of A and B. If you choose A = 3 and B = 2, the game proceeds as follows: There is no way to end the game with a score of 4 or higher, so the answer is 3. Note that you cannot land the lotus at coordinate 2 without drowning later. The optimal strategy here is to land the final lotus immediately by choosing A = 5 (the value of B does not matter). There is an infinitely large pond, which we consider as a number line.\nIn this pond, there are N lotuses floating at coordinates 0, 1, 2, ..., N-2 and N-1.\nOn the lotus at coordinate i, an integer s_i is written. You are standing on the lotus at coordinate 0. You will play a game that proceeds as follows: 1. Choose positive integers A and B. Your score is initially 0.\n2. Let x be your current coordinate, and y = x+A. The lotus at coordinate x disappears, and you move to coordinate y.\nIf y = N-1, the game ends.\nIf y \\neq N-1 and there is a lotus floating at coordinate y, your score increases by s_y.\nIf y \\neq N-1 and there is no lotus floating at coordinate y, you drown. Your score decreases by 10^{100} points, and the game ends.\n\n\n3. Let x be your current coordinate, and y = x-B. The lotus at coordinate x disappears, and you move to coordinate y.\nIf y = N-1, the game ends.\nIf y \\neq N-1 and there is a lotus floating at coordinate y, your score increases by s_y.\nIf y \\neq N-1 and there is no lotus floating at coordinate y, you drown. Your score decreases by 10^{100} points, and the game ends.\n\n\n4. Go back to step 2. You want to end the game with as high a score as possible.\nWhat is the score obtained by the optimal choice of A and B?",
        "difficulty": "Hard",
        "category": "Simulation",
        "tags": [
          "math",
          "geometry",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03034.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3 \\leq N \\leq 10^5\n-10^9 \\leq s_i \\leq 10^9\ns_0=s_{N-1}=0\nAll values in input are integers.",
          "ranges": "0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n0 2 5 1 0",
            "output": "3 If you choose A = 3 and B = 2, the game proceeds as follows: Move to coordinate 0 + 3 = 3. Your score increases by s_3 = 1.\nMove to coordinate 3 - 2 = 1. Your score increases by s_1 = 2.\nMove to coordinate 1 + 3 = 4. The game ends with a score of 3. There is no way to end the game with a score of 4 or higher, so the answer is 3. Note that you cannot land the lotus at coordinate 2 without drowning later.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03034.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03034"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03035",
        "title": "Find the cost of the Ferris wheel for Takahashi.",
        "description": "Score : 100 points Problem StatementTakahashi, who is A years old, is riding a Ferris wheel.\nIt costs B yen (B is an even number) to ride the Ferris wheel if you are 13 years old or older, but children between 6 and 12 years old (inclusive) can ride it for half the cost, and children who are 5 years old or younger are free of charge. (Yen is the currency of Japan.)\nFind the cost of the Ferris wheel for Takahashi. Takahashi, who is A years old, is riding a Ferris wheel. It costs B yen (B is an even number) to ride the Ferris wheel if you are 13 years old or older, but children between 6 and 12 years old (inclusive) can ride it for half the cost, and children who are 5 years old or younger are free of charge. (Yen is the currency of Japan.) Find the cost of the Ferris wheel for Takahashi. Print the cost of the Ferris wheel for Takahashi. Takahashi is 30 years old now, and the cost of the Ferris wheel is 100 yen. Takahashi is 12 years old, and the cost of the Ferris wheel is the half of 100 yen, that is, 50 yen. Takahashi is 0 years old, and he can ride the Ferris wheel for free. Takahashi, who is A years old, is riding a Ferris wheel. It costs B yen (B is an even number) to ride the Ferris wheel if you are 13 years old or older, but children between 6 and 12 years old (inclusive) can ride it for half the cost, and children who are 5 years old or younger are free of charge. (Yen is the currency of Japan.) Find the cost of the Ferris wheel for Takahashi.",
        "difficulty": "Medium",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03035.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0 ≤ A ≤ 100\n2 ≤ B ≤ 1000\nB is an even number.",
          "ranges": "0 100; 2 1000; 100; 1000; 0; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "30 100",
            "output": "100 Takahashi is 30 years old now, and the cost of the Ferris wheel is 100 yen.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03035.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03035"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03036",
        "title": "x_{i+1} = rx_i - D",
        "description": "Score : 200 points Problem StatementThe development of algae in a pond is as follows.\nLet the total weight of the algae at the beginning of the year i be x_i gram. For i≥2000, the following formula holds:\n\nx_{i+1} = rx_i - D\n\nYou are given r, D and x_{2000}. Calculate x_{2001}, ..., x_{2010} and print them in order. The development of algae in a pond is as follows. Let the total weight of the algae at the beginning of the year i be x_i gram. For i≥2000, the following formula holds: You are given r, D and x_{2000}. Calculate x_{2001}, ..., x_{2010} and print them in order. Print 10 lines. The i-th line (1 ≤ i ≤ 10) should contain x_{2000+i} as an integer. For example, x_{2001} = rx_{2000} - D = 2 \\times 20 - 10 = 30 and x_{2002} = rx_{2001} - D = 2 \\times 30 - 10 = 50. The development of algae in a pond is as follows. Let the total weight of the algae at the beginning of the year i be x_i gram. For i≥2000, the following formula holds: x_{i+1} = rx_i - D You are given r, D and x_{2000}. Calculate x_{2001}, ..., x_{2010} and print them in order.",
        "difficulty": "Medium",
        "category": "Math & Logic",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03036.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ r ≤ 5\n1 ≤ D ≤ 100\nD < x_{2000} ≤ 200\nAll values in input are integers.",
          "ranges": "2 5; 1 100; 5; 100; 2; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 10 20",
            "output": "30\n50\n90\n170\n330\n650\n1290\n2570\n5130\n10250 For example, x_{2001} = rx_{2000} - D = 2 \\times 20 - 10 = 30 and x_{2002} = rx_{2001} - D = 2 \\times 30 - 10 = 50.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03036.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03036"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03041",
        "title": "Print the string S after lowercasing the K-th character in it.",
        "description": "Score : 100 points Problem StatementYou are given a string S of length N consisting of A, B and C, and an integer K which is between 1 and N (inclusive).\nPrint the string S after lowercasing the K-th character in it. You are given a string S of length N consisting of A, B and C, and an integer K which is between 1 and N (inclusive).\nPrint the string S after lowercasing the K-th character in it. Print the string S after lowercasing the K-th character in it. You are given a string S of length N consisting of A, B and C, and an integer K which is between 1 and N (inclusive).\nPrint the string S after lowercasing the K-th character in it.",
        "difficulty": "Medium",
        "category": "Arrays & Strings",
        "tags": [
          "string"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03041.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 50\n1 ≤ K ≤ N\nS is a string of length N consisting of A, B and C.",
          "ranges": "1 50; 50; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 1\nABC",
            "output": "aBC",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03041.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03041"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03043",
        "title": "Throw the die. The current score is the result of the die.",
        "description": "Score : 300 points Problem StatementSnuke has a fair N-sided die that shows the integers from 1 to N with equal probability and a fair coin. He will play the following game with them:\n\nThrow the die. The current score is the result of the die.\nAs long as the score is between 1 and K-1 (inclusive), keep flipping the coin. The score is doubled each time the coin lands heads up, and the score becomes 0 if the coin lands tails up.\nThe game ends when the score becomes 0 or becomes K or above. Snuke wins if the score is K or above, and loses if the score is 0.\n\nYou are given N and K. Find the probability that Snuke wins the game. Snuke has a fair N-sided die that shows the integers from 1 to N with equal probability and a fair coin. He will play the following game with them: You are given N and K. Find the probability that Snuke wins the game. Print the probability that Snuke wins the game. The output is considered correct when the absolute or relative error is at most 10^{-9}. Thus, the probability that Snuke wins is \\frac{1}{48} + \\frac{1}{24} + \\frac{1}{12} = \\frac{7}{48} \\simeq 0.1458333333. Snuke has a fair N-sided die that shows the integers from 1 to N with equal probability and a fair coin. He will play the following game with them: Throw the die. The current score is the result of the die.\nAs long as the score is between 1 and K-1 (inclusive), keep flipping the coin. The score is doubled each time the coin lands heads up, and the score becomes 0 if the coin lands tails up.\nThe game ends when the score becomes 0 or becomes K or above. Snuke wins if the score is K or above, and loses if the score is 0. You are given N and K. Find the probability that Snuke wins the game.",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "simulation",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03043.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10^5\n1 ≤ K ≤ 10^5\nAll values in input are integers.",
          "ranges": "1 10; 1 10; 10; 10; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 10",
            "output": "0.145833333333 If the die shows 1, Snuke needs to get four consecutive heads from four coin flips to obtain a score of 10 or above. The probability of this happening is \\frac{1}{3} \\times (\\frac{1}{2})^4 = \\frac{1}{48}.\nIf the die shows 2, Snuke needs to get three consecutive heads from three coin flips to obtain a score of 10 or above. The probability of this happening is \\frac{1}{3} \\times (\\frac{1}{2})^3 = \\frac{1}{24}.\nIf the die shows 3, Snuke needs to get two consecutive heads from two coin flips to obtain a score of 10 or above. The probability of this happening is \\frac{1}{3} \\times (\\frac{1}{2})^2 = \\frac{1}{12}. Thus, the probability that Snuke wins is \\frac{1}{48} + \\frac{1}{24} + \\frac{1}{12} = \\frac{7}{48} \\simeq 0.1458333333.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03043.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03043"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03051",
        "title": "You are given a sequence A of length N.",
        "description": "Score : 800 points Problem StatementThe beauty of a sequence a of length n is defined as a_1 \\oplus \\cdots \\oplus a_n, where \\oplus denotes the bitwise exclusive or (XOR).\nYou are given a sequence A of length N.\nSnuke will insert zero or more partitions in A to divide it into some number of non-empty contiguous subsequences.\nThere are 2^{N-1} possible ways to insert partitions.\nHow many of them divide A into sequences whose beauties are all equal? Find this count modulo 10^{9}+7. The beauty of a sequence a of length n is defined as a_1 \\oplus \\cdots \\oplus a_n, where \\oplus denotes the bitwise exclusive or (XOR). You are given a sequence A of length N.\nSnuke will insert zero or more partitions in A to divide it into some number of non-empty contiguous subsequences. There are 2^{N-1} possible ways to insert partitions.\nHow many of them divide A into sequences whose beauties are all equal? Find this count modulo 10^{9}+7. Print the answer. Four ways of dividing A shown below satisfy the condition. The condition is not satisfied only if A is divided into (1),(2),(3). Find the count modulo 10^{9}+7. The beauty of a sequence a of length n is defined as a_1 \\oplus \\cdots \\oplus a_n, where \\oplus denotes the bitwise exclusive or (XOR). You are given a sequence A of length N.\nSnuke will insert zero or more partitions in A to divide it into some number of non-empty contiguous subsequences. There are 2^{N-1} possible ways to insert partitions.\nHow many of them divide A into sequences whose beauties are all equal? Find this count modulo 10^{9}+7.",
        "difficulty": "Medium",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03051.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "All values in input are integers.\n1 \\leq N \\leq 5 \\times 10^5\n0 \\leq A_i < 2^{20}",
          "ranges": "2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n1 2 3",
            "output": "3 Four ways of dividing A shown below satisfy the condition. The condition is not satisfied only if A is divided into (1),(2),(3). (1,2,3)\n(1),(2,3)\n(1,2),(3)",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03051.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03051"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03112",
        "title": "Answer the following Q queries:",
        "description": "Score : 400 points Problem StatementAlong a road running in an east-west direction, there are A shrines and B temples.\nThe i-th shrine from the west is located at a distance of s_i meters from the west end of the road, and the i-th temple from the west is located at a distance of t_i meters from the west end of the road.\nAnswer the following Q queries:\n\nQuery i (1 \\leq i \\leq Q): If we start from a point at a distance of x_i meters from the west end of the road and freely travel along the road, what is the minimum distance that needs to be traveled in order to visit one shrine and one temple? (It is allowed to pass by more shrines and temples than required.) Along a road running in an east-west direction, there are A shrines and B temples.\nThe i-th shrine from the west is located at a distance of s_i meters from the west end of the road, and the i-th temple from the west is located at a distance of t_i meters from the west end of the road. Answer the following Q queries: Print Q lines. The i-th line should contain the answer to the i-th query. There are two shrines and three temples. The shrines are located at distances of 100, 600 meters from the west end of the road, and the temples are located at distances of 400, 900, 1000 meters from the west end of the road. The road is quite long, and we may need to travel a distance that does not fit into a 32-bit integer. Along a road running in an east-west direction, there are A shrines and B temples.\nThe i-th shrine from the west is located at a distance of s_i meters from the west end of the road, and the i-th temple from the west is located at a distance of t_i meters from the west end of the road. Answer the following Q queries: Query i (1 \\leq i \\leq Q): If we start from a point at a distance of x_i meters from the west end of the road and freely travel along the road, what is the minimum distance that needs to be traveled in order to visit one shrine and one temple? (It is allowed to pass by more shrines and temples than required.)",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03112.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq A, B \\leq 10^5\n1 \\leq Q \\leq 10^5\n1 \\leq s_1 < s_2 < ... < s_A \\leq 10^{10}\n1 \\leq t_1 < t_2 < ... < t_B \\leq 10^{10}\n1 \\leq x_i \\leq 10^{10}\ns_1, ..., s_A, t_1, ..., t_B, x_1, ..., x_Q are all different.\nAll values in input are integers.",
          "ranges": "1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 3 4\n100\n600\n400\n900\n1000\n150\n2000\n899\n799",
            "output": "350\n1400\n301\n399 There are two shrines and three temples. The shrines are located at distances of 100, 600 meters from the west end of the road, and the temples are located at distances of 400, 900, 1000 meters from the west end of the road. Query 1: If we start from a point at a distance of 150 meters from the west end of the road, the optimal move is first to walk 50 meters west to visit a shrine, then to walk 300 meters east to visit a temple.\nQuery 2: If we start from a point at a distance of 2000 meters from the west end of the road, the optimal move is first to walk 1000 meters west to visit a temple, then to walk 400 meters west to visit a shrine. We will pass by another temple on the way, but it is fine.\nQuery 3: If we start from a point at a distance of 899 meters from the west end of the road, the optimal move is first to walk 1 meter east to visit a temple, then to walk 300 meters west to visit a shrine.\nQuery 4: If we start from a point at a distance of 799 meters from the west end of the road, the optimal move is first to walk 199 meters west to visit a shrine, then to walk 200 meters west to visit a temple.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03112.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03112"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03156",
        "title": "The i-th problem will have a score of P_i points if used in a contest.",
        "description": "Score : 200 points Problem StatementYou have written N problems to hold programming contests.\nThe i-th problem will have a score of P_i points if used in a contest.\nWith these problems, you would like to hold as many contests as possible under the following condition:\n\nA contest has three problems. The first problem has a score not greater than A points, the second has a score between A + 1 and B points (inclusive), and the third has a score not less than B + 1 points.\n\nThe same problem should not be used in multiple contests.\nAt most how many contests can be held? You have written N problems to hold programming contests.\nThe i-th problem will have a score of P_i points if used in a contest. With these problems, you would like to hold as many contests as possible under the following condition: The same problem should not be used in multiple contests.\nAt most how many contests can be held? Print the answer. Two contests can be held by putting the first, second, third problems and the fourth, fifth, sixth problems together. No contest can be held, because there is no problem with a score of A = 3 or less. You have written N problems to hold programming contests.\nThe i-th problem will have a score of P_i points if used in a contest. With these problems, you would like to hold as many contests as possible under the following condition: A contest has three problems. The first problem has a score not greater than A points, the second has a score between A + 1 and B points (inclusive), and the third has a score not less than B + 1 points. The same problem should not be used in multiple contests.\nAt most how many contests can be held?",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03156.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3 \\leq N \\leq 100\n1 \\leq P_i \\leq 20 (1 \\leq i \\leq N)\n1 \\leq A < B < 20\nAll values in input are integers.",
          "ranges": "20"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "7\n5 15\n1 10 16 2 7 20 12",
            "output": "2 Two contests can be held by putting the first, second, third problems and the fourth, fifth, sixth problems together.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03156.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03156"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03158",
        "title": "For any two cards, the integers on those cards are different.",
        "description": "Score : 500 points Problem StatementThere are N cards. The i-th card has an integer A_i written on it.\nFor any two cards, the integers on those cards are different.\nUsing these cards, Takahashi and Aoki will play the following game:\n\nAoki chooses an integer x.\nStarting from Takahashi, the two players alternately take a card. The card should be chosen in the following manner:\nTakahashi should take the card with the largest integer among the remaining card.\nAoki should take the card with the integer closest to x among the remaining card. If there are multiple such cards, he should take the card with the smallest integer among those cards.\n\n\nThe game ends when there is no card remaining.\n\nYou are given Q candidates for the value of x: X_1, X_2, ..., X_Q.\nFor each i (1 \\leq i \\leq Q), find the sum of the integers written on the cards that Takahashi will take if Aoki chooses x = X_i. There are N cards. The i-th card has an integer A_i written on it.\nFor any two cards, the integers on those cards are different. Using these cards, Takahashi and Aoki will play the following game: You are given Q candidates for the value of x: X_1, X_2, ..., X_Q.\nFor each i (1 \\leq i \\leq Q), find the sum of the integers written on the cards that Takahashi will take if Aoki chooses x = X_i. Print Q lines. The i-th line (1 \\leq i \\leq Q) should contain the answer for x = X_i. For example, when x = X_3(= 9), the game proceeds as follows: Thus, 13 + 11 + 3 = 27 should be printed on the third line. There are N cards. The i-th card has an integer A_i written on it.\nFor any two cards, the integers on those cards are different. Using these cards, Takahashi and Aoki will play the following game: Aoki chooses an integer x.\nStarting from Takahashi, the two players alternately take a card. The card should be chosen in the following manner:\nTakahashi should take the card with the largest integer among the remaining card.\nAoki should take the card with the integer closest to x among the remaining card. If there are multiple such cards, he should take the card with the smallest integer among those cards.\n\n\nThe game ends when there is no card remaining. You are given Q candidates for the value of x: X_1, X_2, ..., X_Q.\nFor each i (1 \\leq i \\leq Q), find the sum of the integers written on the cards that Takahashi will take if Aoki chooses x = X_i.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03158.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 \\leq N \\leq 100 000\n1 \\leq Q \\leq 100 000\n1 \\leq A_1 < A_2 < ... < A_N \\leq 10^9\n1 \\leq X_i \\leq 10^9 (1 \\leq i \\leq Q)\nAll values in input are integers.",
          "ranges": "1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 5\n3 5 7 11 13\n1\n4\n9\n10\n13",
            "output": "31\n31\n27\n23\n23 For example, when x = X_3(= 9), the game proceeds as follows: Takahashi takes the card with 13.\nAoki takes the card with 7.\nTakahashi takes the card with 11.\nAoki takes the card with 5.\nTakahashi takes the card with 3. Thus, 13 + 11 + 3 = 27 should be printed on the third line.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03158.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03158"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03168",
        "title": "There are N coins, numbered 1, 2, \\ldots, N.",
        "description": "Score : 100 points Problem StatementLet N be a positive odd number.\nThere are N coins, numbered 1, 2, \\ldots, N.\nFor each i (1 \\leq i \\leq N), when Coin i is tossed, it comes up heads with probability p_i and tails with probability 1 - p_i.\nTaro has tossed all the N coins.\nFind the probability of having more heads than tails. Let N be a positive odd number. There are N coins, numbered 1, 2, \\ldots, N.\nFor each i (1 \\leq i \\leq N), when Coin i is tossed, it comes up heads with probability p_i and tails with probability 1 - p_i. Taro has tossed all the N coins.\nFind the probability of having more heads than tails. Print the probability of having more heads than tails.\nThe output is considered correct when the absolute error is not greater than 10^{-9}. The probability of each case where we have more heads than tails is as follows: Thus, the probability of having more heads than tails is 0.144 + 0.336 + 0.096 + 0.036 = 0.612. Let N be a positive odd number. There are N coins, numbered 1, 2, \\ldots, N.\nFor each i (1 \\leq i \\leq N), when Coin i is tossed, it comes up heads with probability p_i and tails with probability 1 - p_i. Taro has tossed all the N coins.\nFind the probability of having more heads than tails.",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03168.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "N is an odd number.\n1 \\leq N \\leq 2999\np_i is a real number and has two decimal places.\n0 < p_i < 1",
          "ranges": "0 1; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n0.30 0.60 0.80",
            "output": "0.612 The probability of each case where we have more heads than tails is as follows: The probability of having (Coin 1, Coin 2, Coin 3) = (Head, Head, Head) is 0.3 × 0.6 × 0.8 = 0.144;\nThe probability of having (Coin 1, Coin 2, Coin 3) = (Tail, Head, Head) is 0.7 × 0.6 × 0.8 = 0.336;\nThe probability of having (Coin 1, Coin 2, Coin 3) = (Head, Tail, Head) is 0.3 × 0.4 × 0.8 = 0.096;\nThe probability of having (Coin 1, Coin 2, Coin 3) = (Head, Head, Tail) is 0.3 × 0.6 × 0.2 = 0.036. Thus, the probability of having more heads than tails is 0.144 + 0.336 + 0.096 + 0.036 = 0.612.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03168.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03168"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03170",
        "title": "Taro and Jiro will play the following game against each other.",
        "description": "Score : 100 points Problem StatementThere is a set A = \\{ a_1, a_2, \\ldots, a_N \\} consisting of N positive integers.\nTaro and Jiro will play the following game against each other.\nInitially, we have a pile consisting of K stones.\nThe two players perform the following operation alternately, starting from Taro:\n\nChoose an element x in A, and remove exactly x stones from the pile.\n\nA player loses when he becomes unable to play.\nAssuming that both players play optimally, determine the winner. There is a set A = \\{ a_1, a_2, \\ldots, a_N \\} consisting of N positive integers.\nTaro and Jiro will play the following game against each other. Initially, we have a pile consisting of K stones.\nThe two players perform the following operation alternately, starting from Taro: A player loses when he becomes unable to play.\nAssuming that both players play optimally, determine the winner. If Taro will win, print First; if Jiro will win, print Second. If Taro removes three stones, Jiro cannot make a move.\nThus, Taro wins. Whatever Taro does in his operation, Jiro wins, as follows: Taro should remove two stones. Then, whatever Jiro does in his operation, Taro wins, as follows: There is a set A = \\{ a_1, a_2, \\ldots, a_N \\} consisting of N positive integers.\nTaro and Jiro will play the following game against each other. Initially, we have a pile consisting of K stones.\nThe two players perform the following operation alternately, starting from Taro: Choose an element x in A, and remove exactly x stones from the pile. A player loses when he becomes unable to play.\nAssuming that both players play optimally, determine the winner.",
        "difficulty": "Medium",
        "category": "Simulation",
        "tags": [
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03170.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "All values in input are integers.\n1 \\leq N \\leq 100\n1 \\leq K \\leq 10^5\n1 \\leq a_1 < a_2 < \\cdots < a_N \\leq K",
          "ranges": "1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 4\n2 3",
            "output": "First If Taro removes three stones, Jiro cannot make a move.\nThus, Taro wins.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03170.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03170"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03178",
        "title": "The sum of the digits in base ten is a multiple of D.",
        "description": "Score : 100 points Problem StatementFind the number of integers between 1 and K (inclusive) satisfying the following condition, modulo 10^9 + 7:\n\nThe sum of the digits in base ten is a multiple of D. Find the number of integers between 1 and K (inclusive) satisfying the following condition, modulo 10^9 + 7: Print the number of integers satisfying the condition, modulo 10^9 + 7. Those six integers are: 4, 8, 13, 17, 22 and 26. Be sure to print the number modulo 10^9 + 7. Find the number of integers between 1 and K (inclusive) satisfying the following condition, modulo 10^9 + 7: The sum of the digits in base ten is a multiple of D.",
        "difficulty": "Medium",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03178.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "All values in input are integers.\n1 \\leq K < 10^{10000}\n1 \\leq D \\leq 100",
          "ranges": "10"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "30\n4",
            "output": "6 Those six integers are: 4, 8, 13, 17, 22 and 26.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03178.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03178"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03185",
        "title": "For each i (1 \\leq i \\leq N), the height of Stone i is h_i.",
        "description": "Score : 100 points Problem StatementThere are N stones, numbered 1, 2, \\ldots, N.\nFor each i (1 \\leq i \\leq N), the height of Stone i is h_i.\nHere, h_1 < h_2 < \\cdots < h_N holds.\nThere is a frog who is initially on Stone 1.\nHe will repeat the following action some number of times to reach Stone N:\n\nIf the frog is currently on Stone i, jump to one of the following: Stone i + 1, i + 2, \\ldots, N. Here, a cost of (h_j - h_i)^2 + C is incurred, where j is the stone to land on.\n\nFind the minimum possible total cost incurred before the frog reaches Stone N. There are N stones, numbered 1, 2, \\ldots, N.\nFor each i (1 \\leq i \\leq N), the height of Stone i is h_i.\nHere, h_1 < h_2 < \\cdots < h_N holds. There is a frog who is initially on Stone 1.\nHe will repeat the following action some number of times to reach Stone N: Find the minimum possible total cost incurred before the frog reaches Stone N. Print the minimum possible total cost incurred. If we follow the path 1 → 3 → 5, the total cost incurred would be ((3 - 1)^2 + 6) + ((5 - 3)^2 + 6) = 20. The answer may not fit into a 32-bit integer type. If we follow the path 1 → 2 → 4 → 5 → 8, the total cost incurred would be ((3 - 1)^2 + 5) + ((5 - 3)^2 + 5) + ((10 - 5)^2 + 5) + ((13 - 10)^2 + 5) = 62. There are N stones, numbered 1, 2, \\ldots, N.\nFor each i (1 \\leq i \\leq N), the height of Stone i is h_i.\nHere, h_1 < h_2 < \\cdots < h_N holds. There is a frog who is initially on Stone 1.\nHe will repeat the following action some number of times to reach Stone N: If the frog is currently on Stone i, jump to one of the following: Stone i + 1, i + 2, \\ldots, N. Here, a cost of (h_j - h_i)^2 + C is incurred, where j is the stone to land on. Find the minimum possible total cost incurred before the frog reaches Stone N.",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03185.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "All values in input are integers.\n2 \\leq N \\leq 2 \\times 10^5\n1 \\leq C \\leq 10^{12}\n1 \\leq h_1 < h_2 < \\cdots < h_N \\leq 10^6",
          "ranges": "1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 6\n1 2 3 4 5",
            "output": "20 If we follow the path 1 → 3 → 5, the total cost incurred would be ((3 - 1)^2 + 6) + ((5 - 3)^2 + 6) = 20.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03185.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03185"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03210",
        "title": "Takahashi is now X years old. Will his growth be celebrated in Shichi-Go-San this time?",
        "description": "Score : 100 points Problem StatementShichi-Go-San (literally \"Seven-Five-Three\") is a traditional event in a certain country to celebrate the growth of seven-, five- and three-year-old children.\nTakahashi is now X years old. Will his growth be celebrated in Shichi-Go-San this time? Shichi-Go-San (literally \"Seven-Five-Three\") is a traditional event in a certain country to celebrate the growth of seven-, five- and three-year-old children. Takahashi is now X years old. Will his growth be celebrated in Shichi-Go-San this time? If Takahashi's growth will be celebrated, print YES; if it will not, print NO. The growth of a five-year-old child will be celebrated. See you next year. Shichi-Go-San (literally \"Seven-Five-Three\") is a traditional event in a certain country to celebrate the growth of seven-, five- and three-year-old children. Takahashi is now X years old. Will his growth be celebrated in Shichi-Go-San this time?",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03210.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ X ≤ 9\nX is an integer.",
          "ranges": "1 9; 9; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5",
            "output": "YES The growth of a five-year-old child will be celebrated.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03210.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03210"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03212",
        "title": "Here, a Shichi-Go-San number is a positive integer that satisfies the following condition:",
        "description": "Score : 300 points Problem StatementYou are given an integer N. Among the integers between 1 and N (inclusive), how many Shichi-Go-San numbers (literally \"Seven-Five-Three numbers\") are there?\nHere, a Shichi-Go-San number is a positive integer that satisfies the following condition:\n\nWhen the number is written in base ten, each of the digits 7, 5 and 3 appears at least once, and the other digits never appear. You are given an integer N. Among the integers between 1 and N (inclusive), how many Shichi-Go-San numbers (literally \"Seven-Five-Three numbers\") are there? Here, a Shichi-Go-San number is a positive integer that satisfies the following condition: Print the number of the Shichi-Go-San numbers between 1 and N (inclusive). There are four Shichi-Go-San numbers not greater than 575: 357, 375, 537 and 573. There are 13 Shichi-Go-San numbers not greater than 3600: the above four numbers, 735, 753, 3357, 3375, 3537, 3557, 3573, 3575 and 3577. You are given an integer N. Among the integers between 1 and N (inclusive), how many Shichi-Go-San numbers (literally \"Seven-Five-Three numbers\") are there? Here, a Shichi-Go-San number is a positive integer that satisfies the following condition: When the number is written in base ten, each of the digits 7, 5 and 3 appears at least once, and the other digits never appear.",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03212.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N < 10^9\nN is an integer.",
          "ranges": "10"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "575",
            "output": "4 There are four Shichi-Go-San numbers not greater than 575: 357, 375, 537 and 573.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03212.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03212"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03255",
        "title": "There are N pieces of trash on a number line.",
        "description": "Score : 700 points Problem StatementSnuke has decided to use a robot to clean his room.\nThere are N pieces of trash on a number line.\nThe i-th piece from the left is at position x_i.\nWe would like to put all of them in a trash bin at position 0.\nFor the positions of the pieces of trash, 0 < x_1 < x_2 < ... < x_{N} \\leq 10^{9} holds.\nThe robot is initially at position 0.\nIt can freely move left and right along the number line, pick up a piece of trash when it comes to the position of that piece, carry any number of pieces of trash and put them in the trash bin when it comes to position 0. It is not allowed to put pieces of trash anywhere except in the trash bin.\nThe robot consumes X points of energy when the robot picks up a piece of trash, or put pieces of trash in the trash bin. (Putting any number of pieces of trash in the trash bin consumes X points of energy.)\nAlso, the robot consumes (k+1)^{2} points of energy to travel by a distance of 1 when the robot is carrying k pieces of trash.\nFind the minimum amount of energy required to put all the N pieces of trash in the trash bin. Snuke has decided to use a robot to clean his room. There are N pieces of trash on a number line.\nThe i-th piece from the left is at position x_i.\nWe would like to put all of them in a trash bin at position 0. For the positions of the pieces of trash, 0 < x_1 < x_2 < ... < x_{N} \\leq 10^{9} holds. The robot is initially at position 0.\nIt can freely move left and right along the number line, pick up a piece of trash when it comes to the position of that piece, carry any number of pieces of trash and put them in the trash bin when it comes to position 0. It is not allowed to put pieces of trash anywhere except in the trash bin. The robot consumes X points of energy when the robot picks up a piece of trash, or put pieces of trash in the trash bin. (Putting any number of pieces of trash in the trash bin consumes X points of energy.)\nAlso, the robot consumes (k+1)^{2} points of energy to travel by a distance of 1 when the robot is carrying k pieces of trash. Find the minimum amount of energy required to put all the N pieces of trash in the trash bin. Partial Scores\n400 points will be awarded for passing the test set satisfying N \\leq 2000. Print the answer. This strategy consumes a total of 10+100+36+100+9+100=355 points of energy. Snuke has decided to use a robot to clean his room. There are N pieces of trash on a number line.\nThe i-th piece from the left is at position x_i.\nWe would like to put all of them in a trash bin at position 0. For the positions of the pieces of trash, 0 < x_1 < x_2 < ... < x_{N} \\leq 10^{9} holds. The robot is initially at position 0.\nIt can freely move left and right along the number line, pick up a piece of trash when it comes to the position of that piece, carry any number of pieces of trash and put them in the trash bin when it comes to position 0. It is not allowed to put pieces of trash anywhere except in the trash bin. The robot consumes X points of energy when the robot picks up a piece of trash, or put pieces of trash in the trash bin. (Putting any number of pieces of trash in the trash bin consumes X points of energy.)\nAlso, the robot consumes (k+1)^{2} points of energy to travel by a distance of 1 when the robot is carrying k pieces of trash. Find the minimum amount of energy required to put all the N pieces of trash in the trash bin.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03255.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N \\leq 2 \\times 10^{5}\n0 < x_1 < ... < x_N \\leq 10^9\n1 \\leq X \\leq 10^9\nAll values in input are integers.",
          "ranges": "0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 100\n1 10",
            "output": "355 Travel to position 10 by consuming 10 points of energy.\nPick up the piece of trash by consuming 100 points of energy.\nTravel to position 1 by consuming 36 points of energy.\nPick up the piece of trash by consuming 100 points of energy.\nTravel to position 0 by consuming 9 points of energy.\nPut the two pieces of trash in the trash bin by consuming 100 points of energy. This strategy consumes a total of 10+100+36+100+9+100=355 points of energy.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03255.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03255"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03274",
        "title": "The i-th candle from the left is placed on coordinate x_i.",
        "description": "Score : 300 points Problem StatementThere are N candles placed on a number line.\nThe i-th candle from the left is placed on coordinate x_i.\nHere, x_1 < x_2 < ... < x_N holds.\nInitially, no candles are burning.\nSnuke decides to light K of the N candles.\nNow, he is at coordinate 0.\nHe can move left and right along the line with speed 1.\nHe can also light a candle when he is at the same position as the candle, in negligible time.\nFind the minimum time required to light K candles. There are N candles placed on a number line.\nThe i-th candle from the left is placed on coordinate x_i.\nHere, x_1 < x_2 < ... < x_N holds. Initially, no candles are burning.\nSnuke decides to light K of the N candles. Now, he is at coordinate 0.\nHe can move left and right along the line with speed 1.\nHe can also light a candle when he is at the same position as the candle, in negligible time. Find the minimum time required to light K candles. Print the minimum time required to light K candles. He should move and light candles as follows: There are N candles placed on a number line.\nThe i-th candle from the left is placed on coordinate x_i.\nHere, x_1 < x_2 < ... < x_N holds. Initially, no candles are burning.\nSnuke decides to light K of the N candles. Now, he is at coordinate 0.\nHe can move left and right along the line with speed 1.\nHe can also light a candle when he is at the same position as the candle, in negligible time. Find the minimum time required to light K candles.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03274.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N \\leq 10^5\n1 \\leq K \\leq N\nx_i is an integer.\n|x_i| \\leq 10^8\nx_1 < x_2 < ... < x_N",
          "ranges": "1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 3\n-30 -10 10 20 50",
            "output": "40 He should move and light candles as follows: Move from coordinate 0 to -10.\nLight the second candle from the left.\nMove from coordinate -10 to 10.\nLight the third candle from the left.\nMove from coordinate 10 to 20.\nLight the fourth candle from the left.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03274.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03274"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03276",
        "title": "The i-th candle from the left is placed on coordinate x_i.",
        "description": "Score : 300 points Problem StatementThere are N candles placed on a number line.\nThe i-th candle from the left is placed on coordinate x_i.\nHere, x_1 < x_2 < ... < x_N holds.\nInitially, no candles are burning.\nSnuke decides to light K of the N candles.\nNow, he is at coordinate 0.\nHe can move left and right along the line with speed 1.\nHe can also light a candle when he is at the same position as the candle, in negligible time.\nFind the minimum time required to light K candles. There are N candles placed on a number line.\nThe i-th candle from the left is placed on coordinate x_i.\nHere, x_1 < x_2 < ... < x_N holds. Initially, no candles are burning.\nSnuke decides to light K of the N candles. Now, he is at coordinate 0.\nHe can move left and right along the line with speed 1.\nHe can also light a candle when he is at the same position as the candle, in negligible time. Find the minimum time required to light K candles. Print the minimum time required to light K candles. He should move and light candles as follows: There are N candles placed on a number line.\nThe i-th candle from the left is placed on coordinate x_i.\nHere, x_1 < x_2 < ... < x_N holds. Initially, no candles are burning.\nSnuke decides to light K of the N candles. Now, he is at coordinate 0.\nHe can move left and right along the line with speed 1.\nHe can also light a candle when he is at the same position as the candle, in negligible time. Find the minimum time required to light K candles.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03276.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N \\leq 10^5\n1 \\leq K \\leq N\nx_i is an integer.\n|x_i| \\leq 10^8\nx_1 < x_2 < ... < x_N",
          "ranges": "1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 3\n-30 -10 10 20 50",
            "output": "40 He should move and light candles as follows: Move from coordinate 0 to -10.\nLight the second candle from the left.\nMove from coordinate -10 to 10.\nLight the third candle from the left.\nMove from coordinate 10 to 20.\nLight the fourth candle from the left.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03276.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03276"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03279",
        "title": "The N + M coordinates of these are all integers and all distinct.",
        "description": "Score : 900 points Problem StatementThere are N robots and M exits on a number line.\nThe N + M coordinates of these are all integers and all distinct.\nFor each i (1 \\leq i \\leq N), the coordinate of the i-th robot from the left is x_i.\nAlso, for each j (1 \\leq j \\leq M), the coordinate of the j-th exit from the left is y_j.\nSnuke can repeatedly perform the following two kinds of operations in any order to move all the robots simultaneously:\n\nIncrement the coordinates of all the robots on the number line by 1.\nDecrement the coordinates of all the robots on the number line by 1.\n\nEach robot will disappear from the number line when its position coincides with that of an exit, going through that exit.\nSnuke will continue performing operations until all the robots disappear.\nWhen all the robots disappear, how many combinations of exits can be used by the robots?\nFind the count modulo 10^9 + 7.\nHere, two combinations of exits are considered different when there is a robot that used different exits in those two combinations. There are N robots and M exits on a number line.\nThe N + M coordinates of these are all integers and all distinct.\nFor each i (1 \\leq i \\leq N), the coordinate of the i-th robot from the left is x_i.\nAlso, for each j (1 \\leq j \\leq M), the coordinate of the j-th exit from the left is y_j. Snuke can repeatedly perform the following two kinds of operations in any order to move all the robots simultaneously: Each robot will disappear from the number line when its position coincides with that of an exit, going through that exit.\nSnuke will continue performing operations until all the robots disappear. When all the robots disappear, how many combinations of exits can be used by the robots?\nFind the count modulo 10^9 + 7.\nHere, two combinations of exits are considered different when there is a robot that used different exits in those two combinations. Print the number of the combinations of exits that can be used by the robots when all the robots disappear, modulo 10^9 + 7. The i-th robot from the left will be called Robot i, and the j-th exit from the left will be called Exit j.\nThere are three possible combinations of exits (the exit used by Robot 1, the exit used by Robot 2) as follows: The exit for each robot can be chosen independently, so there are 2^3 = 8 possible combinations of exits. Every robot uses Exit 1. There are N robots and M exits on a number line.\nThe N + M coordinates of these are all integers and all distinct.\nFor each i (1 \\leq i \\leq N), the coordinate of the i-th robot from the left is x_i.\nAlso, for each j (1 \\leq j \\leq M), the coordinate of the j-th exit from the left is y_j. Snuke can repeatedly perform the following two kinds of operations in any order to move all the robots simultaneously: Increment the coordinates of all the robots on the number line by 1.\nDecrement the coordinates of all the robots on the number line by 1. Each robot will disappear from the number line when its position coincides with that of an exit, going through that exit.\nSnuke will continue performing operations until all the robots disappear. When all the robots disappear, how many combinations of exits can be used by the robots?\nFind the count modulo 10^9 + 7.\nHere, two combinations of exits are considered different when there is a robot that used different exits in those two combinations.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03279.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N, M \\leq 10^5\n1 \\leq x_1 < x_2 < ... < x_N \\leq 10^9\n1 \\leq y_1 < y_2 < ... < y_M \\leq 10^9\nAll given coordinates are integers.\nAll given coordinates are distinct.",
          "ranges": "1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 2\n2 3\n1 4",
            "output": "3 The i-th robot from the left will be called Robot i, and the j-th exit from the left will be called Exit j.\nThere are three possible combinations of exits (the exit used by Robot 1, the exit used by Robot 2) as follows: (Exit 1, Exit 1)\n(Exit 1, Exit 2)\n(Exit 2, Exit 2)",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03279.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03279"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03288",
        "title": "The contest after the ARC is called AGC, which is rated for all contestants.",
        "description": "Score : 100 points Problem StatementA programming competition site AtCode regularly holds programming contests.\nThe next contest on AtCode is called ABC, which is rated for contestants with ratings less than 1200.\nThe contest after the ABC is called ARC, which is rated for contestants with ratings less than 2800.\nThe contest after the ARC is called AGC, which is rated for all contestants.\nTakahashi's rating on AtCode is R. What is the next contest rated for him? A programming competition site AtCode regularly holds programming contests. The next contest on AtCode is called ABC, which is rated for contestants with ratings less than 1200. The contest after the ABC is called ARC, which is rated for contestants with ratings less than 2800. The contest after the ARC is called AGC, which is rated for all contestants. Takahashi's rating on AtCode is R. What is the next contest rated for him? Print the name of the next contest rated for Takahashi (ABC, ARC or AGC). 1199 is less than 1200, so ABC will be rated. 1200 is not less than 1200 and ABC will be unrated, but it is less than 2800 and ARC will be rated. A programming competition site AtCode regularly holds programming contests. The next contest on AtCode is called ABC, which is rated for contestants with ratings less than 1200. The contest after the ABC is called ARC, which is rated for contestants with ratings less than 2800. The contest after the ARC is called AGC, which is rated for all contestants. Takahashi's rating on AtCode is R. What is the next contest rated for him?",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03288.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0 ≤ R ≤ 4208\nR is an integer.",
          "ranges": "0 4208; 4208; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1199",
            "output": "ABC 1199 is less than 1200, so ABC will be rated.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03288.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03288"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03290",
        "title": "Each problem is allocated a score based on its difficulty.",
        "description": "Score : 300 points Problem StatementA programming competition site AtCode provides algorithmic problems.\nEach problem is allocated a score based on its difficulty.\nCurrently, for each integer i between 1 and D (inclusive), there are p_i problems with a score of 100i points.\nThese p_1 + … + p_D problems are all of the problems available on AtCode.\nA user of AtCode has a value called total score.\nThe total score of a user is the sum of the following two elements:\n\nBase score: the sum of the scores of all problems solved by the user.\nPerfect bonuses: when a user solves all problems with a score of 100i points, he/she earns the perfect bonus of c_i points, aside from the base score (1 ≤ i ≤ D).\n\nTakahashi, who is the new user of AtCode, has not solved any problem.\nHis objective is to have a total score of G or more points.\nAt least how many problems does he need to solve for this objective? A programming competition site AtCode provides algorithmic problems.\nEach problem is allocated a score based on its difficulty.\nCurrently, for each integer i between 1 and D (inclusive), there are p_i problems with a score of 100i points.\nThese p_1 + … + p_D problems are all of the problems available on AtCode. A user of AtCode has a value called total score.\nThe total score of a user is the sum of the following two elements: Takahashi, who is the new user of AtCode, has not solved any problem.\nHis objective is to have a total score of G or more points.\nAt least how many problems does he need to solve for this objective? In this case, there are three problems each with 100 points and five problems each with 200 points. The perfect bonus for solving all the 100-point problems is 500 points, and the perfect bonus for solving all the 200-point problems is 800 points. Takahashi's objective is to have a total score of 700 points or more. One way to achieve this objective is to solve four 200-point problems and earn a base score of 800 points. However, if we solve three 100-point problems, we can earn the perfect bonus of 500 points in addition to the base score of 300 points, for a total score of 800 points, and we can achieve the objective with fewer problems. There is only one 500-point problem, but the perfect bonus can be earned even in such a case. A programming competition site AtCode provides algorithmic problems.\nEach problem is allocated a score based on its difficulty.\nCurrently, for each integer i between 1 and D (inclusive), there are p_i problems with a score of 100i points.\nThese p_1 + … + p_D problems are all of the problems available on AtCode. A user of AtCode has a value called total score.\nThe total score of a user is the sum of the following two elements: Base score: the sum of the scores of all problems solved by the user.\nPerfect bonuses: when a user solves all problems with a score of 100i points, he/she earns the perfect bonus of c_i points, aside from the base score (1 ≤ i ≤ D). Takahashi, who is the new user of AtCode, has not solved any problem.\nHis objective is to have a total score of G or more points.\nAt least how many problems does he need to solve for this objective?",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03290.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ D ≤ 10\n1 ≤ p_i ≤ 100\n100 ≤ c_i ≤ 10^6\n100 ≤ G\nAll values in input are integers.\nc_i and G are all multiples of 100.\nIt is possible to have a total score of G or more points.",
          "ranges": "1 10; 1 100; 100 10; 10; 100; 10; 1; 1; 100; 100"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 700\n3 500\n5 800",
            "output": "3 In this case, there are three problems each with 100 points and five problems each with 200 points. The perfect bonus for solving all the 100-point problems is 500 points, and the perfect bonus for solving all the 200-point problems is 800 points. Takahashi's objective is to have a total score of 700 points or more. One way to achieve this objective is to solve four 200-point problems and earn a base score of 800 points. However, if we solve three 100-point problems, we can earn the perfect bonus of 500 points in addition to the base score of 300 points, for a total score of 800 points, and we can achieve the objective with fewer problems.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03290.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03290"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03328",
        "title": "Assume also that the depth of the snow cover is always at least 1 meter.",
        "description": "Score : 200 points Problem StatementIn some village, there are 999 towers that are 1,(1+2),(1+2+3),...,(1+2+3+...+999) meters high from west to east, at intervals of 1 meter.\nIt had been snowing for a while before it finally stopped. For some two adjacent towers located 1 meter apart, we measured the lengths of the parts of those towers that are not covered with snow, and the results are a meters for the west tower, and b meters for the east tower.\nAssuming that the depth of snow cover and the altitude are the same everywhere in the village, find the amount of the snow cover.\nAssume also that the depth of the snow cover is always at least 1 meter. In some village, there are 999 towers that are 1,(1+2),(1+2+3),...,(1+2+3+...+999) meters high from west to east, at intervals of 1 meter. It had been snowing for a while before it finally stopped. For some two adjacent towers located 1 meter apart, we measured the lengths of the parts of those towers that are not covered with snow, and the results are a meters for the west tower, and b meters for the east tower. Assuming that the depth of snow cover and the altitude are the same everywhere in the village, find the amount of the snow cover. Assume also that the depth of the snow cover is always at least 1 meter. If the depth of the snow cover is x meters, print x as an integer. The heights of the two towers are 10 meters and 15 meters, respectively.\nThus, we can see that the depth of the snow cover is 2 meters. In some village, there are 999 towers that are 1,(1+2),(1+2+3),...,(1+2+3+...+999) meters high from west to east, at intervals of 1 meter. It had been snowing for a while before it finally stopped. For some two adjacent towers located 1 meter apart, we measured the lengths of the parts of those towers that are not covered with snow, and the results are a meters for the west tower, and b meters for the east tower. Assuming that the depth of snow cover and the altitude are the same everywhere in the village, find the amount of the snow cover. Assume also that the depth of the snow cover is always at least 1 meter.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03328.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq a < b < 499500(=1+2+3+...+999)\nAll values in input are integers.\nThere is no input that contradicts the assumption.",
          "ranges": "499500"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "8 13",
            "output": "2 The heights of the two towers are 10 meters and 15 meters, respectively.\nThus, we can see that the depth of the snow cover is 2 meters.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03328.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03328"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03331",
        "title": "It is known that A plus B equals N.",
        "description": "Score : 200 points Problem StatementTakahashi has two positive integers A and B.\nIt is known that A plus B equals N.\nFind the minimum possible value of \"the sum of the digits of A\" plus \"the sum of the digits of B\" (in base 10). Takahashi has two positive integers A and B. It is known that A plus B equals N.\nFind the minimum possible value of \"the sum of the digits of A\" plus \"the sum of the digits of B\" (in base 10). Print the minimum possible value of \"the sum of the digits of A\" plus \"the sum of the digits of B\". When A=2 and B=13, the sums of their digits are 2 and 4, which minimizes the value in question. Takahashi has two positive integers A and B. It is known that A plus B equals N.\nFind the minimum possible value of \"the sum of the digits of A\" plus \"the sum of the digits of B\" (in base 10).",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03331.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 10^5\nN is an integer.",
          "ranges": "2 10; 10; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "15",
            "output": "6 When A=2 and B=13, the sums of their digits are 2 and 4, which minimizes the value in question.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03331.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03331"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03332",
        "title": "He defines the beauty of the tower as follows:",
        "description": "Score : 700 points Problem StatementTakahashi has a tower which is divided into N layers.\nInitially, all the layers are uncolored. Takahashi is going to paint some of the layers in red, green or blue to make a beautiful tower.\nHe defines the beauty of the tower as follows:\n\nThe beauty of the tower is the sum of the scores of the N layers, where the score of a layer is A if the layer is painted red, A+B if the layer is painted green, B if the layer is painted blue, and 0 if the layer is uncolored.\n\nHere, A and B are positive integer constants given beforehand. Also note that a layer may not be painted in two or more colors.\nTakahashi is planning to paint the tower so that the beauty of the tower becomes exactly K.\nHow many such ways are there to paint the tower? Find the count modulo 998244353.\nTwo ways to paint the tower are considered different when there exists a layer that is painted in different colors, or a layer that is painted in some color in one of the ways and not in the other. Takahashi has a tower which is divided into N layers.\nInitially, all the layers are uncolored. Takahashi is going to paint some of the layers in red, green or blue to make a beautiful tower.\nHe defines the beauty of the tower as follows: Here, A and B are positive integer constants given beforehand. Also note that a layer may not be painted in two or more colors. Takahashi is planning to paint the tower so that the beauty of the tower becomes exactly K.\nHow many such ways are there to paint the tower? Find the count modulo 998244353.\nTwo ways to paint the tower are considered different when there exists a layer that is painted in different colors, or a layer that is painted in some color in one of the ways and not in the other. Print the number of the ways to paint tiles, modulo 998244353. In this case, a red layer worth 1 points, a green layer worth 3 points and the blue layer worth 2 points. The beauty of the tower is 5 when we have one of the following sets of painted layers: The total number of the ways to produce them is 40. The beauty of the tower is 0 only when all the layers are uncolored. Thus, the answer is 1. Takahashi has a tower which is divided into N layers.\nInitially, all the layers are uncolored. Takahashi is going to paint some of the layers in red, green or blue to make a beautiful tower.\nHe defines the beauty of the tower as follows: The beauty of the tower is the sum of the scores of the N layers, where the score of a layer is A if the layer is painted red, A+B if the layer is painted green, B if the layer is painted blue, and 0 if the layer is uncolored. Here, A and B are positive integer constants given beforehand. Also note that a layer may not be painted in two or more colors. Takahashi is planning to paint the tower so that the beauty of the tower becomes exactly K.\nHow many such ways are there to paint the tower? Find the count modulo 998244353.\nTwo ways to paint the tower are considered different when there exists a layer that is painted in different colors, or a layer that is painted in some color in one of the ways and not in the other.",
        "difficulty": "Medium",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03332.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 3×10^5\n1 ≤ A,B ≤ 3×10^5\n0 ≤ K ≤ 18×10^{10}\nAll values in the input are integers.",
          "ranges": "1 3; 0 18; 3; 3; 18; 1; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 1 2 5",
            "output": "40 In this case, a red layer worth 1 points, a green layer worth 3 points and the blue layer worth 2 points. The beauty of the tower is 5 when we have one of the following sets of painted layers: 1 green, 1 blue\n1 red, 2 blues\n2 reds, 1 green\n3 reds, 1 blue The total number of the ways to produce them is 40.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03332.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03332"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03333",
        "title": "Takahashi is standing on the number line and he is initially at coordinate 0.",
        "description": "Score : 700 points Problem StatementTakahashi and Aoki will play a game with a number line and some segments.\nTakahashi is standing on the number line and he is initially at coordinate 0.\nAoki has N segments. The i-th segment is [L_i,R_i], that is, a segment consisting of points with coordinates between L_i and R_i (inclusive).\nThe game has N steps. The i-th step proceeds as follows:\n\nFirst, Aoki chooses a segment that is still not chosen yet from the N segments and tells it to Takahashi.\nThen, Takahashi walks along the number line to some point within the segment chosen by Aoki this time.\n\nAfter N steps are performed, Takahashi will return to coordinate 0 and the game ends.\nLet K be the total distance traveled by Takahashi throughout the game. Aoki will choose segments so that K will be as large as possible, and Takahashi walks along the line so that K will be as small as possible. What will be the value of K in the end? Takahashi and Aoki will play a game with a number line and some segments.\nTakahashi is standing on the number line and he is initially at coordinate 0.\nAoki has N segments. The i-th segment is [L_i,R_i], that is, a segment consisting of points with coordinates between L_i and R_i (inclusive). The game has N steps. The i-th step proceeds as follows: After N steps are performed, Takahashi will return to coordinate 0 and the game ends. Let K be the total distance traveled by Takahashi throughout the game. Aoki will choose segments so that K will be as large as possible, and Takahashi walks along the line so that K will be as small as possible. What will be the value of K in the end? Print the total distance traveled by Takahashi throughout the game when Takahashi and Aoki acts as above.\nIt is guaranteed that K is always an integer when L_i,R_i are integers. One possible sequence of actions of Takahashi and Aoki is as follows: The distance covered by Takahashi here is 14 (because Takahashi didn't move optimally).\nIt turns out that if both players move optimally, the distance covered by Takahashi will be 10. Takahashi and Aoki will play a game with a number line and some segments.\nTakahashi is standing on the number line and he is initially at coordinate 0.\nAoki has N segments. The i-th segment is [L_i,R_i], that is, a segment consisting of points with coordinates between L_i and R_i (inclusive). The game has N steps. The i-th step proceeds as follows: First, Aoki chooses a segment that is still not chosen yet from the N segments and tells it to Takahashi.\nThen, Takahashi walks along the number line to some point within the segment chosen by Aoki this time. After N steps are performed, Takahashi will return to coordinate 0 and the game ends. Let K be the total distance traveled by Takahashi throughout the game. Aoki will choose segments so that K will be as large as possible, and Takahashi walks along the line so that K will be as small as possible. What will be the value of K in the end?",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "array",
          "math",
          "geometry",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03333.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10^5\n-10^5 ≤ L_i < R_i ≤ 10^5\nL_i and R_i are integers.",
          "ranges": "1 10; 10; 10; 1; 5"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n-5 1\n3 7\n-4 -2",
            "output": "10 One possible sequence of actions of Takahashi and Aoki is as follows: Aoki chooses the first segment. Takahashi moves from coordinate 0 to -4, covering a distance of 4.\nAoki chooses the third segment. Takahashi stays at coordinate -4.\nAoki chooses the second segment. Takahashi moves from coordinate -4 to 3, covering a distance of 7.\nTakahashi moves from coordinate 3 to 0, covering a distance of 3. The distance covered by Takahashi here is 14 (because Takahashi didn't move optimally).\nIt turns out that if both players move optimally, the distance covered by Takahashi will be 10.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03333.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03333"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03334",
        "title": "The distance between any two points in S is not \\sqrt{D_1}.",
        "description": "Score : 800 points Problem StatementTakahashi is doing a research on sets of points in a plane.\nTakahashi thinks a set S of points in a coordinate plane is a good set when S satisfies both of the following conditions:\n\nThe distance between any two points in S is not \\sqrt{D_1}.\nThe distance between any two points in S is not \\sqrt{D_2}.\n\nHere, D_1 and D_2 are positive integer constants that Takahashi specified.\nLet X be a set of points (i,j) on a coordinate plane where i and j are integers and satisfy 0 ≤ i,j < 2N.\nTakahashi has proved that, for any choice of D_1 and D_2, there exists a way to choose N^2 points from X so that the chosen points form a good set.\nHowever, he does not know the specific way to choose such points to form a good set.\nFind a subset of X whose size is N^2 that forms a good set. Takahashi is doing a research on sets of points in a plane.\nTakahashi thinks a set S of points in a coordinate plane is a good set when S satisfies both of the following conditions: Here, D_1 and D_2 are positive integer constants that Takahashi specified. Let X be a set of points (i,j) on a coordinate plane where i and j are integers and satisfy 0 ≤ i,j < 2N. Takahashi has proved that, for any choice of D_1 and D_2, there exists a way to choose N^2 points from X so that the chosen points form a good set.\nHowever, he does not know the specific way to choose such points to form a good set.\nFind a subset of X whose size is N^2 that forms a good set. Print N^2 distinct points that satisfy the condition in the following format: Here, (x_i,y_i) represents the i-th chosen point.\n0 ≤ x_i,y_i < 2N must hold, and they must be integers.\nThe chosen points may be printed in any order.\nIn case there are multiple possible solutions, you can output any. Among these points, the distance between 2 points is either 2 or 2\\sqrt{2}, thus it satisfies the condition. Takahashi is doing a research on sets of points in a plane.\nTakahashi thinks a set S of points in a coordinate plane is a good set when S satisfies both of the following conditions: The distance between any two points in S is not \\sqrt{D_1}.\nThe distance between any two points in S is not \\sqrt{D_2}. Here, D_1 and D_2 are positive integer constants that Takahashi specified. Let X be a set of points (i,j) on a coordinate plane where i and j are integers and satisfy 0 ≤ i,j < 2N. Takahashi has proved that, for any choice of D_1 and D_2, there exists a way to choose N^2 points from X so that the chosen points form a good set.\nHowever, he does not know the specific way to choose such points to form a good set.\nFind a subset of X whose size is N^2 that forms a good set.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "geometry",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03334.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 300\n1 ≤ D_1 ≤ 2×10^5\n1 ≤ D_2 ≤ 2×10^5\nAll values in the input are integers.",
          "ranges": "1 300; 1 2; 1 2; 300; 2; 2; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 1 2",
            "output": "0 0\n0 2\n2 0\n2 2 Among these points, the distance between 2 points is either 2 or 2\\sqrt{2}, thus it satisfies the condition.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03334.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03334"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03335",
        "title": "The tree where Takahashi walks has N vertices numbered 1 through N.",
        "description": "Score : 1500 points Problem StatementTakahashi loves walking on a tree.\nThe tree where Takahashi walks has N vertices numbered 1 through N.\nThe i-th of the N-1 edges connects Vertex a_i and Vertex b_i.\nTakahashi has scheduled M walks. The i-th walk is done as follows:\n\nThe walk involves two vertices u_i and v_i that are fixed beforehand.\nTakahashi will walk from u_i to v_i or from v_i to u_i along the shortest path.\n\nThe happiness gained from the i-th walk is defined as follows:\n\nThe happiness gained is the number of the edges traversed during the i-th walk that satisfies one of the following conditions:\nIn the previous walks, the edge has never been traversed.\nIn the previous walks, the edge has only been traversed in the direction opposite to the direction taken in the i-th walk.\n\n\n\nTakahashi would like to decide the direction of each walk so that the total happiness gained from the M walks is maximized.\nFind the maximum total happiness that can be gained, and one specific way to choose the directions of the walks that maximizes the total happiness. Takahashi loves walking on a tree.\nThe tree where Takahashi walks has N vertices numbered 1 through N.\nThe i-th of the N-1 edges connects Vertex a_i and Vertex b_i. Takahashi has scheduled M walks. The i-th walk is done as follows: The happiness gained from the i-th walk is defined as follows: Takahashi would like to decide the direction of each walk so that the total happiness gained from the M walks is maximized.\nFind the maximum total happiness that can be gained, and one specific way to choose the directions of the walks that maximizes the total happiness. Print the maximum total happiness T that can be gained, and one specific way to choose the directions of the walks that maximizes the total happiness, in the following format: where (u^'_i,v^'_i) is either (u_i,v_i) or (v_i,u_i), which means that the i-th walk is from vertex u^'_i to v^'_i. If we decide the directions of the walks as above, he gains the happiness of 2 in each walk, and the total happiness will be 6. Takahashi loves walking on a tree.\nThe tree where Takahashi walks has N vertices numbered 1 through N.\nThe i-th of the N-1 edges connects Vertex a_i and Vertex b_i. Takahashi has scheduled M walks. The i-th walk is done as follows: The walk involves two vertices u_i and v_i that are fixed beforehand.\nTakahashi will walk from u_i to v_i or from v_i to u_i along the shortest path. The happiness gained from the i-th walk is defined as follows: The happiness gained is the number of the edges traversed during the i-th walk that satisfies one of the following conditions:\nIn the previous walks, the edge has never been traversed.\nIn the previous walks, the edge has only been traversed in the direction opposite to the direction taken in the i-th walk. Takahashi would like to decide the direction of each walk so that the total happiness gained from the M walks is maximized.\nFind the maximum total happiness that can be gained, and one specific way to choose the directions of the walks that maximizes the total happiness.",
        "difficulty": "Medium",
        "category": "Trees & Graphs",
        "tags": [
          "math",
          "sorting",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03335.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N,M ≤ 2000\n1 ≤ a_i , b_i ≤ N\n1 ≤ u_i , v_i ≤ N\na_i \\neq b_i\nu_i \\neq v_i\nThe graph given as input is a tree.",
          "ranges": "2000; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 3\n2 1\n3 1\n4 1\n2 3\n3 4\n4 2",
            "output": "6\n2 3\n3 4\n4 2 If we decide the directions of the walks as above, he gains the happiness of 2 in each walk, and the total happiness will be 6.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03335.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03335"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03336",
        "title": "Then, they will enjoy themselves by repeating the following operation K times:",
        "description": "Score : 2400 points Problem StatementTakahashi and Aoki love calculating things, so they will play with numbers now.\nFirst, they came up with one positive integer each. Takahashi came up with X, and Aoki came up with Y.\nThen, they will enjoy themselves by repeating the following operation K times:\n\nCompute the bitwise AND of the number currently kept by Takahashi and the number currently kept by Aoki. Let Z be the result.\nThen, add Z to both of the numbers kept by Takahashi and Aoki.\n\nHowever, it turns out that even for the two math maniacs this is just too much work.\nCould you find the number that would be kept by Takahashi and the one that would be kept by Aoki eventually?\nNote that input and output are done in binary.\nEspecially, X and Y are given as strings S and T of length N and M consisting of 0 and 1, respectively, whose initial characters are guaranteed to be 1. Takahashi and Aoki love calculating things, so they will play with numbers now. First, they came up with one positive integer each. Takahashi came up with X, and Aoki came up with Y.\nThen, they will enjoy themselves by repeating the following operation K times: However, it turns out that even for the two math maniacs this is just too much work.\nCould you find the number that would be kept by Takahashi and the one that would be kept by Aoki eventually? Note that input and output are done in binary.\nEspecially, X and Y are given as strings S and T of length N and M consisting of 0 and 1, respectively, whose initial characters are guaranteed to be 1. In the first line, print the number that would be kept by Takahashi eventually; in the second line, print the number that would be kept by Aoki eventually.\nThose numbers should be represented in binary and printed as strings consisting of 0 and 1 that begin with 1. The values of X and Y after each operation are as follows: Takahashi and Aoki love calculating things, so they will play with numbers now. First, they came up with one positive integer each. Takahashi came up with X, and Aoki came up with Y.\nThen, they will enjoy themselves by repeating the following operation K times: Compute the bitwise AND of the number currently kept by Takahashi and the number currently kept by Aoki. Let Z be the result.\nThen, add Z to both of the numbers kept by Takahashi and Aoki. However, it turns out that even for the two math maniacs this is just too much work.\nCould you find the number that would be kept by Takahashi and the one that would be kept by Aoki eventually? Note that input and output are done in binary.\nEspecially, X and Y are given as strings S and T of length N and M consisting of 0 and 1, respectively, whose initial characters are guaranteed to be 1.",
        "difficulty": "Medium",
        "category": "Arrays & Strings",
        "tags": [
          "string",
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03336.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ K ≤ 10^6\n1 ≤ N,M ≤ 10^6\nThe initial characters of S and T are 1.",
          "ranges": "1 10; 10; 10; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 3 3\n11\n101",
            "output": "10000\n10010 The values of X and Y after each operation are as follows: After the first operation: (X,Y)=(4,6).\nAfter the second operation: (X,Y)=(8,10).\nAfter the third operation: (X,Y)=(16,18).",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03336.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03336"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03351",
        "title": "Two people can directly communicate when the distance between them is at most d meters.",
        "description": "Score : 100 points Problem StatementThree people, A, B and C, are trying to communicate using transceivers.\nThey are standing along a number line, and the coordinates of A, B and C are a, b and c (in meters), respectively.\nTwo people can directly communicate when the distance between them is at most d meters.\nDetermine if A and C can communicate, either directly or indirectly.\nHere, A and C can indirectly communicate when A and B can directly communicate and also B and C can directly communicate. Three people, A, B and C, are trying to communicate using transceivers.\nThey are standing along a number line, and the coordinates of A, B and C are a, b and c (in meters), respectively.\nTwo people can directly communicate when the distance between them is at most d meters.\nDetermine if A and C can communicate, either directly or indirectly.\nHere, A and C can indirectly communicate when A and B can directly communicate and also B and C can directly communicate. If A and C can communicate, print Yes; if they cannot, print No. A and B can directly communicate, and also B and C can directly communicate, so we should print Yes. They cannot communicate in this case. There can be multiple people at the same position. Three people, A, B and C, are trying to communicate using transceivers.\nThey are standing along a number line, and the coordinates of A, B and C are a, b and c (in meters), respectively.\nTwo people can directly communicate when the distance between them is at most d meters.\nDetermine if A and C can communicate, either directly or indirectly.\nHere, A and C can indirectly communicate when A and B can directly communicate and also B and C can directly communicate.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03351.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ a,b,c ≤ 100\n1 ≤ d ≤ 100\nAll values in input are integers.",
          "ranges": "1 100; 100; 100; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 7 9 3",
            "output": "Yes A and B can directly communicate, and also B and C can directly communicate, so we should print Yes.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03351.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03351"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03352",
        "title": "Find the largest perfect power that is at most X.",
        "description": "Score : 200 points Problem StatementYou are given a positive integer X.\nFind the largest perfect power that is at most X.\nHere, a perfect power is an integer that can be represented as b^p, where b is an integer not less than 1 and p is an integer not less than 2. You are given a positive integer X.\nFind the largest perfect power that is at most X.\nHere, a perfect power is an integer that can be represented as b^p, where b is an integer not less than 1 and p is an integer not less than 2. Print the largest perfect power that is at most X. There are four perfect powers that are at most 10: 1, 4, 8 and 9.\nWe should print the largest among them, 9. You are given a positive integer X.\nFind the largest perfect power that is at most X.\nHere, a perfect power is an integer that can be represented as b^p, where b is an integer not less than 1 and p is an integer not less than 2.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03352.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ X ≤ 1000\nX is an integer.",
          "ranges": "1 1000; 1000; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "10",
            "output": "9 There are four perfect powers that are at most 10: 1, 4, 8 and 9.\nWe should print the largest among them, 9.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03352.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03352"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03353",
        "title": "Among the different substrings of s, print the K-th lexicographically smallest one.",
        "description": "Score : 300 points Problem StatementYou are given a string s.\nAmong the different substrings of s, print the K-th lexicographically smallest one.\nA substring of s is a string obtained by taking out a non-empty contiguous part in s.\nFor example, if s = ababc, a, bab and ababc are substrings of s, while ac, z and an empty string are not.\nAlso, we say that substrings are different when they are different as strings.\nLet X = x_{1}x_{2}...x_{n} and Y = y_{1}y_{2}...y_{m} be two distinct strings. X is lexicographically larger than Y if and only if Y is a prefix of X or x_{j} > y_{j} where j is the smallest integer such that x_{j} \\neq y_{j}. You are given a string s.\nAmong the different substrings of s, print the K-th lexicographically smallest one. A substring of s is a string obtained by taking out a non-empty contiguous part in s.\nFor example, if s = ababc, a, bab and ababc are substrings of s, while ac, z and an empty string are not.\nAlso, we say that substrings are different when they are different as strings. Let X = x_{1}x_{2}...x_{n} and Y = y_{1}y_{2}...y_{m} be two distinct strings. X is lexicographically larger than Y if and only if Y is a prefix of X or x_{j} > y_{j} where j is the smallest integer such that x_{j} \\neq y_{j}. Partial Score\n200 points will be awarded as a partial score for passing the test set satisfying |s| ≤ 50. Print the K-th lexicographically smallest substring of K. s has five substrings: a, b, ab, ba and aba.\nAmong them, we should print the fourth smallest one, b.\nNote that we do not count a twice. You are given a string s.\nAmong the different substrings of s, print the K-th lexicographically smallest one. A substring of s is a string obtained by taking out a non-empty contiguous part in s.\nFor example, if s = ababc, a, bab and ababc are substrings of s, while ac, z and an empty string are not.\nAlso, we say that substrings are different when they are different as strings. Let X = x_{1}x_{2}...x_{n} and Y = y_{1}y_{2}...y_{m} be two distinct strings. X is lexicographically larger than Y if and only if Y is a prefix of X or x_{j} > y_{j} where j is the smallest integer such that x_{j} \\neq y_{j}.",
        "difficulty": "Medium",
        "category": "Arrays & Strings",
        "tags": [
          "string",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03353.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ |s| ≤ 5000\ns consists of lowercase English letters.\n1 ≤ K ≤ 5\ns has at least K different substrings.",
          "ranges": "1 5; 5; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "aba\n4",
            "output": "b s has five substrings: a, b, ab, ba and aba.\nAmong them, we should print the fourth smallest one, b.\nNote that we do not count a twice.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03353.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03353"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03354",
        "title": "Choose j such that 1 ≤ j ≤ M, and swap p_{x_j} and p_{y_j}.",
        "description": "Score : 400 points Problem StatementWe have a permutation of the integers from 1 through N, p_1, p_2, .., p_N.\nWe also have M pairs of two integers between 1 and N (inclusive), represented as (x_1,y_1), (x_2,y_2), .., (x_M,y_M).\nAtCoDeer the deer is going to perform the following operation on p as many times as desired so that the number of i (1 ≤ i ≤ N) such that p_i = i is maximized:\n\nChoose j such that 1 ≤ j ≤ M, and swap p_{x_j} and p_{y_j}.\n\nFind the maximum possible number of i such that p_i = i after operations. We have a permutation of the integers from 1 through N, p_1, p_2, .., p_N.\nWe also have M pairs of two integers between 1 and N (inclusive), represented as (x_1,y_1), (x_2,y_2), .., (x_M,y_M).\nAtCoDeer the deer is going to perform the following operation on p as many times as desired so that the number of i (1 ≤ i ≤ N) such that p_i = i is maximized: Find the maximum possible number of i such that p_i = i after operations. Print the maximum possible number of i such that p_i = i after operations. If we perform the operation by choosing j=1, p becomes 1 3 5 4 2, which is optimal, so the answer is 2. If we perform the operation by, for example, choosing j=1, j=2, j=1 in this order, p becomes 1 2 3, which is obviously optimal.\nNote that we may choose the same j any number of times. We do not have to perform the operation. We have a permutation of the integers from 1 through N, p_1, p_2, .., p_N.\nWe also have M pairs of two integers between 1 and N (inclusive), represented as (x_1,y_1), (x_2,y_2), .., (x_M,y_M).\nAtCoDeer the deer is going to perform the following operation on p as many times as desired so that the number of i (1 ≤ i ≤ N) such that p_i = i is maximized: Choose j such that 1 ≤ j ≤ M, and swap p_{x_j} and p_{y_j}. Find the maximum possible number of i such that p_i = i after operations.",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03354.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 10^5\n1 ≤ M ≤ 10^5\np is a permutation of integers from 1 through N.\n1 ≤ x_j,y_j ≤ N\nx_j ≠ y_j\nIf i ≠ j, \\{x_i,y_i\\} ≠ \\{x_j,y_j\\}.\nAll values in input are integers.",
          "ranges": "2 10; 1 10; 10; 10; 2; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 2\n5 3 1 4 2\n1 3\n5 4",
            "output": "2 If we perform the operation by choosing j=1, p becomes 1 3 5 4 2, which is optimal, so the answer is 2.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03354.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03354"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03355",
        "title": "Among the different substrings of s, print the K-th lexicographically smallest one.",
        "description": "Score : 300 points Problem StatementYou are given a string s.\nAmong the different substrings of s, print the K-th lexicographically smallest one.\nA substring of s is a string obtained by taking out a non-empty contiguous part in s.\nFor example, if s = ababc, a, bab and ababc are substrings of s, while ac, z and an empty string are not.\nAlso, we say that substrings are different when they are different as strings.\nLet X = x_{1}x_{2}...x_{n} and Y = y_{1}y_{2}...y_{m} be two distinct strings. X is lexicographically larger than Y if and only if Y is a prefix of X or x_{j} > y_{j} where j is the smallest integer such that x_{j} \\neq y_{j}. You are given a string s.\nAmong the different substrings of s, print the K-th lexicographically smallest one. A substring of s is a string obtained by taking out a non-empty contiguous part in s.\nFor example, if s = ababc, a, bab and ababc are substrings of s, while ac, z and an empty string are not.\nAlso, we say that substrings are different when they are different as strings. Let X = x_{1}x_{2}...x_{n} and Y = y_{1}y_{2}...y_{m} be two distinct strings. X is lexicographically larger than Y if and only if Y is a prefix of X or x_{j} > y_{j} where j is the smallest integer such that x_{j} \\neq y_{j}. Partial Score\n200 points will be awarded as a partial score for passing the test set satisfying |s| ≤ 50. Print the K-th lexicographically smallest substring of K. s has five substrings: a, b, ab, ba and aba.\nAmong them, we should print the fourth smallest one, b.\nNote that we do not count a twice. You are given a string s.\nAmong the different substrings of s, print the K-th lexicographically smallest one. A substring of s is a string obtained by taking out a non-empty contiguous part in s.\nFor example, if s = ababc, a, bab and ababc are substrings of s, while ac, z and an empty string are not.\nAlso, we say that substrings are different when they are different as strings. Let X = x_{1}x_{2}...x_{n} and Y = y_{1}y_{2}...y_{m} be two distinct strings. X is lexicographically larger than Y if and only if Y is a prefix of X or x_{j} > y_{j} where j is the smallest integer such that x_{j} \\neq y_{j}.",
        "difficulty": "Medium",
        "category": "Arrays & Strings",
        "tags": [
          "string",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03355.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ |s| ≤ 5000\ns consists of lowercase English letters.\n1 ≤ K ≤ 5\ns has at least K different substrings.",
          "ranges": "1 5; 5; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "aba\n4",
            "output": "b s has five substrings: a, b, ab, ba and aba.\nAmong them, we should print the fourth smallest one, b.\nNote that we do not count a twice.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03355.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03355"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03356",
        "title": "Choose j such that 1 ≤ j ≤ M, and swap p_{x_j} and p_{y_j}.",
        "description": "Score : 400 points Problem StatementWe have a permutation of the integers from 1 through N, p_1, p_2, .., p_N.\nWe also have M pairs of two integers between 1 and N (inclusive), represented as (x_1,y_1), (x_2,y_2), .., (x_M,y_M).\nAtCoDeer the deer is going to perform the following operation on p as many times as desired so that the number of i (1 ≤ i ≤ N) such that p_i = i is maximized:\n\nChoose j such that 1 ≤ j ≤ M, and swap p_{x_j} and p_{y_j}.\n\nFind the maximum possible number of i such that p_i = i after operations. We have a permutation of the integers from 1 through N, p_1, p_2, .., p_N.\nWe also have M pairs of two integers between 1 and N (inclusive), represented as (x_1,y_1), (x_2,y_2), .., (x_M,y_M).\nAtCoDeer the deer is going to perform the following operation on p as many times as desired so that the number of i (1 ≤ i ≤ N) such that p_i = i is maximized: Find the maximum possible number of i such that p_i = i after operations. Print the maximum possible number of i such that p_i = i after operations. If we perform the operation by choosing j=1, p becomes 1 3 5 4 2, which is optimal, so the answer is 2. If we perform the operation by, for example, choosing j=1, j=2, j=1 in this order, p becomes 1 2 3, which is obviously optimal.\nNote that we may choose the same j any number of times. We do not have to perform the operation. We have a permutation of the integers from 1 through N, p_1, p_2, .., p_N.\nWe also have M pairs of two integers between 1 and N (inclusive), represented as (x_1,y_1), (x_2,y_2), .., (x_M,y_M).\nAtCoDeer the deer is going to perform the following operation on p as many times as desired so that the number of i (1 ≤ i ≤ N) such that p_i = i is maximized: Choose j such that 1 ≤ j ≤ M, and swap p_{x_j} and p_{y_j}. Find the maximum possible number of i such that p_i = i after operations.",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03356.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 10^5\n1 ≤ M ≤ 10^5\np is a permutation of integers from 1 through N.\n1 ≤ x_j,y_j ≤ N\nx_j ≠ y_j\nIf i ≠ j, \\{x_i,y_i\\} ≠ \\{x_j,y_j\\}.\nAll values in input are integers.",
          "ranges": "2 10; 1 10; 10; 10; 2; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 2\n5 3 1 4 2\n1 3\n5 4",
            "output": "2 If we perform the operation by choosing j=1, p becomes 1 3 5 4 2, which is optimal, so the answer is 2.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03356.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03356"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03357",
        "title": "c_i = W represents the ball is white; c_i = B represents the ball is black.",
        "description": "Score : 600 points Problem StatementThere are 2N balls, N white and N black, arranged in a row. The integers from 1 through N are written on the white balls, one on each ball, and they are also written on the black balls, one on each ball.\nThe integer written on the i-th ball from the left (1 ≤ i ≤ 2N) is a_i, and the color of this ball is represented by a letter c_i.\nc_i = W represents the ball is white; c_i = B represents the ball is black.\nTakahashi the human wants to achieve the following objective:\n\nFor every pair of integers (i,j) such that 1 ≤ i < j ≤ N, the white ball with i written on it is to the left of the white ball with j written on it.\nFor every pair of integers (i,j) such that 1 ≤ i < j ≤ N, the black ball with i written on it is to the left of the black ball with j written on it.\n\nIn order to achieve this, he can perform the following operation:\n\nSwap two adjacent balls.\n\nFind the minimum number of operations required to achieve the objective. There are 2N balls, N white and N black, arranged in a row. The integers from 1 through N are written on the white balls, one on each ball, and they are also written on the black balls, one on each ball.\nThe integer written on the i-th ball from the left (1 ≤ i ≤ 2N) is a_i, and the color of this ball is represented by a letter c_i.\nc_i = W represents the ball is white; c_i = B represents the ball is black. Takahashi the human wants to achieve the following objective: In order to achieve this, he can perform the following operation: Find the minimum number of operations required to achieve the objective. Print the minimum number of operations required to achieve the objective. The objective can be achieved in four operations, for example, as follows: There are 2N balls, N white and N black, arranged in a row. The integers from 1 through N are written on the white balls, one on each ball, and they are also written on the black balls, one on each ball.\nThe integer written on the i-th ball from the left (1 ≤ i ≤ 2N) is a_i, and the color of this ball is represented by a letter c_i.\nc_i = W represents the ball is white; c_i = B represents the ball is black. Takahashi the human wants to achieve the following objective: For every pair of integers (i,j) such that 1 ≤ i < j ≤ N, the white ball with i written on it is to the left of the white ball with j written on it.\nFor every pair of integers (i,j) such that 1 ≤ i < j ≤ N, the black ball with i written on it is to the left of the black ball with j written on it. In order to achieve this, he can perform the following operation: Swap two adjacent balls. Find the minimum number of operations required to achieve the objective.",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03357.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 2000\n1 ≤ a_i ≤ N\nc_i = W or c_i = B.\nIf i ≠ j, (a_i,c_i) ≠ (a_j,c_j).",
          "ranges": "1 2000; 2000; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\nB 1\nW 2\nB 3\nW 1\nW 3\nB 2",
            "output": "4 The objective can be achieved in four operations, for example, as follows: Swap the black 3 and white 1.\nSwap the white 1 and white 2.\nSwap the black 3 and white 3.\nSwap the black 3 and black 2.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03357.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03357"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03358",
        "title": "The i-th edge connects Vertex x_i and y_i.",
        "description": "Score : 800 points Problem StatementThere is a tree with N vertices numbered 1 through N.\nThe i-th edge connects Vertex x_i and y_i.\nEach vertex is painted white or black.\nThe initial color of Vertex i is represented by a letter c_i.\nc_i = W represents the vertex is white; c_i = B represents the vertex is black.\nA cat will walk along this tree.\nMore specifically, she performs one of the following in one second repeatedly:\n\nChoose a vertex that is adjacent to the vertex where she is currently, and move to that vertex. Then, invert the color of the destination vertex.\nInvert the color of the vertex where she is currently.\n\nThe cat's objective is to paint all the vertices black. She may start and end performing actions at any vertex.\nAt least how many seconds does it takes for the cat to achieve her objective? There is a tree with N vertices numbered 1 through N.\nThe i-th edge connects Vertex x_i and y_i.\nEach vertex is painted white or black.\nThe initial color of Vertex i is represented by a letter c_i.\nc_i = W represents the vertex is white; c_i = B represents the vertex is black. A cat will walk along this tree.\nMore specifically, she performs one of the following in one second repeatedly: The cat's objective is to paint all the vertices black. She may start and end performing actions at any vertex.\nAt least how many seconds does it takes for the cat to achieve her objective? Print the minimum number of seconds required to achieve the objective. The objective can be achieved in five seconds, for example, as follows: There is a tree with N vertices numbered 1 through N.\nThe i-th edge connects Vertex x_i and y_i.\nEach vertex is painted white or black.\nThe initial color of Vertex i is represented by a letter c_i.\nc_i = W represents the vertex is white; c_i = B represents the vertex is black. A cat will walk along this tree.\nMore specifically, she performs one of the following in one second repeatedly: Choose a vertex that is adjacent to the vertex where she is currently, and move to that vertex. Then, invert the color of the destination vertex.\nInvert the color of the vertex where she is currently. The cat's objective is to paint all the vertices black. She may start and end performing actions at any vertex.\nAt least how many seconds does it takes for the cat to achieve her objective?",
        "difficulty": "Medium",
        "category": "Trees & Graphs",
        "tags": [
          "math",
          "sorting",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03358.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10^5\n1 ≤ x_i,y_i ≤ N (1 ≤ i ≤ N-1)\nThe given graph is a tree.\nc_i = W or c_i = B.",
          "ranges": "1 10; 10; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n1 2\n2 3\n2 4\n4 5\nWBBWW",
            "output": "5 The objective can be achieved in five seconds, for example, as follows: Start at Vertex 1. Change the color of Vertex 1 to black.\nMove to Vertex 2, then change the color of Vertex 2 to white.\nChange the color of Vertex 2 to black.\nMove to Vertex 4, then change the color of Vertex 4 to black.\nMove to Vertex 5, then change the color of Vertex 5 to black.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03358.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03358"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03366",
        "title": "Apartment i is located at coordinate X_i.",
        "description": "Score : 1200 points There are N apartments along a number line, numbered 1 through N.\nApartment i is located at coordinate X_i.\nAlso, the office of AtCoder Inc. is located at coordinate S.\nEvery employee of AtCoder lives in one of the N apartments.\nThere are P_i employees who are living in Apartment i. All employees of AtCoder are now leaving the office all together.\nSince they are tired from work, they would like to get home by the company's bus.\nAtCoder owns only one bus, but it can accommodate all the employees.\nThis bus will leave coordinate S with all the employees and move according to the following rule: Everyone on the bus casts a vote on which direction the bus should proceed, positive or negative. (The bus is autonomous and has no driver.) Each person has one vote, and abstaining from voting is not allowed. Then, the bus moves a distance of 1 in the direction with the greater number of votes. If a tie occurs, the bus moves in the negative direction. If there is an apartment at the coordinate of the bus after the move, all the employees who live there get off. Repeat the operation above as long as there is one or more employees on the bus. The bus takes one seconds to travel a distance of 1.\nThe time required to vote and get off the bus is ignorable. Every employee will vote so that he himself/she herself can get off the bus at the earliest possible time.\nStrictly speaking, when a vote is taking place, each employee see which direction results in the earlier arrival at his/her apartment, assuming that all the employees follow the same strategy in the future.\nBased on this information, each employee makes the optimal choice, but if either direction results in the arrival at the same time, he/she casts a vote to the negative direction. Find the time the bus will take from departure to arrival at the last employees' apartment.\nIt can be proved that, given the positions of the apartments, the numbers of employees living in each apartment and the initial position of the bus, the future movement of the bus is uniquely determined, and the process will end in a finite time. Print the number of seconds the bus will take from departure to arrival at the last employees' apartment. Assume that the bus moves in the negative direction first.\nThen, the coordinate of the bus changes from 2 to 1, and the employees living in Apartment 1 get off.\nThe movement of the bus after that is obvious: it just continues moving in the positive direction.\nThus, if the bus moves in the negative direction first, the coordinate of the bus changes as 2 → 1 → 2 → 3 → 4 from departure.\nThe time it takes to get home for the employees living in Apartment 1, 2, 3 are 1, 3, 4 seconds, respectively. Next, assume that the bus moves in the positive direction first.\nThen, the coordinate of the bus changes from 2 to 3, and the employees living in Apartment 2 get off.\nAfterwards, the bus starts heading to Apartment 1, because there are more employees living in Apartment 1 than in Apartment 3.\nThen, after arriving at Apartment 1, the bus heads to Apartment 3.\nThus, if the bus moves in the positive direction first, the coordinate of the bus changes as 2 → 3 → 2 → 1 → 2 → 3 → 4 from departure.\nThe time it takes to get home for the employees living in Apartment 1, 2, 3 are 3, 1, 6 seconds, respectively. Therefore, in the beginning, the employees living in Apartment 1 or 3 will try to move the bus in the negative direction.\nOn the other hand, the employees living in Apartment 2 will try to move the bus in the positive direction in the beginning.\nThere are a total of 3 + 2 = 5 employees living in Apartment 1 and 3 combined, which is more than those living in Apartment 2, which is 4.\nThus, the bus will move in the negative direction first, and the coordinate of the bus will change as 2 → 1 → 2 → 3 → 4 from departure. Since the numbers of employees living in different apartments are literally off by a digit, the bus consistently head to the apartment where the most number of employees on the bus lives. There are N apartments along a number line, numbered 1 through N.\nApartment i is located at coordinate X_i.\nAlso, the office of AtCoder Inc. is located at coordinate S.\nEvery employee of AtCoder lives in one of the N apartments.\nThere are P_i employees who are living in Apartment i. All employees of AtCoder are now leaving the office all together.\nSince they are tired from work, they would like to get home by the company's bus.\nAtCoder owns only one bus, but it can accommodate all the employees.\nThis bus will leave coordinate S with all the employees and move according to the following rule: Everyone on the bus casts a vote on which direction the bus should proceed, positive or negative. (The bus is autonomous and has no driver.) Each person has one vote, and abstaining from voting is not allowed. Then, the bus moves a distance of 1 in the direction with the greater number of votes. If a tie occurs, the bus moves in the negative direction. If there is an apartment at the coordinate of the bus after the move, all the employees who live there get off.\n\n\nRepeat the operation above as long as there is one or more employees on the bus. For a specific example, see Sample Input 1. The bus takes one seconds to travel a distance of 1.\nThe time required to vote and get off the bus is ignorable. Every employee will vote so that he himself/she herself can get off the bus at the earliest possible time.\nStrictly speaking, when a vote is taking place, each employee see which direction results in the earlier arrival at his/her apartment, assuming that all the employees follow the same strategy in the future.\nBased on this information, each employee makes the optimal choice, but if either direction results in the arrival at the same time, he/she casts a vote to the negative direction. Find the time the bus will take from departure to arrival at the last employees' apartment.\nIt can be proved that, given the positions of the apartments, the numbers of employees living in each apartment and the initial position of the bus, the future movement of the bus is uniquely determined, and the process will end in a finite time.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03366.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N \\leq 10^5\n1 \\leq S \\leq 10^9\n1 \\leq X_1 < X_2 < ... < X_N \\leq 10^9\nX_i \\neq S ( 1 \\leq i \\leq N )\n1 \\leq P_i \\leq 10^9 ( 1 \\leq i \\leq N )\nAll values in input are integers.",
          "ranges": "1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 2\n1 3\n3 4\n4 2",
            "output": "4 Assume that the bus moves in the negative direction first.\nThen, the coordinate of the bus changes from 2 to 1, and the employees living in Apartment 1 get off.\nThe movement of the bus after that is obvious: it just continues moving in the positive direction.\nThus, if the bus moves in the negative direction first, the coordinate of the bus changes as 2 → 1 → 2 → 3 → 4 from departure.\nThe time it takes to get home for the employees living in Apartment 1, 2, 3 are 1, 3, 4 seconds, respectively. Next, assume that the bus moves in the positive direction first.\nThen, the coordinate of the bus changes from 2 to 3, and the employees living in Apartment 2 get off.\nAfterwards, the bus starts heading to Apartment 1, because there are more employees living in Apartment 1 than in Apartment 3.\nThen, after arriving at Apartment 1, the bus heads to Apartment 3.\nThus, if the bus moves in the positive direction first, the coordinate of the bus changes as 2 → 3 → 2 → 1 → 2 → 3 → 4 from departure.\nThe time it takes to get home for the employees living in Apartment 1, 2, 3 are 3, 1, 6 seconds, respectively. Therefore, in the beginning, the employees living in Apartment 1 or 3 will try to move the bus in the negative direction.\nOn the other hand, the employees living in Apartment 2 will try to move the bus in the positive direction in the beginning.\nThere are a total of 3 + 2 = 5 employees living in Apartment 1 and 3 combined, which is more than those living in Apartment 2, which is 4.\nThus, the bus will move in the negative direction first, and the coordinate of the bus will change as 2 → 1 → 2 → 3 → 4 from departure.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03366.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03366"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03370",
        "title": "For each of the N kinds of doughnuts, make at least one doughnut of that kind.",
        "description": "Score : 200 points Problem StatementAkaki, a patissier, can make N kinds of doughnut using only a certain powder called \"Okashi no Moto\" (literally \"material of pastry\", simply called Moto below) as ingredient. These doughnuts are called Doughnut 1, Doughnut 2, ..., Doughnut N. In order to make one Doughnut i (1 ≤ i ≤ N), she needs to consume m_i grams of Moto. She cannot make a non-integer number of doughnuts, such as 0.5 doughnuts.\nNow, she has X grams of Moto. She decides to make as many doughnuts as possible for a party tonight. However, since the tastes of the guests differ, she will obey the following condition:\n\nFor each of the N kinds of doughnuts, make at least one doughnut of that kind.\n\nAt most how many doughnuts can be made here? She does not necessarily need to consume all of her Moto. Also, under the constraints of this problem, it is always possible to obey the condition. Akaki, a patissier, can make N kinds of doughnut using only a certain powder called \"Okashi no Moto\" (literally \"material of pastry\", simply called Moto below) as ingredient. These doughnuts are called Doughnut 1, Doughnut 2, ..., Doughnut N. In order to make one Doughnut i (1 ≤ i ≤ N), she needs to consume m_i grams of Moto. She cannot make a non-integer number of doughnuts, such as 0.5 doughnuts. Now, she has X grams of Moto. She decides to make as many doughnuts as possible for a party tonight. However, since the tastes of the guests differ, she will obey the following condition: At most how many doughnuts can be made here? She does not necessarily need to consume all of her Moto. Also, under the constraints of this problem, it is always possible to obey the condition. Print the maximum number of doughnuts that can be made under the condition. She has 1000 grams of Moto and can make three kinds of doughnuts. If she makes one doughnut for each of the three kinds, she consumes 120 + 100 + 140 = 360 grams of Moto. From the 640 grams of Moto that remains here, she can make additional six Doughnuts 2. This is how she can made a total of nine doughnuts, which is the maximum. Making one doughnut for each of the four kinds consumes all of her Moto. Akaki, a patissier, can make N kinds of doughnut using only a certain powder called \"Okashi no Moto\" (literally \"material of pastry\", simply called Moto below) as ingredient. These doughnuts are called Doughnut 1, Doughnut 2, ..., Doughnut N. In order to make one Doughnut i (1 ≤ i ≤ N), she needs to consume m_i grams of Moto. She cannot make a non-integer number of doughnuts, such as 0.5 doughnuts. Now, she has X grams of Moto. She decides to make as many doughnuts as possible for a party tonight. However, since the tastes of the guests differ, she will obey the following condition: For each of the N kinds of doughnuts, make at least one doughnut of that kind. At most how many doughnuts can be made here? She does not necessarily need to consume all of her Moto. Also, under the constraints of this problem, it is always possible to obey the condition.",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03370.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 100\n1 ≤ m_i ≤ 1000\nm_1 + m_2 + ... + m_N ≤ X ≤ 10^5\nAll values in input are integers.",
          "ranges": "2 100; 1 1000; 100; 1000; 10; 2; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 1000\n120\n100\n140",
            "output": "9 She has 1000 grams of Moto and can make three kinds of doughnuts. If she makes one doughnut for each of the three kinds, she consumes 120 + 100 + 140 = 360 grams of Moto. From the 640 grams of Moto that remains here, she can make additional six Doughnuts 2. This is how she can made a total of nine doughnuts, which is the maximum.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03370.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03370"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03371",
        "title": "Problem Statement",
        "description": "Score : 300 points Problem Statement\"Pizza At\", a fast food chain, offers three kinds of pizza: \"A-pizza\", \"B-pizza\" and \"AB-pizza\". A-pizza and B-pizza are completely different pizzas, and AB-pizza is one half of A-pizza and one half of B-pizza combined together. The prices of one A-pizza, B-pizza and AB-pizza are A yen, B yen and C yen (yen is the currency of Japan), respectively.\nNakahashi needs to prepare X A-pizzas and Y B-pizzas for a party tonight. He can only obtain these pizzas by directly buying A-pizzas and B-pizzas, or buying two AB-pizzas and then rearrange them into one A-pizza and one B-pizza. At least how much money does he need for this? It is fine to have more pizzas than necessary by rearranging pizzas. \"Pizza At\", a fast food chain, offers three kinds of pizza: \"A-pizza\", \"B-pizza\" and \"AB-pizza\". A-pizza and B-pizza are completely different pizzas, and AB-pizza is one half of A-pizza and one half of B-pizza combined together. The prices of one A-pizza, B-pizza and AB-pizza are A yen, B yen and C yen (yen is the currency of Japan), respectively. Nakahashi needs to prepare X A-pizzas and Y B-pizzas for a party tonight. He can only obtain these pizzas by directly buying A-pizzas and B-pizzas, or buying two AB-pizzas and then rearrange them into one A-pizza and one B-pizza. At least how much money does he need for this? It is fine to have more pizzas than necessary by rearranging pizzas. Print the minimum amount of money required to prepare X A-pizzas and Y B-pizzas. It is optimal to buy four AB-pizzas and rearrange them into two A-pizzas and two B-pizzas, then buy additional one A-pizza. It is optimal to directly buy three A-pizzas and two B-pizzas. It is optimal to buy 200000 AB-pizzas and rearrange them into 100000 A-pizzas and 100000 B-pizzas. We will have 10000 more A-pizzas than necessary, but that is fine. \"Pizza At\", a fast food chain, offers three kinds of pizza: \"A-pizza\", \"B-pizza\" and \"AB-pizza\". A-pizza and B-pizza are completely different pizzas, and AB-pizza is one half of A-pizza and one half of B-pizza combined together. The prices of one A-pizza, B-pizza and AB-pizza are A yen, B yen and C yen (yen is the currency of Japan), respectively. Nakahashi needs to prepare X A-pizzas and Y B-pizzas for a party tonight. He can only obtain these pizzas by directly buying A-pizzas and B-pizzas, or buying two AB-pizzas and then rearrange them into one A-pizza and one B-pizza. At least how much money does he need for this? It is fine to have more pizzas than necessary by rearranging pizzas.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03371.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ A, B, C ≤ 5000\n1 ≤ X, Y ≤ 10^5\nAll values in input are integers.",
          "ranges": "5000; 10; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1500 2000 1600 3 2",
            "output": "7900 It is optimal to buy four AB-pizzas and rearrange them into two A-pizzas and two B-pizzas, then buy additional one A-pizza.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03371.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03371"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03372",
        "title": "Problem Statement",
        "description": "Score : 500 points Problem Statement\"Teishi-zushi\", a Japanese restaurant, is a plain restaurant with only one round counter. The outer circumference of the counter is C meters. Customers cannot go inside the counter.\nNakahashi entered Teishi-zushi, and he was guided to the counter. Now, there are N pieces of sushi (vinegared rice with seafood and so on) on the counter. The distance measured clockwise from the point where Nakahashi is standing to the point where the i-th sushi is placed, is x_i meters. Also, the i-th sushi has a nutritive value of v_i kilocalories.\nNakahashi can freely walk around the circumference of the counter. When he reach a point where a sushi is placed, he can eat that sushi and take in its nutrition (naturally, the sushi disappears). However, while walking, he consumes 1 kilocalories per meter.\nWhenever he is satisfied, he can leave the restaurant from any place (he does not have to return to the initial place). On balance, at most how much nutrition can he take in before he leaves? That is, what is the maximum possible value of the total nutrition taken in minus the total energy consumed? Assume that there are no other customers, and no new sushi will be added to the counter. Also, since Nakahashi has plenty of nutrition in his body, assume that no matter how much he walks and consumes energy, he never dies from hunger. \"Teishi-zushi\", a Japanese restaurant, is a plain restaurant with only one round counter. The outer circumference of the counter is C meters. Customers cannot go inside the counter. Nakahashi entered Teishi-zushi, and he was guided to the counter. Now, there are N pieces of sushi (vinegared rice with seafood and so on) on the counter. The distance measured clockwise from the point where Nakahashi is standing to the point where the i-th sushi is placed, is x_i meters. Also, the i-th sushi has a nutritive value of v_i kilocalories. Nakahashi can freely walk around the circumference of the counter. When he reach a point where a sushi is placed, he can eat that sushi and take in its nutrition (naturally, the sushi disappears). However, while walking, he consumes 1 kilocalories per meter. Whenever he is satisfied, he can leave the restaurant from any place (he does not have to return to the initial place). On balance, at most how much nutrition can he take in before he leaves? That is, what is the maximum possible value of the total nutrition taken in minus the total energy consumed? Assume that there are no other customers, and no new sushi will be added to the counter. Also, since Nakahashi has plenty of nutrition in his body, assume that no matter how much he walks and consumes energy, he never dies from hunger. Subscores\n300 points will be awarded for passing the test set satisfying N ≤ 100. If Nakahashi can take in at most c kilocalories on balance before he leaves the restaurant, print c. There are three sushi on the counter with a circumference of 20 meters. If he walks two meters clockwise from the initial place, he can eat a sushi of 80 kilocalories. If he walks seven more meters clockwise, he can eat a sushi of 120 kilocalories. If he leaves now, the total nutrition taken in is 200 kilocalories, and the total energy consumed is 9 kilocalories, thus he can take in 191 kilocalories on balance, which is the largest possible value. The second and third sushi have been swapped. Again, if he walks two meters clockwise from the initial place, he can eat a sushi of 80 kilocalories. If he walks six more meters counterclockwise this time, he can eat a sushi of 120 kilocalories. If he leaves now, the total nutrition taken in is 200 kilocalories, and the total energy consumed is 8 kilocalories, thus he can take in 192 kilocalories on balance, which is the largest possible value. Even though the only sushi is so far that it does not fit into a 32-bit integer, its nutritive value is low, thus he should immediately leave without doing anything. All these sample inputs above are included in the test set for the partial score. \"Teishi-zushi\", a Japanese restaurant, is a plain restaurant with only one round counter. The outer circumference of the counter is C meters. Customers cannot go inside the counter. Nakahashi entered Teishi-zushi, and he was guided to the counter. Now, there are N pieces of sushi (vinegared rice with seafood and so on) on the counter. The distance measured clockwise from the point where Nakahashi is standing to the point where the i-th sushi is placed, is x_i meters. Also, the i-th sushi has a nutritive value of v_i kilocalories. Nakahashi can freely walk around the circumference of the counter. When he reach a point where a sushi is placed, he can eat that sushi and take in its nutrition (naturally, the sushi disappears). However, while walking, he consumes 1 kilocalories per meter. Whenever he is satisfied, he can leave the restaurant from any place (he does not have to return to the initial place). On balance, at most how much nutrition can he take in before he leaves? That is, what is the maximum possible value of the total nutrition taken in minus the total energy consumed? Assume that there are no other customers, and no new sushi will be added to the counter. Also, since Nakahashi has plenty of nutrition in his body, assume that no matter how much he walks and consumes energy, he never dies from hunger.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03372.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10^5\n2 ≤ C ≤ 10^{14}\n1 ≤ x_1 < x_2 < ... < x_N < C\n1 ≤ v_i ≤ 10^9\nAll values in input are integers.",
          "ranges": "1 10; 2 10; 1 10; 10; 10; 10; 1; 2; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 20\n2 80\n9 120\n16 1",
            "output": "191 There are three sushi on the counter with a circumference of 20 meters. If he walks two meters clockwise from the initial place, he can eat a sushi of 80 kilocalories. If he walks seven more meters clockwise, he can eat a sushi of 120 kilocalories. If he leaves now, the total nutrition taken in is 200 kilocalories, and the total energy consumed is 9 kilocalories, thus he can take in 191 kilocalories on balance, which is the largest possible value.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03372.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03372"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03373",
        "title": "Problem Statement",
        "description": "Score : 300 points Problem Statement\"Pizza At\", a fast food chain, offers three kinds of pizza: \"A-pizza\", \"B-pizza\" and \"AB-pizza\". A-pizza and B-pizza are completely different pizzas, and AB-pizza is one half of A-pizza and one half of B-pizza combined together. The prices of one A-pizza, B-pizza and AB-pizza are A yen, B yen and C yen (yen is the currency of Japan), respectively.\nNakahashi needs to prepare X A-pizzas and Y B-pizzas for a party tonight. He can only obtain these pizzas by directly buying A-pizzas and B-pizzas, or buying two AB-pizzas and then rearrange them into one A-pizza and one B-pizza. At least how much money does he need for this? It is fine to have more pizzas than necessary by rearranging pizzas. \"Pizza At\", a fast food chain, offers three kinds of pizza: \"A-pizza\", \"B-pizza\" and \"AB-pizza\". A-pizza and B-pizza are completely different pizzas, and AB-pizza is one half of A-pizza and one half of B-pizza combined together. The prices of one A-pizza, B-pizza and AB-pizza are A yen, B yen and C yen (yen is the currency of Japan), respectively. Nakahashi needs to prepare X A-pizzas and Y B-pizzas for a party tonight. He can only obtain these pizzas by directly buying A-pizzas and B-pizzas, or buying two AB-pizzas and then rearrange them into one A-pizza and one B-pizza. At least how much money does he need for this? It is fine to have more pizzas than necessary by rearranging pizzas. Print the minimum amount of money required to prepare X A-pizzas and Y B-pizzas. It is optimal to buy four AB-pizzas and rearrange them into two A-pizzas and two B-pizzas, then buy additional one A-pizza. It is optimal to directly buy three A-pizzas and two B-pizzas. It is optimal to buy 200000 AB-pizzas and rearrange them into 100000 A-pizzas and 100000 B-pizzas. We will have 10000 more A-pizzas than necessary, but that is fine. \"Pizza At\", a fast food chain, offers three kinds of pizza: \"A-pizza\", \"B-pizza\" and \"AB-pizza\". A-pizza and B-pizza are completely different pizzas, and AB-pizza is one half of A-pizza and one half of B-pizza combined together. The prices of one A-pizza, B-pizza and AB-pizza are A yen, B yen and C yen (yen is the currency of Japan), respectively. Nakahashi needs to prepare X A-pizzas and Y B-pizzas for a party tonight. He can only obtain these pizzas by directly buying A-pizzas and B-pizzas, or buying two AB-pizzas and then rearrange them into one A-pizza and one B-pizza. At least how much money does he need for this? It is fine to have more pizzas than necessary by rearranging pizzas.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03373.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ A, B, C ≤ 5000\n1 ≤ X, Y ≤ 10^5\nAll values in input are integers.",
          "ranges": "5000; 10; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1500 2000 1600 3 2",
            "output": "7900 It is optimal to buy four AB-pizzas and rearrange them into two A-pizzas and two B-pizzas, then buy additional one A-pizza.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03373.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03373"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03374",
        "title": "Problem Statement",
        "description": "Score : 500 points Problem Statement\"Teishi-zushi\", a Japanese restaurant, is a plain restaurant with only one round counter. The outer circumference of the counter is C meters. Customers cannot go inside the counter.\nNakahashi entered Teishi-zushi, and he was guided to the counter. Now, there are N pieces of sushi (vinegared rice with seafood and so on) on the counter. The distance measured clockwise from the point where Nakahashi is standing to the point where the i-th sushi is placed, is x_i meters. Also, the i-th sushi has a nutritive value of v_i kilocalories.\nNakahashi can freely walk around the circumference of the counter. When he reach a point where a sushi is placed, he can eat that sushi and take in its nutrition (naturally, the sushi disappears). However, while walking, he consumes 1 kilocalories per meter.\nWhenever he is satisfied, he can leave the restaurant from any place (he does not have to return to the initial place). On balance, at most how much nutrition can he take in before he leaves? That is, what is the maximum possible value of the total nutrition taken in minus the total energy consumed? Assume that there are no other customers, and no new sushi will be added to the counter. Also, since Nakahashi has plenty of nutrition in his body, assume that no matter how much he walks and consumes energy, he never dies from hunger. \"Teishi-zushi\", a Japanese restaurant, is a plain restaurant with only one round counter. The outer circumference of the counter is C meters. Customers cannot go inside the counter. Nakahashi entered Teishi-zushi, and he was guided to the counter. Now, there are N pieces of sushi (vinegared rice with seafood and so on) on the counter. The distance measured clockwise from the point where Nakahashi is standing to the point where the i-th sushi is placed, is x_i meters. Also, the i-th sushi has a nutritive value of v_i kilocalories. Nakahashi can freely walk around the circumference of the counter. When he reach a point where a sushi is placed, he can eat that sushi and take in its nutrition (naturally, the sushi disappears). However, while walking, he consumes 1 kilocalories per meter. Whenever he is satisfied, he can leave the restaurant from any place (he does not have to return to the initial place). On balance, at most how much nutrition can he take in before he leaves? That is, what is the maximum possible value of the total nutrition taken in minus the total energy consumed? Assume that there are no other customers, and no new sushi will be added to the counter. Also, since Nakahashi has plenty of nutrition in his body, assume that no matter how much he walks and consumes energy, he never dies from hunger. Subscores\n300 points will be awarded for passing the test set satisfying N ≤ 100. If Nakahashi can take in at most c kilocalories on balance before he leaves the restaurant, print c. There are three sushi on the counter with a circumference of 20 meters. If he walks two meters clockwise from the initial place, he can eat a sushi of 80 kilocalories. If he walks seven more meters clockwise, he can eat a sushi of 120 kilocalories. If he leaves now, the total nutrition taken in is 200 kilocalories, and the total energy consumed is 9 kilocalories, thus he can take in 191 kilocalories on balance, which is the largest possible value. The second and third sushi have been swapped. Again, if he walks two meters clockwise from the initial place, he can eat a sushi of 80 kilocalories. If he walks six more meters counterclockwise this time, he can eat a sushi of 120 kilocalories. If he leaves now, the total nutrition taken in is 200 kilocalories, and the total energy consumed is 8 kilocalories, thus he can take in 192 kilocalories on balance, which is the largest possible value. Even though the only sushi is so far that it does not fit into a 32-bit integer, its nutritive value is low, thus he should immediately leave without doing anything. All these sample inputs above are included in the test set for the partial score. \"Teishi-zushi\", a Japanese restaurant, is a plain restaurant with only one round counter. The outer circumference of the counter is C meters. Customers cannot go inside the counter. Nakahashi entered Teishi-zushi, and he was guided to the counter. Now, there are N pieces of sushi (vinegared rice with seafood and so on) on the counter. The distance measured clockwise from the point where Nakahashi is standing to the point where the i-th sushi is placed, is x_i meters. Also, the i-th sushi has a nutritive value of v_i kilocalories. Nakahashi can freely walk around the circumference of the counter. When he reach a point where a sushi is placed, he can eat that sushi and take in its nutrition (naturally, the sushi disappears). However, while walking, he consumes 1 kilocalories per meter. Whenever he is satisfied, he can leave the restaurant from any place (he does not have to return to the initial place). On balance, at most how much nutrition can he take in before he leaves? That is, what is the maximum possible value of the total nutrition taken in minus the total energy consumed? Assume that there are no other customers, and no new sushi will be added to the counter. Also, since Nakahashi has plenty of nutrition in his body, assume that no matter how much he walks and consumes energy, he never dies from hunger.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03374.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10^5\n2 ≤ C ≤ 10^{14}\n1 ≤ x_1 < x_2 < ... < x_N < C\n1 ≤ v_i ≤ 10^9\nAll values in input are integers.",
          "ranges": "1 10; 2 10; 1 10; 10; 10; 10; 1; 2; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 20\n2 80\n9 120\n16 1",
            "output": "191 There are three sushi on the counter with a circumference of 20 meters. If he walks two meters clockwise from the initial place, he can eat a sushi of 80 kilocalories. If he walks seven more meters clockwise, he can eat a sushi of 120 kilocalories. If he leaves now, the total nutrition taken in is 200 kilocalories, and the total energy consumed is 9 kilocalories, thus he can take in 191 kilocalories on balance, which is the largest possible value.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03374.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03374"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03376",
        "title": "Problem Statement",
        "description": "Score : 900 points Problem StatementAkaki, a patissier, can make N kinds of doughnut using only a certain powder called \"Okashi no Moto\" (literally \"material of pastry\", simply called Moto below) as ingredient. These doughnuts are called Doughnut 1, Doughnut 2, ..., Doughnut N. In order to make one Doughnut i (1 ≤ i ≤ N), she needs to consume m_i grams of Moto. She cannot make a non-integer number of doughnuts, such as 0.5 doughnuts.\nThe recipes of these doughnuts are developed by repeated modifications from the recipe of Doughnut 1. Specifically, the recipe of Doughnut i (2 ≤ i ≤ N) is a direct modification of the recipe of Doughnut p_i (1 ≤ p_i < i).\nNow, she has X grams of Moto. She decides to make as many doughnuts as possible for a party tonight. However, since the tastes of the guests differ, she will obey the following condition:\n\nLet c_i be the number of Doughnut i (1 ≤ i ≤ N) that she makes. For each integer i such that 2 ≤ i ≤ N, c_{p_i} ≤ c_i ≤ c_{p_i} + D must hold. Here, D is a predetermined value.\n\nAt most how many doughnuts can be made here? She does not necessarily need to consume all of her Moto. Akaki, a patissier, can make N kinds of doughnut using only a certain powder called \"Okashi no Moto\" (literally \"material of pastry\", simply called Moto below) as ingredient. These doughnuts are called Doughnut 1, Doughnut 2, ..., Doughnut N. In order to make one Doughnut i (1 ≤ i ≤ N), she needs to consume m_i grams of Moto. She cannot make a non-integer number of doughnuts, such as 0.5 doughnuts. The recipes of these doughnuts are developed by repeated modifications from the recipe of Doughnut 1. Specifically, the recipe of Doughnut i (2 ≤ i ≤ N) is a direct modification of the recipe of Doughnut p_i (1 ≤ p_i < i). Now, she has X grams of Moto. She decides to make as many doughnuts as possible for a party tonight. However, since the tastes of the guests differ, she will obey the following condition: At most how many doughnuts can be made here? She does not necessarily need to consume all of her Moto. Print the maximum number of doughnuts that can be made under the condition. She has 100 grams of Moto, can make three kinds of doughnuts, and the conditions that must hold are c_1 ≤ c_2 ≤ c_1 + 1 and c_1 ≤ c_3 ≤ c_1 + 1. It is optimal to make two Doughnuts 1, three Doughnuts 2 and two Doughnuts 3. Akaki, a patissier, can make N kinds of doughnut using only a certain powder called \"Okashi no Moto\" (literally \"material of pastry\", simply called Moto below) as ingredient. These doughnuts are called Doughnut 1, Doughnut 2, ..., Doughnut N. In order to make one Doughnut i (1 ≤ i ≤ N), she needs to consume m_i grams of Moto. She cannot make a non-integer number of doughnuts, such as 0.5 doughnuts. The recipes of these doughnuts are developed by repeated modifications from the recipe of Doughnut 1. Specifically, the recipe of Doughnut i (2 ≤ i ≤ N) is a direct modification of the recipe of Doughnut p_i (1 ≤ p_i < i). Now, she has X grams of Moto. She decides to make as many doughnuts as possible for a party tonight. However, since the tastes of the guests differ, she will obey the following condition: Let c_i be the number of Doughnut i (1 ≤ i ≤ N) that she makes. For each integer i such that 2 ≤ i ≤ N, c_{p_i} ≤ c_i ≤ c_{p_i} + D must hold. Here, D is a predetermined value. At most how many doughnuts can be made here? She does not necessarily need to consume all of her Moto.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03376.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 50\n1 ≤ X ≤ 10^9\n0 ≤ D ≤ 10^9\n1 ≤ m_i ≤ 10^9 (1 ≤ i ≤ N)\n1 ≤ p_i < i (2 ≤ i ≤ N)\nAll values in input are integers.",
          "ranges": "2 50; 1 10; 0 10; 1 10; 50; 10; 10; 10; 2; 1; 0; 1; 1; 1; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 100 1\n15\n10 1\n20 1",
            "output": "7 She has 100 grams of Moto, can make three kinds of doughnuts, and the conditions that must hold are c_1 ≤ c_2 ≤ c_1 + 1 and c_1 ≤ c_3 ≤ c_1 + 1. It is optimal to make two Doughnuts 1, three Doughnuts 2 and two Doughnuts 3.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03376.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03376"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03378",
        "title": "Initially, you are in Square X.",
        "description": "Score : 200 points Problem StatementThere are N + 1 squares arranged in a row, numbered 0, 1, ..., N from left to right.\nInitially, you are in Square X.\nYou can freely travel between adjacent squares. Your goal is to reach Square 0 or Square N.\nHowever, for each i = 1, 2, ..., M, there is a toll gate in Square A_i, and traveling to Square A_i incurs a cost of 1.\nIt is guaranteed that there is no toll gate in Square 0, Square X and Square N.\nFind the minimum cost incurred before reaching the goal. There are N + 1 squares arranged in a row, numbered 0, 1, ..., N from left to right. Initially, you are in Square X.\nYou can freely travel between adjacent squares. Your goal is to reach Square 0 or Square N.\nHowever, for each i = 1, 2, ..., M, there is a toll gate in Square A_i, and traveling to Square A_i incurs a cost of 1.\nIt is guaranteed that there is no toll gate in Square 0, Square X and Square N. Find the minimum cost incurred before reaching the goal. Print the minimum cost incurred before reaching the goal. The optimal solution is as follows: In this case, the total cost incurred is 1. We may be able to reach the goal at no cost. There are N + 1 squares arranged in a row, numbered 0, 1, ..., N from left to right. Initially, you are in Square X.\nYou can freely travel between adjacent squares. Your goal is to reach Square 0 or Square N.\nHowever, for each i = 1, 2, ..., M, there is a toll gate in Square A_i, and traveling to Square A_i incurs a cost of 1.\nIt is guaranteed that there is no toll gate in Square 0, Square X and Square N. Find the minimum cost incurred before reaching the goal.",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03378.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N \\leq 100\n1 \\leq M \\leq 100\n1 \\leq X \\leq N - 1\n1 \\leq A_1 < A_2 < ... < A_M \\leq N\nA_i \\neq X\nAll values in input are integers.",
          "ranges": "1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 3 3\n1 2 4",
            "output": "1 The optimal solution is as follows: First, travel from Square 3 to Square 4. Here, there is a toll gate in Square 4, so the cost of 1 is incurred.\nThen, travel from Square 4 to Square 5. This time, no cost is incurred.\nNow, we are in Square 5 and we have reached the goal. In this case, the total cost incurred is 1.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03378.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03378"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03396",
        "title": "Problem Statement",
        "description": "Score : 1600 points Problem StatementYui loves shopping. She lives in Yamaboshi City and there is a train service in the city. The city can be modelled as a very long number line. Yui's house is at coordinate 0.\nThere are N shopping centres in the city, located at coordinates x_{1}, x_{2}, ..., x_{N} respectively. There are N + 2 train stations, one located at coordinate 0, one located at coordinate L, and one located at each shopping centre.\nAt time 0, the train departs from position 0 to the positive direction. The train travels at a constant speed of 1 unit per second. At time L, the train will reach the last station, the station at coordinate L. The train immediately moves in the opposite direction at the same speed. At time 2L, the train will reach the station at coordinate 0 and it immediately moves in the opposite direction again. The process repeats indefinitely.\nWhen the train arrives at a station where Yui is located, Yui can board or leave the train immediately. At time 0, Yui is at the station at coordinate 0. \nYui wants to go shopping in all N shopping centres, in any order, and return home after she finishes her shopping. She needs to shop for t_{i} seconds in the shopping centre at coordinate x_{i}. She must finish her shopping in one shopping centre before moving to the next shopping centre. Yui can immediately start shopping when she reaches a station with a shopping centre and she can immediately board the train when she finishes shopping.\nYui wants to spend the minimum amount of time to finish her shopping. Can you help her determine the minimum number of seconds required to complete her shopping? Yui loves shopping. She lives in Yamaboshi City and there is a train service in the city. The city can be modelled as a very long number line. Yui's house is at coordinate 0. There are N shopping centres in the city, located at coordinates x_{1}, x_{2}, ..., x_{N} respectively. There are N + 2 train stations, one located at coordinate 0, one located at coordinate L, and one located at each shopping centre. At time 0, the train departs from position 0 to the positive direction. The train travels at a constant speed of 1 unit per second. At time L, the train will reach the last station, the station at coordinate L. The train immediately moves in the opposite direction at the same speed. At time 2L, the train will reach the station at coordinate 0 and it immediately moves in the opposite direction again. The process repeats indefinitely. When the train arrives at a station where Yui is located, Yui can board or leave the train immediately. At time 0, Yui is at the station at coordinate 0. Yui wants to go shopping in all N shopping centres, in any order, and return home after she finishes her shopping. She needs to shop for t_{i} seconds in the shopping centre at coordinate x_{i}. She must finish her shopping in one shopping centre before moving to the next shopping centre. Yui can immediately start shopping when she reaches a station with a shopping centre and she can immediately board the train when she finishes shopping. Yui wants to spend the minimum amount of time to finish her shopping. Can you help her determine the minimum number of seconds required to complete her shopping? Partial Score\n1000 points will be awarded for passing the testset satisfying 1 \\leq N \\leq 3000. Print the minimum time (in seconds) required for Yui to finish shopping at all N shopping centres and return home. Here's one possible way for Yui to finish her shopping : Travel to the station at coordinate 8 with the train. She arrives at coordinate 8 at time 8. Shop in the shopping centre at coordinate 8. She finishes her shopping at time 12. The train arrives at coordinate 8 at time 12. She boards the train which is currently moving in the negative direction. She arrives at coordinate 5 at time 15. She finishes her shopping at time 25. The train arrives at coordinate 5 at time 25. She boards the train which is currently moving in the positive direction. She arrives at coordinate L = 10 at time 30. The train starts moving in the negative direction immediately. She arrives at coordinate 0 at time 40, ending the trip. Beware of overflow issues. Yui loves shopping. She lives in Yamaboshi City and there is a train service in the city. The city can be modelled as a very long number line. Yui's house is at coordinate 0. There are N shopping centres in the city, located at coordinates x_{1}, x_{2}, ..., x_{N} respectively. There are N + 2 train stations, one located at coordinate 0, one located at coordinate L, and one located at each shopping centre. At time 0, the train departs from position 0 to the positive direction. The train travels at a constant speed of 1 unit per second. At time L, the train will reach the last station, the station at coordinate L. The train immediately moves in the opposite direction at the same speed. At time 2L, the train will reach the station at coordinate 0 and it immediately moves in the opposite direction again. The process repeats indefinitely. When the train arrives at a station where Yui is located, Yui can board or leave the train immediately. At time 0, Yui is at the station at coordinate 0. Yui wants to go shopping in all N shopping centres, in any order, and return home after she finishes her shopping. She needs to shop for t_{i} seconds in the shopping centre at coordinate x_{i}. She must finish her shopping in one shopping centre before moving to the next shopping centre. Yui can immediately start shopping when she reaches a station with a shopping centre and she can immediately board the train when she finishes shopping. Yui wants to spend the minimum amount of time to finish her shopping. Can you help her determine the minimum number of seconds required to complete her shopping?",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry",
          "sorting",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03396.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N \\leq 300000\n1 \\leq L \\leq 10^{9}\n0 < x_{1} < x_{2} < ... < x_{N} < L\n1 \\leq t_{i} \\leq 10^{9}\nAll values in the input are integers.",
          "ranges": "0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 10\n5 8\n10 4",
            "output": "40 Here's one possible way for Yui to finish her shopping : Travel to the station at coordinate 8 with the train. She arrives at coordinate 8 at time 8.\n\n\nShop in the shopping centre at coordinate 8. She finishes her shopping at time 12.\n\n\nThe train arrives at coordinate 8 at time 12. She boards the train which is currently moving in the negative direction.\n\n\nShe arrives at coordinate 5 at time 15. She finishes her shopping at time 25.\n\n\nThe train arrives at coordinate 5 at time 25. She boards the train which is currently moving in the positive direction.\n\n\nShe arrives at coordinate L = 10 at time 30. The train starts moving in the negative direction immediately.\n\n\nShe arrives at coordinate 0 at time 40, ending the trip.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03396.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03396"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03409",
        "title": "At most how many friendly pairs can you form? Note that a point cannot belong to multiple pairs.",
        "description": "Score : 400 points Problem StatementOn a two-dimensional plane, there are N red points and N blue points.\nThe coordinates of the i-th red point are (a_i, b_i), and the coordinates of the i-th blue point are (c_i, d_i).\nA red point and a blue point can form a friendly pair when, the x-coordinate of the red point is smaller than that of the blue point, and the y-coordinate of the red point is also smaller than that of the blue point.\nAt most how many friendly pairs can you form? Note that a point cannot belong to multiple pairs. On a two-dimensional plane, there are N red points and N blue points.\nThe coordinates of the i-th red point are (a_i, b_i), and the coordinates of the i-th blue point are (c_i, d_i). A red point and a blue point can form a friendly pair when, the x-coordinate of the red point is smaller than that of the blue point, and the y-coordinate of the red point is also smaller than that of the blue point. At most how many friendly pairs can you form? Note that a point cannot belong to multiple pairs. Print the maximum number of friendly pairs. For example, you can pair (2, 0) and (4, 2), then (3, 1) and (5, 5). For example, you can pair (0, 0) and (2, 3), then (1, 1) and (3, 4). It is possible that no pair can be formed. On a two-dimensional plane, there are N red points and N blue points.\nThe coordinates of the i-th red point are (a_i, b_i), and the coordinates of the i-th blue point are (c_i, d_i). A red point and a blue point can form a friendly pair when, the x-coordinate of the red point is smaller than that of the blue point, and the y-coordinate of the red point is also smaller than that of the blue point. At most how many friendly pairs can you form? Note that a point cannot belong to multiple pairs.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03409.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "All input values are integers.\n1 \\leq N \\leq 100\n0 \\leq a_i, b_i, c_i, d_i < 2N\na_1, a_2, ..., a_N, c_1, c_2, ..., c_N are all different.\nb_1, b_2, ..., b_N, d_1, d_2, ..., d_N are all different.",
          "ranges": "2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5",
            "output": "2 For example, you can pair (2, 0) and (4, 2), then (3, 1) and (5, 5).",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03409.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03409"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03411",
        "title": "At most how many friendly pairs can you form? Note that a point cannot belong to multiple pairs.",
        "description": "Score : 400 points Problem StatementOn a two-dimensional plane, there are N red points and N blue points.\nThe coordinates of the i-th red point are (a_i, b_i), and the coordinates of the i-th blue point are (c_i, d_i).\nA red point and a blue point can form a friendly pair when, the x-coordinate of the red point is smaller than that of the blue point, and the y-coordinate of the red point is also smaller than that of the blue point.\nAt most how many friendly pairs can you form? Note that a point cannot belong to multiple pairs. On a two-dimensional plane, there are N red points and N blue points.\nThe coordinates of the i-th red point are (a_i, b_i), and the coordinates of the i-th blue point are (c_i, d_i). A red point and a blue point can form a friendly pair when, the x-coordinate of the red point is smaller than that of the blue point, and the y-coordinate of the red point is also smaller than that of the blue point. At most how many friendly pairs can you form? Note that a point cannot belong to multiple pairs. Print the maximum number of friendly pairs. For example, you can pair (2, 0) and (4, 2), then (3, 1) and (5, 5). For example, you can pair (0, 0) and (2, 3), then (1, 1) and (3, 4). It is possible that no pair can be formed. On a two-dimensional plane, there are N red points and N blue points.\nThe coordinates of the i-th red point are (a_i, b_i), and the coordinates of the i-th blue point are (c_i, d_i). A red point and a blue point can form a friendly pair when, the x-coordinate of the red point is smaller than that of the blue point, and the y-coordinate of the red point is also smaller than that of the blue point. At most how many friendly pairs can you form? Note that a point cannot belong to multiple pairs.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03411.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "All input values are integers.\n1 \\leq N \\leq 100\n0 \\leq a_i, b_i, c_i, d_i < 2N\na_1, a_2, ..., a_N, c_1, c_2, ..., c_N are all different.\nb_1, b_2, ..., b_N, d_1, d_2, ..., d_N are all different.",
          "ranges": "2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5",
            "output": "2 For example, you can pair (2, 0) and (4, 2), then (3, 1) and (5, 5).",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03411.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03411"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03437",
        "title": "If it does not exist, print -1.",
        "description": "Score : 100 points Problem StatementYou are given positive integers X and Y.\nIf there exists a positive integer not greater than 10^{18} that is a multiple of X but not a multiple of Y, choose one such integer and print it.\nIf it does not exist, print -1. You are given positive integers X and Y.\nIf there exists a positive integer not greater than 10^{18} that is a multiple of X but not a multiple of Y, choose one such integer and print it.\nIf it does not exist, print -1. Print a positive integer not greater than 10^{18} that is a multiple of X but not a multiple of Y, or print -1 if it does not exist. For example, 16 is a multiple of 8 but not a multiple of 6. A multiple of 3 is a multiple of 3. You are given positive integers X and Y.\nIf there exists a positive integer not greater than 10^{18} that is a multiple of X but not a multiple of Y, choose one such integer and print it.\nIf it does not exist, print -1.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03437.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ X,Y ≤ 10^9\nX and Y are integers.",
          "ranges": "10; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "8 6",
            "output": "16 For example, 16 is a multiple of 8 but not a multiple of 6.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03437.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03437"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03438",
        "title": "Add 2 to a_i.",
        "description": "Score : 300 points Problem StatementYou are given two integer sequences of length N: a_1,a_2,..,a_N and b_1,b_2,..,b_N.\nDetermine if we can repeat the following operation zero or more times so that the sequences a and b become equal.\nOperation: Choose two integers i and j (possibly the same) between 1 and N (inclusive), then perform the following two actions simultaneously:\n\nAdd 2 to a_i.\nAdd 1 to b_j. You are given two integer sequences of length N: a_1,a_2,..,a_N and b_1,b_2,..,b_N.\nDetermine if we can repeat the following operation zero or more times so that the sequences a and b become equal. Operation: Choose two integers i and j (possibly the same) between 1 and N (inclusive), then perform the following two actions simultaneously: If we can repeat the operation zero or more times so that the sequences a and b become equal, print Yes; otherwise, print No. For example, we can perform three operations as follows to do our job: You are given two integer sequences of length N: a_1,a_2,..,a_N and b_1,b_2,..,b_N.\nDetermine if we can repeat the following operation zero or more times so that the sequences a and b become equal. Operation: Choose two integers i and j (possibly the same) between 1 and N (inclusive), then perform the following two actions simultaneously: Add 2 to a_i.\nAdd 1 to b_j.",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "array"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03438.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10 000\n0 ≤ a_i,b_i ≤ 10^9 (1 ≤ i ≤ N)\nAll input values are integers.",
          "ranges": "1 10; 10; 10; 1; 0; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n1 2 3\n5 2 2",
            "output": "Yes For example, we can perform three operations as follows to do our job: First operation: i=1 and j=2. Now we have a = \\{3,2,3\\}, b = \\{5,3,2\\}.\nSecond operation: i=1 and j=2. Now we have a = \\{5,2,3\\}, b = \\{5,4,2\\}.\nThird operation: i=2 and j=3. Now we have a = \\{5,4,3\\}, b = \\{5,4,3\\}.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03438.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03438"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03439",
        "title": "Let N be an odd number at least 3.",
        "description": "Score : 500 points Problem StatementThis is an interactive task.\nLet N be an odd number at least 3.\nThere are N seats arranged in a circle.\nThe seats are numbered 0 through N-1.\nFor each i (0 ≤ i ≤ N - 2), Seat i and Seat i + 1 are adjacent.\nAlso, Seat N - 1 and Seat 0 are adjacent.\nEach seat is either vacant, or oppupied by a man or a woman.\nHowever, no two adjacent seats are occupied by two people of the same sex.\nIt can be shown that there is at least one empty seat where N is an odd number at least 3.\nYou are given N, but the states of the seats are not given.\nYour objective is to correctly guess the ID number of any one of the empty seats.\nTo do so, you can repeatedly send the following query:\n\nChoose an integer i (0 ≤ i ≤ N - 1). If Seat i is empty, the problem is solved. Otherwise, you are notified of the sex of the person in Seat i.\n\nGuess the ID number of an empty seat by sending at most 20 queries. This is an interactive task. Let N be an odd number at least 3. There are N seats arranged in a circle.\nThe seats are numbered 0 through N-1.\nFor each i (0 ≤ i ≤ N - 2), Seat i and Seat i + 1 are adjacent.\nAlso, Seat N - 1 and Seat 0 are adjacent. Each seat is either vacant, or oppupied by a man or a woman.\nHowever, no two adjacent seats are occupied by two people of the same sex.\nIt can be shown that there is at least one empty seat where N is an odd number at least 3. You are given N, but the states of the seats are not given.\nYour objective is to correctly guess the ID number of any one of the empty seats.\nTo do so, you can repeatedly send the following query: Guess the ID number of an empty seat by sending at most 20 queries. Here, s is Vacant, Male or Female.\nEach of these means that Seat i is empty, occupied by a man and occupied by a woman, respectively. In this sample, N = 3, and Seat 0, 1, 2 are occupied by a man, occupied by a woman and vacant, respectively. This is an interactive task. Let N be an odd number at least 3. There are N seats arranged in a circle.\nThe seats are numbered 0 through N-1.\nFor each i (0 ≤ i ≤ N - 2), Seat i and Seat i + 1 are adjacent.\nAlso, Seat N - 1 and Seat 0 are adjacent. Each seat is either vacant, or oppupied by a man or a woman.\nHowever, no two adjacent seats are occupied by two people of the same sex.\nIt can be shown that there is at least one empty seat where N is an odd number at least 3. You are given N, but the states of the seats are not given.\nYour objective is to correctly guess the ID number of any one of the empty seats.\nTo do so, you can repeatedly send the following query: Choose an integer i (0 ≤ i ≤ N - 1). If Seat i is empty, the problem is solved. Otherwise, you are notified of the sex of the person in Seat i. Guess the ID number of an empty seat by sending at most 20 queries.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03439.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "N is an odd number.\n3 ≤ N ≤ 99 999",
          "ranges": "3 99; 99; 3"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "In this sample, N = 3, and Seat 0, 1, 2 are occupied by a man, occupied by a woman and vacant, respectively. InputOutput\n\n\n3\n0\nMale\n1\nFemale\n2\nVacant",
            "output": "First, N is given from Standard Input in the following format: N Then, you should send queries.\nA query should be printed to Standart Output in the following format.\nPrint a newline at the end. i The response to the query is given from Standard Input in the following format: s Here, s is Vacant, Male or Female.\nEach of these means that Seat i is empty, occupied by a man and occupied by a woman, respectively.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03439.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03439"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03440",
        "title": "Each vertex i has a value a_i.",
        "description": "Score : 600 points Problem StatementYou are given a forest with N vertices and M edges. The vertices are numbered 0 through N-1.\nThe edges are given in the format (x_i,y_i), which means that Vertex x_i and y_i are connected by an edge.\nEach vertex i has a value a_i.\nYou want to add edges in the given forest so that the forest becomes connected.\nTo add an edge, you choose two different vertices i and j, then span an edge between i and j.\nThis operation costs a_i + a_j dollars, and afterward neither Vertex i nor j can be selected again.\nFind the minimum total cost required to make the forest connected, or print Impossible if it is impossible. You are given a forest with N vertices and M edges. The vertices are numbered 0 through N-1.\nThe edges are given in the format (x_i,y_i), which means that Vertex x_i and y_i are connected by an edge. Each vertex i has a value a_i.\nYou want to add edges in the given forest so that the forest becomes connected.\nTo add an edge, you choose two different vertices i and j, then span an edge between i and j.\nThis operation costs a_i + a_j dollars, and afterward neither Vertex i nor j can be selected again. Find the minimum total cost required to make the forest connected, or print Impossible if it is impossible. Print the minimum total cost required to make the forest connected, or print Impossible if it is impossible. If we connect vertices 0 and 5, the graph becomes connected, for the cost of 1 + 6 = 7 dollars. We can't make the graph connected. The graph is already connected, so we do not need to add any edges. You are given a forest with N vertices and M edges. The vertices are numbered 0 through N-1.\nThe edges are given in the format (x_i,y_i), which means that Vertex x_i and y_i are connected by an edge. Each vertex i has a value a_i.\nYou want to add edges in the given forest so that the forest becomes connected.\nTo add an edge, you choose two different vertices i and j, then span an edge between i and j.\nThis operation costs a_i + a_j dollars, and afterward neither Vertex i nor j can be selected again. Find the minimum total cost required to make the forest connected, or print Impossible if it is impossible.",
        "difficulty": "Hard",
        "category": "Trees & Graphs",
        "tags": [
          "math",
          "sorting",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03440.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 100,000\n0 ≤ M ≤ N-1\n1 ≤ a_i ≤ 10^9\n0 ≤ x_i,y_i ≤ N-1\nThe given graph is a forest.\nAll input values are integers.",
          "ranges": "1 100; 1 10; 100; 10; 1; 0; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "7 5\n1 2 3 4 5 6 7\n3 0\n4 0\n1 2\n1 3\n5 6",
            "output": "7 If we connect vertices 0 and 5, the graph becomes connected, for the cost of 1 + 6 = 7 dollars.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03440.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03440"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03441",
        "title": "It is expected that one of the vertices will be invaded by aliens from outer space.",
        "description": "Score : 900 points Problem StatementWe have a tree with N vertices.\nThe vertices are numbered 0 through N - 1, and the i-th edge (0 ≤ i < N - 1) comnnects Vertex a_i and b_i.\nFor each pair of vertices u and v (0 ≤ u, v < N), we define the distance d(u, v) as the number of edges in the path u-v.\nIt is expected that one of the vertices will be invaded by aliens from outer space.\nSnuke wants to immediately identify that vertex when the invasion happens.\nTo do so, he has decided to install an antenna on some vertices.\nFirst, he decides the number of antennas, K (1 ≤ K ≤ N).\nThen, he chooses K different vertices, x_0, x_1, ..., x_{K - 1}, on which he installs Antenna 0, 1, ..., K - 1, respectively.\nIf Vertex v is invaded by aliens, Antenna k (0 ≤ k < K) will output the distance d(x_k, v).\nBased on these K outputs, Snuke will identify the vertex that is invaded.\nThus, in order to identify the invaded vertex no matter which one is invaded, the following condition must hold:\n\nFor each vertex u (0 ≤ u < N), consider the vector (d(x_0, u), ..., d(x_{K - 1}, u)). These N vectors are distinct.\n\nFind the minumum value of K, the number of antennas, when the condition is satisfied. We have a tree with N vertices.\nThe vertices are numbered 0 through N - 1, and the i-th edge (0 ≤ i < N - 1) comnnects Vertex a_i and b_i.\nFor each pair of vertices u and v (0 ≤ u, v < N), we define the distance d(u, v) as the number of edges in the path u-v. It is expected that one of the vertices will be invaded by aliens from outer space.\nSnuke wants to immediately identify that vertex when the invasion happens.\nTo do so, he has decided to install an antenna on some vertices. First, he decides the number of antennas, K (1 ≤ K ≤ N).\nThen, he chooses K different vertices, x_0, x_1, ..., x_{K - 1}, on which he installs Antenna 0, 1, ..., K - 1, respectively.\nIf Vertex v is invaded by aliens, Antenna k (0 ≤ k < K) will output the distance d(x_k, v).\nBased on these K outputs, Snuke will identify the vertex that is invaded.\nThus, in order to identify the invaded vertex no matter which one is invaded, the following condition must hold: Find the minumum value of K, the number of antennas, when the condition is satisfied. Print the minumum value of K, the number of antennas, when the condition is satisfied. For example, install an antenna on Vertex 1 and 3.\nThen, the following five vectors are distinct: For example, install an antenna on Vertex 0. For example, install an antenna on Vertex 0, 4, 9. We have a tree with N vertices.\nThe vertices are numbered 0 through N - 1, and the i-th edge (0 ≤ i < N - 1) comnnects Vertex a_i and b_i.\nFor each pair of vertices u and v (0 ≤ u, v < N), we define the distance d(u, v) as the number of edges in the path u-v. It is expected that one of the vertices will be invaded by aliens from outer space.\nSnuke wants to immediately identify that vertex when the invasion happens.\nTo do so, he has decided to install an antenna on some vertices. First, he decides the number of antennas, K (1 ≤ K ≤ N).\nThen, he chooses K different vertices, x_0, x_1, ..., x_{K - 1}, on which he installs Antenna 0, 1, ..., K - 1, respectively.\nIf Vertex v is invaded by aliens, Antenna k (0 ≤ k < K) will output the distance d(x_k, v).\nBased on these K outputs, Snuke will identify the vertex that is invaded.\nThus, in order to identify the invaded vertex no matter which one is invaded, the following condition must hold: For each vertex u (0 ≤ u < N), consider the vector (d(x_0, u), ..., d(x_{K - 1}, u)). These N vectors are distinct. Find the minumum value of K, the number of antennas, when the condition is satisfied.",
        "difficulty": "Medium",
        "category": "Trees & Graphs",
        "tags": [
          "math",
          "sorting",
          "graph",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03441.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 10^5\n0 ≤ a_i, b_i < N\nThe given graph is a tree.",
          "ranges": "2 10; 10; 2; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n0 1\n0 2\n0 3\n3 4",
            "output": "2 For example, install an antenna on Vertex 1 and 3.\nThen, the following five vectors are distinct: (d(1, 0), d(3, 0)) = (1, 1)\n(d(1, 1), d(3, 1)) = (0, 2)\n(d(1, 2), d(3, 2)) = (2, 2)\n(d(1, 3), d(3, 3)) = (2, 0)\n(d(1, 4), d(3, 4)) = (3, 1)",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03441.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03441"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03442",
        "title": "Edge i connects Vertex x_i and y_i, and has a value a_i.",
        "description": "Score : 1000 points Problem StatementYou are given a tree with N vertices. The vertices are numbered 0 through N-1, and the edges are numbered 1 through N-1.\nEdge i connects Vertex x_i and y_i, and has a value a_i.\nYou can perform the following operation any number of times:\n\nChoose a simple path and a non-negative integer x, then for each edge e that belongs to the path, change a_e by executing a_e ← a_e ⊕ x (⊕ denotes XOR).\n\nYour objective is to have a_e = 0 for all edges e.\nFind the minimum number of operations required to achieve it. You are given a tree with N vertices. The vertices are numbered 0 through N-1, and the edges are numbered 1 through N-1.\nEdge i connects Vertex x_i and y_i, and has a value a_i.\nYou can perform the following operation any number of times: Your objective is to have a_e = 0 for all edges e.\nFind the minimum number of operations required to achieve it. Find the minimum number of operations required to achieve the objective. The objective can be achieved in three operations, as follows: You are given a tree with N vertices. The vertices are numbered 0 through N-1, and the edges are numbered 1 through N-1.\nEdge i connects Vertex x_i and y_i, and has a value a_i.\nYou can perform the following operation any number of times: Choose a simple path and a non-negative integer x, then for each edge e that belongs to the path, change a_e by executing a_e ← a_e ⊕ x (⊕ denotes XOR). Your objective is to have a_e = 0 for all edges e.\nFind the minimum number of operations required to achieve it.",
        "difficulty": "Medium",
        "category": "Trees & Graphs",
        "tags": [
          "math",
          "sorting",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03442.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 10^5\n0 ≤ x_i,y_i ≤ N-1\n0 ≤ a_i ≤ 15\nThe given graph is a tree.\nAll input values are integers.",
          "ranges": "2 10; 0 15; 10; 15; 2; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n0 1 1\n0 2 3\n0 3 6\n3 4 4",
            "output": "3 The objective can be achieved in three operations, as follows: First, choose the path connecting Vertex 1, 2, and x = 1.\nThen, choose the path connecting Vertex 2, 3, and x = 2.\nLastly, choose the path connecting Vertex 0, 4, and x = 4.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03442.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03442"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03446",
        "title": "The small cubes have coordinates from (0, 0, 0) through (A-1, B-1, C-1).",
        "description": "Score : 2100 points Problem StatementWe have a rectangular parallelepiped of dimensions A×B×C, divided into 1×1×1 small cubes.\nThe small cubes have coordinates from (0, 0, 0) through (A-1, B-1, C-1).\nLet p, q and r be integers. Consider the following set of abc small cubes:\n\\{(\\ (p + i) mod A, (q + j) mod B, (r + k) mod C\\ ) | i, j and k are integers satisfying 0 ≤ i < a, 0 ≤ j < b, 0 ≤ k < c \\}\nA set of small cubes that can be expressed in the above format using some integers p, q and r, is called a torus cuboid of size a×b×c.\nFind the number of the sets of torus cuboids of size a×b×c that satisfy the following condition, modulo 10^9+7:\n\nNo two torus cuboids in the set have intersection.\nThe union of all torus cuboids in the set is the whole rectangular parallelepiped of dimensions A×B×C. We have a rectangular parallelepiped of dimensions A×B×C, divided into 1×1×1 small cubes.\nThe small cubes have coordinates from (0, 0, 0) through (A-1, B-1, C-1). Let p, q and r be integers. Consider the following set of abc small cubes: \\{(\\ (p + i) mod A, (q + j) mod B, (r + k) mod C\\ ) | i, j and k are integers satisfying 0 ≤ i < a, 0 ≤ j < b, 0 ≤ k < c \\} A set of small cubes that can be expressed in the above format using some integers p, q and r, is called a torus cuboid of size a×b×c. Find the number of the sets of torus cuboids of size a×b×c that satisfy the following condition, modulo 10^9+7: Print the number of the sets of torus cuboids of size a×b×c that satisfy the condition, modulo 10^9+7. We have a rectangular parallelepiped of dimensions A×B×C, divided into 1×1×1 small cubes.\nThe small cubes have coordinates from (0, 0, 0) through (A-1, B-1, C-1). Let p, q and r be integers. Consider the following set of abc small cubes: \\{(\\ (p + i) mod A, (q + j) mod B, (r + k) mod C\\ ) | i, j and k are integers satisfying 0 ≤ i < a, 0 ≤ j < b, 0 ≤ k < c \\} A set of small cubes that can be expressed in the above format using some integers p, q and r, is called a torus cuboid of size a×b×c. Find the number of the sets of torus cuboids of size a×b×c that satisfy the following condition, modulo 10^9+7: No two torus cuboids in the set have intersection.\nThe union of all torus cuboids in the set is the whole rectangular parallelepiped of dimensions A×B×C.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03446.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ a < A ≤ 100\n1 ≤ b < B ≤ 100\n1 ≤ c < C ≤ 100\nAll input values are integers.",
          "ranges": "100; 100; 100; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1 1 1 2 2 2",
            "output": "1",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03446.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03446"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03455",
        "title": "Determine whether the product of a and b is even or odd.",
        "description": "Score : 100 points Problem StatementAtCoDeer the deer found two positive integers, a and b.\nDetermine whether the product of a and b is even or odd. AtCoDeer the deer found two positive integers, a and b.\nDetermine whether the product of a and b is even or odd. If the product is odd, print Odd; if it is even, print Even. As 3 × 4 = 12 is even, print Even. As 1 × 21 = 21 is odd, print Odd. AtCoDeer the deer found two positive integers, a and b.\nDetermine whether the product of a and b is even or odd.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03455.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ a,b ≤ 10000\na and b are integers.",
          "ranges": "10000; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 4",
            "output": "Even As 3 × 4 = 12 is even, print Even.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03455.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03455"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03456",
        "title": "Determine whether the concatenation of a and b in this order is a square number.",
        "description": "Score : 200 points Problem StatementAtCoDeer the deer has found two positive integers, a and b.\nDetermine whether the concatenation of a and b in this order is a square number. AtCoDeer the deer has found two positive integers, a and b.\nDetermine whether the concatenation of a and b in this order is a square number. If the concatenation of a and b in this order is a square number, print Yes; otherwise, print No. As 121 = 11 × 11, it is a square number. 100100 is not a square number. AtCoDeer the deer has found two positive integers, a and b.\nDetermine whether the concatenation of a and b in this order is a square number.",
        "difficulty": "Medium",
        "category": "Math & Logic",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03456.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ a,b ≤ 100\na and b are integers.",
          "ranges": "100; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1 21",
            "output": "Yes As 121 = 11 × 11, it is a square number.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03456.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03456"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03457",
        "title": "Note that he cannot stay at his place.",
        "description": "Score : 300 points Problem StatementAtCoDeer the deer is going on a trip in a two-dimensional plane.\nIn his plan, he will depart from point (0, 0) at time 0, then for each i between 1 and N (inclusive), he will visit point (x_i,y_i) at time t_i.\nIf AtCoDeer is at point (x, y) at time t, he can be at one of the following points at time t+1: (x+1,y), (x-1,y), (x,y+1) and (x,y-1).\nNote that he cannot stay at his place.\nDetermine whether he can carry out his plan. AtCoDeer the deer is going on a trip in a two-dimensional plane.\nIn his plan, he will depart from point (0, 0) at time 0, then for each i between 1 and N (inclusive), he will visit point (x_i,y_i) at time t_i. If AtCoDeer is at point (x, y) at time t, he can be at one of the following points at time t+1: (x+1,y), (x-1,y), (x,y+1) and (x,y-1).\nNote that he cannot stay at his place.\nDetermine whether he can carry out his plan. If AtCoDeer can carry out his plan, print Yes; if he cannot, print No. For example, he can travel as follows: (0,0), (0,1), (1,1), (1,2), (1,1), (1,0), then (1,1). It is impossible to be at (100,100) two seconds after being at (0,0). AtCoDeer the deer is going on a trip in a two-dimensional plane.\nIn his plan, he will depart from point (0, 0) at time 0, then for each i between 1 and N (inclusive), he will visit point (x_i,y_i) at time t_i. If AtCoDeer is at point (x, y) at time t, he can be at one of the following points at time t+1: (x+1,y), (x-1,y), (x,y+1) and (x,y-1).\nNote that he cannot stay at his place.\nDetermine whether he can carry out his plan.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03457.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10^5\n0 ≤ x_i ≤ 10^5\n0 ≤ y_i ≤ 10^5\n1 ≤ t_i ≤ 10^5\nt_i < t_{i+1} (1 ≤ i ≤ N-1)\nAll input values are integers.",
          "ranges": "1 10; 0 10; 0 10; 1 10; 10; 10; 10; 10; 1; 0; 0; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\n3 1 2\n6 1 1",
            "output": "Yes For example, he can travel as follows: (0,0), (0,1), (1,1), (1,2), (1,1), (1,0), then (1,1).",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03457.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03457"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03458",
        "title": "Below is an example of a checked pattern of side 3:",
        "description": "Score : 500 points Problem StatementAtCoDeer is thinking of painting an infinite two-dimensional grid in a checked pattern of side K.\nHere, a checked pattern of side K is a pattern where each square is painted black or white so that each connected component of each color is a K × K square.\nBelow is an example of a checked pattern of side 3:\n\n\n\nAtCoDeer has N desires.\nThe i-th desire is represented by x_i, y_i and c_i.\nIf c_i is B, it means that he wants to paint the square (x_i,y_i) black; if c_i is W, he wants to paint the square (x_i,y_i) white.\nAt most how many desires can he satisfy at the same time? AtCoDeer is thinking of painting an infinite two-dimensional grid in a checked pattern of side K.\nHere, a checked pattern of side K is a pattern where each square is painted black or white so that each connected component of each color is a K × K square.\nBelow is an example of a checked pattern of side 3: AtCoDeer has N desires.\nThe i-th desire is represented by x_i, y_i and c_i.\nIf c_i is B, it means that he wants to paint the square (x_i,y_i) black; if c_i is W, he wants to paint the square (x_i,y_i) white.\nAt most how many desires can he satisfy at the same time? Print the maximum number of desires that can be satisfied at the same time. He can satisfy all his desires by painting as shown in the example above. AtCoDeer is thinking of painting an infinite two-dimensional grid in a checked pattern of side K.\nHere, a checked pattern of side K is a pattern where each square is painted black or white so that each connected component of each color is a K × K square.\nBelow is an example of a checked pattern of side 3: AtCoDeer has N desires.\nThe i-th desire is represented by x_i, y_i and c_i.\nIf c_i is B, it means that he wants to paint the square (x_i,y_i) black; if c_i is W, he wants to paint the square (x_i,y_i) white.\nAt most how many desires can he satisfy at the same time?",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03458.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10^5\n1 ≤ K ≤ 1000\n0 ≤ x_i ≤ 10^9\n0 ≤ y_i ≤ 10^9\nIf i ≠ j, then (x_i,y_i) ≠ (x_j,y_j).\nc_i is B or W.\nN, K, x_i and y_i are integers.",
          "ranges": "1 10; 1 1000; 0 10; 0 10; 10; 1000; 10; 10; 1; 1; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 3\n0 1 W\n1 2 W\n5 3 B\n5 4 B",
            "output": "4 He can satisfy all his desires by painting as shown in the example above.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03458.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03458"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03459",
        "title": "Note that he cannot stay at his place.",
        "description": "Score : 300 points Problem StatementAtCoDeer the deer is going on a trip in a two-dimensional plane.\nIn his plan, he will depart from point (0, 0) at time 0, then for each i between 1 and N (inclusive), he will visit point (x_i,y_i) at time t_i.\nIf AtCoDeer is at point (x, y) at time t, he can be at one of the following points at time t+1: (x+1,y), (x-1,y), (x,y+1) and (x,y-1).\nNote that he cannot stay at his place.\nDetermine whether he can carry out his plan. AtCoDeer the deer is going on a trip in a two-dimensional plane.\nIn his plan, he will depart from point (0, 0) at time 0, then for each i between 1 and N (inclusive), he will visit point (x_i,y_i) at time t_i. If AtCoDeer is at point (x, y) at time t, he can be at one of the following points at time t+1: (x+1,y), (x-1,y), (x,y+1) and (x,y-1).\nNote that he cannot stay at his place.\nDetermine whether he can carry out his plan. If AtCoDeer can carry out his plan, print Yes; if he cannot, print No. For example, he can travel as follows: (0,0), (0,1), (1,1), (1,2), (1,1), (1,0), then (1,1). It is impossible to be at (100,100) two seconds after being at (0,0). AtCoDeer the deer is going on a trip in a two-dimensional plane.\nIn his plan, he will depart from point (0, 0) at time 0, then for each i between 1 and N (inclusive), he will visit point (x_i,y_i) at time t_i. If AtCoDeer is at point (x, y) at time t, he can be at one of the following points at time t+1: (x+1,y), (x-1,y), (x,y+1) and (x,y-1).\nNote that he cannot stay at his place.\nDetermine whether he can carry out his plan.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03459.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10^5\n0 ≤ x_i ≤ 10^5\n0 ≤ y_i ≤ 10^5\n1 ≤ t_i ≤ 10^5\nt_i < t_{i+1} (1 ≤ i ≤ N-1)\nAll input values are integers.",
          "ranges": "1 10; 0 10; 0 10; 1 10; 10; 10; 10; 10; 1; 0; 0; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\n3 1 2\n6 1 1",
            "output": "Yes For example, he can travel as follows: (0,0), (0,1), (1,1), (1,2), (1,1), (1,0), then (1,1).",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03459.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03459"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03460",
        "title": "Below is an example of a checked pattern of side 3:",
        "description": "Score : 500 points Problem StatementAtCoDeer is thinking of painting an infinite two-dimensional grid in a checked pattern of side K.\nHere, a checked pattern of side K is a pattern where each square is painted black or white so that each connected component of each color is a K × K square.\nBelow is an example of a checked pattern of side 3:\n\n\n\nAtCoDeer has N desires.\nThe i-th desire is represented by x_i, y_i and c_i.\nIf c_i is B, it means that he wants to paint the square (x_i,y_i) black; if c_i is W, he wants to paint the square (x_i,y_i) white.\nAt most how many desires can he satisfy at the same time? AtCoDeer is thinking of painting an infinite two-dimensional grid in a checked pattern of side K.\nHere, a checked pattern of side K is a pattern where each square is painted black or white so that each connected component of each color is a K × K square.\nBelow is an example of a checked pattern of side 3: AtCoDeer has N desires.\nThe i-th desire is represented by x_i, y_i and c_i.\nIf c_i is B, it means that he wants to paint the square (x_i,y_i) black; if c_i is W, he wants to paint the square (x_i,y_i) white.\nAt most how many desires can he satisfy at the same time? Print the maximum number of desires that can be satisfied at the same time. He can satisfy all his desires by painting as shown in the example above. AtCoDeer is thinking of painting an infinite two-dimensional grid in a checked pattern of side K.\nHere, a checked pattern of side K is a pattern where each square is painted black or white so that each connected component of each color is a K × K square.\nBelow is an example of a checked pattern of side 3: AtCoDeer has N desires.\nThe i-th desire is represented by x_i, y_i and c_i.\nIf c_i is B, it means that he wants to paint the square (x_i,y_i) black; if c_i is W, he wants to paint the square (x_i,y_i) white.\nAt most how many desires can he satisfy at the same time?",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03460.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10^5\n1 ≤ K ≤ 1000\n0 ≤ x_i ≤ 10^9\n0 ≤ y_i ≤ 10^9\nIf i ≠ j, then (x_i,y_i) ≠ (x_j,y_j).\nc_i is B or W.\nN, K, x_i and y_i are integers.",
          "ranges": "1 10; 1 1000; 0 10; 0 10; 10; 1000; 10; 10; 1; 1; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 3\n0 1 W\n1 2 W\n5 3 B\n5 4 B",
            "output": "4 He can satisfy all his desires by painting as shown in the example above.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03460.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03460"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03461",
        "title": "The number of vertices, N, is at most 300.",
        "description": "Score : 900 points AtCoDeer the deer wants a directed graph that satisfies the following conditions: If no graph satisfies the condition, print Impossible. If there exists a graph that satisfies the condition, print Possible in the first line.\nThen, in the subsequent lines, print the constructed graph in the following format: Here, M is the number of the edges, and u_i, v_i, c_i represent edges as follows: there is an edge from Vertex u_i to Vertex v_i whose weight or label is c_i. AtCoDeer the deer wants a directed graph that satisfies the following conditions: The number of vertices, N, is at most 300.\nThere must not be self-loops or multiple edges.\nThe vertices are numbered from 1 through N.\nEach edge has either an integer weight between 0 and 100 (inclusive), or a label X or Y.\nFor every pair of two integers (x,y) such that 1 ≤ x ≤ A, 1 ≤ y ≤ B,\n    the shortest distance from Vertex S to Vertex T in the graph where the edges labeled X have the weight x and the edges labeled Y have the weight y, is d_{x,y}. Construct such a graph (and a pair of S and T) for him, or report that it does not exist.\nRefer to Output section for output format.",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "math",
          "graph",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03461.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ A,B ≤ 10\n1 ≤ d_{x,y} ≤ 100 (1 ≤ x ≤ A, 1 ≤ y ≤ B)\nAll input values are integers.",
          "ranges": "10; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 3\n1 2 2\n1 2 3",
            "output": "Possible\n3 4\n1 2 X\n2 3 1\n3 2 Y\n1 3 Y\n1 3",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03461.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03461"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03462",
        "title": "You are given a string s of length K.",
        "description": "Score : 1100 points Problem StatementThere are N white balls arranged in a row, numbered 1,2,..,N from left to right.\nAtCoDeer the deer is thinking of painting some of these balls red and blue, while leaving some of them white.\nYou are given a string s of length K.\nAtCoDeer performs the following operation for each i from 1 through K in order:\n\nThe i-th operation: Choose a contiguous segment of balls (possibly empty), and paint these balls red if the i-th character in s is r; paint them blue if the character is b.\n\nHere, if a ball which is already painted is again painted, the color of the ball will be overwritten.\nHowever, due to the properties of dyes, it is not possible to paint a white, unpainted ball directly in blue.\nThat is, when the i-th character in s is b, the chosen segment must not contain a white ball.\nAfter all the operations, how many different sequences of colors of the balls are possible?\nSince the count can be large, find it modulo 10^9+7. There are N white balls arranged in a row, numbered 1,2,..,N from left to right.\nAtCoDeer the deer is thinking of painting some of these balls red and blue, while leaving some of them white. You are given a string s of length K.\nAtCoDeer performs the following operation for each i from 1 through K in order: Here, if a ball which is already painted is again painted, the color of the ball will be overwritten.\nHowever, due to the properties of dyes, it is not possible to paint a white, unpainted ball directly in blue.\nThat is, when the i-th character in s is b, the chosen segment must not contain a white ball. After all the operations, how many different sequences of colors of the balls are possible?\nSince the count can be large, find it modulo 10^9+7. Print the number of the different possible sequences of colors of the balls after all the operations, modulo 10^9+7. There are nine possible sequences of colors of the balls, as follows: ww, wr, rw, rr, wb, bw, bb, rb, br. Here, r represents red, b represents blue and wrepresents white. Since we cannot directly paint white balls in blue, we can only choose an empty segment in the first operation. There are N white balls arranged in a row, numbered 1,2,..,N from left to right.\nAtCoDeer the deer is thinking of painting some of these balls red and blue, while leaving some of them white. You are given a string s of length K.\nAtCoDeer performs the following operation for each i from 1 through K in order: The i-th operation: Choose a contiguous segment of balls (possibly empty), and paint these balls red if the i-th character in s is r; paint them blue if the character is b. Here, if a ball which is already painted is again painted, the color of the ball will be overwritten.\nHowever, due to the properties of dyes, it is not possible to paint a white, unpainted ball directly in blue.\nThat is, when the i-th character in s is b, the chosen segment must not contain a white ball. After all the operations, how many different sequences of colors of the balls are possible?\nSince the count can be large, find it modulo 10^9+7.",
        "difficulty": "Medium",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "string",
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03462.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 70\n1 ≤ K ≤ 70\n|s| = K\ns consists of r and b.\nN and K are integers.",
          "ranges": "1 70; 1 70; 70; 70; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 2\nrb",
            "output": "9 There are nine possible sequences of colors of the balls, as follows: ww, wr, rw, rr, wb, bw, bb, rb, br. Here, r represents red, b represents blue and wrepresents white.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03462.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03462"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03470",
        "title": "Problem Statement",
        "description": "Score : 200 points Problem StatementAn X-layered kagami mochi (X ≥ 1) is a pile of X round mochi (rice cake) stacked vertically where each mochi (except the bottom one) has a smaller diameter than that of the mochi directly below it. For example, if you stack three mochi with diameters of 10, 8 and 6 centimeters from bottom to top in this order, you have a 3-layered kagami mochi; if you put just one mochi, you have a 1-layered kagami mochi.\nLunlun the dachshund has N round mochi, and the diameter of the i-th mochi is d_i centimeters. When we make a kagami mochi using some or all of them, at most how many layers can our kagami mochi have? An X-layered kagami mochi (X ≥ 1) is a pile of X round mochi (rice cake) stacked vertically where each mochi (except the bottom one) has a smaller diameter than that of the mochi directly below it. For example, if you stack three mochi with diameters of 10, 8 and 6 centimeters from bottom to top in this order, you have a 3-layered kagami mochi; if you put just one mochi, you have a 1-layered kagami mochi. Lunlun the dachshund has N round mochi, and the diameter of the i-th mochi is d_i centimeters. When we make a kagami mochi using some or all of them, at most how many layers can our kagami mochi have? Print the maximum number of layers in a kagami mochi that can be made. If we stack the mochi with diameters of 10, 8 and 6 centimeters from bottom to top in this order, we have a 3-layered kagami mochi, which is the maximum number of layers. When all the mochi have the same diameter, we can only have a 1-layered kagami mochi. An X-layered kagami mochi (X ≥ 1) is a pile of X round mochi (rice cake) stacked vertically where each mochi (except the bottom one) has a smaller diameter than that of the mochi directly below it. For example, if you stack three mochi with diameters of 10, 8 and 6 centimeters from bottom to top in this order, you have a 3-layered kagami mochi; if you put just one mochi, you have a 1-layered kagami mochi. Lunlun the dachshund has N round mochi, and the diameter of the i-th mochi is d_i centimeters. When we make a kagami mochi using some or all of them, at most how many layers can our kagami mochi have?",
        "difficulty": "Medium",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03470.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 100\n1 ≤ d_i ≤ 100\nAll input values are integers.",
          "ranges": "1 100; 1 100; 100; 100; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n10\n8\n8\n6",
            "output": "3 If we stack the mochi with diameters of 10, 8 and 6 centimeters from bottom to top in this order, we have a 3-layered kagami mochi, which is the maximum number of layers.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03470.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03470"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03471",
        "title": "Problem Statement",
        "description": "Score : 300 points Problem StatementThe commonly used bills in Japan are 10000-yen, 5000-yen and 1000-yen bills. Below, the word \"bill\" refers to only these.\nAccording to Aohashi, he received an otoshidama (New Year money gift) envelope from his grandfather that contained N bills for a total of Y yen, but he may be lying. Determine whether such a situation is possible, and if it is, find a possible set of bills contained in the envelope. Assume that his grandfather is rich enough, and the envelope was large enough. The commonly used bills in Japan are 10000-yen, 5000-yen and 1000-yen bills. Below, the word \"bill\" refers to only these. According to Aohashi, he received an otoshidama (New Year money gift) envelope from his grandfather that contained N bills for a total of Y yen, but he may be lying. Determine whether such a situation is possible, and if it is, find a possible set of bills contained in the envelope. Assume that his grandfather is rich enough, and the envelope was large enough. If the total value of N bills cannot be Y yen, print -1 -1 -1. If the total value of N bills can be Y yen, let one such set of bills be \"x 10000-yen bills, y 5000-yen bills and z 1000-yen bills\", and print x, y, z with spaces in between. If there are multiple possibilities, any of them may be printed. If the envelope contained 4 10000-yen bills and 5 1000-yen bills, he had 9 bills and 45000 yen in total. It is also possible that the envelope contained 9 5000-yen bills, so the output 0 9 0 is also correct. When the envelope contained 20 bills in total, the total value would be 200000 yen if all the bills were 10000-yen bills, and would be at most 195000 yen otherwise, so it would never be 196000 yen. There are also many other possibilities. The commonly used bills in Japan are 10000-yen, 5000-yen and 1000-yen bills. Below, the word \"bill\" refers to only these. According to Aohashi, he received an otoshidama (New Year money gift) envelope from his grandfather that contained N bills for a total of Y yen, but he may be lying. Determine whether such a situation is possible, and if it is, find a possible set of bills contained in the envelope. Assume that his grandfather is rich enough, and the envelope was large enough.",
        "difficulty": "Medium",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03471.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 2000\n1000 ≤ Y ≤ 2 × 10^7\nN is an integer.\nY is a multiple of 1000.",
          "ranges": "1 2000; 1000 2; 2000; 2; 1; 1000"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "9 45000",
            "output": "4 0 5 If the envelope contained 4 10000-yen bills and 5 1000-yen bills, he had 9 bills and 45000 yen in total. It is also possible that the envelope contained 9 5000-yen bills, so the output 0 9 0 is also correct.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03471.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03471"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03472",
        "title": "Problem Statement",
        "description": "Score : 400 points Problem StatementYou are going out for a walk, when you suddenly encounter a monster. Fortunately, you have N katana (swords), Katana 1, Katana 2, …, Katana N, and can perform the following two kinds of attacks in any order:\n\nWield one of the katana you have. When you wield Katana i (1 ≤ i ≤ N), the monster receives a_i points of damage. The same katana can be wielded any number of times.\nThrow one of the katana you have. When you throw Katana i (1 ≤ i ≤ N) at the monster, it receives b_i points of damage, and you lose the katana. That is, you can no longer wield or throw that katana.\n\nThe monster will vanish when the total damage it has received is H points or more. At least how many attacks do you need in order to vanish it in total? You are going out for a walk, when you suddenly encounter a monster. Fortunately, you have N katana (swords), Katana 1, Katana 2, …, Katana N, and can perform the following two kinds of attacks in any order: The monster will vanish when the total damage it has received is H points or more. At least how many attacks do you need in order to vanish it in total? Print the minimum total number of attacks required to vanish the monster. You have one katana. Wielding it deals 3 points of damage, and throwing it deals 5 points of damage. By wielding it twice and then throwing it, you will deal 3 + 3 + 5 = 11 points of damage in a total of three attacks, vanishing the monster. In addition to the katana above, you also have another katana. Wielding it deals 2 points of damage, and throwing it deals 6 points of damage. By throwing both katana, you will deal 5 + 6 = 11 points of damage in two attacks, vanishing the monster. You are going out for a walk, when you suddenly encounter a monster. Fortunately, you have N katana (swords), Katana 1, Katana 2, …, Katana N, and can perform the following two kinds of attacks in any order: Wield one of the katana you have. When you wield Katana i (1 ≤ i ≤ N), the monster receives a_i points of damage. The same katana can be wielded any number of times.\nThrow one of the katana you have. When you throw Katana i (1 ≤ i ≤ N) at the monster, it receives b_i points of damage, and you lose the katana. That is, you can no longer wield or throw that katana. The monster will vanish when the total damage it has received is H points or more. At least how many attacks do you need in order to vanish it in total?",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03472.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10^5\n1 ≤ H ≤ 10^9\n1 ≤ a_i ≤ b_i ≤ 10^9\nAll input values are integers.",
          "ranges": "1 10; 1 10; 10; 10; 10; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1 10\n3 5",
            "output": "3 You have one katana. Wielding it deals 3 points of damage, and throwing it deals 5 points of damage. By wielding it twice and then throwing it, you will deal 3 + 3 + 5 = 11 points of damage in a total of three attacks, vanishing the monster.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03472.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03472"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03473",
        "title": "Problem Statement",
        "description": "Score : 100 points Problem StatementHow many hours do we have until New Year at M o'clock (24-hour notation) on 30th, December? How many hours do we have until New Year at M o'clock (24-hour notation) on 30th, December? If we have x hours until New Year at M o'clock on 30th, December, print x. We have 27 hours until New Year at 21 o'clock on 30th, December. How many hours do we have until New Year at M o'clock (24-hour notation) on 30th, December?",
        "difficulty": "Medium",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03473.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤M≤23\nM is an integer.",
          "ranges": "1 23; 23; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "21",
            "output": "27 We have 27 hours until New Year at 21 o'clock on 30th, December.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03473.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03473"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03474",
        "title": "You are given a string S. Determine whether it follows the postal code format in Atcoder Kingdom.",
        "description": "Score : 200 points Problem StatementThe postal code in Atcoder Kingdom is A+B+1 characters long, its (A+1)-th character is a hyphen -, and the other characters are digits from 0 through 9.\nYou are given a string S. Determine whether it follows the postal code format in Atcoder Kingdom. The postal code in Atcoder Kingdom is A+B+1 characters long, its (A+1)-th character is a hyphen -, and the other characters are digits from 0 through 9. You are given a string S. Determine whether it follows the postal code format in Atcoder Kingdom. Print Yes if S follows the postal code format in AtCoder Kingdom; print No otherwise. The (A+1)-th character of S is -, and the other characters are digits from 0 through 9, so it follows the format. S contains unnecessary -s other than the (A+1)-th character, so it does not follow the format. The postal code in Atcoder Kingdom is A+B+1 characters long, its (A+1)-th character is a hyphen -, and the other characters are digits from 0 through 9. You are given a string S. Determine whether it follows the postal code format in Atcoder Kingdom.",
        "difficulty": "Medium",
        "category": "Arrays & Strings",
        "tags": [
          "string"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03474.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤A,B≤5\n|S|=A+B+1\nS consists of - and digits from 0 through 9.",
          "ranges": "5; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 4\n269-6650",
            "output": "Yes The (A+1)-th character of S is -, and the other characters are digits from 0 through 9, so it follows the format.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03474.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03474"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03475",
        "title": "There are N stations on the railroad, numbered 1 through N from west to east.",
        "description": "Score : 300 points Problem StatementA railroad running from west to east in Atcoder Kingdom is now complete.\nThere are N stations on the railroad, numbered 1 through N from west to east.\nTomorrow, the opening ceremony of the railroad will take place.\nOn this railroad, for each integer i such that 1≤i≤N-1, there will be trains that run from Station i to Station i+1 in C_i seconds. No other trains will be operated.\nThe first train from Station i to Station i+1 will depart Station i S_i seconds after the ceremony begins. Thereafter, there will be a train that departs Station i every F_i seconds.\nHere, it is guaranteed that F_i divides S_i.\nThat is, for each Time t satisfying S_i≤t and t％F_i=0, there will be a train that departs Station i t seconds after the ceremony begins and arrives at Station i+1 t+C_i seconds after the ceremony begins, where A％B denotes A modulo B, and there will be no other trains.\nFor each i, find the earliest possible time we can reach Station N if we are at Station i when the ceremony begins, ignoring the time needed to change trains. A railroad running from west to east in Atcoder Kingdom is now complete. There are N stations on the railroad, numbered 1 through N from west to east. Tomorrow, the opening ceremony of the railroad will take place. On this railroad, for each integer i such that 1≤i≤N-1, there will be trains that run from Station i to Station i+1 in C_i seconds. No other trains will be operated. The first train from Station i to Station i+1 will depart Station i S_i seconds after the ceremony begins. Thereafter, there will be a train that departs Station i every F_i seconds. Here, it is guaranteed that F_i divides S_i. That is, for each Time t satisfying S_i≤t and t％F_i=0, there will be a train that departs Station i t seconds after the ceremony begins and arrives at Station i+1 t+C_i seconds after the ceremony begins, where A％B denotes A modulo B, and there will be no other trains. For each i, find the earliest possible time we can reach Station N if we are at Station i when the ceremony begins, ignoring the time needed to change trains. Print N lines. Assuming that we are at Station i (1≤i≤N) when the ceremony begins, if the earliest possible time we can reach Station N is x seconds after the ceremony begins, the i-th line should contain x. We will travel from Station 1 as follows: We will travel from Station 2 as follows: Note that we should print 0 for Station 3. A railroad running from west to east in Atcoder Kingdom is now complete. There are N stations on the railroad, numbered 1 through N from west to east. Tomorrow, the opening ceremony of the railroad will take place. On this railroad, for each integer i such that 1≤i≤N-1, there will be trains that run from Station i to Station i+1 in C_i seconds. No other trains will be operated. The first train from Station i to Station i+1 will depart Station i S_i seconds after the ceremony begins. Thereafter, there will be a train that departs Station i every F_i seconds. Here, it is guaranteed that F_i divides S_i. That is, for each Time t satisfying S_i≤t and t％F_i=0, there will be a train that departs Station i t seconds after the ceremony begins and arrives at Station i+1 t+C_i seconds after the ceremony begins, where A％B denotes A modulo B, and there will be no other trains. For each i, find the earliest possible time we can reach Station N if we are at Station i when the ceremony begins, ignoring the time needed to change trains.",
        "difficulty": "Medium",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03475.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤N≤500\n1≤C_i≤100\n1≤S_i≤10^5\n1≤F_i≤10\nS_i％F_i=0\nAll input values are integers.",
          "ranges": "1 500; 1 100; 1 10; 1 10; 500; 100; 10; 10; 0; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n6 5 1\n1 10 1",
            "output": "12\n11\n0 We will travel from Station 1 as follows: 5 seconds after the beginning: take the train to Station 2.\n11 seconds: arrive at Station 2.\n11 seconds: take the train to Station 3.\n12 seconds: arrive at Station 3. We will travel from Station 2 as follows: 10 seconds: take the train to Station 3.\n11 seconds: arrive at Station 3. Note that we should print 0 for Station 3.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03475.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03475"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03476",
        "title": "You are given Q queries.",
        "description": "Score : 400 points Problem StatementWe say that a odd number N is similar to 2017 when both N and (N+1)/2 are prime.\nYou are given Q queries.\nIn the i-th query, given two odd numbers l_i and r_i, find the number of odd numbers x similar to 2017 such that l_i ≤ x ≤ r_i. We say that a odd number N is similar to 2017 when both N and (N+1)/2 are prime. You are given Q queries. In the i-th query, given two odd numbers l_i and r_i, find the number of odd numbers x similar to 2017 such that l_i ≤ x ≤ r_i. Print Q lines. The i-th line (1≤i≤Q) should contain the response to the i-th query. Thus, the response to the first query should be 2. Note that 2017 is also similar to 2017. We say that a odd number N is similar to 2017 when both N and (N+1)/2 are prime. You are given Q queries. In the i-th query, given two odd numbers l_i and r_i, find the number of odd numbers x similar to 2017 such that l_i ≤ x ≤ r_i.",
        "difficulty": "Medium",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03476.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤Q≤10^5\n1≤l_i≤r_i≤10^5\nl_i and r_i are odd.\nAll input values are integers.",
          "ranges": "1 10; 10; 10; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1\n3 7",
            "output": "2 3 is similar to 2017, since both 3 and (3+1)/2=2 are prime.\n5 is similar to 2017, since both 5 and (5+1)/2=3 are prime.\n7 is not similar to 2017, since (7+1)/2=4 is not prime, although 7 is prime. Thus, the response to the first query should be 2.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03476.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03476"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03499",
        "title": "The vertices are numbered 0 through N, and Vertex 0 is the root of the tree.",
        "description": "Score : 1000 points Problem StatementSnuke has a rooted tree with N+1 vertices.\nThe vertices are numbered 0 through N, and Vertex 0 is the root of the tree.\nThe parent of Vertex i (1 \\leq i \\leq N) is Vertex p_i.\nBesides this tree, Snuke also has an box which is initially empty and many marbles, and playing with them.\nThe play begins with placing one marble on some of the vertices, then proceeds as follows:\n\nIf there is a marble on Vertex 0, move the marble into the box.\nMove each marble from the vertex to its parent (all at once).\nFor each vertex occupied by two or more marbles, remove all the marbles from the vertex.\nIf there exists a vertex with some marbles, go to Step 1. Otherwise, end the play.\n\nThere are 2^{N+1} ways to place marbles on some of the vertices.\nFor each of them, find the number of marbles that will be in the box at the end of the play, and compute the sum of all those numbers modulo 1,000,000,007. Snuke has a rooted tree with N+1 vertices.\nThe vertices are numbered 0 through N, and Vertex 0 is the root of the tree.\nThe parent of Vertex i (1 \\leq i \\leq N) is Vertex p_i. Besides this tree, Snuke also has an box which is initially empty and many marbles, and playing with them.\nThe play begins with placing one marble on some of the vertices, then proceeds as follows: There are 2^{N+1} ways to place marbles on some of the vertices.\nFor each of them, find the number of marbles that will be in the box at the end of the play, and compute the sum of all those numbers modulo 1,000,000,007. Partial Scores\nIn the test set worth 400 points, N < 2{,}000. Print the answer. When we place a marble on both Vertex 1 and 2, there will be multiple marbles on Vertex 0 by step 2. In such a case, these marbles will be removed instead of being moved to the box. Be sure to compute the sum modulo 1,000,000,007. Snuke has a rooted tree with N+1 vertices.\nThe vertices are numbered 0 through N, and Vertex 0 is the root of the tree.\nThe parent of Vertex i (1 \\leq i \\leq N) is Vertex p_i. Besides this tree, Snuke also has an box which is initially empty and many marbles, and playing with them.\nThe play begins with placing one marble on some of the vertices, then proceeds as follows: If there is a marble on Vertex 0, move the marble into the box.\nMove each marble from the vertex to its parent (all at once).\nFor each vertex occupied by two or more marbles, remove all the marbles from the vertex.\nIf there exists a vertex with some marbles, go to Step 1. Otherwise, end the play. There are 2^{N+1} ways to place marbles on some of the vertices.\nFor each of them, find the number of marbles that will be in the box at the end of the play, and compute the sum of all those numbers modulo 1,000,000,007.",
        "difficulty": "Medium",
        "category": "Simulation",
        "tags": [
          "math",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03499.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N < 2 \\times 10^{5}\n0 \\leq p_i < i",
          "ranges": "2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\n0 0",
            "output": "8 When we place a marble on both Vertex 1 and 2, there will be multiple marbles on Vertex 0 by step 2. In such a case, these marbles will be removed instead of being moved to the box.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03499.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03499"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03501",
        "title": "Plan 1: The fee will be A×T yen (the currency of Japan) when you park for T hours.",
        "description": "Score : 100 points Problem StatementYou are parking at a parking lot. You can choose from the following two fee plans:\n\nPlan 1: The fee will be A×T yen (the currency of Japan) when you park for T hours.\nPlan 2: The fee will be B yen, regardless of the duration.\n\nFind the minimum fee when you park for N hours. You are parking at a parking lot. You can choose from the following two fee plans: Find the minimum fee when you park for N hours. When the minimum fee is x yen, print the value of x. Thus, the minimum fee is 119 yen. The fee might be the same in the two plans. You are parking at a parking lot. You can choose from the following two fee plans: Plan 1: The fee will be A×T yen (the currency of Japan) when you park for T hours.\nPlan 2: The fee will be B yen, regardless of the duration. Find the minimum fee when you park for N hours.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03501.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤N≤20\n1≤A≤100\n1≤B≤2000\nAll input values are integers.",
          "ranges": "1 20; 1 100; 1 2000; 20; 100; 2000; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "7 17 120",
            "output": "119 If you choose Plan 1, the fee will be 7×17=119 yen.\nIf you choose Plan 2, the fee will be 120 yen. Thus, the minimum fee is 119 yen.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03501.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03501"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03503",
        "title": "There are already N stores in the street, numbered 1 through N.",
        "description": "Score : 300 points Problem StatementJoisino is planning to open a shop in a shopping street.\nEach of the five weekdays is divided into two periods, the morning and the evening. For each of those ten periods, a shop must be either open during the whole period, or closed during the whole period. Naturally, a shop must be open during at least one of those periods.\nThere are already N stores in the street, numbered 1 through N.\nYou are given information of the business hours of those shops, F_{i,j,k}. If F_{i,j,k}=1, Shop i is open during Period k on Day j (this notation is explained below); if F_{i,j,k}=0, Shop i is closed during that period. Here, the days of the week are denoted as follows. Monday: Day 1, Tuesday: Day 2, Wednesday: Day 3, Thursday: Day 4, Friday: Day 5. Also, the morning is denoted as Period 1, and the afternoon is denoted as Period 2.\nLet c_i be the number of periods during which both Shop i and Joisino's shop are open. Then, the profit of Joisino's shop will be P_{1,c_1}+P_{2,c_2}+...+P_{N,c_N}.\nFind the maximum possible profit of Joisino's shop when she decides whether her shop is open during each period, making sure that it is open during at least one period. Joisino is planning to open a shop in a shopping street. Each of the five weekdays is divided into two periods, the morning and the evening. For each of those ten periods, a shop must be either open during the whole period, or closed during the whole period. Naturally, a shop must be open during at least one of those periods. There are already N stores in the street, numbered 1 through N. You are given information of the business hours of those shops, F_{i,j,k}. If F_{i,j,k}=1, Shop i is open during Period k on Day j (this notation is explained below); if F_{i,j,k}=0, Shop i is closed during that period. Here, the days of the week are denoted as follows. Monday: Day 1, Tuesday: Day 2, Wednesday: Day 3, Thursday: Day 4, Friday: Day 5. Also, the morning is denoted as Period 1, and the afternoon is denoted as Period 2. Let c_i be the number of periods during which both Shop i and Joisino's shop are open. Then, the profit of Joisino's shop will be P_{1,c_1}+P_{2,c_2}+...+P_{N,c_N}. Find the maximum possible profit of Joisino's shop when she decides whether her shop is open during each period, making sure that it is open during at least one period. Print the maximum possible profit of Joisino's shop. If her shop is open only during the periods when Shop 1 is opened, the profit will be 8, which is the maximum possible profit. Note that a shop must be open during at least one period, and the profit may be negative. Joisino is planning to open a shop in a shopping street. Each of the five weekdays is divided into two periods, the morning and the evening. For each of those ten periods, a shop must be either open during the whole period, or closed during the whole period. Naturally, a shop must be open during at least one of those periods. There are already N stores in the street, numbered 1 through N. You are given information of the business hours of those shops, F_{i,j,k}. If F_{i,j,k}=1, Shop i is open during Period k on Day j (this notation is explained below); if F_{i,j,k}=0, Shop i is closed during that period. Here, the days of the week are denoted as follows. Monday: Day 1, Tuesday: Day 2, Wednesday: Day 3, Thursday: Day 4, Friday: Day 5. Also, the morning is denoted as Period 1, and the afternoon is denoted as Period 2. Let c_i be the number of periods during which both Shop i and Joisino's shop are open. Then, the profit of Joisino's shop will be P_{1,c_1}+P_{2,c_2}+...+P_{N,c_N}. Find the maximum possible profit of Joisino's shop when she decides whether her shop is open during each period, making sure that it is open during at least one period.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03503.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤N≤100\n0≤F_{i,j,k}≤1\nFor every integer i such that 1≤i≤N, there exists at least one pair (j,k) such that F_{i,j,k}=1.\n-10^7≤P_{i,j}≤10^7\nAll input values are integers.",
          "ranges": "1 100; 100; 1; 0; 1; 7"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2",
            "output": "8 If her shop is open only during the periods when Shop 1 is opened, the profit will be 8, which is the maximum possible profit.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03503.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03503"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03504",
        "title": "The TV can receive C channels numbered 1 through C.",
        "description": "Score : 400 points Problem StatementJoisino is planning to record N TV programs with recorders.\nThe TV can receive C channels numbered 1 through C.\nThe i-th program that she wants to record will be broadcast from time s_i to time t_i (including time s_i but not t_i) on Channel c_i.\nHere, there will never be more than one program that are broadcast on the same channel at the same time.\nWhen the recorder is recording a channel from time S to time T (including time S but not T), it cannot record other channels from time S-0.5 to time T (including time S-0.5 but not T).\nFind the minimum number of recorders required to record the channels so that all the N programs are completely recorded. Joisino is planning to record N TV programs with recorders. The TV can receive C channels numbered 1 through C. The i-th program that she wants to record will be broadcast from time s_i to time t_i (including time s_i but not t_i) on Channel c_i. Here, there will never be more than one program that are broadcast on the same channel at the same time. When the recorder is recording a channel from time S to time T (including time S but not T), it cannot record other channels from time S-0.5 to time T (including time S-0.5 but not T). Find the minimum number of recorders required to record the channels so that all the N programs are completely recorded. When the minimum required number of recorders is x, print the value of x. Two recorders can record all the programs, for example, as follows: There may be a channel where there is no program to record. Joisino is planning to record N TV programs with recorders. The TV can receive C channels numbered 1 through C. The i-th program that she wants to record will be broadcast from time s_i to time t_i (including time s_i but not t_i) on Channel c_i. Here, there will never be more than one program that are broadcast on the same channel at the same time. When the recorder is recording a channel from time S to time T (including time S but not T), it cannot record other channels from time S-0.5 to time T (including time S-0.5 but not T). Find the minimum number of recorders required to record the channels so that all the N programs are completely recorded.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03504.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤N≤10^5\n1≤C≤30\n1≤s_i<t_i≤10^5\n1≤c_i≤C\nIf c_i=c_j and i≠j, either t_i≤s_j or s_i≥t_j.\nAll input values are integers.",
          "ranges": "1 10; 1 30; 10; 30; 10; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 2\n1 7 2\n7 8 1\n8 12 1",
            "output": "2 Two recorders can record all the programs, for example, as follows: With the first recorder, record Channel 2 from time 1 to time 7. The first program will be recorded. Note that this recorder will be unable to record other channels from time 0.5 to time 7.\nWith the second recorder, record Channel 1 from time 7 to time 12. The second and third programs will be recorded. Note that this recorder will be unable to record other channels from time 6.5 to time 12.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03504.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03504"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03505",
        "title": "Problem Statement",
        "description": "Score : 100 points Problem StatementButCoder Inc. runs a programming competition site called ButCoder. In this site, a user is given an integer value called rating that represents his/her skill, which changes each time he/she participates in a contest. The initial value of a new user's rating is 0, and a user whose rating reaches K or higher is called Kaiden (\"total transmission\"). Note that a user's rating may become negative.\nHikuhashi is a new user in ButCoder. It is estimated that, his rating increases by A in each of his odd-numbered contests (first, third, fifth, ...), and decreases by B in each of his even-numbered contests (second, fourth, sixth, ...).\nAccording to this estimate, after how many contests will he become Kaiden for the first time, or will he never become Kaiden? ButCoder Inc. runs a programming competition site called ButCoder. In this site, a user is given an integer value called rating that represents his/her skill, which changes each time he/she participates in a contest. The initial value of a new user's rating is 0, and a user whose rating reaches K or higher is called Kaiden (\"total transmission\"). Note that a user's rating may become negative. Hikuhashi is a new user in ButCoder. It is estimated that, his rating increases by A in each of his odd-numbered contests (first, third, fifth, ...), and decreases by B in each of his even-numbered contests (second, fourth, sixth, ...). According to this estimate, after how many contests will he become Kaiden for the first time, or will he never become Kaiden? If it is estimated that Hikuhashi will never become Kaiden, print -1. Otherwise, print the estimated number of contests before he become Kaiden for the first time. Each time Hikuhashi participates in a contest, his rating is estimated to change as 0 → 2000 → 1500 → 3500 → 3000 → 5000 → … After his fifth contest, his rating will reach 4000 or higher for the first time. Each time Hikuhashi participates in a contest, his rating is estimated to change as 0 → 500 → -1500 → -1000 → -3000 → -2500 → … He will never become Kaiden. The input and output values may not fit into 32-bit integers. ButCoder Inc. runs a programming competition site called ButCoder. In this site, a user is given an integer value called rating that represents his/her skill, which changes each time he/she participates in a contest. The initial value of a new user's rating is 0, and a user whose rating reaches K or higher is called Kaiden (\"total transmission\"). Note that a user's rating may become negative. Hikuhashi is a new user in ButCoder. It is estimated that, his rating increases by A in each of his odd-numbered contests (first, third, fifth, ...), and decreases by B in each of his even-numbered contests (second, fourth, sixth, ...). According to this estimate, after how many contests will he become Kaiden for the first time, or will he never become Kaiden?",
        "difficulty": "Hard",
        "category": "Implementation",
        "tags": [
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03505.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ K, A, B ≤ 10^{18}\nAll input values are integers.",
          "ranges": "10; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4000 2000 500",
            "output": "5 Each time Hikuhashi participates in a contest, his rating is estimated to change as 0 → 2000 → 1500 → 3500 → 3000 → 5000 → … After his fifth contest, his rating will reach 4000 or higher for the first time.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03505.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03505"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03506",
        "title": "Figure: an infinite N-ary tree for the case N = 3",
        "description": "Score : 100 points Problem StatementYou are given an integer N. Consider an infinite N-ary tree as shown below:\n\n\nFigure: an infinite N-ary tree for the case N = 3\n\nAs shown in the figure, each vertex is indexed with a unique positive integer, and for every positive integer there is a vertex indexed with it. The root of the tree has the index 1. For the remaining vertices, vertices in the upper row have smaller indices than those in the lower row. Among the vertices in the same row, a vertex that is more to the left has a smaller index.\nRegarding this tree, process Q queries. The i-th query is as follows:\n\nFind the index of the lowest common ancestor (see Notes) of Vertex v_i and w_i. You are given an integer N. Consider an infinite N-ary tree as shown below: Figure: an infinite N-ary tree for the case N = 3 Figure: an infinite N-ary tree for the case N = 3 As shown in the figure, each vertex is indexed with a unique positive integer, and for every positive integer there is a vertex indexed with it. The root of the tree has the index 1. For the remaining vertices, vertices in the upper row have smaller indices than those in the lower row. Among the vertices in the same row, a vertex that is more to the left has a smaller index. Regarding this tree, process Q queries. The i-th query is as follows: Notes\nIn a rooted tree, the lowest common ancestor (LCA) of Vertex v and w is the farthest vertex from the root that is an ancestor of both Vertex v and w. Here, a vertex is considered to be an ancestor of itself. For example, in the tree shown in Problem Statement, the LCA of Vertex 5 and 7 is Vertex 2, the LCA of Vertex 8 and 11 is Vertex 1, and the LCA of Vertex 3 and 9 is Vertex 3. Print Q lines. The i-th line (1 ≤ i ≤ Q) must contain the index of the lowest common ancestor of Vertex v_i and w_i. The queries in this case correspond to the examples shown in Notes. You are given an integer N. Consider an infinite N-ary tree as shown below: Figure: an infinite N-ary tree for the case N = 3 As shown in the figure, each vertex is indexed with a unique positive integer, and for every positive integer there is a vertex indexed with it. The root of the tree has the index 1. For the remaining vertices, vertices in the upper row have smaller indices than those in the lower row. Among the vertices in the same row, a vertex that is more to the left has a smaller index. Regarding this tree, process Q queries. The i-th query is as follows: Find the index of the lowest common ancestor (see Notes) of Vertex v_i and w_i.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "graph",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03506.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10^9\n1 ≤ Q ≤ 10^5\n1 ≤ v_i < w_i ≤ 10^9",
          "ranges": "1 10; 1 10; 10; 10; 10; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 3\n5 7\n8 11\n3 9",
            "output": "2\n1\n3 The queries in this case correspond to the examples shown in Notes.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03506.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03506"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03507",
        "title": "Problem Statement",
        "description": "Score : 100 points Problem StatementIn your garden, there is a long and narrow flowerbed that stretches infinitely to the east. You have decided to plant N kinds of flowers in this empty flowerbed. For convenience, we will call these N kinds of flowers Flower 1, 2, …, N. Also, we will call the position that is p centimeters from the west end of the flowerbed Position p.\nYou will plant Flower i (1 ≤ i ≤ N) as follows: first, plant one at Position w_i, then plant one every d_i centimeters endlessly toward the east. That is, Flower i will be planted at the positions w_i, w_i + d_i, w_i + 2 d_i, … Note that more than one flower may be planted at the same position.\nFind the position at which the K-th flower from the west is planted. If more than one flower is planted at the same position, they are counted individually. In your garden, there is a long and narrow flowerbed that stretches infinitely to the east. You have decided to plant N kinds of flowers in this empty flowerbed. For convenience, we will call these N kinds of flowers Flower 1, 2, …, N. Also, we will call the position that is p centimeters from the west end of the flowerbed Position p. You will plant Flower i (1 ≤ i ≤ N) as follows: first, plant one at Position w_i, then plant one every d_i centimeters endlessly toward the east. That is, Flower i will be planted at the positions w_i, w_i + d_i, w_i + 2 d_i, … Note that more than one flower may be planted at the same position. Find the position at which the K-th flower from the west is planted. If more than one flower is planted at the same position, they are counted individually. When the K-th flower from the west is planted at Position X, print the value of X. (The westmost flower is counted as the 1-st flower.) Two kinds of flowers are planted at the following positions: The sixth flower from the west is the Flower 1 planted at Position 50. Note that the two flowers planted at Position 40 are counted individually. Three flowers are planted at each of the positions 10, 20, 30, … Thus, the ninth flower from the west is planted at Position 30. In your garden, there is a long and narrow flowerbed that stretches infinitely to the east. You have decided to plant N kinds of flowers in this empty flowerbed. For convenience, we will call these N kinds of flowers Flower 1, 2, …, N. Also, we will call the position that is p centimeters from the west end of the flowerbed Position p. You will plant Flower i (1 ≤ i ≤ N) as follows: first, plant one at Position w_i, then plant one every d_i centimeters endlessly toward the east. That is, Flower i will be planted at the positions w_i, w_i + d_i, w_i + 2 d_i, … Note that more than one flower may be planted at the same position. Find the position at which the K-th flower from the west is planted. If more than one flower is planted at the same position, they are counted individually.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03507.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10^5\n1 ≤ K ≤ 10^9\n1 ≤ w_i ≤ 10^{18}\n1 ≤ d_i ≤ 10^9\nAll input values are integers.",
          "ranges": "1 10; 1 10; 1 10; 1 10; 10; 10; 10; 10; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 6\n20 10\n25 15",
            "output": "50 Two kinds of flowers are planted at the following positions: Flower 1: Position 20, 30, 40, 50, 60, …\nFlower 2: Position 25, 40, 55, 70, 85, … The sixth flower from the west is the Flower 1 planted at Position 50. Note that the two flowers planted at Position 40 are counted individually.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03507.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03507"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03508",
        "title": "Problem Statement",
        "description": "Score : 100 points Problem StatementYou are given an undirected graph G. G has N vertices and M edges. The vertices are numbered from 1 through N, and the i-th edge (1 ≤ i ≤ M) connects Vertex a_i and b_i. G does not have self-loops and multiple edges.\nYou can repeatedly perform the operation of adding an edge between two vertices. However, G must not have self-loops or multiple edges as the result. Also, if Vertex 1 and 2 are connected directly or indirectly by edges, your body will be exposed to a voltage of 1000000007 volts. This must also be avoided.\nUnder these conditions, at most how many edges can you add? Note that Vertex 1 and 2 are never connected directly or indirectly in the beginning. You are given an undirected graph G. G has N vertices and M edges. The vertices are numbered from 1 through N, and the i-th edge (1 ≤ i ≤ M) connects Vertex a_i and b_i. G does not have self-loops and multiple edges. You can repeatedly perform the operation of adding an edge between two vertices. However, G must not have self-loops or multiple edges as the result. Also, if Vertex 1 and 2 are connected directly or indirectly by edges, your body will be exposed to a voltage of 1000000007 volts. This must also be avoided. Under these conditions, at most how many edges can you add? Note that Vertex 1 and 2 are never connected directly or indirectly in the beginning. Print the maximum number of edges that can be added. As shown above, two edges can be added. It is not possible to add three or more edges. No edge can be added. You are given an undirected graph G. G has N vertices and M edges. The vertices are numbered from 1 through N, and the i-th edge (1 ≤ i ≤ M) connects Vertex a_i and b_i. G does not have self-loops and multiple edges. You can repeatedly perform the operation of adding an edge between two vertices. However, G must not have self-loops or multiple edges as the result. Also, if Vertex 1 and 2 are connected directly or indirectly by edges, your body will be exposed to a voltage of 1000000007 volts. This must also be avoided. Under these conditions, at most how many edges can you add? Note that Vertex 1 and 2 are never connected directly or indirectly in the beginning.",
        "difficulty": "Hard",
        "category": "Trees & Graphs",
        "tags": [
          "math",
          "sorting",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03508.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 10^5\n0 ≤ M ≤ 10^5\n1 ≤ a_i < b_i ≤ N\nAll pairs (a_i, b_i) are distinct.\nVertex 1 and 2 in G are not connected directly or indirectly by edges.",
          "ranges": "2 10; 0 10; 10; 10; 2; 0; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 1\n1 3",
            "output": "2 As shown above, two edges can be added. It is not possible to add three or more edges.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03508.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03508"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03509",
        "title": "In order for the bill to pass, at least how many members must be in favor of it?",
        "description": "Score : 100 points Problem StatementRingo Kingdom Congress is voting on a bill.\nN members are present, and the i-th member (1 ≤ i ≤ N) has w_i white ballots and b_i blue ballots. Each member i will put all the w_i white ballots into the box if he/she is in favor of the bill, and put all the b_i blue ballots into the box if he/she is not in favor of the bill. No other action is allowed. For example, a member must not forfeit voting, or put only a part of his/her white ballots or a part of his/her blue ballots into the box.\nAfter all the members vote, if at least P percent of the ballots in the box is white, the bill is passed; if less than P percent of the ballots is white, the bill is rejected.\nIn order for the bill to pass, at least how many members must be in favor of it? Ringo Kingdom Congress is voting on a bill. N members are present, and the i-th member (1 ≤ i ≤ N) has w_i white ballots and b_i blue ballots. Each member i will put all the w_i white ballots into the box if he/she is in favor of the bill, and put all the b_i blue ballots into the box if he/she is not in favor of the bill. No other action is allowed. For example, a member must not forfeit voting, or put only a part of his/her white ballots or a part of his/her blue ballots into the box. After all the members vote, if at least P percent of the ballots in the box is white, the bill is passed; if less than P percent of the ballots is white, the bill is rejected. In order for the bill to pass, at least how many members must be in favor of it? Print the minimum number of members in favor of the bill required for passage. This is a \"normal\" vote, where each of the four members has one white ballot and one blue ballot. For the bill to pass, at least 75 percent of the four, that is, at least three must be in favor of it. The \"yes\" vote of the member with 100 white ballots alone is enough to pass the bill. Ringo Kingdom Congress is voting on a bill. N members are present, and the i-th member (1 ≤ i ≤ N) has w_i white ballots and b_i blue ballots. Each member i will put all the w_i white ballots into the box if he/she is in favor of the bill, and put all the b_i blue ballots into the box if he/she is not in favor of the bill. No other action is allowed. For example, a member must not forfeit voting, or put only a part of his/her white ballots or a part of his/her blue ballots into the box. After all the members vote, if at least P percent of the ballots in the box is white, the bill is passed; if less than P percent of the ballots is white, the bill is rejected. In order for the bill to pass, at least how many members must be in favor of it?",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03509.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10^5\n1 ≤ P ≤ 100\n1 ≤ w_i ≤ 10^9\n1 ≤ b_i ≤ 10^9\nAll input values are integers.",
          "ranges": "1 10; 1 100; 1 10; 1 10; 10; 100; 10; 10; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 75\n1 1\n1 1\n1 1\n1 1",
            "output": "3 This is a \"normal\" vote, where each of the four members has one white ballot and one blue ballot. For the bill to pass, at least 75 percent of the four, that is, at least three must be in favor of it.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03509.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03509"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03510",
        "title": "What is the maximum profit that can be earned by throwing a net only once?",
        "description": "Score : 100 points Problem StatementIn a long narrow forest stretching east-west, there are N beasts. Below, we will call the point that is p meters from the west end Point p. The i-th beast from the west (1 ≤ i ≤ N) is at Point x_i, and can be sold for s_i yen (the currency of Japan) if captured.\nYou will choose two integers L and R (L ≤ R), and throw a net to cover the range from Point L to Point R including both ends, [L, R]. Then, all the beasts in the range will be captured. However, the net costs R - L yen and your profit will be (the sum of s_i over all captured beasts i) - (R - L) yen.\nWhat is the maximum profit that can be earned by throwing a net only once? In a long narrow forest stretching east-west, there are N beasts. Below, we will call the point that is p meters from the west end Point p. The i-th beast from the west (1 ≤ i ≤ N) is at Point x_i, and can be sold for s_i yen (the currency of Japan) if captured. You will choose two integers L and R (L ≤ R), and throw a net to cover the range from Point L to Point R including both ends, [L, R]. Then, all the beasts in the range will be captured. However, the net costs R - L yen and your profit will be (the sum of s_i over all captured beasts i) - (R - L) yen. What is the maximum profit that can be earned by throwing a net only once? When the maximum profit is X yen, print the value of X. If you throw a net covering the range [L = 40, R = 70], the second, third and fourth beasts from the west will be captured, generating the profit of s_2 + s_3 + s_4 - (R - L) = 90 yen. It is not possible to earn 91 yen or more. In a long narrow forest stretching east-west, there are N beasts. Below, we will call the point that is p meters from the west end Point p. The i-th beast from the west (1 ≤ i ≤ N) is at Point x_i, and can be sold for s_i yen (the currency of Japan) if captured. You will choose two integers L and R (L ≤ R), and throw a net to cover the range from Point L to Point R including both ends, [L, R]. Then, all the beasts in the range will be captured. However, the net costs R - L yen and your profit will be (the sum of s_i over all captured beasts i) - (R - L) yen. What is the maximum profit that can be earned by throwing a net only once?",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03510.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 2 × 10^5\n1 ≤ x_1 < x_2 < ... < x_N ≤ 10^{15}\n1 ≤ s_i ≤ 10^9\nAll input values are integers.",
          "ranges": "1 2; 1 10; 2; 10; 10; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n10 20\n40 50\n60 30\n70 40\n90 10",
            "output": "90 If you throw a net covering the range [L = 40, R = 70], the second, third and fourth beasts from the west will be captured, generating the profit of s_2 + s_3 + s_4 - (R - L) = 90 yen. It is not possible to earn 91 yen or more.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03510.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03510"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03511",
        "title": "Problem Statement",
        "description": "Score : 100 points Problem StatementYou are given two strings s and t consisting of lowercase English letters and an integer L.\nWe will consider generating a string of length L by concatenating one or more copies of s and t. Here, it is allowed to use the same string more than once.\nFor example, when s = at, t = code and L = 6, the strings atatat, atcode and codeat can be generated.\nAmong the strings that can be generated in this way, find the lexicographically smallest one. In the cases given as input, it is always possible to generate a string of length L. You are given two strings s and t consisting of lowercase English letters and an integer L. We will consider generating a string of length L by concatenating one or more copies of s and t. Here, it is allowed to use the same string more than once. For example, when s = at, t = code and L = 6, the strings atatat, atcode and codeat can be generated. Among the strings that can be generated in this way, find the lexicographically smallest one. In the cases given as input, it is always possible to generate a string of length L. Print the lexicographically smallest string among the ones that can be generated in the way described in Problem Statement. This input corresponds to the example shown in Problem Statement. It is possible that either s or t cannot be used at all in generating a string of length L. It is also possible that s = t. You are given two strings s and t consisting of lowercase English letters and an integer L. We will consider generating a string of length L by concatenating one or more copies of s and t. Here, it is allowed to use the same string more than once. For example, when s = at, t = code and L = 6, the strings atatat, atcode and codeat can be generated. Among the strings that can be generated in this way, find the lexicographically smallest one. In the cases given as input, it is always possible to generate a string of length L.",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "string",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03511.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ L ≤ 2 × 10^5\n1 ≤ |s|, |t| ≤ L\ns and t consist of lowercase English letters.\nIt is possible to generate a string of length L in the way described in Problem Statement.",
          "ranges": "1 2; 2; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "6\nat\ncode",
            "output": "atatat This input corresponds to the example shown in Problem Statement.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03511.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03511"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03512",
        "title": "For every positive integer j, add x_i to the value of a_{j × m_i}.",
        "description": "Score : 100 points Problem StatementConsider an infinite sequence a_1, a_2, … Initially, the values of all the terms are 0, and from this state we will sequentially perform Q operations. The i-th operation (1 ≤ i ≤ Q) is as follows:\n\nFor every positive integer j, add x_i to the value of a_{j × m_i}.\n\nFind the value of the largest term after these Q operations. Consider an infinite sequence a_1, a_2, … Initially, the values of all the terms are 0, and from this state we will sequentially perform Q operations. The i-th operation (1 ≤ i ≤ Q) is as follows: Find the value of the largest term after these Q operations. Print the value of the largest term after the Q operations. The values of each terms in the sequence a_1, a_2, … change as follows: The value of the largest term after all the operations is 10. Consider an infinite sequence a_1, a_2, … Initially, the values of all the terms are 0, and from this state we will sequentially perform Q operations. The i-th operation (1 ≤ i ≤ Q) is as follows: For every positive integer j, add x_i to the value of a_{j × m_i}. Find the value of the largest term after these Q operations.",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "array"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03512.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ Q ≤ 299\n2 ≤ m_i ≤ 300\n-10^6 ≤ x_i ≤ 10^6\nAll m_i are distinct.\nAll input values are integers.",
          "ranges": "1 299; 2 300; 6 10; 299; 300; 10; 1; 2; 6"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n2 10\n3 -20\n6 15",
            "output": "10 The values of each terms in the sequence a_1, a_2, … change as follows: Before the operations: 0, 0, 0, 0, 0, 0, …\nAfter the 1-st operation: 0, 10, 0, 10, 0, 10, …\nAfter the 2-nd operation: 0, 10, -20, 10, 0, -10, …\nAfter the 3-rd operation: 0, 10, -20, 10, 0, 5, … The value of the largest term after all the operations is 10.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03512.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03512"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03513",
        "title": "Problem Statement",
        "description": "Score : 100 points Problem StatementThere are N islands floating in Ringo Sea, and M travel agents operate ships between these islands. For convenience, we will call these islands Island 1, 2, …, N, and call these agents Agent 1, 2, …, M.\nThe sea currents in Ringo Sea change significantly each day. Depending on the state of the sea on the day, Agent i (1 ≤ i ≤ M) operates ships from Island a_i to b_i, or Island b_i to a_i, but not both at the same time. Assume that the direction of the ships of each agent is independently selected with equal probability.\nNow, Takahashi is on Island 1, and Hikuhashi is on Island 2. Let P be the probability that Takahashi and Hikuhashi can travel to the same island in the day by ships operated by the M agents, ignoring the factors such as the travel time for ships. Then, P × 2^M is an integer. Find P × 2^M modulo 10^9 + 7. There are N islands floating in Ringo Sea, and M travel agents operate ships between these islands. For convenience, we will call these islands Island 1, 2, …, N, and call these agents Agent 1, 2, …, M. The sea currents in Ringo Sea change significantly each day. Depending on the state of the sea on the day, Agent i (1 ≤ i ≤ M) operates ships from Island a_i to b_i, or Island b_i to a_i, but not both at the same time. Assume that the direction of the ships of each agent is independently selected with equal probability. Now, Takahashi is on Island 1, and Hikuhashi is on Island 2. Let P be the probability that Takahashi and Hikuhashi can travel to the same island in the day by ships operated by the M agents, ignoring the factors such as the travel time for ships. Then, P × 2^M is an integer. Find P × 2^M modulo 10^9 + 7. Print the value P × 2^M modulo 10^9 + 7. The 2^M = 8 scenarios shown above occur with equal probability, and Takahashi and Hikuhashi can meet on the same island in 6 of them. Thus, P = 6/2^M and P × 2^M = 6. There are N islands floating in Ringo Sea, and M travel agents operate ships between these islands. For convenience, we will call these islands Island 1, 2, …, N, and call these agents Agent 1, 2, …, M. The sea currents in Ringo Sea change significantly each day. Depending on the state of the sea on the day, Agent i (1 ≤ i ≤ M) operates ships from Island a_i to b_i, or Island b_i to a_i, but not both at the same time. Assume that the direction of the ships of each agent is independently selected with equal probability. Now, Takahashi is on Island 1, and Hikuhashi is on Island 2. Let P be the probability that Takahashi and Hikuhashi can travel to the same island in the day by ships operated by the M agents, ignoring the factors such as the travel time for ships. Then, P × 2^M is an integer. Find P × 2^M modulo 10^9 + 7.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03513.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 15\n1 ≤ M ≤ N(N-1)/2\n1 ≤ a_i < b_i ≤ N\nAll pairs (a_i, b_i) are distinct.",
          "ranges": "2 15; 15; 2; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 3\n1 3\n2 3\n3 4",
            "output": "6 The 2^M = 8 scenarios shown above occur with equal probability, and Takahashi and Hikuhashi can meet on the same island in 6 of them. Thus, P = 6/2^M and P × 2^M = 6.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03513.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03513"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03514",
        "title": "Problem Statement",
        "description": "Score : 100 points Problem StatementWe have 2N pots. The market price of the i-th pot (1 ≤ i ≤ 2N) is p_i yen (the currency of Japan).\nNow, you and Lunlun the dachshund will alternately take one pot. You will go first, and we will continue until all the pots are taken by you or Lunlun. Since Lunlun does not know the market prices of the pots, she will always choose a pot randomly from the remaining pots with equal probability. You know this behavior of Lunlun, and the market prices of the pots.\nLet the sum of the market prices of the pots you take be S yen. Your objective is to maximize the expected value of S. Find the expected value of S when the optimal strategy is adopted. We have 2N pots. The market price of the i-th pot (1 ≤ i ≤ 2N) is p_i yen (the currency of Japan). Now, you and Lunlun the dachshund will alternately take one pot. You will go first, and we will continue until all the pots are taken by you or Lunlun. Since Lunlun does not know the market prices of the pots, she will always choose a pot randomly from the remaining pots with equal probability. You know this behavior of Lunlun, and the market prices of the pots. Let the sum of the market prices of the pots you take be S yen. Your objective is to maximize the expected value of S. Find the expected value of S when the optimal strategy is adopted. Print the expected value of S when the strategy to maximize the expected value of S is adopted. The output is considered correct if its absolute or relative error from the judge's output is at most 10^{-9}. Naturally, you should choose the 150000 yen pot. First, you will take one of the 100000 yen pots. The other 100000 yen pot will become yours if it is not taken in Lunlun's next turn, with probability 2/3. If it is taken, you will have to settle for a 50000 yen pot. Thus, the expected value of S when the optimal strategy is adopted is 2/3 × (100000 + 100000) + 1/3 × (100000 + 50000) = 183333.3333… We have 2N pots. The market price of the i-th pot (1 ≤ i ≤ 2N) is p_i yen (the currency of Japan). Now, you and Lunlun the dachshund will alternately take one pot. You will go first, and we will continue until all the pots are taken by you or Lunlun. Since Lunlun does not know the market prices of the pots, she will always choose a pot randomly from the remaining pots with equal probability. You know this behavior of Lunlun, and the market prices of the pots. Let the sum of the market prices of the pots you take be S yen. Your objective is to maximize the expected value of S. Find the expected value of S when the optimal strategy is adopted.",
        "difficulty": "Hard",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03514.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10^5\n1 ≤ p_i ≤ 2 × 10^5\nAll input values are integers.",
          "ranges": "1 10; 1 2; 10; 2; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1\n150000\n108",
            "output": "150000.0 Naturally, you should choose the 150000 yen pot.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03514.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03514"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03516",
        "title": "You are given a sequence d of length N.",
        "description": "Score : 1000 points Problem StatementSnuke has come up with the following problem.\n\nYou are given a sequence d of length N.\nFind the number of the undirected graphs with N vertices labeled 1,2,...,N satisfying the following conditions, modulo 10^{9} + 7:\n\nThe graph is simple and connected.\nThe degree of Vertex i is d_i.\n\n\nWhen 2 \\leq N, 1 \\leq d_i \\leq N-1, {\\rm Σ} d_i = 2(N-1), it can be proved that the answer to the problem is \\frac{(N-2)!}{(d_{1} -1)!(d_{2} - 1)! ... (d_{N}-1)!}.\nSnuke is wondering what the answer is when 3 \\leq N, 1 \\leq d_i \\leq N-1, { \\rm Σ} d_i = 2N.\nSolve the problem under this condition for him. Snuke has come up with the following problem. You are given a sequence d of length N.\nFind the number of the undirected graphs with N vertices labeled 1,2,...,N satisfying the following conditions, modulo 10^{9} + 7: When 2 \\leq N, 1 \\leq d_i \\leq N-1, {\\rm Σ} d_i = 2(N-1), it can be proved that the answer to the problem is \\frac{(N-2)!}{(d_{1} -1)!(d_{2} - 1)! ... (d_{N}-1)!}. Snuke is wondering what the answer is when 3 \\leq N, 1 \\leq d_i \\leq N-1, { \\rm Σ} d_i = 2N.\nSolve the problem under this condition for him. Partial Scores\nIn the test set worth 200 points, N \\leq 5.\nIn the test set worth another 200 points, N \\leq 18.\nIn the test set worth another 300 points, N \\leq 50. Print the answer. Snuke has come up with the following problem. You are given a sequence d of length N.\nFind the number of the undirected graphs with N vertices labeled 1,2,...,N satisfying the following conditions, modulo 10^{9} + 7:\n\nThe graph is simple and connected.\nThe degree of Vertex i is d_i. When 2 \\leq N, 1 \\leq d_i \\leq N-1, {\\rm Σ} d_i = 2(N-1), it can be proved that the answer to the problem is \\frac{(N-2)!}{(d_{1} -1)!(d_{2} - 1)! ... (d_{N}-1)!}. Snuke is wondering what the answer is when 3 \\leq N, 1 \\leq d_i \\leq N-1, { \\rm Σ} d_i = 2N.\nSolve the problem under this condition for him.",
        "difficulty": "Hard",
        "category": "Trees & Graphs",
        "tags": [
          "array",
          "math",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03516.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3 \\leq N \\leq 300\n1 \\leq d_i \\leq N-1\n{ \\rm Σ} d_i = 2N",
          "ranges": "2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n1 2 2 3 2",
            "output": "6 There are six graphs as shown below:",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03516.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03516"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03521",
        "title": "Problem Statement",
        "description": "Score : 1000 points Problem StatementButCoder Inc. is a startup company whose main business is the development and operation of the programming competition site \"ButCoder\".\nThere are N members of the company including the president, and each member except the president has exactly one direct boss. Each member has a unique ID number from 1 to N, and the member with the ID i is called Member i. The president is Member 1, and the direct boss of Member i (2 ≤ i ≤ N) is Member b_i (1 ≤ b_i < i).\nAll the members in ButCoder have gathered in the great hall in the main office to take a group photo. The hall is very large, and all N people can stand in one line. However, they have been unable to decide the order in which they stand. For some reason, all of them except the president want to avoid standing next to their direct bosses.\nHow many ways are there for them to stand in a line that satisfy their desires? Find the count modulo 10^9+7. ButCoder Inc. is a startup company whose main business is the development and operation of the programming competition site \"ButCoder\". There are N members of the company including the president, and each member except the president has exactly one direct boss. Each member has a unique ID number from 1 to N, and the member with the ID i is called Member i. The president is Member 1, and the direct boss of Member i (2 ≤ i ≤ N) is Member b_i (1 ≤ b_i < i). All the members in ButCoder have gathered in the great hall in the main office to take a group photo. The hall is very large, and all N people can stand in one line. However, they have been unable to decide the order in which they stand. For some reason, all of them except the president want to avoid standing next to their direct bosses. How many ways are there for them to stand in a line that satisfy their desires? Find the count modulo 10^9+7. Print the number of ways for the N members to stand in a line, such that no member except the president is next to his/her direct boss, modulo 10^9+7. Below, we will write A → B to denote the fact that Member A is the direct boss of Member B. In this case, the hierarchy of the members is 1 → 2 → 3 → 4. There are two ways for them to stand in a line that satisfy their desires: Note that the latter is the reverse of the former, but we count them individually. The hierarchy of the members is 1 → 2 → 3. No matter what order they stand in, at least one of the desires of Member 2 and 3 is not satisfied, so the answer is 0. The hierarchy of the members is shown below: There are eight ways for them to stand in a line that satisfy their desires: ButCoder Inc. is a startup company whose main business is the development and operation of the programming competition site \"ButCoder\". There are N members of the company including the president, and each member except the president has exactly one direct boss. Each member has a unique ID number from 1 to N, and the member with the ID i is called Member i. The president is Member 1, and the direct boss of Member i (2 ≤ i ≤ N) is Member b_i (1 ≤ b_i < i). All the members in ButCoder have gathered in the great hall in the main office to take a group photo. The hall is very large, and all N people can stand in one line. However, they have been unable to decide the order in which they stand. For some reason, all of them except the president want to avoid standing next to their direct bosses. How many ways are there for them to stand in a line that satisfy their desires? Find the count modulo 10^9+7.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03521.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 2000\n1 ≤ b_i < i (2 ≤ i ≤ N)",
          "ranges": "2 2000; 2000; 2; 1; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n1\n2\n3",
            "output": "2 Below, we will write A → B to denote the fact that Member A is the direct boss of Member B. In this case, the hierarchy of the members is 1 → 2 → 3 → 4. There are two ways for them to stand in a line that satisfy their desires: 2, 4, 1, 3\n3, 1, 4, 2 Note that the latter is the reverse of the former, but we count them individually.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03521.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03521"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03522",
        "title": "On this sequence, we can perform the following two kinds of operations:",
        "description": "Score : 1500 points Problem StatementWe have a sequence A of length N.\nOn this sequence, we can perform the following two kinds of operations:\n\n\nSwap two adjacent elements.\n\n\nSelect one element, and increment it by 1.\n\n\nWe will repeatedly perform these operations so that A will be a non-decreasing sequence. Find the minimum required number of operations. We have a sequence A of length N. On this sequence, we can perform the following two kinds of operations: Swap two adjacent elements. Select one element, and increment it by 1. We will repeatedly perform these operations so that A will be a non-decreasing sequence. Find the minimum required number of operations. Print the minimum number of operations required to turn A into a non-decreasing sequence. We can turn A into a non-decreasing sequence in two operations: We have a sequence A of length N. On this sequence, we can perform the following two kinds of operations: Swap two adjacent elements.\n\n\nSelect one element, and increment it by 1. We will repeatedly perform these operations so that A will be a non-decreasing sequence. Find the minimum required number of operations.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "array",
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03522.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 200000\n1 ≤ A_i ≤ 10^9\nA_i is an integer.",
          "ranges": "1 200000; 1 10; 200000; 10; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n4\n1\n8\n8\n7",
            "output": "2 We can turn A into a non-decreasing sequence in two operations: Initially, A = \\{4, 1, 8, 8, 7\\}.\nSwap the first two elements. Now, A = \\{1, 4, 8, 8, 7\\}.\nIncrement the last element by 1. Now, A = \\{1, 4, 8, 8, 8\\}.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03522.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03522"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03543",
        "title": "You are given a 4-digit integer N. Answer the question: Is N good?",
        "description": "Score : 100 points Problem StatementWe call a 4-digit integer with three or more consecutive same digits, such as 1118, good.\nYou are given a 4-digit integer N. Answer the question: Is N good? We call a 4-digit integer with three or more consecutive same digits, such as 1118, good. You are given a 4-digit integer N. Answer the question: Is N good? If N is good, print Yes; otherwise, print No. N is good, since it contains three consecutive 1. An integer is also good when all the digits are the same. We call a 4-digit integer with three or more consecutive same digits, such as 1118, good. You are given a 4-digit integer N. Answer the question: Is N good?",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03543.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1000 ≤ N ≤ 9999\nN is an integer.",
          "ranges": "1000 9999; 9999; 1000"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1118",
            "output": "Yes N is good, since it contains three consecutive 1.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03543.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03543"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03544",
        "title": "You are given an integer N. Find the N-th Lucas number.",
        "description": "Score : 200 points Problem StatementIt is November 18 now in Japan. By the way, 11 and 18 are adjacent Lucas numbers.\nYou are given an integer N. Find the N-th Lucas number.\nHere, the i-th Lucas number L_i is defined as follows:\n\nL_0=2\nL_1=1\nL_i=L_{i-1}+L_{i-2} (i≥2) It is November 18 now in Japan. By the way, 11 and 18 are adjacent Lucas numbers. You are given an integer N. Find the N-th Lucas number. Here, the i-th Lucas number L_i is defined as follows: Print the N-th Lucas number. Thus, the 5-th Lucas number is 11. It is November 18 now in Japan. By the way, 11 and 18 are adjacent Lucas numbers. You are given an integer N. Find the N-th Lucas number. Here, the i-th Lucas number L_i is defined as follows: L_0=2\nL_1=1\nL_i=L_{i-1}+L_{i-2} (i≥2)",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03544.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤N≤86\nIt is guaranteed that the answer is less than 10^{18}.\nN is an integer.",
          "ranges": "1 86; 86; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5",
            "output": "11 L_0=2\nL_1=1\nL_2=L_0+L_1=3\nL_3=L_1+L_2=4\nL_4=L_2+L_3=7\nL_5=L_3+L_4=11 Thus, the 5-th Lucas number is 11.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03544.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03544"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03545",
        "title": "Problem Statement",
        "description": "Score : 300 points Problem StatementSitting in a station waiting room, Joisino is gazing at her train ticket.\nThe ticket is numbered with four digits A, B, C and D in this order, each between 0 and 9 (inclusive).\nIn the formula A op1 B op2 C op3 D = 7, replace each of the symbols op1, op2 and op3 with + or - so that the formula holds.\nThe given input guarantees that there is a solution. If there are multiple solutions, any of them will be accepted. Sitting in a station waiting room, Joisino is gazing at her train ticket. The ticket is numbered with four digits A, B, C and D in this order, each between 0 and 9 (inclusive). In the formula A op1 B op2 C op3 D = 7, replace each of the symbols op1, op2 and op3 with + or - so that the formula holds. The given input guarantees that there is a solution. If there are multiple solutions, any of them will be accepted. Print the formula you made, including the part =7. Use the signs + and -. Do not print a space between a digit and a sign. This is the only valid solution. 0 - 2 + 9 - 0 = 7 is also a valid solution. Sitting in a station waiting room, Joisino is gazing at her train ticket. The ticket is numbered with four digits A, B, C and D in this order, each between 0 and 9 (inclusive). In the formula A op1 B op2 C op3 D = 7, replace each of the symbols op1, op2 and op3 with + or - so that the formula holds. The given input guarantees that there is a solution. If there are multiple solutions, any of them will be accepted.",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03545.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0≤A,B,C,D≤9\nAll input values are integers.\nIt is guaranteed that there is a solution.",
          "ranges": "9; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1222",
            "output": "1+2+2+2=7 This is the only valid solution.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03545.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03545"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03546",
        "title": "Rewriting a digit i with j (0≤i,j≤9) costs c_{i,j} MP (Magic Points).",
        "description": "Score : 400 points Problem StatementJoisino the magical girl has decided to turn every single digit that exists on this world into 1.\nRewriting a digit i with j (0≤i,j≤9) costs c_{i,j} MP (Magic Points).\nShe is now standing before a wall. The wall is divided into HW squares in H rows and W columns, and at least one square contains a digit between 0 and 9 (inclusive).\nYou are given A_{i,j} that describes the square at the i-th row from the top and j-th column from the left, as follows:\n\nIf A_{i,j}≠-1, the square contains a digit A_{i,j}.\nIf A_{i,j}=-1, the square does not contain a digit.\n\nFind the minimum total amount of MP required to turn every digit on this wall into 1 in the end. Joisino the magical girl has decided to turn every single digit that exists on this world into 1. Rewriting a digit i with j (0≤i,j≤9) costs c_{i,j} MP (Magic Points). She is now standing before a wall. The wall is divided into HW squares in H rows and W columns, and at least one square contains a digit between 0 and 9 (inclusive). You are given A_{i,j} that describes the square at the i-th row from the top and j-th column from the left, as follows: Find the minimum total amount of MP required to turn every digit on this wall into 1 in the end. Print the minimum total amount of MP required to turn every digit on the wall into 1 in the end. To turn a single 8 into 1, it is optimal to first turn 8 into 4, then turn 4 into 9, and finally turn 9 into 1, costing 6 MP. The wall contains two 8s, so the minimum total MP required is 6×2=12. Note that she may not need to change any digit. Joisino the magical girl has decided to turn every single digit that exists on this world into 1. Rewriting a digit i with j (0≤i,j≤9) costs c_{i,j} MP (Magic Points). She is now standing before a wall. The wall is divided into HW squares in H rows and W columns, and at least one square contains a digit between 0 and 9 (inclusive). You are given A_{i,j} that describes the square at the i-th row from the top and j-th column from the left, as follows: If A_{i,j}≠-1, the square contains a digit A_{i,j}.\nIf A_{i,j}=-1, the square does not contain a digit. Find the minimum total amount of MP required to turn every digit on this wall into 1 in the end.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03546.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤H,W≤200\n1≤c_{i,j}≤10^3 (i≠j)\nc_{i,j}=0 (i=j)\n-1≤A_{i,j}≤9\nAll input values are integers.\nThere is at least one digit on the wall.",
          "ranges": "200; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 4\n0 9 9 9 9 9 9 9 9 9\n9 0 9 9 9 9 9 9 9 9\n9 9 0 9 9 9 9 9 9 9\n9 9 9 0 9 9 9 9 9 9\n9 9 9 9 0 9 9 9 9 2\n9 9 9 9 9 0 9 9 9 9\n9 9 9 9 9 9 0 9 9 9\n9 9 9 9 9 9 9 0 9 9\n9 9 9 9 2 9 9 9 0 9\n9 2 9 9 9 9 9 9 9 0\n-1 -1 -1 -1\n8 1 1 8",
            "output": "12 To turn a single 8 into 1, it is optimal to first turn 8 into 4, then turn 4 into 9, and finally turn 9 into 1, costing 6 MP. The wall contains two 8s, so the minimum total MP required is 6×2=12.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03546.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03546"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03562",
        "title": "Takahashi can perform the following two kinds of operations any number of times in any order:",
        "description": "Score : 1000 points Problem StatementThere are N non-negative integers written on a blackboard. The i-th integer is A_i.\nTakahashi can perform the following two kinds of operations any number of times in any order:\n\nSelect one integer written on the board (let this integer be X). Write 2X on the board, without erasing the selected integer.\nSelect two integers, possibly the same, written on the board (let these integers be X and Y). Write X XOR Y (XOR stands for bitwise xor) on the blackboard, without erasing the selected integers.\n\nHow many different integers not exceeding X can be written on the blackboard? We will also count the integers that are initially written on the board.\nSince the answer can be extremely large, find the count modulo 998244353. There are N non-negative integers written on a blackboard. The i-th integer is A_i. Takahashi can perform the following two kinds of operations any number of times in any order: How many different integers not exceeding X can be written on the blackboard? We will also count the integers that are initially written on the board.\nSince the answer can be extremely large, find the count modulo 998244353. Print the number of different integers not exceeding X that can be written on the blackboard. Initially, 15, 23 and 18 are written on the blackboard. Among the integers not exceeding 7, four integers, 0, 3, 5 and 6, can be written.\nFor example, 6 can be written as follows: Be sure to find the count modulo 998244353. There are N non-negative integers written on a blackboard. The i-th integer is A_i. Takahashi can perform the following two kinds of operations any number of times in any order: Select one integer written on the board (let this integer be X). Write 2X on the board, without erasing the selected integer.\nSelect two integers, possibly the same, written on the board (let these integers be X and Y). Write X XOR Y (XOR stands for bitwise xor) on the blackboard, without erasing the selected integers. How many different integers not exceeding X can be written on the blackboard? We will also count the integers that are initially written on the board.\nSince the answer can be extremely large, find the count modulo 998244353.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03562.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N \\leq 6\n1 \\leq X < 2^{4000}\n1 \\leq A_i < 2^{4000}(1\\leq i\\leq N)\nAll input values are integers.\nX and A_i(1\\leq i\\leq N) are given in binary notation, with the most significant digit in each of them being 1.",
          "ranges": "2; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 111\n1111\n10111\n10010",
            "output": "4 Initially, 15, 23 and 18 are written on the blackboard. Among the integers not exceeding 7, four integers, 0, 3, 5 and 6, can be written.\nFor example, 6 can be written as follows: Double 15 to write 30.\nTake XOR of 30 and 18 to write 12.\nDouble 12 to write 24.\nTake XOR of 30 and 24 to write 6.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03562.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03562"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03584",
        "title": "There may be multiple equal integers with different utilities.",
        "description": "Score : 500 points Problem StatementSeisu-ya, a store specializing in non-negative integers, sells N non-negative integers. The i-th integer is A_i and has a utility of B_i.\nThere may be multiple equal integers with different utilities.\nTakahashi will buy some integers in this store. He can buy a combination of integers whose bitwise OR is less than or equal to K. He wants the sum of utilities of purchased integers to be as large as possible.\nFind the maximum possible sum of utilities of purchased integers. Seisu-ya, a store specializing in non-negative integers, sells N non-negative integers. The i-th integer is A_i and has a utility of B_i.\nThere may be multiple equal integers with different utilities. Takahashi will buy some integers in this store. He can buy a combination of integers whose bitwise OR is less than or equal to K. He wants the sum of utilities of purchased integers to be as large as possible. Find the maximum possible sum of utilities of purchased integers. Print the maximum possible sum of utilities of purchased integers. Buy 2 and 3 to achieve the maximum possible total utility, 8. Buy 2 and 4 to achieve the maximum possible total utility, 9. Seisu-ya, a store specializing in non-negative integers, sells N non-negative integers. The i-th integer is A_i and has a utility of B_i.\nThere may be multiple equal integers with different utilities. Takahashi will buy some integers in this store. He can buy a combination of integers whose bitwise OR is less than or equal to K. He wants the sum of utilities of purchased integers to be as large as possible. Find the maximum possible sum of utilities of purchased integers.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03584.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N \\leq 10^5\n0 \\leq K < 2^{30}\n0 \\leq A_i < 2^{30}(1\\leq i\\leq N)\n1 \\leq B_i \\leq 10^9(1\\leq i\\leq N)\nAll input values are integers.",
          "ranges": "2; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 5\n3 3\n4 4\n2 5",
            "output": "8 Buy 2 and 3 to achieve the maximum possible total utility, 8.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03584.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03584"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03590",
        "title": "There may be multiple equal integers with different utilities.",
        "description": "Score : 500 points Problem StatementSeisu-ya, a store specializing in non-negative integers, sells N non-negative integers. The i-th integer is A_i and has a utility of B_i.\nThere may be multiple equal integers with different utilities.\nTakahashi will buy some integers in this store. He can buy a combination of integers whose bitwise OR is less than or equal to K. He wants the sum of utilities of purchased integers to be as large as possible.\nFind the maximum possible sum of utilities of purchased integers. Seisu-ya, a store specializing in non-negative integers, sells N non-negative integers. The i-th integer is A_i and has a utility of B_i.\nThere may be multiple equal integers with different utilities. Takahashi will buy some integers in this store. He can buy a combination of integers whose bitwise OR is less than or equal to K. He wants the sum of utilities of purchased integers to be as large as possible. Find the maximum possible sum of utilities of purchased integers. Print the maximum possible sum of utilities of purchased integers. Buy 2 and 3 to achieve the maximum possible total utility, 8. Buy 2 and 4 to achieve the maximum possible total utility, 9. Seisu-ya, a store specializing in non-negative integers, sells N non-negative integers. The i-th integer is A_i and has a utility of B_i.\nThere may be multiple equal integers with different utilities. Takahashi will buy some integers in this store. He can buy a combination of integers whose bitwise OR is less than or equal to K. He wants the sum of utilities of purchased integers to be as large as possible. Find the maximum possible sum of utilities of purchased integers.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03590.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N \\leq 10^5\n0 \\leq K < 2^{30}\n0 \\leq A_i < 2^{30}(1\\leq i\\leq N)\n1 \\leq B_i \\leq 10^9(1\\leq i\\leq N)\nAll input values are integers.",
          "ranges": "2; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 5\n3 3\n4 4\n2 5",
            "output": "8 Buy 2 and 3 to achieve the maximum possible total utility, 8.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03590.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03590"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03593",
        "title": "Let a_{ij} be the element at the i-th row from the top and j-th column from the left.",
        "description": "Score : 400 points Problem StatementWe have an H-by-W matrix.\nLet a_{ij} be the element at the i-th row from the top and j-th column from the left.\nIn this matrix, each a_{ij} is a lowercase English letter.\nSnuke is creating another H-by-W matrix, A', by freely rearranging the elements in A.\nHere, he wants to satisfy the following condition:\n\nEvery row and column in A' can be read as a palindrome.\n\nDetermine whether he can create a matrix satisfying the condition. We have an H-by-W matrix.\nLet a_{ij} be the element at the i-th row from the top and j-th column from the left.\nIn this matrix, each a_{ij} is a lowercase English letter. Snuke is creating another H-by-W matrix, A', by freely rearranging the elements in A.\nHere, he wants to satisfy the following condition: Determine whether he can create a matrix satisfying the condition. NoteA palindrome is a string that reads the same forward and backward.\nFor example, a, aa, abba and abcba are all palindromes, while ab, abab and abcda are not. A palindrome is a string that reads the same forward and backward.\nFor example, a, aa, abba and abcba are all palindromes, while ab, abab and abcda are not. If Snuke can create a matrix satisfying the condition, print Yes; otherwise, print No. For example, the following matrix satisfies the condition. It is not possible to create a matrix satisfying the condition, no matter how we rearrange the elements in A. For example, the following matrix satisfies the condition. We have an H-by-W matrix.\nLet a_{ij} be the element at the i-th row from the top and j-th column from the left.\nIn this matrix, each a_{ij} is a lowercase English letter. Snuke is creating another H-by-W matrix, A', by freely rearranging the elements in A.\nHere, he wants to satisfy the following condition: Every row and column in A' can be read as a palindrome. Determine whether he can create a matrix satisfying the condition.",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "string"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03593.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ H, W ≤ 100\na_{ij} is a lowercase English letter.",
          "ranges": "100; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 4\naabb\naabb\naacc",
            "output": "Yes For example, the following matrix satisfies the condition. abba\nacca\nabba",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03593.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03593"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03594",
        "title": "We will represent the square at the i-th row from the top and j-th column from the left as (i,\\ j).",
        "description": "Score : 700 points Problem StatementWe have a grid with H rows and W columns of squares.\nWe will represent the square at the i-th row from the top and j-th column from the left as (i,\\ j).\nAlso, we will define the distance between the squares (i_1,\\ j_1) and (i_2,\\ j_2) as |i_1 - i_2| + |j_1 - j_2|.\nSnuke is painting each square in red, yellow, green or blue.\nHere, for a given positive integer d, he wants to satisfy the following condition:\n\nNo two squares with distance exactly d have the same color.\n\nFind a way to paint the squares satisfying the condition.\nIt can be shown that a solution always exists. We have a grid with H rows and W columns of squares.\nWe will represent the square at the i-th row from the top and j-th column from the left as (i,\\ j).\nAlso, we will define the distance between the squares (i_1,\\ j_1) and (i_2,\\ j_2) as |i_1 - i_2| + |j_1 - j_2|. Snuke is painting each square in red, yellow, green or blue.\nHere, for a given positive integer d, he wants to satisfy the following condition: Find a way to paint the squares satisfying the condition.\nIt can be shown that a solution always exists. Print a way to paint the squares satisfying the condition, in the following format. If the square (i,\\ j) is painted in red, yellow, green or blue, c_{ij} should be R, Y, G or B, respectively. There are four pairs of squares with distance exactly 1.\nAs shown below, no two such squares have the same color. There are six pairs of squares with distance exactly 2.\nAs shown below, no two such squares have the same color. We have a grid with H rows and W columns of squares.\nWe will represent the square at the i-th row from the top and j-th column from the left as (i,\\ j).\nAlso, we will define the distance between the squares (i_1,\\ j_1) and (i_2,\\ j_2) as |i_1 - i_2| + |j_1 - j_2|. Snuke is painting each square in red, yellow, green or blue.\nHere, for a given positive integer d, he wants to satisfy the following condition: No two squares with distance exactly d have the same color. Find a way to paint the squares satisfying the condition.\nIt can be shown that a solution always exists.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03594.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ H, W ≤ 500\n1 ≤ d ≤ H + W - 2",
          "ranges": "500; 2; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 2 1",
            "output": "RY\nGR There are four pairs of squares with distance exactly 1.\nAs shown below, no two such squares have the same color. (1,\\ 1), (1,\\ 2) : R, Y\n(1,\\ 2), (2,\\ 2) : Y, R\n(2,\\ 2), (2,\\ 1) : R, G\n(2,\\ 1), (1,\\ 1) : G, R",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03594.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03594"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03596",
        "title": "Initially, the sizes of the slimes are all 1.",
        "description": "Score : 1600 points Problem StatementThere are A slimes lining up in a row.\nInitially, the sizes of the slimes are all 1.\nSnuke can repeatedly perform the following operation.\n\nChoose a positive even number M. Then, select M consecutive slimes and form M / 2 pairs from those slimes as follows: pair the 1-st and 2-nd of them from the left, the 3-rd and 4-th of them, ..., the (M-1)-th and M-th of them. Combine each pair of slimes into one larger slime. Here, the size of a combined slime is the sum of the individual slimes before combination. The order of the M / 2 combined slimes remain the same as the M / 2 pairs of slimes before combination.\n\nSnuke wants to get to the situation where there are exactly N slimes, and the size of the i-th (1 ≤ i ≤ N) slime from the left is a_i.\nFind the minimum number of operations required to achieve his goal.\nNote that A is not directly given as input. Assume A = a_1 + a_2 + ... + a_N. There are A slimes lining up in a row.\nInitially, the sizes of the slimes are all 1. Snuke can repeatedly perform the following operation. Snuke wants to get to the situation where there are exactly N slimes, and the size of the i-th (1 ≤ i ≤ N) slime from the left is a_i.\nFind the minimum number of operations required to achieve his goal. Note that A is not directly given as input. Assume A = a_1 + a_2 + ... + a_N. Print the minimum number of operations required to achieve Snuke's goal. One way to achieve Snuke's goal is as follows.\nHere, the selected slimes are marked in bold. One way to achieve Snuke's goal is as follows. There are A slimes lining up in a row.\nInitially, the sizes of the slimes are all 1. Snuke can repeatedly perform the following operation. Choose a positive even number M. Then, select M consecutive slimes and form M / 2 pairs from those slimes as follows: pair the 1-st and 2-nd of them from the left, the 3-rd and 4-th of them, ..., the (M-1)-th and M-th of them. Combine each pair of slimes into one larger slime. Here, the size of a combined slime is the sum of the individual slimes before combination. The order of the M / 2 combined slimes remain the same as the M / 2 pairs of slimes before combination. Snuke wants to get to the situation where there are exactly N slimes, and the size of the i-th (1 ≤ i ≤ N) slime from the left is a_i.\nFind the minimum number of operations required to achieve his goal. Note that A is not directly given as input. Assume A = a_1 + a_2 + ... + a_N.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03596.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10^5\na_i is an integer.\n1 ≤ a_i ≤ 10^9",
          "ranges": "1 10; 1 10; 10; 10; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\n3 3",
            "output": "2 One way to achieve Snuke's goal is as follows.\nHere, the selected slimes are marked in bold. (1, 1, 1, 1, 1, 1) → (1, 2, 2, 1)\n(1, 2, 2, 1) → (3, 3)",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03596.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03596"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03598",
        "title": "Thus, we have one ball on each of the N lines y = 1, y = 2, ..., y = N.",
        "description": "Score : 200 points Problem StatementThere are N balls in the xy-plane. The coordinates of the i-th of them is (x_i, i).\nThus, we have one ball on each of the N lines y = 1, y = 2, ..., y = N.\nIn order to collect these balls, Snuke prepared 2N robots, N of type A and N of type B.\nThen, he placed the i-th type-A robot at coordinates (0, i), and the i-th type-B robot at coordinates (K, i).\nThus, now we have one type-A robot and one type-B robot on each of the N lines y = 1, y = 2, ..., y = N.\nWhen activated, each type of robot will operate as follows.\n\n\nWhen a type-A robot is activated at coordinates (0, a), it will move to the position of the ball on the line y = a, collect the ball, move back to its original position (0, a) and deactivate itself. If there is no such ball, it will just deactivate itself without doing anything.\n\n\nWhen a type-B robot is activated at coordinates (K, b), it will move to the position of the ball on the line y = b, collect the ball, move back to its original position (K, b) and deactivate itself. If there is no such ball, it will just deactivate itself without doing anything.\n\n\nSnuke will activate some of the 2N robots to collect all of the balls. Find the minimum possible total distance covered by robots. There are N balls in the xy-plane. The coordinates of the i-th of them is (x_i, i).\nThus, we have one ball on each of the N lines y = 1, y = 2, ..., y = N. In order to collect these balls, Snuke prepared 2N robots, N of type A and N of type B.\nThen, he placed the i-th type-A robot at coordinates (0, i), and the i-th type-B robot at coordinates (K, i).\nThus, now we have one type-A robot and one type-B robot on each of the N lines y = 1, y = 2, ..., y = N. When activated, each type of robot will operate as follows. When a type-A robot is activated at coordinates (0, a), it will move to the position of the ball on the line y = a, collect the ball, move back to its original position (0, a) and deactivate itself. If there is no such ball, it will just deactivate itself without doing anything. When a type-B robot is activated at coordinates (K, b), it will move to the position of the ball on the line y = b, collect the ball, move back to its original position (K, b) and deactivate itself. If there is no such ball, it will just deactivate itself without doing anything. Snuke will activate some of the 2N robots to collect all of the balls. Find the minimum possible total distance covered by robots. Print the minimum possible total distance covered by robots. There are just one ball, one type-A robot and one type-B robot. If the type-A robot is used to collect the ball, the distance from the robot to the ball is 2, and the distance from the ball to the original position of the robot is also 2, for a total distance of 4. Similarly, if the type-B robot is used, the total distance covered will be 16. Thus, the total distance covered will be minimized when the type-A robot is used. The output should be 4. The total distance covered will be minimized when the first ball is collected by the type-A robot, and the second ball by the type-B robot. There are N balls in the xy-plane. The coordinates of the i-th of them is (x_i, i).\nThus, we have one ball on each of the N lines y = 1, y = 2, ..., y = N. In order to collect these balls, Snuke prepared 2N robots, N of type A and N of type B.\nThen, he placed the i-th type-A robot at coordinates (0, i), and the i-th type-B robot at coordinates (K, i).\nThus, now we have one type-A robot and one type-B robot on each of the N lines y = 1, y = 2, ..., y = N. When activated, each type of robot will operate as follows. When a type-A robot is activated at coordinates (0, a), it will move to the position of the ball on the line y = a, collect the ball, move back to its original position (0, a) and deactivate itself. If there is no such ball, it will just deactivate itself without doing anything.\n\n\nWhen a type-B robot is activated at coordinates (K, b), it will move to the position of the ball on the line y = b, collect the ball, move back to its original position (K, b) and deactivate itself. If there is no such ball, it will just deactivate itself without doing anything. Snuke will activate some of the 2N robots to collect all of the balls. Find the minimum possible total distance covered by robots.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "geometry",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03598.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N \\leq 100\n1 \\leq K \\leq 100\n0 < x_i < K\nAll input values are integers.",
          "ranges": "0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1\n10\n2",
            "output": "4 There are just one ball, one type-A robot and one type-B robot. If the type-A robot is used to collect the ball, the distance from the robot to the ball is 2, and the distance from the ball to the original position of the robot is also 2, for a total distance of 4. Similarly, if the type-B robot is used, the total distance covered will be 16. Thus, the total distance covered will be minimized when the type-A robot is used. The output should be 4.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03598.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03598"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03605",
        "title": "Problem Statement",
        "description": "Score : 100 points Problem StatementIt is September 9 in Japan now.\nYou are given a two-digit integer N. Answer the question: Is 9 contained in the decimal notation of N? It is September 9 in Japan now. You are given a two-digit integer N. Answer the question: Is 9 contained in the decimal notation of N? If 9 is contained in the decimal notation of N, print Yes; if not, print No. The one's digit of 29 is 9. 72 does not contain 9. It is September 9 in Japan now. You are given a two-digit integer N. Answer the question: Is 9 contained in the decimal notation of N?",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03605.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "10≤N≤99",
          "ranges": "10 99; 99; 10"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "29",
            "output": "Yes The one's digit of 29 is 9.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03605.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03605"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03606",
        "title": "The theater has 100000 seats, numbered from 1 to 100000.",
        "description": "Score : 200 points Problem StatementJoisino is working as a receptionist at a theater.\nThe theater has 100000 seats, numbered from 1 to 100000.\nAccording to her memo, N groups of audiences have come so far, and the i-th group occupies the consecutive seats from Seat l_i to Seat r_i (inclusive).\nHow many people are sitting at the theater now? Joisino is working as a receptionist at a theater. The theater has 100000 seats, numbered from 1 to 100000. According to her memo, N groups of audiences have come so far, and the i-th group occupies the consecutive seats from Seat l_i to Seat r_i (inclusive). How many people are sitting at the theater now? Print the number of people sitting at the theater. There are 7 people, sitting at Seat 24,25,26,27,28,29 and 30. Joisino is working as a receptionist at a theater. The theater has 100000 seats, numbered from 1 to 100000. According to her memo, N groups of audiences have come so far, and the i-th group occupies the consecutive seats from Seat l_i to Seat r_i (inclusive). How many people are sitting at the theater now?",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03606.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤N≤1000\n1≤l_i≤r_i≤100000\nNo seat is occupied by more than one person.\nAll input values are integers.",
          "ranges": "1 1000; 1000; 100000; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1\n24 30",
            "output": "7 There are 7 people, sitting at Seat 24,25,26,27,28,29 and 30.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03606.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03606"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03607",
        "title": "Initially, you have a blank sheet of paper.",
        "description": "Score : 300 points Problem StatementYou are playing the following game with Joisino.\n\nInitially, you have a blank sheet of paper.\nJoisino announces a number. If that number is written on the sheet, erase the number from the sheet; if not, write the number on the sheet. This process is repeated N times.\nThen, you are asked a question: How many numbers are written on the sheet now?\n\nThe numbers announced by Joisino are given as A_1, ... ,A_N in the order she announces them. How many numbers will be written on the sheet at the end of the game? You are playing the following game with Joisino. The numbers announced by Joisino are given as A_1, ... ,A_N in the order she announces them. How many numbers will be written on the sheet at the end of the game? Print how many numbers will be written on the sheet at the end of the game. The game proceeds as follows: 6 is not written on the sheet, so write 6. 2 is not written on the sheet, so write 2. 6 is written on the sheet, so erase 6. Thus, the sheet contains only 2 in the end. The answer is 1. It is possible that no number is written on the sheet in the end. You are playing the following game with Joisino. Initially, you have a blank sheet of paper.\nJoisino announces a number. If that number is written on the sheet, erase the number from the sheet; if not, write the number on the sheet. This process is repeated N times.\nThen, you are asked a question: How many numbers are written on the sheet now? The numbers announced by Joisino are given as A_1, ... ,A_N in the order she announces them. How many numbers will be written on the sheet at the end of the game?",
        "difficulty": "Hard",
        "category": "Simulation",
        "tags": [
          "math",
          "sorting",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03607.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤N≤100000\n1≤A_i≤1000000000(=10^9)\nAll input values are integers.",
          "ranges": "1 100000; 1 1000000000; 100000; 1000000000; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n6\n2\n6",
            "output": "1 The game proceeds as follows: 6 is not written on the sheet, so write 6.\n\n\n2 is not written on the sheet, so write 2.\n\n\n6 is written on the sheet, so erase 6. Thus, the sheet contains only 2 in the end. The answer is 1.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03607.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03607"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03608",
        "title": "The i-th road connects Town A_i and B_i and has a length of C_i.",
        "description": "Score : 400 points Problem StatementThere are N towns in the State of Atcoder, connected by M bidirectional roads.\nThe i-th road connects Town A_i and B_i and has a length of C_i.\nJoisino is visiting R towns in the state, r_1,r_2,..,r_R (not necessarily in this order).\nShe will fly to the first town she visits, and fly back from the last town she visits, but for the rest of the trip she will have to travel by road.\nIf she visits the towns in the order that minimizes the distance traveled by road, what will that distance be? There are N towns in the State of Atcoder, connected by M bidirectional roads. The i-th road connects Town A_i and B_i and has a length of C_i. Joisino is visiting R towns in the state, r_1,r_2,..,r_R (not necessarily in this order). She will fly to the first town she visits, and fly back from the last town she visits, but for the rest of the trip she will have to travel by road. If she visits the towns in the order that minimizes the distance traveled by road, what will that distance be? Print the distance traveled by road if Joisino visits the towns in the order that minimizes it. For example, if she visits the towns in the order of 1, 2, 3, the distance traveled will be 2, which is the minimum possible. The shortest distance between Towns 1 and 3 is 4. Thus, whether she visits Town 1 or 3 first, the distance traveled will be 4. There are N towns in the State of Atcoder, connected by M bidirectional roads. The i-th road connects Town A_i and B_i and has a length of C_i. Joisino is visiting R towns in the state, r_1,r_2,..,r_R (not necessarily in this order). She will fly to the first town she visits, and fly back from the last town she visits, but for the rest of the trip she will have to travel by road. If she visits the towns in the order that minimizes the distance traveled by road, what will that distance be?",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03608.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2≤N≤200\n1≤M≤N×(N-1)/2\n2≤R≤min(8,N) (min(8,N) is the smaller of 8 and N.)\nr_i≠r_j (i≠j)\n1≤A_i,B_i≤N, A_i≠B_i\n(A_i,B_i)≠(A_j,B_j),(A_i,B_i)≠(B_j,A_j) (i≠j)\n1≤C_i≤100000\nEvery town can be reached from every town by road.\nAll input values are integers.",
          "ranges": "2 200; 1 100000; 200; 100000; 2; 1; 2; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 3 3\n1 2 3\n1 2 1\n2 3 1\n3 1 4",
            "output": "2 For example, if she visits the towns in the order of 1, 2, 3, the distance traveled will be 2, which is the minimum possible.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03608.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03608"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03609",
        "title": "How many grams of sand will the upper bulb contains after t seconds?",
        "description": "Score : 100 points Problem StatementWe have a sandglass that runs for X seconds. The sand drops from the upper bulb at a rate of 1 gram per second. That is, the upper bulb initially contains X grams of sand.\nHow many grams of sand will the upper bulb contains after t seconds? We have a sandglass that runs for X seconds. The sand drops from the upper bulb at a rate of 1 gram per second. That is, the upper bulb initially contains X grams of sand. How many grams of sand will the upper bulb contains after t seconds? Print the number of sand in the upper bulb after t second. 17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams. All 48 grams of sand will be gone, resulting in 0 grams. We have a sandglass that runs for X seconds. The sand drops from the upper bulb at a rate of 1 gram per second. That is, the upper bulb initially contains X grams of sand. How many grams of sand will the upper bulb contains after t seconds?",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03609.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤X≤10^9\n1≤t≤10^9\nX and t are integers.",
          "ranges": "1 10; 1 10; 10; 10; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "100 17",
            "output": "83 17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03609.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03609"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03611",
        "title": "For each 1≤i≤N, you have three choices: add 1 to a_i, subtract 1 from a_i or do nothing.",
        "description": "Score : 300 points Problem StatementYou are given an integer sequence of length N, a_1,a_2,...,a_N.\nFor each 1≤i≤N, you have three choices: add 1 to a_i, subtract 1 from a_i or do nothing.\nAfter these operations, you select an integer X and count the number of i such that a_i=X.\nMaximize this count by making optimal choices. You are given an integer sequence of length N, a_1,a_2,...,a_N. For each 1≤i≤N, you have three choices: add 1 to a_i, subtract 1 from a_i or do nothing. After these operations, you select an integer X and count the number of i such that a_i=X. Maximize this count by making optimal choices. Print the maximum possible number of i such that a_i=X. For example, turn the sequence into 2,2,3,2,6,9,2 and select X=2 to obtain 4, the maximum possible count. You are given an integer sequence of length N, a_1,a_2,...,a_N. For each 1≤i≤N, you have three choices: add 1 to a_i, subtract 1 from a_i or do nothing. After these operations, you select an integer X and count the number of i such that a_i=X. Maximize this count by making optimal choices.",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03611.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤N≤10^5\n0≤a_i<10^5 (1≤i≤N)\na_i is an integer.",
          "ranges": "1 10; 0 10; 10; 10; 1; 0; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "7\n3 1 4 1 5 9 2",
            "output": "4 For example, turn the sequence into 2,2,3,2,6,9,2 and select X=2 to obtain 4, the maximum possible count.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03611.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03611"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03612",
        "title": "You can perform the following operation any number of times (possibly zero):",
        "description": "Score : 400 points Problem StatementYou are given a permutation p_1,p_2,...,p_N consisting of 1,2,..,N.\nYou can perform the following operation any number of times (possibly zero):\nOperation: Swap two adjacent elements in the permutation.\nYou want to have p_i ≠ i for all 1≤i≤N.\nFind the minimum required number of operations to achieve this. You are given a permutation p_1,p_2,...,p_N consisting of 1,2,..,N.\nYou can perform the following operation any number of times (possibly zero): Operation: Swap two adjacent elements in the permutation. You want to have p_i ≠ i for all 1≤i≤N.\nFind the minimum required number of operations to achieve this. Print the minimum required number of operations Swap 1 and 4, then swap 1 and 3. p is now 4,3,1,5,2 and satisfies the condition.\nThis is the minimum possible number, so the answer is 2. Swapping 1 and 2 satisfies the condition. The condition is already satisfied initially. You are given a permutation p_1,p_2,...,p_N consisting of 1,2,..,N.\nYou can perform the following operation any number of times (possibly zero): Operation: Swap two adjacent elements in the permutation. You want to have p_i ≠ i for all 1≤i≤N.\nFind the minimum required number of operations to achieve this.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03612.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2≤N≤10^5\np_1,p_2,..,p_N is a permutation of 1,2,..,N.",
          "ranges": "2 10; 10; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n1 4 3 5 2",
            "output": "2 Swap 1 and 4, then swap 1 and 3. p is now 4,3,1,5,2 and satisfies the condition.\nThis is the minimum possible number, so the answer is 2.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03612.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03612"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03613",
        "title": "For each 1≤i≤N, you have three choices: add 1 to a_i, subtract 1 from a_i or do nothing.",
        "description": "Score : 300 points Problem StatementYou are given an integer sequence of length N, a_1,a_2,...,a_N.\nFor each 1≤i≤N, you have three choices: add 1 to a_i, subtract 1 from a_i or do nothing.\nAfter these operations, you select an integer X and count the number of i such that a_i=X.\nMaximize this count by making optimal choices. You are given an integer sequence of length N, a_1,a_2,...,a_N. For each 1≤i≤N, you have three choices: add 1 to a_i, subtract 1 from a_i or do nothing. After these operations, you select an integer X and count the number of i such that a_i=X. Maximize this count by making optimal choices. Print the maximum possible number of i such that a_i=X. For example, turn the sequence into 2,2,3,2,6,9,2 and select X=2 to obtain 4, the maximum possible count. You are given an integer sequence of length N, a_1,a_2,...,a_N. For each 1≤i≤N, you have three choices: add 1 to a_i, subtract 1 from a_i or do nothing. After these operations, you select an integer X and count the number of i such that a_i=X. Maximize this count by making optimal choices.",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03613.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤N≤10^5\n0≤a_i<10^5 (1≤i≤N)\na_i is an integer.",
          "ranges": "1 10; 0 10; 10; 10; 1; 0; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "7\n3 1 4 1 5 9 2",
            "output": "4 For example, turn the sequence into 2,2,3,2,6,9,2 and select X=2 to obtain 4, the maximum possible count.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03613.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03613"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03614",
        "title": "You can perform the following operation any number of times (possibly zero):",
        "description": "Score : 400 points Problem StatementYou are given a permutation p_1,p_2,...,p_N consisting of 1,2,..,N.\nYou can perform the following operation any number of times (possibly zero):\nOperation: Swap two adjacent elements in the permutation.\nYou want to have p_i ≠ i for all 1≤i≤N.\nFind the minimum required number of operations to achieve this. You are given a permutation p_1,p_2,...,p_N consisting of 1,2,..,N.\nYou can perform the following operation any number of times (possibly zero): Operation: Swap two adjacent elements in the permutation. You want to have p_i ≠ i for all 1≤i≤N.\nFind the minimum required number of operations to achieve this. Print the minimum required number of operations Swap 1 and 4, then swap 1 and 3. p is now 4,3,1,5,2 and satisfies the condition.\nThis is the minimum possible number, so the answer is 2. Swapping 1 and 2 satisfies the condition. The condition is already satisfied initially. You are given a permutation p_1,p_2,...,p_N consisting of 1,2,..,N.\nYou can perform the following operation any number of times (possibly zero): Operation: Swap two adjacent elements in the permutation. You want to have p_i ≠ i for all 1≤i≤N.\nFind the minimum required number of operations to achieve this.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03614.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2≤N≤10^5\np_1,p_2,..,p_N is a permutation of 1,2,..,N.",
          "ranges": "2 10; 10; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n1 4 3 5 2",
            "output": "2 Swap 1 and 4, then swap 1 and 3. p is now 4,3,1,5,2 and satisfies the condition.\nThis is the minimum possible number, so the answer is 2.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03614.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03614"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03615",
        "title": "Consider a subset S of the N points that forms a convex polygon.",
        "description": "Score : 700 points Problem StatementYou are given N points (x_i,y_i) located on a two-dimensional plane.\nConsider a subset S of the N points that forms a convex polygon.\nHere, we say a set of points S forms a convex polygon when there exists a convex polygon with a positive area that has the same set of vertices as S. All the interior angles of the polygon must be strictly less than 180°.\n\n\n\nFor example, in the figure above, {A,C,E} and {B,D,E} form convex polygons; {A,C,D,E}, {A,B,C,E}, {A,B,C}, {D,E} and {} do not.\nFor a given set S, let n be the number of the points among the N points that are inside the convex hull of S (including the boundary and vertices). Then, we will define the score of S as 2^{n-|S|}.\nCompute the scores of all possible sets S that form convex polygons, and find the sum of all those scores.\nHowever, since the sum can be extremely large, print the sum modulo 998244353. You are given N points (x_i,y_i) located on a two-dimensional plane.\nConsider a subset S of the N points that forms a convex polygon.\nHere, we say a set of points S forms a convex polygon when there exists a convex polygon with a positive area that has the same set of vertices as S. All the interior angles of the polygon must be strictly less than 180°. For example, in the figure above, {A,C,E} and {B,D,E} form convex polygons; {A,C,D,E}, {A,B,C,E}, {A,B,C}, {D,E} and {} do not. For a given set S, let n be the number of the points among the N points that are inside the convex hull of S (including the boundary and vertices). Then, we will define the score of S as 2^{n-|S|}. Compute the scores of all possible sets S that form convex polygons, and find the sum of all those scores. However, since the sum can be extremely large, print the sum modulo 998244353. Print the sum of all the scores modulo 998244353. We have five possible sets as S, four sets that form triangles and one set that forms a square. Each of them has a score of 2^0=1, so the answer is 5. We have three \"triangles\" with a score of 1 each, two \"triangles\" with a score of 2 each, and one \"triangle\" with a score of 4. Thus, the answer is 11. There are no possible set as S, so the answer is 0. You are given N points (x_i,y_i) located on a two-dimensional plane.\nConsider a subset S of the N points that forms a convex polygon.\nHere, we say a set of points S forms a convex polygon when there exists a convex polygon with a positive area that has the same set of vertices as S. All the interior angles of the polygon must be strictly less than 180°. For example, in the figure above, {A,C,E} and {B,D,E} form convex polygons; {A,C,D,E}, {A,B,C,E}, {A,B,C}, {D,E} and {} do not. For a given set S, let n be the number of the points among the N points that are inside the convex hull of S (including the boundary and vertices). Then, we will define the score of S as 2^{n-|S|}. Compute the scores of all possible sets S that form convex polygons, and find the sum of all those scores. However, since the sum can be extremely large, print the sum modulo 998244353.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03615.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤N≤200\n0≤x_i,y_i<10^4 (1≤i≤N)\nIf i≠j, x_i≠x_j or y_i≠y_j.\nx_i and y_i are integers.",
          "ranges": "1 200; 200; 10; 1; 0; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n0 0\n0 1\n1 0\n1 1",
            "output": "5 We have five possible sets as S, four sets that form triangles and one set that forms a square. Each of them has a score of 2^0=1, so the answer is 5.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03615.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03615"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03616",
        "title": "The sand drops from the upper bulb to the lower bulb at a rate of 1 gram per second.",
        "description": "Score : 700 points Problem StatementWe have a sandglass consisting of two bulbs, bulb A and bulb B. These bulbs contain some amount of sand.\nWhen we put the sandglass, either bulb A or B lies on top of the other and becomes the upper bulb. The other bulb becomes the lower bulb.\nThe sand drops from the upper bulb to the lower bulb at a rate of 1 gram per second.\nWhen the upper bulb no longer contains any sand, nothing happens.\nInitially at time 0, bulb A is the upper bulb and contains a grams of sand; bulb B contains X-a grams of sand (for a total of X grams).\nWe will turn over the sandglass at time r_1,r_2,..,r_K. Assume that this is an instantaneous action and takes no time. Here, time t refer to the time t seconds after time 0.\nYou are given Q queries.\nEach query is in the form of (t_i,a_i).\nFor each query, assume that a=a_i and find the amount of sand that would be contained in bulb A at time t_i. We have a sandglass consisting of two bulbs, bulb A and bulb B. These bulbs contain some amount of sand.\nWhen we put the sandglass, either bulb A or B lies on top of the other and becomes the upper bulb. The other bulb becomes the lower bulb. The sand drops from the upper bulb to the lower bulb at a rate of 1 gram per second.\nWhen the upper bulb no longer contains any sand, nothing happens. Initially at time 0, bulb A is the upper bulb and contains a grams of sand; bulb B contains X-a grams of sand (for a total of X grams). We will turn over the sandglass at time r_1,r_2,..,r_K. Assume that this is an instantaneous action and takes no time. Here, time t refer to the time t seconds after time 0. You are given Q queries.\nEach query is in the form of (t_i,a_i).\nFor each query, assume that a=a_i and find the amount of sand that would be contained in bulb A at time t_i. For each query, print the answer in its own line. In the first query, 30 out of the initial 90 grams of sand will drop from bulb A, resulting in 60 grams.\nIn the second query, the initial 1 gram of sand will drop from bulb A, and nothing will happen for the next 59 seconds. Then, we will turn over the sandglass, and 1 second after this, bulb A contains 1 gram of sand at the time in question. In every query, the upper bulb initially contains 100 grams, and the question in time comes before we turn over the sandglass. We have a sandglass consisting of two bulbs, bulb A and bulb B. These bulbs contain some amount of sand.\nWhen we put the sandglass, either bulb A or B lies on top of the other and becomes the upper bulb. The other bulb becomes the lower bulb. The sand drops from the upper bulb to the lower bulb at a rate of 1 gram per second.\nWhen the upper bulb no longer contains any sand, nothing happens. Initially at time 0, bulb A is the upper bulb and contains a grams of sand; bulb B contains X-a grams of sand (for a total of X grams). We will turn over the sandglass at time r_1,r_2,..,r_K. Assume that this is an instantaneous action and takes no time. Here, time t refer to the time t seconds after time 0. You are given Q queries.\nEach query is in the form of (t_i,a_i).\nFor each query, assume that a=a_i and find the amount of sand that would be contained in bulb A at time t_i.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03616.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤X≤10^9\n1≤K≤10^5\n1≤r_1<r_2< .. <r_K≤10^9\n1≤Q≤10^5\n0≤t_1<t_2< .. <t_Q≤10^9\n0≤a_i≤X (1≤i≤Q)\nAll input values are integers.",
          "ranges": "1 10; 1 10; 1 10; 10; 10; 10; 10; 10; 1; 1; 1; 1; 0; 0; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "180\n3\n60 120 180\n3\n30 90\n61 1\n180 180",
            "output": "60\n1\n120 In the first query, 30 out of the initial 90 grams of sand will drop from bulb A, resulting in 60 grams.\nIn the second query, the initial 1 gram of sand will drop from bulb A, and nothing will happen for the next 59 seconds. Then, we will turn over the sandglass, and 1 second after this, bulb A contains 1 gram of sand at the time in question.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03616.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03616"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03619",
        "title": "All streets run straight from west to east, and all avenues run straight from south to north.",
        "description": "Score : 900 points Problem StatementIn the city of Nevermore, there are 10^8 streets and 10^8 avenues, both numbered from 0 to 10^8-1.\nAll streets run straight from west to east, and all avenues run straight from south to north.\nThe distance between neighboring streets and between neighboring avenues is exactly 100 meters.\nEvery street intersects every avenue. Every intersection can be described by pair (x, y), where x is avenue ID and y is street ID.\nThere are N fountains in the city, situated at intersections (X_i, Y_i).\nUnlike normal intersections, there's a circle with radius 10 meters centered at the intersection, and there are no road parts inside this circle.\nThe picture below shows an example of how a part of the city with roads and fountains may look like.\n\n\n\nCity governors don't like encountering more than one fountain while moving along the same road.\nTherefore, every street contains at most one fountain on it, as well as every avenue.\nCitizens can move along streets, avenues and fountain perimeters.\nWhat is the shortest distance one needs to cover in order to get from intersection (x_1, y_1) to intersection (x_2, y_2)? In the city of Nevermore, there are 10^8 streets and 10^8 avenues, both numbered from 0 to 10^8-1.\nAll streets run straight from west to east, and all avenues run straight from south to north.\nThe distance between neighboring streets and between neighboring avenues is exactly 100 meters. Every street intersects every avenue. Every intersection can be described by pair (x, y), where x is avenue ID and y is street ID. There are N fountains in the city, situated at intersections (X_i, Y_i).\nUnlike normal intersections, there's a circle with radius 10 meters centered at the intersection, and there are no road parts inside this circle. The picture below shows an example of how a part of the city with roads and fountains may look like. City governors don't like encountering more than one fountain while moving along the same road.\nTherefore, every street contains at most one fountain on it, as well as every avenue. Citizens can move along streets, avenues and fountain perimeters.\nWhat is the shortest distance one needs to cover in order to get from intersection (x_1, y_1) to intersection (x_2, y_2)? Print the shortest possible distance one needs to cover in order to get from intersection (x_1, y_1) to intersection (x_2, y_2), in meters.\nYour answer will be considered correct if its absolute or relative error doesn't exceed 10^{-11}. One possible shortest path is shown on the picture below. The path starts at the blue point, finishes at the purple point and follows along the red line. In the city of Nevermore, there are 10^8 streets and 10^8 avenues, both numbered from 0 to 10^8-1.\nAll streets run straight from west to east, and all avenues run straight from south to north.\nThe distance between neighboring streets and between neighboring avenues is exactly 100 meters. Every street intersects every avenue. Every intersection can be described by pair (x, y), where x is avenue ID and y is street ID. There are N fountains in the city, situated at intersections (X_i, Y_i).\nUnlike normal intersections, there's a circle with radius 10 meters centered at the intersection, and there are no road parts inside this circle. The picture below shows an example of how a part of the city with roads and fountains may look like. City governors don't like encountering more than one fountain while moving along the same road.\nTherefore, every street contains at most one fountain on it, as well as every avenue. Citizens can move along streets, avenues and fountain perimeters.\nWhat is the shortest distance one needs to cover in order to get from intersection (x_1, y_1) to intersection (x_2, y_2)?",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry",
          "sorting",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03619.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0 \\leq x_1, y_1, x_2, y_2 < 10^8\n1 \\leq N \\leq 200,000\n0 \\leq X_i, Y_i < 10^8\nX_i \\neq X_j for i \\neq j\nY_i \\neq Y_j for i \\neq j\nIntersections (x_1, y_1) and (x_2, y_2) are different and don't contain fountains.\nAll input values are integers.",
          "ranges": "10; 10; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1 1 6 5\n3\n3 2\n5 3\n2 4",
            "output": "891.415926535897938 One possible shortest path is shown on the picture below. The path starts at the blue point, finishes at the purple point and follows along the red line.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03619.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03619"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03631",
        "title": "Determine whether N is a palindromic number.",
        "description": "Score : 100 points Problem StatementYou are given a three-digit positive integer N.\nDetermine whether N is a palindromic number.\nHere, a palindromic number is an integer that reads the same backward as forward in decimal notation. You are given a three-digit positive integer N.\nDetermine whether N is a palindromic number.\nHere, a palindromic number is an integer that reads the same backward as forward in decimal notation. If N is a palindromic number, print Yes; otherwise, print No. N=575 is also 575 when read backward, so it is a palindromic number. You should print Yes. N=123 becomes 321 when read backward, so it is not a palindromic number. You should print No. You are given a three-digit positive integer N.\nDetermine whether N is a palindromic number.\nHere, a palindromic number is an integer that reads the same backward as forward in decimal notation.",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03631.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "100≤N≤999\nN is an integer.",
          "ranges": "100 999; 999; 100"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "575",
            "output": "Yes N=575 is also 575 when read backward, so it is a palindromic number. You should print Yes.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03631.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03631"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03632",
        "title": "For how many seconds both Alice and Bob were holding down their buttons?",
        "description": "Score : 200 points Problem StatementAlice and Bob are controlling a robot. They each have one switch that controls the robot.\nAlice started holding down her button A second after the start-up of the robot, and released her button B second after the start-up.\nBob started holding down his button C second after the start-up, and released his button D second after the start-up.\nFor how many seconds both Alice and Bob were holding down their buttons? Alice and Bob are controlling a robot. They each have one switch that controls the robot.\nAlice started holding down her button A second after the start-up of the robot, and released her button B second after the start-up.\nBob started holding down his button C second after the start-up, and released his button D second after the start-up.\nFor how many seconds both Alice and Bob were holding down their buttons? Print the length of the duration (in seconds) in which both Alice and Bob were holding down their buttons. Alice started holding down her button 0 second after the start-up of the robot, and released her button 75 second after the start-up.\nBob started holding down his button 25 second after the start-up, and released his button 100 second after the start-up.\nTherefore, the time when both of them were holding down their buttons, is the 50 seconds from 25 seconds after the start-up to 75 seconds after the start-up. Alice and Bob were not holding their buttons at the same time, so the answer is zero seconds. Alice and Bob are controlling a robot. They each have one switch that controls the robot.\nAlice started holding down her button A second after the start-up of the robot, and released her button B second after the start-up.\nBob started holding down his button C second after the start-up, and released his button D second after the start-up.\nFor how many seconds both Alice and Bob were holding down their buttons?",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03632.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0≤A<B≤100\n0≤C<D≤100\nAll input values are integers.",
          "ranges": "100; 100; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "0 75 25 100",
            "output": "50 Alice started holding down her button 0 second after the start-up of the robot, and released her button 75 second after the start-up.\nBob started holding down his button 25 second after the start-up, and released his button 100 second after the start-up.\nTherefore, the time when both of them were holding down their buttons, is the 50 seconds from 25 seconds after the start-up to 75 seconds after the start-up.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03632.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03632"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03633",
        "title": "Initially, the hand of every clock stands still, pointing directly upward.",
        "description": "Score : 300 points Problem StatementWe have N clocks. The hand of the i-th clock (1≤i≤N) rotates through 360° in exactly T_i seconds.\nInitially, the hand of every clock stands still, pointing directly upward.\nNow, Dolphin starts all the clocks simultaneously.\nIn how many seconds will the hand of every clock point directly upward again? We have N clocks. The hand of the i-th clock (1≤i≤N) rotates through 360° in exactly T_i seconds.\nInitially, the hand of every clock stands still, pointing directly upward.\nNow, Dolphin starts all the clocks simultaneously.\nIn how many seconds will the hand of every clock point directly upward again? Print the number of seconds after which the hand of every clock point directly upward again. We have two clocks. The time when the hand of each clock points upward is as follows: Therefore, it takes 6 seconds until the hands of both clocks point directly upward. We have N clocks. The hand of the i-th clock (1≤i≤N) rotates through 360° in exactly T_i seconds.\nInitially, the hand of every clock stands still, pointing directly upward.\nNow, Dolphin starts all the clocks simultaneously.\nIn how many seconds will the hand of every clock point directly upward again?",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03633.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤N≤100 \n1≤T_i≤10^{18} \nAll input values are integers.  \nThe correct answer is at most 10^{18} seconds.",
          "ranges": "1 100; 1 10; 100; 10; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\n2\n3",
            "output": "6 We have two clocks. The time when the hand of each clock points upward is as follows: Clock 1: 2, 4, 6, ... seconds after the beginning\nClock 2: 3, 6, 9, ... seconds after the beginning Therefore, it takes 6 seconds until the hands of both clocks point directly upward.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03633.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03633"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03634",
        "title": "The i-th edge (1≤i≤N-1) connects Vertices a_i and b_i, and has a length of c_i.",
        "description": "Score : 400 points Problem StatementYou are given a tree with N vertices.\nHere, a tree is a kind of graph, and more specifically, a connected undirected graph with N-1 edges, where N is the number of its vertices.\nThe i-th edge (1≤i≤N-1) connects Vertices a_i and b_i, and has a length of c_i.\nYou are also given Q queries and an integer K. In the j-th query (1≤j≤Q):\n\nfind the length of the shortest path from Vertex x_j and Vertex y_j via Vertex K. You are given a tree with N vertices.\nHere, a tree is a kind of graph, and more specifically, a connected undirected graph with N-1 edges, where N is the number of its vertices.\nThe i-th edge (1≤i≤N-1) connects Vertices a_i and b_i, and has a length of c_i. You are also given Q queries and an integer K. In the j-th query (1≤j≤Q): Print the responses to the queries in Q lines.\nIn the j-th line j(1≤j≤Q), print the response to the j-th query. The shortest paths for the three queries are as follows: The path for each query must pass Vertex K=2. You are given a tree with N vertices.\nHere, a tree is a kind of graph, and more specifically, a connected undirected graph with N-1 edges, where N is the number of its vertices.\nThe i-th edge (1≤i≤N-1) connects Vertices a_i and b_i, and has a length of c_i. You are also given Q queries and an integer K. In the j-th query (1≤j≤Q): find the length of the shortest path from Vertex x_j and Vertex y_j via Vertex K.",
        "difficulty": "Hard",
        "category": "Trees & Graphs",
        "tags": [
          "math",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03634.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3≤N≤10^5 \n1≤a_i,b_i≤N (1≤i≤N-1) \n1≤c_i≤10^9 (1≤i≤N-1) \nThe given graph is a tree.\n1≤Q≤10^5 \n1≤K≤N \n1≤x_j,y_j≤N (1≤j≤Q) \nx_j≠y_j (1≤j≤Q) \nx_j≠K,y_j≠K (1≤j≤Q)",
          "ranges": "3 10; 1 10; 1 10; 10; 10; 10; 3; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n1 2 1\n1 3 1\n2 4 1\n3 5 1\n3 1\n2 4\n2 3\n4 5",
            "output": "3\n2\n4 The shortest paths for the three queries are as follows: Query 1: Vertex 2 → Vertex 1 → Vertex 2 → Vertex 4 : Length 1+1+1=3 \nQuery 2: Vertex 2 → Vertex 1 → Vertex 3 : Length 1+1=2 \nQuery 3: Vertex 4 → Vertex 2 → Vertex 1 → Vertex 3 → Vertex 5 : Length 1+1+1+1=4",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03634.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03634"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03635",
        "title": "Problem Statement",
        "description": "Score : 100 points Problem StatementIn K-city, there are n streets running east-west, and m streets running north-south. Each street running east-west and each street running north-south cross each other. We will call the smallest area that is surrounded by four streets a block. How many blocks there are in K-city? In K-city, there are n streets running east-west, and m streets running north-south. Each street running east-west and each street running north-south cross each other. We will call the smallest area that is surrounded by four streets a block. How many blocks there are in K-city? Print the number of blocks in K-city. There are six blocks, as shown below: There are one block, as shown below: In K-city, there are n streets running east-west, and m streets running north-south. Each street running east-west and each street running north-south cross each other. We will call the smallest area that is surrounded by four streets a block. How many blocks there are in K-city?",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03635.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ n, m ≤ 100",
          "ranges": "100; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 4",
            "output": "6 There are six blocks, as shown below:",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03635.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03635"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03637",
        "title": "Each a_i is a positive integer.",
        "description": "Score : 400 points Problem StatementWe have a sequence of length N, a = (a_1, a_2, ..., a_N).\nEach a_i is a positive integer.\nSnuke's objective is to permute the element in a so that the following condition is satisfied:\n\nFor each 1 ≤ i ≤ N - 1, the product of a_i and a_{i + 1} is a multiple of 4.\n\nDetermine whether Snuke can achieve his objective. We have a sequence of length N, a = (a_1, a_2, ..., a_N).\nEach a_i is a positive integer. Snuke's objective is to permute the element in a so that the following condition is satisfied: Determine whether Snuke can achieve his objective. If Snuke can achieve his objective, print Yes; otherwise, print No. One solution is (1, 100, 10). It is impossible to permute a so that the condition is satisfied. The condition is already satisfied initially. We have a sequence of length N, a = (a_1, a_2, ..., a_N).\nEach a_i is a positive integer. Snuke's objective is to permute the element in a so that the following condition is satisfied: For each 1 ≤ i ≤ N - 1, the product of a_i and a_{i + 1} is a multiple of 4. Determine whether Snuke can achieve his objective.",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "array"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03637.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 10^5\na_i is an integer.\n1 ≤ a_i ≤ 10^9",
          "ranges": "2 10; 1 10; 10; 10; 2; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n1 10 100",
            "output": "Yes One solution is (1, 100, 10).",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03637.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03637"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03638",
        "title": "Snuke is painting these squares in colors 1, 2, ..., N.",
        "description": "Score : 400 points Problem StatementWe have a grid with H rows and W columns of squares.\nSnuke is painting these squares in colors 1, 2, ..., N.\nHere, the following conditions should be satisfied:\n\nFor each i (1 ≤ i ≤ N), there are exactly a_i squares painted in Color i. Here, a_1 + a_2 + ... + a_N = H W.\nFor each i (1 ≤ i ≤ N), the squares painted in Color i are 4-connected. That is, every square painted in Color i can be reached from every square painted in Color i by repeatedly traveling to a horizontally or vertically adjacent square painted in Color i.\n\nFind a way to paint the squares so that the conditions are satisfied.\nIt can be shown that a solution always exists. We have a grid with H rows and W columns of squares.\nSnuke is painting these squares in colors 1, 2, ..., N.\nHere, the following conditions should be satisfied: Find a way to paint the squares so that the conditions are satisfied.\nIt can be shown that a solution always exists. Here, c_{i j} is the color of the square at the i-th row from the top and j-th column from the left. Below is an example of an invalid solution: This is because the squares painted in Color 1 are not 4-connected. We have a grid with H rows and W columns of squares.\nSnuke is painting these squares in colors 1, 2, ..., N.\nHere, the following conditions should be satisfied: For each i (1 ≤ i ≤ N), there are exactly a_i squares painted in Color i. Here, a_1 + a_2 + ... + a_N = H W.\nFor each i (1 ≤ i ≤ N), the squares painted in Color i are 4-connected. That is, every square painted in Color i can be reached from every square painted in Color i by repeatedly traveling to a horizontally or vertically adjacent square painted in Color i. Find a way to paint the squares so that the conditions are satisfied.\nIt can be shown that a solution always exists.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03638.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ H, W ≤ 100\n1 ≤ N ≤ H W\na_i ≥ 1\na_1 + a_2 + ... + a_N = H W",
          "ranges": "100; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 2\n3\n2 1 1",
            "output": "1 1\n2 3 Below is an example of an invalid solution: 1 2\n3 1 This is because the squares painted in Color 1 are not 4-connected.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03638.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03638"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03639",
        "title": "Each a_i is a positive integer.",
        "description": "Score : 400 points Problem StatementWe have a sequence of length N, a = (a_1, a_2, ..., a_N).\nEach a_i is a positive integer.\nSnuke's objective is to permute the element in a so that the following condition is satisfied:\n\nFor each 1 ≤ i ≤ N - 1, the product of a_i and a_{i + 1} is a multiple of 4.\n\nDetermine whether Snuke can achieve his objective. We have a sequence of length N, a = (a_1, a_2, ..., a_N).\nEach a_i is a positive integer. Snuke's objective is to permute the element in a so that the following condition is satisfied: Determine whether Snuke can achieve his objective. If Snuke can achieve his objective, print Yes; otherwise, print No. One solution is (1, 100, 10). It is impossible to permute a so that the condition is satisfied. The condition is already satisfied initially. We have a sequence of length N, a = (a_1, a_2, ..., a_N).\nEach a_i is a positive integer. Snuke's objective is to permute the element in a so that the following condition is satisfied: For each 1 ≤ i ≤ N - 1, the product of a_i and a_{i + 1} is a multiple of 4. Determine whether Snuke can achieve his objective.",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "array"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03639.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 10^5\na_i is an integer.\n1 ≤ a_i ≤ 10^9",
          "ranges": "2 10; 1 10; 10; 10; 2; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n1 10 100",
            "output": "Yes One solution is (1, 100, 10).",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03639.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03639"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03640",
        "title": "Snuke is painting these squares in colors 1, 2, ..., N.",
        "description": "Score : 400 points Problem StatementWe have a grid with H rows and W columns of squares.\nSnuke is painting these squares in colors 1, 2, ..., N.\nHere, the following conditions should be satisfied:\n\nFor each i (1 ≤ i ≤ N), there are exactly a_i squares painted in Color i. Here, a_1 + a_2 + ... + a_N = H W.\nFor each i (1 ≤ i ≤ N), the squares painted in Color i are 4-connected. That is, every square painted in Color i can be reached from every square painted in Color i by repeatedly traveling to a horizontally or vertically adjacent square painted in Color i.\n\nFind a way to paint the squares so that the conditions are satisfied.\nIt can be shown that a solution always exists. We have a grid with H rows and W columns of squares.\nSnuke is painting these squares in colors 1, 2, ..., N.\nHere, the following conditions should be satisfied: Find a way to paint the squares so that the conditions are satisfied.\nIt can be shown that a solution always exists. Here, c_{i j} is the color of the square at the i-th row from the top and j-th column from the left. Below is an example of an invalid solution: This is because the squares painted in Color 1 are not 4-connected. We have a grid with H rows and W columns of squares.\nSnuke is painting these squares in colors 1, 2, ..., N.\nHere, the following conditions should be satisfied: For each i (1 ≤ i ≤ N), there are exactly a_i squares painted in Color i. Here, a_1 + a_2 + ... + a_N = H W.\nFor each i (1 ≤ i ≤ N), the squares painted in Color i are 4-connected. That is, every square painted in Color i can be reached from every square painted in Color i by repeatedly traveling to a horizontally or vertically adjacent square painted in Color i. Find a way to paint the squares so that the conditions are satisfied.\nIt can be shown that a solution always exists.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03640.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ H, W ≤ 100\n1 ≤ N ≤ H W\na_i ≥ 1\na_1 + a_2 + ... + a_N = H W",
          "ranges": "100; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 2\n3\n2 1 1",
            "output": "1 1\n2 3 Below is an example of an invalid solution: 1 2\n3 1 This is because the squares painted in Color 1 are not 4-connected.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03640.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03640"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03641",
        "title": "We have a permutation of (1, 2, ..., N), p = (p_1, p_2, ..., p_N).",
        "description": "Score : 800 points Problem StatementLet N be a positive even number.\nWe have a permutation of (1, 2, ..., N), p = (p_1, p_2, ..., p_N).\nSnuke is constructing another permutation of (1, 2, ..., N), q, following the procedure below.\nFirst, let q be an empty sequence.\nThen, perform the following operation until p becomes empty:\n\nSelect two adjacent elements in p, and call them x and y in order. Remove x and y from p (reducing the length of p by 2), and insert x and y, preserving the original order, at the beginning of q.\n\nWhen p becomes empty, q will be a permutation of (1, 2, ..., N).\nFind the lexicographically smallest permutation that can be obtained as q. Let N be a positive even number. We have a permutation of (1, 2, ..., N), p = (p_1, p_2, ..., p_N).\nSnuke is constructing another permutation of (1, 2, ..., N), q, following the procedure below. First, let q be an empty sequence.\nThen, perform the following operation until p becomes empty: When p becomes empty, q will be a permutation of (1, 2, ..., N). Find the lexicographically smallest permutation that can be obtained as q. Print the lexicographically smallest permutation, with spaces in between. The solution above is obtained as follows: The solution above is obtained as follows: Let N be a positive even number. We have a permutation of (1, 2, ..., N), p = (p_1, p_2, ..., p_N).\nSnuke is constructing another permutation of (1, 2, ..., N), q, following the procedure below. First, let q be an empty sequence.\nThen, perform the following operation until p becomes empty: Select two adjacent elements in p, and call them x and y in order. Remove x and y from p (reducing the length of p by 2), and insert x and y, preserving the original order, at the beginning of q. When p becomes empty, q will be a permutation of (1, 2, ..., N). Find the lexicographically smallest permutation that can be obtained as q.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "array",
          "math",
          "sorting",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03641.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "N is an even number.\n2 ≤ N ≤ 2 × 10^5\np is a permutation of (1, 2, ..., N).",
          "ranges": "2 2; 2; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n3 2 4 1",
            "output": "3 1 2 4 The solution above is obtained as follows: p\nq\n\n\n\n\n(3, 2, 4, 1)\n()\n\n\n↓\n↓\n\n\n(3, 1)\n(2, 4)\n\n\n↓\n↓\n\n\n()\n(3, 1, 2, 4)",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03641.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03641"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03642",
        "title": "Initially, Cards x_1, x_2, ..., x_N are face up, and the others are face down.",
        "description": "Score : 1200 points Problem StatementThere are infinitely many cards, numbered 1, 2, 3, ...\nInitially, Cards x_1, x_2, ..., x_N are face up, and the others are face down.\nSnuke can perform the following operation repeatedly:\n\nSelect a prime p greater than or equal to 3. Then, select p consecutive cards and flip all of them.\n\nSnuke's objective is to have all the cards face down.\nFind the minimum number of operations required to achieve the objective. There are infinitely many cards, numbered 1, 2, 3, ...\nInitially, Cards x_1, x_2, ..., x_N are face up, and the others are face down. Snuke can perform the following operation repeatedly: Snuke's objective is to have all the cards face down.\nFind the minimum number of operations required to achieve the objective. Print the minimum number of operations required to achieve the objective. Below is one way to achieve the objective in two operations: Below is one way to achieve the objective in three operations: There are infinitely many cards, numbered 1, 2, 3, ...\nInitially, Cards x_1, x_2, ..., x_N are face up, and the others are face down. Snuke can perform the following operation repeatedly: Select a prime p greater than or equal to 3. Then, select p consecutive cards and flip all of them. Snuke's objective is to have all the cards face down.\nFind the minimum number of operations required to achieve the objective.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03642.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 100\n1 ≤ x_1 < x_2 < ... < x_N ≤ 10^7",
          "ranges": "1 100; 100; 10; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\n4 5",
            "output": "2 Below is one way to achieve the objective in two operations: Select p = 5 and flip Cards 1, 2, 3, 4 and 5.\nSelect p = 3 and flip Cards 1, 2 and 3.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03642.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03642"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03643",
        "title": "What is the abbreviation for the N-th round of ABC? Write a program to output the answer.",
        "description": "Score : 100 points Problem StatementThis contest, AtCoder Beginner Contest, is abbreviated as ABC.\nWhen we refer to a specific round of ABC, a three-digit number is appended after ABC. For example, ABC680 is the 680th round of ABC.\nWhat is the abbreviation for the N-th round of ABC? Write a program to output the answer. This contest, AtCoder Beginner Contest, is abbreviated as ABC. When we refer to a specific round of ABC, a three-digit number is appended after ABC. For example, ABC680 is the 680th round of ABC. What is the abbreviation for the N-th round of ABC? Write a program to output the answer. Print the abbreviation for the N-th round of ABC. The 100th round of ABC is ABC100. This contest, AtCoder Beginner Contest, is abbreviated as ABC. When we refer to a specific round of ABC, a three-digit number is appended after ABC. For example, ABC680 is the 680th round of ABC. What is the abbreviation for the N-th round of ABC? Write a program to output the answer.",
        "difficulty": "Hard",
        "category": "Implementation",
        "tags": [
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03643.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "100 ≤ N ≤ 999",
          "ranges": "100 999; 999; 100"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "100",
            "output": "ABC100 The 100th round of ABC is ABC100.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03643.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03643"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03644",
        "title": "For example,",
        "description": "Score : 200 points Problem StatementTakahashi loves numbers divisible by 2.\nYou are given a positive integer N. Among the integers between 1 and N (inclusive), find the one that can be divisible by 2 for the most number of times. The solution is always unique.\nHere, the number of times an integer can be divisible by 2, is how many times the integer can be divided by 2 without remainder.\nFor example,\n\n6 can be divided by 2 once: 6 -> 3.\n8 can be divided by 2 three times: 8 -> 4 -> 2 -> 1.\n3 can be divided by 2 zero times. Takahashi loves numbers divisible by 2. You are given a positive integer N. Among the integers between 1 and N (inclusive), find the one that can be divisible by 2 for the most number of times. The solution is always unique. Here, the number of times an integer can be divisible by 2, is how many times the integer can be divided by 2 without remainder. For example, Print the answer. 4 can be divided by 2 twice, which is the most number of times among 1, 2, ..., 7. Takahashi loves numbers divisible by 2. You are given a positive integer N. Among the integers between 1 and N (inclusive), find the one that can be divisible by 2 for the most number of times. The solution is always unique. Here, the number of times an integer can be divisible by 2, is how many times the integer can be divided by 2 without remainder. For example, 6 can be divided by 2 once: 6 -> 3.\n8 can be divided by 2 three times: 8 -> 4 -> 2 -> 1.\n3 can be divided by 2 zero times.",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03644.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 100",
          "ranges": "1 100; 100; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "7",
            "output": "4 4 can be divided by 2 twice, which is the most number of times among 1, 2, ..., 7.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03644.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03644"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03645",
        "title": "For convenience, we will call them Island 1, Island 2, ..., Island N.",
        "description": "Score : 300 points Problem StatementIn Takahashi Kingdom, there is an archipelago of N islands, called Takahashi Islands.\nFor convenience, we will call them Island 1, Island 2, ..., Island N.\nThere are M kinds of regular boat services between these islands.\nEach service connects two islands. The i-th service connects Island a_i and Island b_i.\nCat Snuke is on Island 1 now, and wants to go to Island N.\nHowever, it turned out that there is no boat service from Island 1 to Island N, so he wants to know whether it is possible to go to Island N by using two boat services.\nHelp him. In Takahashi Kingdom, there is an archipelago of N islands, called Takahashi Islands.\nFor convenience, we will call them Island 1, Island 2, ..., Island N. There are M kinds of regular boat services between these islands.\nEach service connects two islands. The i-th service connects Island a_i and Island b_i. Cat Snuke is on Island 1 now, and wants to go to Island N.\nHowever, it turned out that there is no boat service from Island 1 to Island N, so he wants to know whether it is possible to go to Island N by using two boat services. Help him. If it is possible to go to Island N by using two boat services, print POSSIBLE; otherwise, print IMPOSSIBLE. You have to use three boat services to get to Island 4. You can get to Island 5 by using two boat services: Island 1 -> Island 4 -> Island 5. In Takahashi Kingdom, there is an archipelago of N islands, called Takahashi Islands.\nFor convenience, we will call them Island 1, Island 2, ..., Island N. There are M kinds of regular boat services between these islands.\nEach service connects two islands. The i-th service connects Island a_i and Island b_i. Cat Snuke is on Island 1 now, and wants to go to Island N.\nHowever, it turned out that there is no boat service from Island 1 to Island N, so he wants to know whether it is possible to go to Island N by using two boat services. Help him.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03645.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3 ≤ N ≤ 200 000\n1 ≤ M ≤ 200 000\n1 ≤ a_i < b_i ≤ N\n(a_i, b_i) \\neq (1, N)\nIf i \\neq j, (a_i, b_i) \\neq (a_j, b_j).",
          "ranges": "3 200; 1 200; 200; 200; 3; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 2\n1 2\n2 3",
            "output": "POSSIBLE",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03645.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03645"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03646",
        "title": "Problem Statement",
        "description": "Score : 600 points Problem StatementWe have a sequence of length N consisting of non-negative integers. Consider performing the following operation on this sequence until the largest element in this sequence becomes N-1 or smaller.\n\nDetermine the largest element in the sequence (if there is more than one, choose one). Decrease the value of this element by N, and increase each of the other elements by 1.\n\nIt can be proved that the largest element in the sequence becomes N-1 or smaller after a finite number of operations.\nYou are given an integer K. Find an integer sequence a_i such that the number of times we will perform the above operation is exactly K. It can be shown that there is always such a sequence under the constraints on input and output in this problem. We have a sequence of length N consisting of non-negative integers. Consider performing the following operation on this sequence until the largest element in this sequence becomes N-1 or smaller. It can be proved that the largest element in the sequence becomes N-1 or smaller after a finite number of operations. You are given an integer K. Find an integer sequence a_i such that the number of times we will perform the above operation is exactly K. It can be shown that there is always such a sequence under the constraints on input and output in this problem. Print a solution in the following format: Here, 2 ≤ N ≤ 50 and 0 ≤ a_i ≤ 10^{16} + 1000 must hold. The operation will be performed twice: [2, 2] -> [0, 3] -> [1, 1]. We have a sequence of length N consisting of non-negative integers. Consider performing the following operation on this sequence until the largest element in this sequence becomes N-1 or smaller. Determine the largest element in the sequence (if there is more than one, choose one). Decrease the value of this element by N, and increase each of the other elements by 1. It can be proved that the largest element in the sequence becomes N-1 or smaller after a finite number of operations. You are given an integer K. Find an integer sequence a_i such that the number of times we will perform the above operation is exactly K. It can be shown that there is always such a sequence under the constraints on input and output in this problem.",
        "difficulty": "Hard",
        "category": "Implementation",
        "tags": [
          "array",
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03646.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0 ≤ K ≤ 50 \\times 10^{16}",
          "ranges": "0 50; 50; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "0",
            "output": "4\n3 3 3 3",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03646.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03646"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03647",
        "title": "For convenience, we will call them Island 1, Island 2, ..., Island N.",
        "description": "Score : 300 points Problem StatementIn Takahashi Kingdom, there is an archipelago of N islands, called Takahashi Islands.\nFor convenience, we will call them Island 1, Island 2, ..., Island N.\nThere are M kinds of regular boat services between these islands.\nEach service connects two islands. The i-th service connects Island a_i and Island b_i.\nCat Snuke is on Island 1 now, and wants to go to Island N.\nHowever, it turned out that there is no boat service from Island 1 to Island N, so he wants to know whether it is possible to go to Island N by using two boat services.\nHelp him. In Takahashi Kingdom, there is an archipelago of N islands, called Takahashi Islands.\nFor convenience, we will call them Island 1, Island 2, ..., Island N. There are M kinds of regular boat services between these islands.\nEach service connects two islands. The i-th service connects Island a_i and Island b_i. Cat Snuke is on Island 1 now, and wants to go to Island N.\nHowever, it turned out that there is no boat service from Island 1 to Island N, so he wants to know whether it is possible to go to Island N by using two boat services. Help him. If it is possible to go to Island N by using two boat services, print POSSIBLE; otherwise, print IMPOSSIBLE. You have to use three boat services to get to Island 4. You can get to Island 5 by using two boat services: Island 1 -> Island 4 -> Island 5. In Takahashi Kingdom, there is an archipelago of N islands, called Takahashi Islands.\nFor convenience, we will call them Island 1, Island 2, ..., Island N. There are M kinds of regular boat services between these islands.\nEach service connects two islands. The i-th service connects Island a_i and Island b_i. Cat Snuke is on Island 1 now, and wants to go to Island N.\nHowever, it turned out that there is no boat service from Island 1 to Island N, so he wants to know whether it is possible to go to Island N by using two boat services. Help him.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03647.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3 ≤ N ≤ 200 000\n1 ≤ M ≤ 200 000\n1 ≤ a_i < b_i ≤ N\n(a_i, b_i) \\neq (1, N)\nIf i \\neq j, (a_i, b_i) \\neq (a_j, b_j).",
          "ranges": "3 200; 1 200; 200; 200; 3; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 2\n1 2\n2 3",
            "output": "POSSIBLE",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03647.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03647"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03648",
        "title": "Problem Statement",
        "description": "Score : 600 points Problem StatementWe have a sequence of length N consisting of non-negative integers. Consider performing the following operation on this sequence until the largest element in this sequence becomes N-1 or smaller.\n\nDetermine the largest element in the sequence (if there is more than one, choose one). Decrease the value of this element by N, and increase each of the other elements by 1.\n\nIt can be proved that the largest element in the sequence becomes N-1 or smaller after a finite number of operations.\nYou are given an integer K. Find an integer sequence a_i such that the number of times we will perform the above operation is exactly K. It can be shown that there is always such a sequence under the constraints on input and output in this problem. We have a sequence of length N consisting of non-negative integers. Consider performing the following operation on this sequence until the largest element in this sequence becomes N-1 or smaller. It can be proved that the largest element in the sequence becomes N-1 or smaller after a finite number of operations. You are given an integer K. Find an integer sequence a_i such that the number of times we will perform the above operation is exactly K. It can be shown that there is always such a sequence under the constraints on input and output in this problem. Print a solution in the following format: Here, 2 ≤ N ≤ 50 and 0 ≤ a_i ≤ 10^{16} + 1000 must hold. The operation will be performed twice: [2, 2] -> [0, 3] -> [1, 1]. We have a sequence of length N consisting of non-negative integers. Consider performing the following operation on this sequence until the largest element in this sequence becomes N-1 or smaller. Determine the largest element in the sequence (if there is more than one, choose one). Decrease the value of this element by N, and increase each of the other elements by 1. It can be proved that the largest element in the sequence becomes N-1 or smaller after a finite number of operations. You are given an integer K. Find an integer sequence a_i such that the number of times we will perform the above operation is exactly K. It can be shown that there is always such a sequence under the constraints on input and output in this problem.",
        "difficulty": "Hard",
        "category": "Implementation",
        "tags": [
          "array",
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03648.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0 ≤ K ≤ 50 \\times 10^{16}",
          "ranges": "0 50; 50; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "0",
            "output": "4\n3 3 3 3",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03648.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03648"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03649",
        "title": "You are given the sequence a_i. Find the number of times we will perform the above operation.",
        "description": "Score : 600 points Problem StatementWe have a sequence of length N consisting of non-negative integers. Consider performing the following operation on this sequence until the largest element in this sequence becomes N-1 or smaller. (The operation is the same as the one in Problem D.)\n\nDetermine the largest element in the sequence (if there is more than one, choose one). Decrease the value of this element by N, and increase each of the other elements by 1.\n\nIt can be proved that the largest element in the sequence becomes N-1 or smaller after a finite number of operations.\nYou are given the sequence a_i. Find the number of times we will perform the above operation. We have a sequence of length N consisting of non-negative integers. Consider performing the following operation on this sequence until the largest element in this sequence becomes N-1 or smaller. (The operation is the same as the one in Problem D.) It can be proved that the largest element in the sequence becomes N-1 or smaller after a finite number of operations. You are given the sequence a_i. Find the number of times we will perform the above operation. Print the number of times the operation will be performed. We have a sequence of length N consisting of non-negative integers. Consider performing the following operation on this sequence until the largest element in this sequence becomes N-1 or smaller. (The operation is the same as the one in Problem D.) Determine the largest element in the sequence (if there is more than one, choose one). Decrease the value of this element by N, and increase each of the other elements by 1. It can be proved that the largest element in the sequence becomes N-1 or smaller after a finite number of operations. You are given the sequence a_i. Find the number of times we will perform the above operation.",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03649.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 50\n0 ≤ a_i ≤ 10^{16} + 1000",
          "ranges": "2 50; 0 10; 50; 10; 2; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n3 3 3 3",
            "output": "0",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03649.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03649"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03650",
        "title": "Each a_i is a non-negative integer.",
        "description": "Score : 800 points Problem StatementThere is a directed graph with N vertices and N edges. The vertices are numbered 1, 2, ..., N.\nThe graph has the following N edges: (p_1, 1), (p_2, 2), ..., (p_N, N), and the graph is weakly connected. Here, an edge from Vertex u to Vertex v is denoted by (u, v), and a weakly connected graph is a graph which would be connected if each edge was bidirectional.\nWe would like to assign a value to each of the vertices in this graph so that the following conditions are satisfied. Here, a_i is the value assigned to Vertex i.\n\nEach a_i is a non-negative integer.\nFor each edge (i, j), a_i \\neq a_j holds.\nFor each i and each integer x(0 ≤ x < a_i), there exists a vertex j such that the edge (i, j) exists and x = a_j holds.\n\nDetermine whether there exists such an assignment. There is a directed graph with N vertices and N edges. The vertices are numbered 1, 2, ..., N. The graph has the following N edges: (p_1, 1), (p_2, 2), ..., (p_N, N), and the graph is weakly connected. Here, an edge from Vertex u to Vertex v is denoted by (u, v), and a weakly connected graph is a graph which would be connected if each edge was bidirectional. We would like to assign a value to each of the vertices in this graph so that the following conditions are satisfied. Here, a_i is the value assigned to Vertex i. Determine whether there exists such an assignment. If the assignment is possible, print POSSIBLE; otherwise, print IMPOSSIBLE. The assignment is possible: {a_i} = {0, 1, 0, 1} or {a_i} = {1, 0, 1, 0}. The assignment is possible: {a_i} = {2, 0, 1, 0}. There is a directed graph with N vertices and N edges. The vertices are numbered 1, 2, ..., N. The graph has the following N edges: (p_1, 1), (p_2, 2), ..., (p_N, N), and the graph is weakly connected. Here, an edge from Vertex u to Vertex v is denoted by (u, v), and a weakly connected graph is a graph which would be connected if each edge was bidirectional. We would like to assign a value to each of the vertices in this graph so that the following conditions are satisfied. Here, a_i is the value assigned to Vertex i. Each a_i is a non-negative integer.\nFor each edge (i, j), a_i \\neq a_j holds.\nFor each i and each integer x(0 ≤ x < a_i), there exists a vertex j such that the edge (i, j) exists and x = a_j holds. Determine whether there exists such an assignment.",
        "difficulty": "Hard",
        "category": "Trees & Graphs",
        "tags": [
          "math",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03650.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 200 000\n1 ≤ p_i ≤ N\np_i \\neq i\nThe graph is weakly connected.",
          "ranges": "2 200; 200; 2; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n2 3 4 1",
            "output": "POSSIBLE The assignment is possible: {a_i} = {0, 1, 0, 1} or {a_i} = {1, 0, 1, 0}.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03650.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03650"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03655",
        "title": "The town is divided into square sections by north-south and east-west lines.",
        "description": "Score : 1600 points Problem StatementJoisino is planning on touring Takahashi Town.\nThe town is divided into square sections by north-south and east-west lines.\nWe will refer to the section that is the x-th from the west and the y-th from the north as (x,y).\nJoisino thinks that a touring plan is good if it satisfies the following conditions:\n\n\nLet (p,q) be the section where she starts the tour. Then, X_1 \\leq p \\leq X_2 and Y_1 \\leq q \\leq Y_2 hold.\n\n\nLet (s,t) be the section where she has lunch. Then, X_3 \\leq s \\leq X_4 and Y_3 \\leq t \\leq Y_4 hold.\n\n\nLet (u,v) be the section where she ends the tour. Then, X_5 \\leq u \\leq X_6 and Y_5 \\leq v \\leq Y_6 hold.\n\n\nBy repeatedly moving to the adjacent section (sharing a side), she travels from the starting section to the ending section in the shortest distance, passing the lunch section on the way.\n\n\nTwo touring plans are considered different if at least one of the following is different: the starting section, the lunch section, the ending section, and the sections that are visited on the way.\nJoisino would like to know how many different good touring plans there are.\nFind the number of the different good touring plans.\nSince it may be extremely large, find the count modulo 10^9+7. Joisino is planning on touring Takahashi Town.\nThe town is divided into square sections by north-south and east-west lines.\nWe will refer to the section that is the x-th from the west and the y-th from the north as (x,y). Joisino thinks that a touring plan is good if it satisfies the following conditions: Let (p,q) be the section where she starts the tour. Then, X_1 \\leq p \\leq X_2 and Y_1 \\leq q \\leq Y_2 hold. Let (s,t) be the section where she has lunch. Then, X_3 \\leq s \\leq X_4 and Y_3 \\leq t \\leq Y_4 hold. Let (u,v) be the section where she ends the tour. Then, X_5 \\leq u \\leq X_6 and Y_5 \\leq v \\leq Y_6 hold. By repeatedly moving to the adjacent section (sharing a side), she travels from the starting section to the ending section in the shortest distance, passing the lunch section on the way. Two touring plans are considered different if at least one of the following is different: the starting section, the lunch section, the ending section, and the sections that are visited on the way.\nJoisino would like to know how many different good touring plans there are.\nFind the number of the different good touring plans.\nSince it may be extremely large, find the count modulo 10^9+7. Print the number of the different good touring plans, modulo 10^9+7. The starting section will always be (1,1), and the lunch section will always be (2,2).\nThere are four good touring plans where (3,3) is the ending section, and six good touring plans where (4,3) is the ending section.\nTherefore, the answer is 6+4=10. Joisino is planning on touring Takahashi Town.\nThe town is divided into square sections by north-south and east-west lines.\nWe will refer to the section that is the x-th from the west and the y-th from the north as (x,y). Joisino thinks that a touring plan is good if it satisfies the following conditions: Let (p,q) be the section where she starts the tour. Then, X_1 \\leq p \\leq X_2 and Y_1 \\leq q \\leq Y_2 hold.\n\n\nLet (s,t) be the section where she has lunch. Then, X_3 \\leq s \\leq X_4 and Y_3 \\leq t \\leq Y_4 hold.\n\n\nLet (u,v) be the section where she ends the tour. Then, X_5 \\leq u \\leq X_6 and Y_5 \\leq v \\leq Y_6 hold.\n\n\nBy repeatedly moving to the adjacent section (sharing a side), she travels from the starting section to the ending section in the shortest distance, passing the lunch section on the way. Two touring plans are considered different if at least one of the following is different: the starting section, the lunch section, the ending section, and the sections that are visited on the way.\nJoisino would like to know how many different good touring plans there are.\nFind the number of the different good touring plans.\nSince it may be extremely large, find the count modulo 10^9+7.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03655.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq X_1 \\leq X_2 < X_3 \\leq X_4 < X_5 \\leq X_6 \\leq 10^6\n1 \\leq Y_1 \\leq Y_2 < Y_3 \\leq Y_4 < Y_5 \\leq Y_6 \\leq 10^6",
          "ranges": "2; 4; 2; 4"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1 1 2 2 3 4\n1 1 2 2 3 3",
            "output": "10 The starting section will always be (1,1), and the lunch section will always be (2,2).\nThere are four good touring plans where (3,3) is the ending section, and six good touring plans where (4,3) is the ending section.\nTherefore, the answer is 6+4=10.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03655.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03655"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03665",
        "title": "Takaki will select some of these bags and eat all of the biscuits inside.",
        "description": "Score : 200 points Problem StatementThere are N bags of biscuits. The i-th bag contains A_i biscuits.\nTakaki will select some of these bags and eat all of the biscuits inside.\nHere, it is also possible to select all or none of the bags.\nHe would like to select bags so that the total number of biscuits inside is congruent to P modulo 2.\nHow many such ways to select bags there are? There are N bags of biscuits. The i-th bag contains A_i biscuits. Takaki will select some of these bags and eat all of the biscuits inside.\nHere, it is also possible to select all or none of the bags. He would like to select bags so that the total number of biscuits inside is congruent to P modulo 2.\nHow many such ways to select bags there are? Print the number of ways to select bags so that the total number of biscuits inside is congruent to P modulo 2. There are two ways to select bags so that the total number of biscuits inside is congruent to 0 modulo 2: Two bags are distinguished even if they contain the same number of biscuits. There are N bags of biscuits. The i-th bag contains A_i biscuits. Takaki will select some of these bags and eat all of the biscuits inside.\nHere, it is also possible to select all or none of the bags. He would like to select bags so that the total number of biscuits inside is congruent to P modulo 2.\nHow many such ways to select bags there are?",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03665.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N \\leq 50\nP = 0 or 1\n1 \\leq A_i \\leq 100",
          "ranges": "0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 0\n1 3",
            "output": "2 There are two ways to select bags so that the total number of biscuits inside is congruent to 0 modulo 2: Select neither bag. The total number of biscuits is 0.\nSelect both bags. The total number of biscuits is 4.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03665.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03665"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03670",
        "title": "Takahashi is drawing M polygonal lines L_1, L_2, ..., L_M by connecting these dots.",
        "description": "Score : 1600 points Problem StatementThere are N(N+1)/2 dots arranged to form an equilateral triangle whose sides consist of N dots, as shown below.\nThe j-th dot from the left in the i-th row from the top is denoted by (i, j) (1 \\leq i \\leq N, 1 \\leq j \\leq i).\nAlso, we will call (i+1, j) immediately lower-left to (i, j), and (i+1, j+1) immediately lower-right to (i, j).\n\nTakahashi is drawing M polygonal lines L_1, L_2, ..., L_M by connecting these dots.\nEach L_i starts at (1, 1), and visits the dot that is immediately lower-left or lower-right to the current dots N-1 times.\nMore formally, there exist X_{i,1}, ..., X_{i,N} such that:\n\nL_i connects the N points (1, X_{i,1}), (2, X_{i,2}), ..., (N, X_{i,N}), in this order.\nFor each j=1, 2, ..., N-1, either X_{i,j+1} = X_{i,j} or X_{i,j+1} = X_{i,j}+1 holds.\n\nTakahashi would like to draw these lines so that no part of L_{i+1} is to the left of L_{i}.\nThat is, for each j=1, 2, ..., N, X_{1,j} \\leq X_{2,j} \\leq ... \\leq X_{M,j} must hold.\nAdditionally, there are K conditions on the shape of the lines that must be followed.\nThe i-th condition is denoted by (A_i, B_i, C_i), which means:\n\nIf C_i=0, L_{A_i} must visit the immediately lower-left dot for the B_i-th move.\nIf C_i=1, L_{A_i} must visit the immediately lower-right dot for the B_i-th move.\n\nThat is, X_{A_i, {B_i}+1} = X_{A_i, B_i} + C_i must hold.\nIn how many ways can Takahashi draw M polygonal lines? Find the count modulo 1000000007. There are N(N+1)/2 dots arranged to form an equilateral triangle whose sides consist of N dots, as shown below.\nThe j-th dot from the left in the i-th row from the top is denoted by (i, j) (1 \\leq i \\leq N, 1 \\leq j \\leq i).\nAlso, we will call (i+1, j) immediately lower-left to (i, j), and (i+1, j+1) immediately lower-right to (i, j). Takahashi is drawing M polygonal lines L_1, L_2, ..., L_M by connecting these dots.\nEach L_i starts at (1, 1), and visits the dot that is immediately lower-left or lower-right to the current dots N-1 times.\nMore formally, there exist X_{i,1}, ..., X_{i,N} such that: Takahashi would like to draw these lines so that no part of L_{i+1} is to the left of L_{i}.\nThat is, for each j=1, 2, ..., N, X_{1,j} \\leq X_{2,j} \\leq ... \\leq X_{M,j} must hold. Additionally, there are K conditions on the shape of the lines that must be followed.\nThe i-th condition is denoted by (A_i, B_i, C_i), which means: That is, X_{A_i, {B_i}+1} = X_{A_i, B_i} + C_i must hold. In how many ways can Takahashi draw M polygonal lines? Find the count modulo 1000000007. NotesBefore submission, it is strongly recommended to measure the execution time of your code using \"Custom Test\". Before submission, it is strongly recommended to measure the execution time of your code using \"Custom Test\". Print the number of ways for Takahashi to draw M polygonal lines, modulo 1000000007. There are six ways to draw lines, as shown below. Here, red lines represent L_1, and green lines represent L_2. There are N(N+1)/2 dots arranged to form an equilateral triangle whose sides consist of N dots, as shown below.\nThe j-th dot from the left in the i-th row from the top is denoted by (i, j) (1 \\leq i \\leq N, 1 \\leq j \\leq i).\nAlso, we will call (i+1, j) immediately lower-left to (i, j), and (i+1, j+1) immediately lower-right to (i, j). Takahashi is drawing M polygonal lines L_1, L_2, ..., L_M by connecting these dots.\nEach L_i starts at (1, 1), and visits the dot that is immediately lower-left or lower-right to the current dots N-1 times.\nMore formally, there exist X_{i,1}, ..., X_{i,N} such that: L_i connects the N points (1, X_{i,1}), (2, X_{i,2}), ..., (N, X_{i,N}), in this order.\nFor each j=1, 2, ..., N-1, either X_{i,j+1} = X_{i,j} or X_{i,j+1} = X_{i,j}+1 holds. Takahashi would like to draw these lines so that no part of L_{i+1} is to the left of L_{i}.\nThat is, for each j=1, 2, ..., N, X_{1,j} \\leq X_{2,j} \\leq ... \\leq X_{M,j} must hold. Additionally, there are K conditions on the shape of the lines that must be followed.\nThe i-th condition is denoted by (A_i, B_i, C_i), which means: If C_i=0, L_{A_i} must visit the immediately lower-left dot for the B_i-th move.\nIf C_i=1, L_{A_i} must visit the immediately lower-right dot for the B_i-th move. That is, X_{A_i, {B_i}+1} = X_{A_i, B_i} + C_i must hold. In how many ways can Takahashi draw M polygonal lines? Find the count modulo 1000000007.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03670.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N \\leq 20\n1 \\leq M \\leq 20\n0 \\leq K \\leq (N-1)M\n1 \\leq A_i \\leq M\n1 \\leq B_i \\leq N-1\nC_i = 0 or 1\nNo pair appears more than once as (A_i, B_i).",
          "ranges": "0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 2 1\n1 2 0",
            "output": "6 There are six ways to draw lines, as shown below. Here, red lines represent L_1, and green lines represent L_2.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03670.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03670"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03679",
        "title": "He gets a stomachache if the \"best-by\" date of the food is X+1 or more days earlier, though.",
        "description": "Score : 100 points Problem StatementTakahashi has a strong stomach. He never gets a stomachache from eating something whose \"best-by\" date is at most X days earlier.\nHe gets a stomachache if the \"best-by\" date of the food is X+1 or more days earlier, though.\nOther than that, he finds the food delicious if he eats it not later than the \"best-by\" date. Otherwise, he does not find it delicious.\nTakahashi bought some food A days before the \"best-by\" date, and ate it B days after he bought it.\nWrite a program that outputs delicious if he found it delicious, safe if he did not found it delicious but did not get a stomachache either, and dangerous if he got a stomachache. Takahashi has a strong stomach. He never gets a stomachache from eating something whose \"best-by\" date is at most X days earlier.\nHe gets a stomachache if the \"best-by\" date of the food is X+1 or more days earlier, though. Other than that, he finds the food delicious if he eats it not later than the \"best-by\" date. Otherwise, he does not find it delicious. Takahashi bought some food A days before the \"best-by\" date, and ate it B days after he bought it. Write a program that outputs delicious if he found it delicious, safe if he did not found it delicious but did not get a stomachache either, and dangerous if he got a stomachache. Print delicious if Takahashi found the food delicious; print safe if he neither found it delicious nor got a stomachache; print dangerous if he got a stomachache. He ate the food three days after the \"best-by\" date. It was not delicious or harmful for him. He ate the food by the \"best-by\" date. It was delicious for him. He ate the food five days after the \"best-by\" date. It was harmful for him. Takahashi has a strong stomach. He never gets a stomachache from eating something whose \"best-by\" date is at most X days earlier.\nHe gets a stomachache if the \"best-by\" date of the food is X+1 or more days earlier, though. Other than that, he finds the food delicious if he eats it not later than the \"best-by\" date. Otherwise, he does not find it delicious. Takahashi bought some food A days before the \"best-by\" date, and ate it B days after he bought it. Write a program that outputs delicious if he found it delicious, safe if he did not found it delicious but did not get a stomachache either, and dangerous if he got a stomachache.",
        "difficulty": "Hard",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03679.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ X,A,B ≤ 10^9",
          "ranges": "10; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 3 6",
            "output": "safe He ate the food three days after the \"best-by\" date. It was not delicious or harmful for him.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03679.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03679"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03680",
        "title": "The exercise machine at the gym has N buttons, and exactly one of the buttons is lighten up.",
        "description": "Score : 200 points Problem StatementTakahashi wants to gain muscle, and decides to work out at AtCoder Gym.\nThe exercise machine at the gym has N buttons, and exactly one of the buttons is lighten up.\nThese buttons are numbered 1 through N.\nWhen Button i is lighten up and you press it, the light is turned off, and then Button a_i will be lighten up. It is possible that i=a_i.\nWhen Button i is not lighten up, nothing will happen by pressing it.\nInitially, Button 1 is lighten up. Takahashi wants to quit pressing buttons when Button 2 is lighten up.\nDetermine whether this is possible. If the answer is positive, find the minimum number of times he needs to press buttons. Takahashi wants to gain muscle, and decides to work out at AtCoder Gym. The exercise machine at the gym has N buttons, and exactly one of the buttons is lighten up.\nThese buttons are numbered 1 through N.\nWhen Button i is lighten up and you press it, the light is turned off, and then Button a_i will be lighten up. It is possible that i=a_i.\nWhen Button i is not lighten up, nothing will happen by pressing it. Initially, Button 1 is lighten up. Takahashi wants to quit pressing buttons when Button 2 is lighten up. Determine whether this is possible. If the answer is positive, find the minimum number of times he needs to press buttons. Print -1 if it is impossible to lighten up Button 2.\nOtherwise, print the minimum number of times we need to press buttons in order to lighten up Button 2. Press Button 1, then Button 3. Pressing Button 1 lightens up Button 3, and vice versa, so Button 2 will never be lighten up. Takahashi wants to gain muscle, and decides to work out at AtCoder Gym. The exercise machine at the gym has N buttons, and exactly one of the buttons is lighten up.\nThese buttons are numbered 1 through N.\nWhen Button i is lighten up and you press it, the light is turned off, and then Button a_i will be lighten up. It is possible that i=a_i.\nWhen Button i is not lighten up, nothing will happen by pressing it. Initially, Button 1 is lighten up. Takahashi wants to quit pressing buttons when Button 2 is lighten up. Determine whether this is possible. If the answer is positive, find the minimum number of times he needs to press buttons.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03680.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 10^5\n1 ≤ a_i ≤ N",
          "ranges": "2 10; 10; 2; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n3\n1\n2",
            "output": "2 Press Button 1, then Button 3.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03680.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03680"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03681",
        "title": "Problem Statement",
        "description": "Score : 300 points Problem StatementSnuke has N dogs and M monkeys. He wants them to line up in a row.\nAs a Japanese saying goes, these dogs and monkeys are on bad terms. (\"ken'en no naka\", literally \"the relationship of dogs and monkeys\", means a relationship of mutual hatred.) Snuke is trying to reconsile them, by arranging the animals so that there are neither two adjacent dogs nor two adjacent monkeys.\nHow many such arrangements there are? Find the count modulo 10^9+7 (since animals cannot understand numbers larger than that).\nHere, dogs and monkeys are both distinguishable. Also, two arrangements that result from reversing each other are distinguished. Snuke has N dogs and M monkeys. He wants them to line up in a row. As a Japanese saying goes, these dogs and monkeys are on bad terms. (\"ken'en no naka\", literally \"the relationship of dogs and monkeys\", means a relationship of mutual hatred.) Snuke is trying to reconsile them, by arranging the animals so that there are neither two adjacent dogs nor two adjacent monkeys. How many such arrangements there are? Find the count modulo 10^9+7 (since animals cannot understand numbers larger than that).\nHere, dogs and monkeys are both distinguishable. Also, two arrangements that result from reversing each other are distinguished. Print the number of possible arrangements, modulo 10^9+7. We will denote the dogs by A and B, and the monkeys by C and D. There are eight possible arrangements: ACBD, ADBC, BCAD, BDAC, CADB, CBDA, DACB and DBCA. Snuke has N dogs and M monkeys. He wants them to line up in a row. As a Japanese saying goes, these dogs and monkeys are on bad terms. (\"ken'en no naka\", literally \"the relationship of dogs and monkeys\", means a relationship of mutual hatred.) Snuke is trying to reconsile them, by arranging the animals so that there are neither two adjacent dogs nor two adjacent monkeys. How many such arrangements there are? Find the count modulo 10^9+7 (since animals cannot understand numbers larger than that).\nHere, dogs and monkeys are both distinguishable. Also, two arrangements that result from reversing each other are distinguished.",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03681.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N,M ≤ 10^5",
          "ranges": "10; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 2",
            "output": "8 We will denote the dogs by A and B, and the monkeys by C and D. There are eight possible arrangements: ACBD, ADBC, BCAD, BDAC, CADB, CBDA, DACB and DBCA.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03681.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03681"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03682",
        "title": "Problem Statement",
        "description": "Score : 500 points Problem StatementThere are N towns on a plane. The i-th town is located at the coordinates (x_i,y_i). There may be more than one town at the same coordinates.\nYou can build a road between two towns at coordinates (a,b) and (c,d) for a cost of min(|a-c|,|b-d|) yen (the currency of Japan). It is not possible to build other types of roads.\nYour objective is to build roads so that it will be possible to travel between every pair of towns by traversing roads. At least how much money is necessary to achieve this? There are N towns on a plane. The i-th town is located at the coordinates (x_i,y_i). There may be more than one town at the same coordinates. You can build a road between two towns at coordinates (a,b) and (c,d) for a cost of min(|a-c|,|b-d|) yen (the currency of Japan). It is not possible to build other types of roads. Your objective is to build roads so that it will be possible to travel between every pair of towns by traversing roads. At least how much money is necessary to achieve this? Print the minimum necessary amount of money in order to build roads so that it will be possible to travel between every pair of towns by traversing roads. Build a road between Towns 1 and 2, and another between Towns 2 and 3. The total cost is 2+1=3 yen. There are N towns on a plane. The i-th town is located at the coordinates (x_i,y_i). There may be more than one town at the same coordinates. You can build a road between two towns at coordinates (a,b) and (c,d) for a cost of min(|a-c|,|b-d|) yen (the currency of Japan). It is not possible to build other types of roads. Your objective is to build roads so that it will be possible to travel between every pair of towns by traversing roads. At least how much money is necessary to achieve this?",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "geometry",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03682.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 10^5\n0 ≤ x_i,y_i ≤ 10^9\nAll input values are integers.",
          "ranges": "2 10; 10; 10; 2; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n1 5\n3 9\n7 8",
            "output": "3 Build a road between Towns 1 and 2, and another between Towns 2 and 3. The total cost is 2+1=3 yen.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03682.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03682"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03683",
        "title": "Problem Statement",
        "description": "Score : 300 points Problem StatementSnuke has N dogs and M monkeys. He wants them to line up in a row.\nAs a Japanese saying goes, these dogs and monkeys are on bad terms. (\"ken'en no naka\", literally \"the relationship of dogs and monkeys\", means a relationship of mutual hatred.) Snuke is trying to reconsile them, by arranging the animals so that there are neither two adjacent dogs nor two adjacent monkeys.\nHow many such arrangements there are? Find the count modulo 10^9+7 (since animals cannot understand numbers larger than that).\nHere, dogs and monkeys are both distinguishable. Also, two arrangements that result from reversing each other are distinguished. Snuke has N dogs and M monkeys. He wants them to line up in a row. As a Japanese saying goes, these dogs and monkeys are on bad terms. (\"ken'en no naka\", literally \"the relationship of dogs and monkeys\", means a relationship of mutual hatred.) Snuke is trying to reconsile them, by arranging the animals so that there are neither two adjacent dogs nor two adjacent monkeys. How many such arrangements there are? Find the count modulo 10^9+7 (since animals cannot understand numbers larger than that).\nHere, dogs and monkeys are both distinguishable. Also, two arrangements that result from reversing each other are distinguished. Print the number of possible arrangements, modulo 10^9+7. We will denote the dogs by A and B, and the monkeys by C and D. There are eight possible arrangements: ACBD, ADBC, BCAD, BDAC, CADB, CBDA, DACB and DBCA. Snuke has N dogs and M monkeys. He wants them to line up in a row. As a Japanese saying goes, these dogs and monkeys are on bad terms. (\"ken'en no naka\", literally \"the relationship of dogs and monkeys\", means a relationship of mutual hatred.) Snuke is trying to reconsile them, by arranging the animals so that there are neither two adjacent dogs nor two adjacent monkeys. How many such arrangements there are? Find the count modulo 10^9+7 (since animals cannot understand numbers larger than that).\nHere, dogs and monkeys are both distinguishable. Also, two arrangements that result from reversing each other are distinguished.",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03683.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N,M ≤ 10^5",
          "ranges": "10; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 2",
            "output": "8 We will denote the dogs by A and B, and the monkeys by C and D. There are eight possible arrangements: ACBD, ADBC, BCAD, BDAC, CADB, CBDA, DACB and DBCA.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03683.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03683"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03684",
        "title": "Problem Statement",
        "description": "Score : 500 points Problem StatementThere are N towns on a plane. The i-th town is located at the coordinates (x_i,y_i). There may be more than one town at the same coordinates.\nYou can build a road between two towns at coordinates (a,b) and (c,d) for a cost of min(|a-c|,|b-d|) yen (the currency of Japan). It is not possible to build other types of roads.\nYour objective is to build roads so that it will be possible to travel between every pair of towns by traversing roads. At least how much money is necessary to achieve this? There are N towns on a plane. The i-th town is located at the coordinates (x_i,y_i). There may be more than one town at the same coordinates. You can build a road between two towns at coordinates (a,b) and (c,d) for a cost of min(|a-c|,|b-d|) yen (the currency of Japan). It is not possible to build other types of roads. Your objective is to build roads so that it will be possible to travel between every pair of towns by traversing roads. At least how much money is necessary to achieve this? Print the minimum necessary amount of money in order to build roads so that it will be possible to travel between every pair of towns by traversing roads. Build a road between Towns 1 and 2, and another between Towns 2 and 3. The total cost is 2+1=3 yen. There are N towns on a plane. The i-th town is located at the coordinates (x_i,y_i). There may be more than one town at the same coordinates. You can build a road between two towns at coordinates (a,b) and (c,d) for a cost of min(|a-c|,|b-d|) yen (the currency of Japan). It is not possible to build other types of roads. Your objective is to build roads so that it will be possible to travel between every pair of towns by traversing roads. At least how much money is necessary to achieve this?",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "geometry",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03684.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 10^5\n0 ≤ x_i,y_i ≤ 10^9\nAll input values are integers.",
          "ranges": "2 10; 10; 10; 2; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n1 5\n3 9\n7 8",
            "output": "3 Build a road between Towns 1 and 2, and another between Towns 2 and 3. The total cost is 2+1=3 yen.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03684.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03684"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03685",
        "title": "Here, the curves may not go outside the board or cross each other.",
        "description": "Score : 700 points Problem StatementSnuke is playing a puzzle game.\nIn this game, you are given a rectangular board of dimensions R × C, filled with numbers. Each integer i from 1 through N is written twice, at the coordinates (x_{i,1},y_{i,1}) and (x_{i,2},y_{i,2}).\nThe objective is to draw a curve connecting the pair of points where the same integer is written, for every integer from 1 through N.\nHere, the curves may not go outside the board or cross each other.\nDetermine whether this is possible. Snuke is playing a puzzle game.\nIn this game, you are given a rectangular board of dimensions R × C, filled with numbers. Each integer i from 1 through N is written twice, at the coordinates (x_{i,1},y_{i,1}) and (x_{i,2},y_{i,2}). The objective is to draw a curve connecting the pair of points where the same integer is written, for every integer from 1 through N.\nHere, the curves may not go outside the board or cross each other. Determine whether this is possible. Print YES if the objective is achievable; print NO otherwise. The above figure shows a possible solution. Snuke is playing a puzzle game.\nIn this game, you are given a rectangular board of dimensions R × C, filled with numbers. Each integer i from 1 through N is written twice, at the coordinates (x_{i,1},y_{i,1}) and (x_{i,2},y_{i,2}). The objective is to draw a curve connecting the pair of points where the same integer is written, for every integer from 1 through N.\nHere, the curves may not go outside the board or cross each other. Determine whether this is possible.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03685.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ R,C ≤ 10^8\n1 ≤ N ≤ 10^5\n0 ≤ x_{i,1},x_{i,2} ≤ R(1 ≤ i ≤ N)\n0 ≤ y_{i,1},y_{i,2} ≤ C(1 ≤ i ≤ N)\nAll given points are distinct.\nAll input values are integers.",
          "ranges": "1 10; 10; 10; 1; 1; 0; 1; 0; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 2 3\n0 1 3 1\n1 1 4 1\n2 0 2 2",
            "output": "YES The above figure shows a possible solution.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03685.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03685"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03686",
        "title": "It may not be possible for all of them to sit in their favorite chairs, if nothing is done.",
        "description": "Score : 1000 points Problem StatementThere are M chairs arranged in a line. The coordinate of the i-th chair (1 ≤ i ≤ M) is i.\nN people of the Takahashi clan played too much games, and they are all suffering from backaches. They need to sit in chairs and rest, but they are particular about which chairs they sit in. Specifically, the i-th person wishes to sit in a chair whose coordinate is not greater than L_i, or not less than R_i. Naturally, only one person can sit in the same chair.\nIt may not be possible for all of them to sit in their favorite chairs, if nothing is done.\nAoki, who cares for the health of the people of the Takahashi clan, decides to provide additional chairs so that all of them can sit in chairs at their favorite positions.\nAdditional chairs can be placed at arbitrary real coordinates. Find the minimum required number of additional chairs. There are M chairs arranged in a line. The coordinate of the i-th chair (1 ≤ i ≤ M) is i. N people of the Takahashi clan played too much games, and they are all suffering from backaches. They need to sit in chairs and rest, but they are particular about which chairs they sit in. Specifically, the i-th person wishes to sit in a chair whose coordinate is not greater than L_i, or not less than R_i. Naturally, only one person can sit in the same chair. It may not be possible for all of them to sit in their favorite chairs, if nothing is done.\nAoki, who cares for the health of the people of the Takahashi clan, decides to provide additional chairs so that all of them can sit in chairs at their favorite positions. Additional chairs can be placed at arbitrary real coordinates. Find the minimum required number of additional chairs. Print the minimum required number of additional chairs. The four people can sit in chairs at the coordinates 3, 2, 1 and 4, respectively, and no more chair is needed. If we place additional chairs at the coordinates 0 and 2.5, the seven people can sit at coordinates 0, 5, 3, 2, 6, 1 and 2.5, respectively. There are M chairs arranged in a line. The coordinate of the i-th chair (1 ≤ i ≤ M) is i. N people of the Takahashi clan played too much games, and they are all suffering from backaches. They need to sit in chairs and rest, but they are particular about which chairs they sit in. Specifically, the i-th person wishes to sit in a chair whose coordinate is not greater than L_i, or not less than R_i. Naturally, only one person can sit in the same chair. It may not be possible for all of them to sit in their favorite chairs, if nothing is done.\nAoki, who cares for the health of the people of the Takahashi clan, decides to provide additional chairs so that all of them can sit in chairs at their favorite positions. Additional chairs can be placed at arbitrary real coordinates. Find the minimum required number of additional chairs.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry",
          "sorting",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03686.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N,M ≤ 2 × 10^5\n0 ≤ L_i < R_i ≤ M + 1(1 ≤ i ≤ N)\nAll input values are integers.",
          "ranges": "2; 1; 0; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 4\n0 3\n2 3\n1 3\n3 4",
            "output": "0 The four people can sit in chairs at the coordinates 3, 2, 1 and 4, respectively, and no more chair is needed.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03686.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03686"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03688",
        "title": "We number them from 1 through N.",
        "description": "Score : 700 points Problem StatementThere are N cats.\nWe number them from 1 through N.\nEach of the cats wears a hat.\nCat i says: \"there are exactly a_i different colors among the N - 1 hats worn by the cats except me.\"\nDetermine whether there exists a sequence of colors of the hats that is consistent with the remarks of the cats. There are N cats.\nWe number them from 1 through N. Each of the cats wears a hat.\nCat i says: \"there are exactly a_i different colors among the N - 1 hats worn by the cats except me.\" Determine whether there exists a sequence of colors of the hats that is consistent with the remarks of the cats. Print Yes if there exists a sequence of colors of the hats that is consistent with the remarks of the cats; print No otherwise. For example, if cat 1, 2 and 3 wears red, blue and blue hats, respectively, it is consistent with the remarks of the cats. From the remark of cat 1, we can see that cat 2 and 3 wear hats of the same color.\nAlso, from the remark of cat 2, we can see that cat 1 and 3 wear hats of the same color.\nTherefore, cat 1 and 2 wear hats of the same color, which contradicts the remark of cat 3. There are N cats.\nWe number them from 1 through N. Each of the cats wears a hat.\nCat i says: \"there are exactly a_i different colors among the N - 1 hats worn by the cats except me.\" Determine whether there exists a sequence of colors of the hats that is consistent with the remarks of the cats.",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03688.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 10^5\n1 ≤ a_i ≤ N-1",
          "ranges": "2 10; 10; 2; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n1 2 2",
            "output": "Yes For example, if cat 1, 2 and 3 wears red, blue and blue hats, respectively, it is consistent with the remarks of the cats.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03688.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03688"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03689",
        "title": "The matrix has H rows and W columns.",
        "description": "Score : 700 points Problem StatementYou are given four integers: H, W, h and w (1 ≤ h ≤ H, 1 ≤ w ≤ W).\nDetermine whether there exists a matrix such that all of the following conditions are held, and construct one such matrix if the answer is positive:\n\nThe matrix has H rows and W columns.\nEach element of the matrix is an integer between -10^9 and 10^9 (inclusive).\nThe sum of all the elements of the matrix is positive.\nThe sum of all the elements within every subrectangle with h rows and w columns in the matrix is negative. You are given four integers: H, W, h and w (1 ≤ h ≤ H, 1 ≤ w ≤ W).\nDetermine whether there exists a matrix such that all of the following conditions are held, and construct one such matrix if the answer is positive: If there does not exist a matrix that satisfies all of the conditions, print No. Otherwise, print Yes in the first line, and print a matrix in the subsequent lines in the following format: Here, a_{ij} represents the (i,\\ j) element of the matrix. The sum of all the elements of this matrix is 4, which is positive.\nAlso, in this matrix, there are four subrectangles with 2 rows and 2 columns as shown below. For each of them, the sum of all the elements inside is -1, which is negative. You are given four integers: H, W, h and w (1 ≤ h ≤ H, 1 ≤ w ≤ W).\nDetermine whether there exists a matrix such that all of the following conditions are held, and construct one such matrix if the answer is positive: The matrix has H rows and W columns.\nEach element of the matrix is an integer between -10^9 and 10^9 (inclusive).\nThe sum of all the elements of the matrix is positive.\nThe sum of all the elements within every subrectangle with h rows and w columns in the matrix is negative.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03689.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ h ≤ H ≤ 500\n1 ≤ w ≤ W ≤ 500",
          "ranges": "500; 500; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 3 2 2",
            "output": "Yes\n1 1 1\n1 -4 1\n1 1 1 The sum of all the elements of this matrix is 4, which is positive.\nAlso, in this matrix, there are four subrectangles with 2 rows and 2 columns as shown below. For each of them, the sum of all the elements inside is -1, which is negative.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03689.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03689"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03690",
        "title": "Here, each a_i is a non-negative integer.",
        "description": "Score : 1000 points Problem StatementThere is a sequence of length N: a = (a_1, a_2, ..., a_N).\nHere, each a_i is a non-negative integer.\nSnuke can repeatedly perform the following operation:\n\nLet the XOR of all the elements in a be x. Select an integer i (1 ≤ i ≤ N) and replace a_i with x.\n\nSnuke's objective is to match a with another sequence b = (b_1, b_2, ..., b_N).\nHere, each b_i is a non-negative integer.\nDetermine whether the objective is achievable, and find the minimum necessary number of operations if the answer is positive. There is a sequence of length N: a = (a_1, a_2, ..., a_N).\nHere, each a_i is a non-negative integer. Snuke can repeatedly perform the following operation: Snuke's objective is to match a with another sequence b = (b_1, b_2, ..., b_N).\nHere, each b_i is a non-negative integer. Determine whether the objective is achievable, and find the minimum necessary number of operations if the answer is positive. If the objective is achievable, print the minimum necessary number of operations.\nOtherwise, print -1 instead. At first, the XOR of all the elements of a is 3.\nIf we replace a_1 with 3, a becomes (3, 1, 2). Now, the XOR of all the elements of a is 0.\nIf we replace a_3 with 0, a becomes (3, 1, 0), which matches b. There is a sequence of length N: a = (a_1, a_2, ..., a_N).\nHere, each a_i is a non-negative integer. Snuke can repeatedly perform the following operation: Let the XOR of all the elements in a be x. Select an integer i (1 ≤ i ≤ N) and replace a_i with x. Snuke's objective is to match a with another sequence b = (b_1, b_2, ..., b_N).\nHere, each b_i is a non-negative integer. Determine whether the objective is achievable, and find the minimum necessary number of operations if the answer is positive.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "array",
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03690.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 10^5\na_i and b_i are integers.\n0 ≤ a_i, b_i < 2^{30}",
          "ranges": "2 10; 10; 2; 2; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n0 1 2\n3 1 0",
            "output": "2 At first, the XOR of all the elements of a is 3.\nIf we replace a_1 with 3, a becomes (3, 1, 2). Now, the XOR of all the elements of a is 0.\nIf we replace a_3 with 0, a becomes (3, 1, 0), which matches b.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03690.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03690"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03691",
        "title": "We number them from 1 through N.",
        "description": "Score : 1400 points Problem StatementThere are N turkeys.\nWe number them from 1 through N.\nM men will visit here one by one.\nThe i-th man to visit will take the following action:\n\nIf both turkeys x_i and y_i are alive: selects one of them with equal probability, then eats it.\nIf either turkey x_i or y_i is alive (but not both): eats the alive one.\nIf neither turkey x_i nor y_i is alive: does nothing.\n\nFind the number of pairs (i,\\ j) (1 ≤ i < j ≤ N) such that the following condition is held:\n\nThe probability of both turkeys i and j being alive after all the men took actions, is greater than 0. There are N turkeys.\nWe number them from 1 through N. M men will visit here one by one.\nThe i-th man to visit will take the following action: Find the number of pairs (i,\\ j) (1 ≤ i < j ≤ N) such that the following condition is held: Print the number of pairs (i,\\ j) (1 ≤ i < j ≤ N) such that the condition is held. (i,\\ j) = (1,\\ 3), (2,\\ 3) satisfy the condition. (i,\\ j) = (1,\\ 4) satisfies the condition.\nBoth turkeys 1 and 4 are alive if: There are N turkeys.\nWe number them from 1 through N. M men will visit here one by one.\nThe i-th man to visit will take the following action: If both turkeys x_i and y_i are alive: selects one of them with equal probability, then eats it.\nIf either turkey x_i or y_i is alive (but not both): eats the alive one.\nIf neither turkey x_i nor y_i is alive: does nothing. Find the number of pairs (i,\\ j) (1 ≤ i < j ≤ N) such that the following condition is held: The probability of both turkeys i and j being alive after all the men took actions, is greater than 0.",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03691.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 400\n1 ≤ M ≤ 10^5\n1 ≤ x_i < y_i ≤ N",
          "ranges": "2 400; 1 10; 400; 10; 2; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 1\n1 2",
            "output": "2 (i,\\ j) = (1,\\ 3), (2,\\ 3) satisfy the condition.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03691.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03691"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03692",
        "title": "The vertices are numbered 1 through N, and the edges are numbered 1 through M.",
        "description": "Score : 1600 points Problem StatementThere is a directed graph G with N vertices and M edges.\nThe vertices are numbered 1 through N, and the edges are numbered 1 through M.\nEdge i is directed from x_i to y_i.\nHere, x_i < y_i holds.\nAlso, there are no multiple edges in G.\nConsider selecting a subset of the set of the M edges in G, and removing these edges from G to obtain another graph G'.\nThere are 2^M different possible graphs as G'.\nAlice and Bob play against each other in the following game played on G'.\nFirst, place two pieces on vertices 1 and 2, one on each.\nThen, starting from Alice, Alice and Bob alternately perform the following operation:\n\nSelect an edge i such that there is a piece placed on vertex x_i, and move the piece to vertex y_i (if there are two pieces on vertex x_i, only move one). The two pieces are allowed to be placed on the same vertex.\n\nThe player loses when he/she becomes unable to perform the operation.\nWe assume that both players play optimally.\nAmong the 2^M different possible graphs as G', how many lead to Alice's victory?\nFind the count modulo 10^9+7. There is a directed graph G with N vertices and M edges.\nThe vertices are numbered 1 through N, and the edges are numbered 1 through M.\nEdge i is directed from x_i to y_i.\nHere, x_i < y_i holds.\nAlso, there are no multiple edges in G. Consider selecting a subset of the set of the M edges in G, and removing these edges from G to obtain another graph G'.\nThere are 2^M different possible graphs as G'. Alice and Bob play against each other in the following game played on G'.\nFirst, place two pieces on vertices 1 and 2, one on each.\nThen, starting from Alice, Alice and Bob alternately perform the following operation: The player loses when he/she becomes unable to perform the operation.\nWe assume that both players play optimally. Among the 2^M different possible graphs as G', how many lead to Alice's victory?\nFind the count modulo 10^9+7. Print the number of G' that lead to Alice's victory, modulo 10^9+7. The figure below shows the two possible graphs as G'.\nA graph marked with ○ leads to Alice's victory, and a graph marked with × leads to Bob's victory. The figure below shows the eight possible graphs as G'. There is a directed graph G with N vertices and M edges.\nThe vertices are numbered 1 through N, and the edges are numbered 1 through M.\nEdge i is directed from x_i to y_i.\nHere, x_i < y_i holds.\nAlso, there are no multiple edges in G. Consider selecting a subset of the set of the M edges in G, and removing these edges from G to obtain another graph G'.\nThere are 2^M different possible graphs as G'. Alice and Bob play against each other in the following game played on G'.\nFirst, place two pieces on vertices 1 and 2, one on each.\nThen, starting from Alice, Alice and Bob alternately perform the following operation: Select an edge i such that there is a piece placed on vertex x_i, and move the piece to vertex y_i (if there are two pieces on vertex x_i, only move one). The two pieces are allowed to be placed on the same vertex. The player loses when he/she becomes unable to perform the operation.\nWe assume that both players play optimally. Among the 2^M different possible graphs as G', how many lead to Alice's victory?\nFind the count modulo 10^9+7.",
        "difficulty": "Hard",
        "category": "Trees & Graphs",
        "tags": [
          "math",
          "graph",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03692.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 15\n1 ≤ M ≤ N(N-1)/2\n1 ≤ x_i < y_i ≤ N\nAll (x_i,\\ y_i) are distinct.",
          "ranges": "2 15; 15; 2; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 1\n1 2",
            "output": "1 The figure below shows the two possible graphs as G'.\nA graph marked with ○ leads to Alice's victory, and a graph marked with × leads to Bob's victory.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03692.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03692"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03693",
        "title": "Is this integer a multiple of 4?",
        "description": "Score : 100 points Problem StatementAtCoDeer has three cards, one red, one green and one blue.\nAn integer between 1 and 9 (inclusive) is written on each card: r on the red card, g on the green card and b on the blue card.\nWe will arrange the cards in the order red, green and blue from left to right, and read them as a three-digit integer.\nIs this integer a multiple of 4? AtCoDeer has three cards, one red, one green and one blue.\nAn integer between 1 and 9 (inclusive) is written on each card: r on the red card, g on the green card and b on the blue card.\nWe will arrange the cards in the order red, green and blue from left to right, and read them as a three-digit integer.\nIs this integer a multiple of 4? If the three-digit integer is a multiple of 4, print YES (case-sensitive); otherwise, print NO. 432 is a multiple of 4, and thus YES should be printed. 234 is not a multiple of 4, and thus NO should be printed. AtCoDeer has three cards, one red, one green and one blue.\nAn integer between 1 and 9 (inclusive) is written on each card: r on the red card, g on the green card and b on the blue card.\nWe will arrange the cards in the order red, green and blue from left to right, and read them as a three-digit integer.\nIs this integer a multiple of 4?",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03693.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ r, g, b ≤ 9",
          "ranges": "9; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 3 2",
            "output": "YES 432 is a multiple of 4, and thus YES should be printed.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03693.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03693"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03694",
        "title": "Problem Statement",
        "description": "Score : 200 points Problem StatementIt is only six months until Christmas, and AtCoDeer the reindeer is now planning his travel to deliver gifts.\nThere are N houses along TopCoDeer street. The i-th house is located at coordinate a_i. He has decided to deliver gifts to all these houses.\nFind the minimum distance to be traveled when AtCoDeer can start and end his travel at any positions. It is only six months until Christmas, and AtCoDeer the reindeer is now planning his travel to deliver gifts.\nThere are N houses along TopCoDeer street. The i-th house is located at coordinate a_i. He has decided to deliver gifts to all these houses.\nFind the minimum distance to be traveled when AtCoDeer can start and end his travel at any positions. Print the minimum distance to be traveled. The travel distance of 7 can be achieved by starting at coordinate 9 and traveling straight to coordinate 2.\nIt is not possible to do with a travel distance of less than 7, and thus 7 is the minimum distance to be traveled. There may be more than one house at a position. It is only six months until Christmas, and AtCoDeer the reindeer is now planning his travel to deliver gifts.\nThere are N houses along TopCoDeer street. The i-th house is located at coordinate a_i. He has decided to deliver gifts to all these houses.\nFind the minimum distance to be traveled when AtCoDeer can start and end his travel at any positions.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "geometry",
          "sorting",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03694.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 100\n0 ≤ a_i ≤ 1000\na_i is an integer.",
          "ranges": "1 100; 0 1000; 100; 1000; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n2 3 7 9",
            "output": "7 The travel distance of 7 can be achieved by starting at coordinate 9 and traveling straight to coordinate 2.\nIt is not possible to do with a travel distance of less than 7, and thus 7 is the minimum distance to be traveled.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03694.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03694"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03695",
        "title": "Rating 1-399 : gray",
        "description": "Score : 300 points Problem StatementIn AtCoder, a person who has participated in a contest receives a color, which corresponds to the person's rating as follows:  \n\nRating 1-399 : gray\nRating 400-799 : brown\nRating 800-1199 : green\nRating 1200-1599 : cyan\nRating 1600-1999 : blue\nRating 2000-2399 : yellow\nRating 2400-2799 : orange\nRating 2800-3199 : red\n\nOther than the above, a person whose rating is 3200 or higher can freely pick his/her color, which can be one of the eight colors above or not.\nCurrently, there are N users who have participated in a contest in AtCoder, and the i-th user has a rating of a_i.\nFind the minimum and maximum possible numbers of different colors of the users. In AtCoder, a person who has participated in a contest receives a color, which corresponds to the person's rating as follows: Other than the above, a person whose rating is 3200 or higher can freely pick his/her color, which can be one of the eight colors above or not.\nCurrently, there are N users who have participated in a contest in AtCoder, and the i-th user has a rating of a_i.\nFind the minimum and maximum possible numbers of different colors of the users. Print the minimum possible number of different colors of the users, and the maximum possible number of different colors, with a space in between. The user with rating 2100 is \"yellow\", and the others are \"orange\". There are two different colors. The user with rating 1100 is \"green\", the user with rating 1900 is blue and the user with rating 2800 is \"red\".\nIf the fourth user picks \"red\", and the fifth user picks \"blue\", there are three different colors. This is one possible scenario for the minimum number of colors.\nIf the fourth user picks \"purple\", and the fifth user picks \"black\", there are five different colors. This is one possible scenario for the maximum number of colors. All the users are \"green\", and thus there is one color. In AtCoder, a person who has participated in a contest receives a color, which corresponds to the person's rating as follows: Rating 1-399 : gray\nRating 400-799 : brown\nRating 800-1199 : green\nRating 1200-1599 : cyan\nRating 1600-1999 : blue\nRating 2000-2399 : yellow\nRating 2400-2799 : orange\nRating 2800-3199 : red Other than the above, a person whose rating is 3200 or higher can freely pick his/her color, which can be one of the eight colors above or not.\nCurrently, there are N users who have participated in a contest in AtCoder, and the i-th user has a rating of a_i.\nFind the minimum and maximum possible numbers of different colors of the users.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03695.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 100\n1 ≤ a_i ≤ 4800\na_i is an integer.",
          "ranges": "1 100; 1 4800; 100; 4800; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n2100 2500 2700 2700",
            "output": "2 2 The user with rating 2100 is \"yellow\", and the others are \"orange\". There are two different colors.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03695.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03695"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03696",
        "title": "Here, a correct bracket sequence is defined as follows:",
        "description": "Score : 400 points Problem StatementYou are given a string S of length N consisting of ( and ). Your task is to insert some number of ( and ) into S to obtain a correct bracket sequence.\nHere, a correct bracket sequence is defined as follows:  \n\n() is a correct bracket sequence.\nIf X is a correct bracket sequence, the concatenation of (, X and ) in this order is also a correct bracket sequence.\nIf X and Y are correct bracket sequences, the concatenation of X and Y in this order is also a correct bracket sequence.\nEvery correct bracket sequence can be derived from the rules above.\n\nFind the shortest correct bracket sequence that can be obtained. If there is more than one such sequence, find the lexicographically smallest one. You are given a string S of length N consisting of ( and ). Your task is to insert some number of ( and ) into S to obtain a correct bracket sequence.\nHere, a correct bracket sequence is defined as follows: Find the shortest correct bracket sequence that can be obtained. If there is more than one such sequence, find the lexicographically smallest one. Print the lexicographically smallest string among the shortest correct bracket sequences that can be obtained by inserting some number of ( and ) into S. You are given a string S of length N consisting of ( and ). Your task is to insert some number of ( and ) into S to obtain a correct bracket sequence.\nHere, a correct bracket sequence is defined as follows: () is a correct bracket sequence.\nIf X is a correct bracket sequence, the concatenation of (, X and ) in this order is also a correct bracket sequence.\nIf X and Y are correct bracket sequences, the concatenation of X and Y in this order is also a correct bracket sequence.\nEvery correct bracket sequence can be derived from the rules above. Find the shortest correct bracket sequence that can be obtained. If there is more than one such sequence, find the lexicographically smallest one.",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "string",
          "math",
          "sorting",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03696.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "The length of S is N.\n1 ≤ N ≤ 100\nS consists of ( and ).",
          "ranges": "1 100; 100; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n())",
            "output": "(())",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03696.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03696"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03697",
        "title": "However, if A + B is 10 or greater, output error instead.",
        "description": "Score : 100 points However, if A + B is 10 or greater, output error instead. If A + B is 10 or greater, print the string error (case-sensitive); otherwise, print the value of A + B. You are given two integers A and B as the input. Output the value of A + B. However, if A + B is 10 or greater, output error instead.",
        "difficulty": "Hard",
        "category": "Implementation",
        "tags": [
          "string",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03697.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "A and B are integers.\n1 ≤ A, B ≤ 9",
          "ranges": "9; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "6 3",
            "output": "9",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03697.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03697"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03699",
        "title": "Problem Statement",
        "description": "Score : 300 points Problem StatementYou are taking a computer-based examination. The examination consists of N questions, and the score allocated to the i-th question is s_i. Your answer to each question will be judged as either \"correct\" or \"incorrect\", and your grade will be the sum of the points allocated to questions that are answered correctly. When you finish answering the questions, your answers will be immediately judged and your grade will be displayed... if everything goes well.\nHowever, the examination system is actually flawed, and if your grade is a multiple of 10, the system displays 0 as your grade. Otherwise, your grade is displayed correctly. In this situation, what is the maximum value that can be displayed as your grade? You are taking a computer-based examination. The examination consists of N questions, and the score allocated to the i-th question is s_i. Your answer to each question will be judged as either \"correct\" or \"incorrect\", and your grade will be the sum of the points allocated to questions that are answered correctly. When you finish answering the questions, your answers will be immediately judged and your grade will be displayed... if everything goes well. However, the examination system is actually flawed, and if your grade is a multiple of 10, the system displays 0 as your grade. Otherwise, your grade is displayed correctly. In this situation, what is the maximum value that can be displayed as your grade? Print the maximum value that can be displayed as your grade. Your grade will be 25 if the 10-point and 15-point questions are answered correctly and the 5-point question is not, and this grade will be displayed correctly. Your grade will become 30 if the 5-point question is also answered correctly, but this grade will be incorrectly displayed as 0. Your grade will be 35 if all the questions are answered correctly, and this grade will be displayed correctly. Regardless of whether each question is answered correctly or not, your grade will be a multiple of 10 and displayed as 0. You are taking a computer-based examination. The examination consists of N questions, and the score allocated to the i-th question is s_i. Your answer to each question will be judged as either \"correct\" or \"incorrect\", and your grade will be the sum of the points allocated to questions that are answered correctly. When you finish answering the questions, your answers will be immediately judged and your grade will be displayed... if everything goes well. However, the examination system is actually flawed, and if your grade is a multiple of 10, the system displays 0 as your grade. Otherwise, your grade is displayed correctly. In this situation, what is the maximum value that can be displayed as your grade?",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03699.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "All input values are integers.\n1 ≤ N ≤ 100\n1 ≤ s_i ≤ 100",
          "ranges": "1 100; 1 100; 100; 100; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n5\n10\n15",
            "output": "25 Your grade will be 25 if the 10-point and 15-point questions are answered correctly and the 5-point question is not, and this grade will be displayed correctly. Your grade will become 30 if the 5-point question is also answered correctly, but this grade will be incorrectly displayed as 0.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03699.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03699"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03700",
        "title": "At least how many explosions do you need to cause in order to vanish all the monsters?",
        "description": "Score : 400 points Problem StatementYou are going out for a walk, when you suddenly encounter N monsters. Each monster has a parameter called health, and the health of the i-th monster is h_i at the moment of encounter. A monster will vanish immediately when its health drops to 0 or below.\nFortunately, you are a skilled magician, capable of causing explosions that damage monsters. In one explosion, you can damage monsters as follows:\n\nSelect an alive monster, and cause an explosion centered at that monster. The health of the monster at the center of the explosion will decrease by A, and the health of each of the other monsters will decrease by B. Here, A and B are predetermined parameters, and A > B holds.\n\nAt least how many explosions do you need to cause in order to vanish all the monsters? You are going out for a walk, when you suddenly encounter N monsters. Each monster has a parameter called health, and the health of the i-th monster is h_i at the moment of encounter. A monster will vanish immediately when its health drops to 0 or below. Fortunately, you are a skilled magician, capable of causing explosions that damage monsters. In one explosion, you can damage monsters as follows: At least how many explosions do you need to cause in order to vanish all the monsters? Print the minimum number of explosions that needs to be caused in order to vanish all the monsters. You can vanish all the monsters in two explosion, as follows: You need to cause two explosions centered at each monster, for a total of four. You are going out for a walk, when you suddenly encounter N monsters. Each monster has a parameter called health, and the health of the i-th monster is h_i at the moment of encounter. A monster will vanish immediately when its health drops to 0 or below. Fortunately, you are a skilled magician, capable of causing explosions that damage monsters. In one explosion, you can damage monsters as follows: Select an alive monster, and cause an explosion centered at that monster. The health of the monster at the center of the explosion will decrease by A, and the health of each of the other monsters will decrease by B. Here, A and B are predetermined parameters, and A > B holds. At least how many explosions do you need to cause in order to vanish all the monsters?",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03700.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "All input values are integers.\n1 ≤ N ≤ 10^5\n1 ≤ B < A ≤ 10^9\n1 ≤ h_i ≤ 10^9",
          "ranges": "1 10; 1 10; 10; 10; 10; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 5 3\n8\n7\n4\n2",
            "output": "2 You can vanish all the monsters in two explosion, as follows: First, cause an explosion centered at the monster with 8 health. The healths of the four monsters become 3, 4, 1 and -1, respectively, and the last monster vanishes.\nSecond, cause an explosion centered at the monster with 4 health remaining. The healths of the three remaining monsters become 0, -1 and -2, respectively, and all the monsters are now vanished.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03700.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03700"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03701",
        "title": "Problem Statement",
        "description": "Score : 300 points Problem StatementYou are taking a computer-based examination. The examination consists of N questions, and the score allocated to the i-th question is s_i. Your answer to each question will be judged as either \"correct\" or \"incorrect\", and your grade will be the sum of the points allocated to questions that are answered correctly. When you finish answering the questions, your answers will be immediately judged and your grade will be displayed... if everything goes well.\nHowever, the examination system is actually flawed, and if your grade is a multiple of 10, the system displays 0 as your grade. Otherwise, your grade is displayed correctly. In this situation, what is the maximum value that can be displayed as your grade? You are taking a computer-based examination. The examination consists of N questions, and the score allocated to the i-th question is s_i. Your answer to each question will be judged as either \"correct\" or \"incorrect\", and your grade will be the sum of the points allocated to questions that are answered correctly. When you finish answering the questions, your answers will be immediately judged and your grade will be displayed... if everything goes well. However, the examination system is actually flawed, and if your grade is a multiple of 10, the system displays 0 as your grade. Otherwise, your grade is displayed correctly. In this situation, what is the maximum value that can be displayed as your grade? Print the maximum value that can be displayed as your grade. Your grade will be 25 if the 10-point and 15-point questions are answered correctly and the 5-point question is not, and this grade will be displayed correctly. Your grade will become 30 if the 5-point question is also answered correctly, but this grade will be incorrectly displayed as 0. Your grade will be 35 if all the questions are answered correctly, and this grade will be displayed correctly. Regardless of whether each question is answered correctly or not, your grade will be a multiple of 10 and displayed as 0. You are taking a computer-based examination. The examination consists of N questions, and the score allocated to the i-th question is s_i. Your answer to each question will be judged as either \"correct\" or \"incorrect\", and your grade will be the sum of the points allocated to questions that are answered correctly. When you finish answering the questions, your answers will be immediately judged and your grade will be displayed... if everything goes well. However, the examination system is actually flawed, and if your grade is a multiple of 10, the system displays 0 as your grade. Otherwise, your grade is displayed correctly. In this situation, what is the maximum value that can be displayed as your grade?",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03701.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "All input values are integers.\n1 ≤ N ≤ 100\n1 ≤ s_i ≤ 100",
          "ranges": "1 100; 1 100; 100; 100; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n5\n10\n15",
            "output": "25 Your grade will be 25 if the 10-point and 15-point questions are answered correctly and the 5-point question is not, and this grade will be displayed correctly. Your grade will become 30 if the 5-point question is also answered correctly, but this grade will be incorrectly displayed as 0.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03701.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03701"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03702",
        "title": "At least how many explosions do you need to cause in order to vanish all the monsters?",
        "description": "Score : 400 points Problem StatementYou are going out for a walk, when you suddenly encounter N monsters. Each monster has a parameter called health, and the health of the i-th monster is h_i at the moment of encounter. A monster will vanish immediately when its health drops to 0 or below.\nFortunately, you are a skilled magician, capable of causing explosions that damage monsters. In one explosion, you can damage monsters as follows:\n\nSelect an alive monster, and cause an explosion centered at that monster. The health of the monster at the center of the explosion will decrease by A, and the health of each of the other monsters will decrease by B. Here, A and B are predetermined parameters, and A > B holds.\n\nAt least how many explosions do you need to cause in order to vanish all the monsters? You are going out for a walk, when you suddenly encounter N monsters. Each monster has a parameter called health, and the health of the i-th monster is h_i at the moment of encounter. A monster will vanish immediately when its health drops to 0 or below. Fortunately, you are a skilled magician, capable of causing explosions that damage monsters. In one explosion, you can damage monsters as follows: At least how many explosions do you need to cause in order to vanish all the monsters? Print the minimum number of explosions that needs to be caused in order to vanish all the monsters. You can vanish all the monsters in two explosion, as follows: You need to cause two explosions centered at each monster, for a total of four. You are going out for a walk, when you suddenly encounter N monsters. Each monster has a parameter called health, and the health of the i-th monster is h_i at the moment of encounter. A monster will vanish immediately when its health drops to 0 or below. Fortunately, you are a skilled magician, capable of causing explosions that damage monsters. In one explosion, you can damage monsters as follows: Select an alive monster, and cause an explosion centered at that monster. The health of the monster at the center of the explosion will decrease by A, and the health of each of the other monsters will decrease by B. Here, A and B are predetermined parameters, and A > B holds. At least how many explosions do you need to cause in order to vanish all the monsters?",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03702.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "All input values are integers.\n1 ≤ N ≤ 10^5\n1 ≤ B < A ≤ 10^9\n1 ≤ h_i ≤ 10^9",
          "ranges": "1 10; 1 10; 10; 10; 10; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 5 3\n8\n7\n4\n2",
            "output": "2 You can vanish all the monsters in two explosion, as follows: First, cause an explosion centered at the monster with 8 health. The healths of the four monsters become 3, 4, 1 and -1, respectively, and the last monster vanishes.\nSecond, cause an explosion centered at the monster with 4 health remaining. The healths of the three remaining monsters become 0, -1 and -2, respectively, and all the monsters are now vanished.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03702.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03702"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03703",
        "title": "Problem Statement",
        "description": "Score : 600 points Problem StatementYou are given an integer sequence of length N, a = {a_1, a_2, …, a_N}, and an integer K.\na has N(N+1)/2 non-empty contiguous subsequences, {a_l, a_{l+1}, …, a_r} (1 ≤ l ≤ r ≤ N). Among them, how many have an arithmetic mean that is greater than or equal to K? You are given an integer sequence of length N, a = {a_1, a_2, …, a_N}, and an integer K. a has N(N+1)/2 non-empty contiguous subsequences, {a_l, a_{l+1}, …, a_r} (1 ≤ l ≤ r ≤ N). Among them, how many have an arithmetic mean that is greater than or equal to K? Print the number of the non-empty contiguous subsequences with an arithmetic mean that is greater than or equal to K. All the non-empty contiguous subsequences of a are listed below: Their means are 7, 6, 19/3, 5, 6 and 7, respectively, and five among them are 6 or greater. Note that {a_1} and {a_3} are indistinguishable by the values of their elements, but we count them individually. You are given an integer sequence of length N, a = {a_1, a_2, …, a_N}, and an integer K. a has N(N+1)/2 non-empty contiguous subsequences, {a_l, a_{l+1}, …, a_r} (1 ≤ l ≤ r ≤ N). Among them, how many have an arithmetic mean that is greater than or equal to K?",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03703.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "All input values are integers.\n1 ≤ N ≤ 2 \\times 10^5\n1 ≤ K ≤ 10^9\n1 ≤ a_i ≤ 10^9",
          "ranges": "1 2; 1 10; 1 10; 2; 10; 10; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 6\n7\n5\n7",
            "output": "5 All the non-empty contiguous subsequences of a are listed below: {a_1} = {7}\n{a_1, a_2} = {7, 5}\n{a_1, a_2, a_3} = {7, 5, 7}\n{a_2} = {5}\n{a_2, a_3} = {5, 7}\n{a_3} = {7} Their means are 7, 6, 19/3, 5, 6 and 7, respectively, and five among them are 6 or greater. Note that {a_1} and {a_3} are indistinguishable by the values of their elements, but we count them individually.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03703.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03703"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03704",
        "title": "You are given a positive integer D. How many positive integers N satisfy rev(N) = N + D?",
        "description": "Score : 800 points Problem StatementFor a positive integer n, we denote the integer obtained by reversing the decimal notation of n (without leading zeroes) by rev(n). For example, rev(123) = 321 and rev(4000) = 4.\nYou are given a positive integer D. How many positive integers N satisfy rev(N) = N + D? For a positive integer n, we denote the integer obtained by reversing the decimal notation of n (without leading zeroes) by rev(n). For example, rev(123) = 321 and rev(4000) = 4. You are given a positive integer D. How many positive integers N satisfy rev(N) = N + D? Print the number of the positive integers N such that rev(N) = N + D. There are two positive integers N such that rev(N) = N + 63: N = 18 and 29. There are no positive integers N such that rev(N) = N + 75. For a positive integer n, we denote the integer obtained by reversing the decimal notation of n (without leading zeroes) by rev(n). For example, rev(123) = 321 and rev(4000) = 4. You are given a positive integer D. How many positive integers N satisfy rev(N) = N + D?",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03704.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "D is an integer.\n1 ≤ D < 10^9",
          "ranges": "1 10; 10; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "63",
            "output": "2 There are two positive integers N such that rev(N) = N + 63: N = 18 and 29.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03704.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03704"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03705",
        "title": "We are interested in the sum of those N integers. How many different possible sums there are?",
        "description": "Score : 200 points Problem StatementSnuke has N integers. Among them, the smallest is A, and the largest is B.\nWe are interested in the sum of those N integers. How many different possible sums there are? Snuke has N integers. Among them, the smallest is A, and the largest is B.\nWe are interested in the sum of those N integers. How many different possible sums there are? Print the number of the different possible sums. There are five possible sums: 18=4+4+4+6, 19=4+4+5+6, 20=4+5+5+6, 21=4+5+6+6 and 22=4+6+6+6. Snuke has N integers. Among them, the smallest is A, and the largest is B.\nWe are interested in the sum of those N integers. How many different possible sums there are?",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03705.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N,A,B ≤ 10^9\nA and B are integers.",
          "ranges": "10; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 4 6",
            "output": "5 There are five possible sums: 18=4+4+4+6, 19=4+4+5+6, 20=4+5+5+6, 21=4+5+6+6 and 22=4+6+6+6.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03705.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03705"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03707",
        "title": "Process all the queries.",
        "description": "Score : 700 points Problem StatementNuske has a grid with N rows and M columns of squares. The rows are numbered 1 through N from top to bottom, and the columns are numbered 1 through M from left to right.\nEach square in the grid is painted in either blue or white. If S_{i,j} is 1, the square at the i-th row and j-th column is blue; if S_{i,j} is 0, the square is white.\nFor every pair of two blue square a and b, there is at most one path that starts from a, repeatedly proceeds to an adjacent (side by side) blue square and finally reaches b, without traversing the same square more than once.\nPhantom Thnook, Nuske's eternal rival, gives Q queries to Nuske. The i-th query consists of four integers x_{i,1}, y_{i,1}, x_{i,2} and y_{i,2} and asks him the following: when the rectangular region of the grid bounded by (and including) the x_{i,1}-th row, x_{i,2}-th row, y_{i,1}-th column and y_{i,2}-th column is cut out, how many connected components consisting of blue squares there are in the region?\nProcess all the queries. Nuske has a grid with N rows and M columns of squares. The rows are numbered 1 through N from top to bottom, and the columns are numbered 1 through M from left to right.\nEach square in the grid is painted in either blue or white. If S_{i,j} is 1, the square at the i-th row and j-th column is blue; if S_{i,j} is 0, the square is white.\nFor every pair of two blue square a and b, there is at most one path that starts from a, repeatedly proceeds to an adjacent (side by side) blue square and finally reaches b, without traversing the same square more than once. Phantom Thnook, Nuske's eternal rival, gives Q queries to Nuske. The i-th query consists of four integers x_{i,1}, y_{i,1}, x_{i,2} and y_{i,2} and asks him the following: when the rectangular region of the grid bounded by (and including) the x_{i,1}-th row, x_{i,2}-th row, y_{i,1}-th column and y_{i,2}-th column is cut out, how many connected components consisting of blue squares there are in the region? Process all the queries. For each query, print the number of the connected components consisting of blue squares in the region. In the first query, the whole grid is specified. There are three components consisting of blue squares, and thus 3 should be printed. In the second query, the region within the red frame is specified. There are two components consisting of blue squares, and thus 2 should be printed.\nNote that squares that belong to the same component in the original grid may belong to different components. Nuske has a grid with N rows and M columns of squares. The rows are numbered 1 through N from top to bottom, and the columns are numbered 1 through M from left to right.\nEach square in the grid is painted in either blue or white. If S_{i,j} is 1, the square at the i-th row and j-th column is blue; if S_{i,j} is 0, the square is white.\nFor every pair of two blue square a and b, there is at most one path that starts from a, repeatedly proceeds to an adjacent (side by side) blue square and finally reaches b, without traversing the same square more than once. Phantom Thnook, Nuske's eternal rival, gives Q queries to Nuske. The i-th query consists of four integers x_{i,1}, y_{i,1}, x_{i,2} and y_{i,2} and asks him the following: when the rectangular region of the grid bounded by (and including) the x_{i,1}-th row, x_{i,2}-th row, y_{i,1}-th column and y_{i,2}-th column is cut out, how many connected components consisting of blue squares there are in the region? Process all the queries.",
        "difficulty": "Hard",
        "category": "Trees & Graphs",
        "tags": [
          "math",
          "graph",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03707.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N,M ≤ 2000\n1 ≤ Q ≤ 200000\nS_{i,j} is either 0 or 1.\nS_{i,j} satisfies the condition explained in the statement.\n1 ≤ x_{i,1} ≤ x_{i,2} ≤ N(1 ≤ i ≤ Q)\n1 ≤ y_{i,1} ≤ y_{i,2} ≤ M(1 ≤ i ≤ Q)",
          "ranges": "1 200000; 2000; 200000; 1; 1; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 4 4\n1101\n0110\n1101\n1 1 3 4\n1 1 3 1\n2 2 3 4\n1 2 2 4",
            "output": "3\n2\n2\n2 In the first query, the whole grid is specified. There are three components consisting of blue squares, and thus 3 should be printed. In the second query, the region within the red frame is specified. There are two components consisting of blue squares, and thus 2 should be printed.\nNote that squares that belong to the same component in the original grid may belong to different components.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03707.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03707"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03708",
        "title": "How many possible candidates of the value of Nukes's integer there are?",
        "description": "Score : 900 points Problem StatementNukes has an integer that can be represented as the bitwise OR of one or more integers between A and B (inclusive).\nHow many possible candidates of the value of Nukes's integer there are? Nukes has an integer that can be represented as the bitwise OR of one or more integers between A and B (inclusive).\nHow many possible candidates of the value of Nukes's integer there are? Print the number of possible candidates of the value of Nukes's integer. In this case, A=7 and B=9. There are four integers that can be represented as the bitwise OR of a non-empty subset of {7, 8, 9}: 7, 8, 9 and 15. Nukes has an integer that can be represented as the bitwise OR of one or more integers between A and B (inclusive).\nHow many possible candidates of the value of Nukes's integer there are?",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03708.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ A ≤ B < 2^{60}\nA and B are integers.",
          "ranges": "2; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "7\n9",
            "output": "4 In this case, A=7 and B=9. There are four integers that can be represented as the bitwise OR of a non-empty subset of {7, 8, 9}: 7, 8, 9 and 15.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03708.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03708"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03709",
        "title": "On a number line, there are N copies of Takahashi, numbered 1 through N.",
        "description": "Score : 1200 points Problem StatementTakahashi is an expert of Clone Jutsu, a secret art that creates copies of his body.\nOn a number line, there are N copies of Takahashi, numbered 1 through N.\nThe i-th copy is located at position X_i and starts walking with velocity V_i in the positive direction at time 0.\nKenus is a master of Transformation Jutsu, and not only can he change into a person other than himself, but he can also transform another person into someone else.\nKenus can select some of the copies of Takahashi at time 0, and transform them into copies of Aoki, another Ninja.\nThe walking velocity of a copy does not change when it transforms.\nFrom then on, whenever a copy of Takahashi and a copy of Aoki are at the same coordinate, that copy of Takahashi transforms into a copy of Aoki.\nAmong the 2^N ways to transform some copies of Takahashi into copies of Aoki at time 0, in how many ways will all the copies of Takahashi become copies of Aoki after a sufficiently long time?\nFind the count modulo 10^9+7. Takahashi is an expert of Clone Jutsu, a secret art that creates copies of his body. On a number line, there are N copies of Takahashi, numbered 1 through N.\nThe i-th copy is located at position X_i and starts walking with velocity V_i in the positive direction at time 0. Kenus is a master of Transformation Jutsu, and not only can he change into a person other than himself, but he can also transform another person into someone else. Kenus can select some of the copies of Takahashi at time 0, and transform them into copies of Aoki, another Ninja.\nThe walking velocity of a copy does not change when it transforms.\nFrom then on, whenever a copy of Takahashi and a copy of Aoki are at the same coordinate, that copy of Takahashi transforms into a copy of Aoki. Among the 2^N ways to transform some copies of Takahashi into copies of Aoki at time 0, in how many ways will all the copies of Takahashi become copies of Aoki after a sufficiently long time?\nFind the count modulo 10^9+7. Print the number of the ways that cause all the copies of Takahashi to turn into copies of Aoki after a sufficiently long time, modulo 10^9+7. All copies of Takahashi will turn into copies of Aoki after a sufficiently long time if Kenus transforms one of the following sets of copies of Takahashi into copies of Aoki: (2), (3), (1,2), (1,3), (2,3) and (1,2,3). Takahashi is an expert of Clone Jutsu, a secret art that creates copies of his body. On a number line, there are N copies of Takahashi, numbered 1 through N.\nThe i-th copy is located at position X_i and starts walking with velocity V_i in the positive direction at time 0. Kenus is a master of Transformation Jutsu, and not only can he change into a person other than himself, but he can also transform another person into someone else. Kenus can select some of the copies of Takahashi at time 0, and transform them into copies of Aoki, another Ninja.\nThe walking velocity of a copy does not change when it transforms.\nFrom then on, whenever a copy of Takahashi and a copy of Aoki are at the same coordinate, that copy of Takahashi transforms into a copy of Aoki. Among the 2^N ways to transform some copies of Takahashi into copies of Aoki at time 0, in how many ways will all the copies of Takahashi become copies of Aoki after a sufficiently long time?\nFind the count modulo 10^9+7.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03709.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 200000\n1 ≤ X_i,V_i ≤ 10^9(1 ≤ i ≤ N)\nX_i and V_i are integers.\nAll X_i are distinct.\nAll V_i are distinct.",
          "ranges": "1 200000; 200000; 10; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n2 5\n6 1\n3 7",
            "output": "6 All copies of Takahashi will turn into copies of Aoki after a sufficiently long time if Kenus transforms one of the following sets of copies of Takahashi into copies of Aoki: (2), (3), (1,2), (1,3), (2,3) and (1,2,3).",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03709.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03709"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03710",
        "title": "(a,b) and (b,a) have the same Euclidean step count.",
        "description": "Score : 1700 points Problem StatementKenus, the organizer of International Euclidean Olympiad, is seeking a pair of two integers that requires many steps to find its greatest common divisor using the Euclidean algorithm.\nYou are given Q queries. The i-th query is represented as a pair of two integers X_i and Y_i, and asks you the following: among all pairs of two integers (x,y) such that 1 ≤ x ≤ X_i and 1 ≤ y ≤ Y_i, find the maximum Euclidean step count (defined below), and how many pairs have the maximum step count, modulo 10^9+7.\nProcess all the queries. Here, the Euclidean step count of a pair of two non-negative integers (a,b) is defined as follows:\n\n(a,b) and (b,a) have the same Euclidean step count.\n(0,a) has a Euclidean step count of 0.\nIf a > 0 and a ≤ b, let p and q be a unique pair of integers such that b=pa+q and 0 ≤ q < a. Then, the Euclidean step count of (a,b) is the Euclidean step count of (q,a) plus 1. Kenus, the organizer of International Euclidean Olympiad, is seeking a pair of two integers that requires many steps to find its greatest common divisor using the Euclidean algorithm. You are given Q queries. The i-th query is represented as a pair of two integers X_i and Y_i, and asks you the following: among all pairs of two integers (x,y) such that 1 ≤ x ≤ X_i and 1 ≤ y ≤ Y_i, find the maximum Euclidean step count (defined below), and how many pairs have the maximum step count, modulo 10^9+7. Process all the queries. Here, the Euclidean step count of a pair of two non-negative integers (a,b) is defined as follows: For each query, print the maximum Euclidean step count, and the number of the pairs that have the maximum step count, modulo 10^9+7, with a space in between. In the first query, (2,3), (3,2), (3,4) and (4,3) have a Euclidean step count of 2. No pairs have a step count of more than 2. In the second query, (5,8) has a Euclidean step count of 4. In the third query, (5,8), (8,5), (7,11), (8,11), (11,7), (11,8), (12,7) have a Euclidean step count of 4. Kenus, the organizer of International Euclidean Olympiad, is seeking a pair of two integers that requires many steps to find its greatest common divisor using the Euclidean algorithm. You are given Q queries. The i-th query is represented as a pair of two integers X_i and Y_i, and asks you the following: among all pairs of two integers (x,y) such that 1 ≤ x ≤ X_i and 1 ≤ y ≤ Y_i, find the maximum Euclidean step count (defined below), and how many pairs have the maximum step count, modulo 10^9+7. Process all the queries. Here, the Euclidean step count of a pair of two non-negative integers (a,b) is defined as follows: (a,b) and (b,a) have the same Euclidean step count.\n(0,a) has a Euclidean step count of 0.\nIf a > 0 and a ≤ b, let p and q be a unique pair of integers such that b=pa+q and 0 ≤ q < a. Then, the Euclidean step count of (a,b) is the Euclidean step count of (q,a) plus 1.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03710.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ Q ≤ 3 × 10^5\n1 ≤ X_i,Y_i ≤ 10^{18}(1 ≤ i ≤ Q)",
          "ranges": "1 3; 3; 10; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n4 4\n6 10\n12 11",
            "output": "2 4\n4 1\n4 7 In the first query, (2,3), (3,2), (3,4) and (4,3) have a Euclidean step count of 2. No pairs have a step count of more than 2. In the second query, (5,8) has a Euclidean step count of 4. In the third query, (5,8), (8,5), (7,11), (8,11), (11,7), (11,8), (12,7) have a Euclidean step count of 4.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03710.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03710"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03711",
        "title": "Given two integers x and y (1 ≤ x < y ≤ 12), determine whether they belong to the same group.",
        "description": "Score : 100 points Problem StatementBased on some criterion, Snuke divided the integers from 1 through 12 into three groups as shown in the figure below.\nGiven two integers x and y (1 ≤ x < y ≤ 12), determine whether they belong to the same group. Based on some criterion, Snuke divided the integers from 1 through 12 into three groups as shown in the figure below.\nGiven two integers x and y (1 ≤ x < y ≤ 12), determine whether they belong to the same group. If x and y belong to the same group, print Yes; otherwise, print No. Based on some criterion, Snuke divided the integers from 1 through 12 into three groups as shown in the figure below.\nGiven two integers x and y (1 ≤ x < y ≤ 12), determine whether they belong to the same group.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03711.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "x and y are integers.\n1 ≤ x < y ≤ 12",
          "ranges": "12; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1 3",
            "output": "Yes",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03711.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03711"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03712",
        "title": "Each pixel is represented by a lowercase English letter.",
        "description": "Score : 200 points Problem StatementYou are given a image with a height of H pixels and a width of W pixels.\nEach pixel is represented by a lowercase English letter.\nThe pixel at the i-th row from the top and j-th column from the left is a_{ij}.\nPut a box around this image and output the result. The box should consist of # and have a thickness of 1. You are given a image with a height of H pixels and a width of W pixels.\nEach pixel is represented by a lowercase English letter.\nThe pixel at the i-th row from the top and j-th column from the left is a_{ij}. Put a box around this image and output the result. The box should consist of # and have a thickness of 1. Print the image surrounded by a box that consists of # and has a thickness of 1. You are given a image with a height of H pixels and a width of W pixels.\nEach pixel is represented by a lowercase English letter.\nThe pixel at the i-th row from the top and j-th column from the left is a_{ij}. Put a box around this image and output the result. The box should consist of # and have a thickness of 1.",
        "difficulty": "Hard",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03712.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ H, W ≤ 100\na_{ij} is a lowercase English letter.",
          "ranges": "100; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 3\nabc\narc",
            "output": "#####\n#abc#\n#arc#\n#####",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03712.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03712"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03713",
        "title": "Snuke is dividing this bar into exactly three pieces.",
        "description": "Score : 400 points Problem StatementThere is a bar of chocolate with a height of H blocks and a width of W blocks.\nSnuke is dividing this bar into exactly three pieces.\nHe can only cut the bar along borders of blocks, and the shape of each piece must be a rectangle.\nSnuke is trying to divide the bar as evenly as possible.\nMore specifically, he is trying to minimize S_{max} - S_{min}, where S_{max} is the area (the number of blocks contained) of the largest piece, and S_{min} is the area of the smallest piece.\nFind the minimum possible value of S_{max} - S_{min}. There is a bar of chocolate with a height of H blocks and a width of W blocks.\nSnuke is dividing this bar into exactly three pieces.\nHe can only cut the bar along borders of blocks, and the shape of each piece must be a rectangle. Snuke is trying to divide the bar as evenly as possible.\nMore specifically, he is trying to minimize S_{max} - S_{min}, where S_{max} is the area (the number of blocks contained) of the largest piece, and S_{min} is the area of the smallest piece.\nFind the minimum possible value of S_{max} - S_{min}. Print the minimum possible value of S_{max} - S_{min}. In the division below, S_{max} - S_{min} = 5 - 5 = 0. In the division below, S_{max} - S_{min} = 8 - 6 = 2. In the division below, S_{max} - S_{min} = 10 - 6 = 4. There is a bar of chocolate with a height of H blocks and a width of W blocks.\nSnuke is dividing this bar into exactly three pieces.\nHe can only cut the bar along borders of blocks, and the shape of each piece must be a rectangle. Snuke is trying to divide the bar as evenly as possible.\nMore specifically, he is trying to minimize S_{max} - S_{min}, where S_{max} is the area (the number of blocks contained) of the largest piece, and S_{min} is the area of the smallest piece.\nFind the minimum possible value of S_{max} - S_{min}.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03713.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ H, W ≤ 10^5",
          "ranges": "10; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 5",
            "output": "0 In the division below, S_{max} - S_{min} = 5 - 5 = 0.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03713.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03713"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03714",
        "title": "There is a numerical sequence of length 3N, a = (a_1, a_2, ..., a_{3N}).",
        "description": "Score : 500 points Problem StatementLet N be a positive integer.\nThere is a numerical sequence of length 3N, a = (a_1, a_2, ..., a_{3N}).\nSnuke is constructing a new sequence of length 2N, a', by removing exactly N elements from a without changing the order of the remaining elements.\nHere, the score of a' is defined as follows: (the sum of the elements in the first half of a') - (the sum of the elements in the second half of a').\nFind the maximum possible score of a'. Let N be a positive integer. There is a numerical sequence of length 3N, a = (a_1, a_2, ..., a_{3N}).\nSnuke is constructing a new sequence of length 2N, a', by removing exactly N elements from a without changing the order of the remaining elements.\nHere, the score of a' is defined as follows: (the sum of the elements in the first half of a') - (the sum of the elements in the second half of a'). Find the maximum possible score of a'. Partial Score\nIn the test set worth 300 points, N ≤ 1000. Print the maximum possible score of a'. When a_2 and a_6 are removed, a' will be (3, 4, 1, 5), which has a score of (3 + 4) - (1 + 5) = 1. For example, when a_1 are removed, a' will be (2, 3), which has a score of 2 - 3 = -1. For example, when a_2, a_3 and a_9 are removed, a' will be (8, 7, 4, 6, 5, 3), which has a score of (8 + 7 + 4) - (6 + 5 + 3) = 5. Let N be a positive integer. There is a numerical sequence of length 3N, a = (a_1, a_2, ..., a_{3N}).\nSnuke is constructing a new sequence of length 2N, a', by removing exactly N elements from a without changing the order of the remaining elements.\nHere, the score of a' is defined as follows: (the sum of the elements in the first half of a') - (the sum of the elements in the second half of a'). Find the maximum possible score of a'.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "array",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03714.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10^5\na_i is an integer.\n1 ≤ a_i ≤ 10^9",
          "ranges": "1 10; 1 10; 10; 10; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\n3 1 4 1 5 9",
            "output": "1 When a_2 and a_6 are removed, a' will be (3, 4, 1, 5), which has a score of (3 + 4) - (1 + 5) = 1.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03714.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03714"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03715",
        "title": "Snuke is dividing this bar into exactly three pieces.",
        "description": "Score : 400 points Problem StatementThere is a bar of chocolate with a height of H blocks and a width of W blocks.\nSnuke is dividing this bar into exactly three pieces.\nHe can only cut the bar along borders of blocks, and the shape of each piece must be a rectangle.\nSnuke is trying to divide the bar as evenly as possible.\nMore specifically, he is trying to minimize S_{max} - S_{min}, where S_{max} is the area (the number of blocks contained) of the largest piece, and S_{min} is the area of the smallest piece.\nFind the minimum possible value of S_{max} - S_{min}. There is a bar of chocolate with a height of H blocks and a width of W blocks.\nSnuke is dividing this bar into exactly three pieces.\nHe can only cut the bar along borders of blocks, and the shape of each piece must be a rectangle. Snuke is trying to divide the bar as evenly as possible.\nMore specifically, he is trying to minimize S_{max} - S_{min}, where S_{max} is the area (the number of blocks contained) of the largest piece, and S_{min} is the area of the smallest piece.\nFind the minimum possible value of S_{max} - S_{min}. Print the minimum possible value of S_{max} - S_{min}. In the division below, S_{max} - S_{min} = 5 - 5 = 0. In the division below, S_{max} - S_{min} = 8 - 6 = 2. In the division below, S_{max} - S_{min} = 10 - 6 = 4. There is a bar of chocolate with a height of H blocks and a width of W blocks.\nSnuke is dividing this bar into exactly three pieces.\nHe can only cut the bar along borders of blocks, and the shape of each piece must be a rectangle. Snuke is trying to divide the bar as evenly as possible.\nMore specifically, he is trying to minimize S_{max} - S_{min}, where S_{max} is the area (the number of blocks contained) of the largest piece, and S_{min} is the area of the smallest piece.\nFind the minimum possible value of S_{max} - S_{min}.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03715.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ H, W ≤ 10^5",
          "ranges": "10; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 5",
            "output": "0 In the division below, S_{max} - S_{min} = 5 - 5 = 0.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03715.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03715"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03716",
        "title": "There is a numerical sequence of length 3N, a = (a_1, a_2, ..., a_{3N}).",
        "description": "Score : 500 points Problem StatementLet N be a positive integer.\nThere is a numerical sequence of length 3N, a = (a_1, a_2, ..., a_{3N}).\nSnuke is constructing a new sequence of length 2N, a', by removing exactly N elements from a without changing the order of the remaining elements.\nHere, the score of a' is defined as follows: (the sum of the elements in the first half of a') - (the sum of the elements in the second half of a').\nFind the maximum possible score of a'. Let N be a positive integer. There is a numerical sequence of length 3N, a = (a_1, a_2, ..., a_{3N}).\nSnuke is constructing a new sequence of length 2N, a', by removing exactly N elements from a without changing the order of the remaining elements.\nHere, the score of a' is defined as follows: (the sum of the elements in the first half of a') - (the sum of the elements in the second half of a'). Find the maximum possible score of a'. Partial Score\nIn the test set worth 300 points, N ≤ 1000. Print the maximum possible score of a'. When a_2 and a_6 are removed, a' will be (3, 4, 1, 5), which has a score of (3 + 4) - (1 + 5) = 1. For example, when a_1 are removed, a' will be (2, 3), which has a score of 2 - 3 = -1. For example, when a_2, a_3 and a_9 are removed, a' will be (8, 7, 4, 6, 5, 3), which has a score of (8 + 7 + 4) - (6 + 5 + 3) = 5. Let N be a positive integer. There is a numerical sequence of length 3N, a = (a_1, a_2, ..., a_{3N}).\nSnuke is constructing a new sequence of length 2N, a', by removing exactly N elements from a without changing the order of the remaining elements.\nHere, the score of a' is defined as follows: (the sum of the elements in the first half of a') - (the sum of the elements in the second half of a'). Find the maximum possible score of a'.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "array",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03716.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10^5\na_i is an integer.\n1 ≤ a_i ≤ 10^9",
          "ranges": "1 10; 1 10; 10; 10; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\n3 1 4 1 5 9",
            "output": "1 When a_2 and a_6 are removed, a' will be (3, 4, 1, 5), which has a score of (3 + 4) - (1 + 5) = 1.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03716.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03716"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03717",
        "title": "The squares are numbered 1, 2, ..., N, from left to right.",
        "description": "Score : 800 points Problem StatementThere are N squares arranged in a row.\nThe squares are numbered 1, 2, ..., N, from left to right.\nSnuke is painting each square in red, green or blue.\nAccording to his aesthetic sense, the following M conditions must all be satisfied.\nThe i-th condition is:\n\nThere are exactly x_i different colors among squares l_i, l_i + 1, ..., r_i.\n\nIn how many ways can the squares be painted to satisfy all the conditions?\nFind the count modulo 10^9+7. There are N squares arranged in a row.\nThe squares are numbered 1, 2, ..., N, from left to right. Snuke is painting each square in red, green or blue.\nAccording to his aesthetic sense, the following M conditions must all be satisfied.\nThe i-th condition is: In how many ways can the squares be painted to satisfy all the conditions?\nFind the count modulo 10^9+7. Print the number of ways to paint the squares to satisfy all the conditions, modulo 10^9+7. The six ways are: where R, G and B correspond to red, green and blue squares, respectively. The six ways are: There are zero ways. There are N squares arranged in a row.\nThe squares are numbered 1, 2, ..., N, from left to right. Snuke is painting each square in red, green or blue.\nAccording to his aesthetic sense, the following M conditions must all be satisfied.\nThe i-th condition is: There are exactly x_i different colors among squares l_i, l_i + 1, ..., r_i. In how many ways can the squares be painted to satisfy all the conditions?\nFind the count modulo 10^9+7.",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03717.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 300\n1 ≤ M ≤ 300\n1 ≤ l_i ≤ r_i ≤ N\n1 ≤ x_i ≤ 3",
          "ranges": "1 300; 1 300; 1 3; 300; 300; 3; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 1\n1 3 3",
            "output": "6 The six ways are: RGB\nRBG\nGRB\nGBR\nBRG\nBGR where R, G and B correspond to red, green and blue squares, respectively.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03717.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03717"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03718",
        "title": "The pond is divided into a grid with H rows and W columns of squares.",
        "description": "Score : 800 points Problem StatementThere is a pond with a rectangular shape.\nThe pond is divided into a grid with H rows and W columns of squares.\nWe will denote the square at the i-th row from the top and j-th column from the left by (i,\\ j).\nSome of the squares in the pond contains a lotus leaf floating on the water.\nOn one of those leaves, S, there is a frog trying to get to another leaf T.\nThe state of square (i,\\ j) is given to you by a character a_{ij}, as follows:\n\n. : A square without a leaf.\no : A square with a leaf floating on the water.\nS : A square with the leaf S.\nT : A square with the leaf T.\n\nThe frog will repeatedly perform the following action to get to the leaf T: \"jump to a leaf that is in the same row or the same column as the leaf where the frog is currently located.\"\nSnuke is trying to remove some of the leaves, other than S and T, so that the frog cannot get to the leaf T.\nDetermine whether this objective is achievable. If it is achievable, find the minimum necessary number of leaves to remove. There is a pond with a rectangular shape.\nThe pond is divided into a grid with H rows and W columns of squares.\nWe will denote the square at the i-th row from the top and j-th column from the left by (i,\\ j). Some of the squares in the pond contains a lotus leaf floating on the water.\nOn one of those leaves, S, there is a frog trying to get to another leaf T.\nThe state of square (i,\\ j) is given to you by a character a_{ij}, as follows: The frog will repeatedly perform the following action to get to the leaf T: \"jump to a leaf that is in the same row or the same column as the leaf where the frog is currently located.\" Snuke is trying to remove some of the leaves, other than S and T, so that the frog cannot get to the leaf T.\nDetermine whether this objective is achievable. If it is achievable, find the minimum necessary number of leaves to remove. If the objective is achievable, print the minimum necessary number of leaves to remove.\nOtherwise, print -1 instead. Remove the upper-right and lower-left leaves. There is a pond with a rectangular shape.\nThe pond is divided into a grid with H rows and W columns of squares.\nWe will denote the square at the i-th row from the top and j-th column from the left by (i,\\ j). Some of the squares in the pond contains a lotus leaf floating on the water.\nOn one of those leaves, S, there is a frog trying to get to another leaf T.\nThe state of square (i,\\ j) is given to you by a character a_{ij}, as follows: . : A square without a leaf.\no : A square with a leaf floating on the water.\nS : A square with the leaf S.\nT : A square with the leaf T. The frog will repeatedly perform the following action to get to the leaf T: \"jump to a leaf that is in the same row or the same column as the leaf where the frog is currently located.\" Snuke is trying to remove some of the leaves, other than S and T, so that the frog cannot get to the leaf T.\nDetermine whether this objective is achievable. If it is achievable, find the minimum necessary number of leaves to remove.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "string",
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03718.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ H, W ≤ 100\na_{ij} is ., o, S or T.\nThere is exactly one S among a_{ij}.\nThere is exactly one T among a_{ij}.",
          "ranges": "100; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 3\nS.o\n.o.\no.T",
            "output": "2 Remove the upper-right and lower-left leaves.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03718.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03718"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03719",
        "title": "Determine whether C is not less than A and not greater than B.",
        "description": "Score : 100 points Problem StatementYou are given three integers A, B and C.\nDetermine whether C is not less than A and not greater than B. You are given three integers A, B and C.\nDetermine whether C is not less than A and not greater than B. If the condition is satisfied, print Yes; otherwise, print No. C=2 is not less than A=1 and not greater than B=3, and thus the output should be Yes. C=4 is less than A=6, and thus the output should be No. You are given three integers A, B and C.\nDetermine whether C is not less than A and not greater than B.",
        "difficulty": "Hard",
        "category": "Implementation",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03719.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "-100≤A,B,C≤100 \nA, B and C are all integers.",
          "ranges": "100; 100"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1 3 2",
            "output": "Yes C=2 is not less than A=1 and not greater than B=3, and thus the output should be Yes.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03719.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03719"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03720",
        "title": "The i-th road (1≤i≤M) connects two cities a_i and b_i (1≤a_i,b_i≤N) bidirectionally.",
        "description": "Score : 200 points Problem StatementThere are N cities and M roads.\nThe i-th road (1≤i≤M) connects two cities a_i and b_i (1≤a_i,b_i≤N) bidirectionally.\nThere may be more than one road that connects the same pair of two cities.\nFor each city, how many roads are connected to the city? There are N cities and M roads.\nThe i-th road (1≤i≤M) connects two cities a_i and b_i (1≤a_i,b_i≤N) bidirectionally.\nThere may be more than one road that connects the same pair of two cities.\nFor each city, how many roads are connected to the city? Print the answer in N lines.\nIn the i-th line (1≤i≤N), print the number of roads connected to city i. There are N cities and M roads.\nThe i-th road (1≤i≤M) connects two cities a_i and b_i (1≤a_i,b_i≤N) bidirectionally.\nThere may be more than one road that connects the same pair of two cities.\nFor each city, how many roads are connected to the city?",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03720.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2≤N,M≤50\n1≤a_i,b_i≤N\na_i ≠ b_i\nAll input values are integers.",
          "ranges": "50; 2; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 3\n1 2\n2 3\n1 4",
            "output": "2\n2\n1\n1 City 1 is connected to the 1-st and 3-rd roads.\nCity 2 is connected to the 1-st and 2-nd roads.\nCity 3 is connected to the 2-nd road.\nCity 4 is connected to the 3-rd road.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03720.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03720"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03721",
        "title": "The following N operations will be performed to insert integers into the array.",
        "description": "Score : 300 points Problem StatementThere is an empty array.\nThe following N operations will be performed to insert integers into the array.\nIn the i-th operation (1≤i≤N), b_i copies of an integer a_i are inserted into the array.\nFind the K-th smallest integer in the array after the N operations.\nFor example, the 4-th smallest integer in the array \\{1,2,2,3,3,3\\} is 3. There is an empty array.\nThe following N operations will be performed to insert integers into the array.\nIn the i-th operation (1≤i≤N), b_i copies of an integer a_i are inserted into the array.\nFind the K-th smallest integer in the array after the N operations.\nFor example, the 4-th smallest integer in the array \\{1,2,2,3,3,3\\} is 3. Print the K-th smallest integer in the array after the N operations. The resulting array is the same as the one in the problem statement. There is an empty array.\nThe following N operations will be performed to insert integers into the array.\nIn the i-th operation (1≤i≤N), b_i copies of an integer a_i are inserted into the array.\nFind the K-th smallest integer in the array after the N operations.\nFor example, the 4-th smallest integer in the array \\{1,2,2,3,3,3\\} is 3.",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "array"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03721.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤N≤10^5 \n1≤a_i,b_i≤10^5 \n1≤K≤b_1…+…b_n\nAll input values are integers.",
          "ranges": "1 10; 10; 10; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 4\n1 1\n2 2\n3 3",
            "output": "3 The resulting array is the same as the one in the problem statement.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03721.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03721"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03722",
        "title": "The i-th edge (1≤i≤M) points from vertex a_i to vertex b_i, and has a weight c_i.",
        "description": "Score : 400 points Problem StatementThere is a directed graph with N vertices and M edges.\nThe i-th edge (1≤i≤M) points from vertex a_i to vertex b_i, and has a weight c_i.\nWe will play the following single-player game using this graph and a piece.\nInitially, the piece is placed at vertex 1, and the score of the player is set to 0.\nThe player can move the piece as follows:\n\nWhen the piece is placed at vertex a_i, move the piece along the i-th edge to vertex b_i. After this move, the score of the player is increased by c_i.\n\nThe player can end the game only when the piece is placed at vertex N.\nThe given graph guarantees that it is possible to traverse from vertex 1 to vertex N.\nWhen the player acts optimally to maximize the score at the end of the game, what will the score be?\nIf it is possible to increase the score indefinitely, print inf. There is a directed graph with N vertices and M edges.\nThe i-th edge (1≤i≤M) points from vertex a_i to vertex b_i, and has a weight c_i.\nWe will play the following single-player game using this graph and a piece. Initially, the piece is placed at vertex 1, and the score of the player is set to 0.\nThe player can move the piece as follows: The player can end the game only when the piece is placed at vertex N.\nThe given graph guarantees that it is possible to traverse from vertex 1 to vertex N. When the player acts optimally to maximize the score at the end of the game, what will the score be?\nIf it is possible to increase the score indefinitely, print inf. Print the maximum possible score at the end of the game, if it is finite. If it is possible to increase the score indefinitely, print inf. There are two ways to move the piece to vertex N=3: Thus, the maximum possible score at the end of the game is 7. It is possible to increase the score indefinitely by alternating between vertex 1 and 2. There is a directed graph with N vertices and M edges.\nThe i-th edge (1≤i≤M) points from vertex a_i to vertex b_i, and has a weight c_i.\nWe will play the following single-player game using this graph and a piece. Initially, the piece is placed at vertex 1, and the score of the player is set to 0.\nThe player can move the piece as follows: When the piece is placed at vertex a_i, move the piece along the i-th edge to vertex b_i. After this move, the score of the player is increased by c_i. The player can end the game only when the piece is placed at vertex N.\nThe given graph guarantees that it is possible to traverse from vertex 1 to vertex N. When the player acts optimally to maximize the score at the end of the game, what will the score be?\nIf it is possible to increase the score indefinitely, print inf.",
        "difficulty": "Hard",
        "category": "Trees & Graphs",
        "tags": [
          "sorting",
          "graph",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03722.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2≤N≤1000 \n1≤M≤min(N(N-1),2000) \n1≤a_i,b_i≤N (1≤i≤M) \na_i≠b_i (1≤i≤M) \na_i≠a_j or b_i≠b_j (1≤i<j≤M) \n-10^9≤c_i≤10^9 (1≤i≤M)\nc_i is an integer.\nIn the given graph, there exists a path from vertex 1 to vertex N.",
          "ranges": "2 1000; 9 10; 1000; 10; 2; 1; 1; 1; 1; 1; 9; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 3\n1 2 4\n2 3 3\n1 3 5",
            "output": "7 There are two ways to move the piece to vertex N=3: vertex 1 → vertex 2 → vertex 3 : score 4+3=7\nvertex 1 → vertex 3 : score 5 Thus, the maximum possible score at the end of the game is 7.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03722.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03722"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03723",
        "title": "This action will be repeated until there is a person with odd number of cookies in hand.",
        "description": "Score : 300 points Problem StatementTakahashi, Aoki and Snuke love cookies. They have A, B and C cookies, respectively. Now, they will exchange those cookies by repeating the action below:\n\nEach person simultaneously divides his cookies in half and gives one half to each of the other two persons.\n\nThis action will be repeated until there is a person with odd number of cookies in hand.\nHow many times will they repeat this action?\nNote that the answer may not be finite. Takahashi, Aoki and Snuke love cookies. They have A, B and C cookies, respectively. Now, they will exchange those cookies by repeating the action below: This action will be repeated until there is a person with odd number of cookies in hand. How many times will they repeat this action?\nNote that the answer may not be finite. Print the number of times the action will be performed by the three people, if this number is finite.\nIf it is infinite, print -1 instead. Initially, Takahashi, Aoki and Snuke have 4, 12 and 20 cookies. Then, Now, Takahashi and Snuke have odd number of cookies, and therefore the answer is 3. Takahashi, Aoki and Snuke love cookies. They have A, B and C cookies, respectively. Now, they will exchange those cookies by repeating the action below: Each person simultaneously divides his cookies in half and gives one half to each of the other two persons. This action will be repeated until there is a person with odd number of cookies in hand. How many times will they repeat this action?\nNote that the answer may not be finite.",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03723.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ A,B,C ≤ 10^9",
          "ranges": "10; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 12 20",
            "output": "3 Initially, Takahashi, Aoki and Snuke have 4, 12 and 20 cookies. Then, After the first action, they have 16, 12 and 8.\nAfter the second action, they have 10, 12 and 14.\nAfter the third action, they have 13, 12 and 11. Now, Takahashi and Snuke have odd number of cookies, and therefore the answer is 3.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03723.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03723"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03724",
        "title": "First, Takahashi created a tree with N vertices numbered 1 through N, and wrote 0 at each edge.",
        "description": "Score : 500 points Problem StatementTakahashi is not good at problems about trees in programming contests, and Aoki is helping him practice.\nFirst, Takahashi created a tree with N vertices numbered 1 through N, and wrote 0 at each edge.\nThen, Aoki gave him M queries. The i-th of them is as follows:\n\nIncrement the number written at each edge along the path connecting vertices a_i and b_i, by one.\n\nAfter Takahashi executed all of the queries, he told Aoki that, for every edge, the written number became an even number.\nHowever, Aoki forgot to confirm that the graph Takahashi created was actually a tree, and it is possible that Takahashi made a mistake in creating a tree or executing queries.\nDetermine whether there exists a tree that has the property mentioned by Takahashi. Takahashi is not good at problems about trees in programming contests, and Aoki is helping him practice. First, Takahashi created a tree with N vertices numbered 1 through N, and wrote 0 at each edge. Then, Aoki gave him M queries. The i-th of them is as follows: After Takahashi executed all of the queries, he told Aoki that, for every edge, the written number became an even number.\nHowever, Aoki forgot to confirm that the graph Takahashi created was actually a tree, and it is possible that Takahashi made a mistake in creating a tree or executing queries. Determine whether there exists a tree that has the property mentioned by Takahashi. Print YES if there exists a tree that has the property mentioned by Takahashi; print NO otherwise. For example, Takahashi's graph has the property mentioned by him if it has the following edges: 1-2, 1-3 and 1-4.\nIn this case, the number written at every edge will become 2. Takahashi is not good at problems about trees in programming contests, and Aoki is helping him practice. First, Takahashi created a tree with N vertices numbered 1 through N, and wrote 0 at each edge. Then, Aoki gave him M queries. The i-th of them is as follows: Increment the number written at each edge along the path connecting vertices a_i and b_i, by one. After Takahashi executed all of the queries, he told Aoki that, for every edge, the written number became an even number.\nHowever, Aoki forgot to confirm that the graph Takahashi created was actually a tree, and it is possible that Takahashi made a mistake in creating a tree or executing queries. Determine whether there exists a tree that has the property mentioned by Takahashi.",
        "difficulty": "Hard",
        "category": "Trees & Graphs",
        "tags": [
          "math",
          "graph",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03724.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 10^5\n1 ≤ M ≤ 10^5\n1 ≤ a_i,b_i ≤ N\na_i ≠ b_i",
          "ranges": "2 10; 1 10; 10; 10; 2; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 4\n1 2\n2 4\n1 3\n3 4",
            "output": "YES For example, Takahashi's graph has the property mentioned by him if it has the following edges: 1-2, 1-3 and 1-4.\nIn this case, the number written at every edge will become 2.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03724.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03724"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03725",
        "title": "This building consists of H×W rooms, arranged in H rows and W columns.",
        "description": "Score : 700 points Problem StatementTakahashi is locked within a building.\nThis building consists of H×W rooms, arranged in H rows and W columns.\nWe will denote the room at the i-th row and j-th column as (i,j). The state of this room is represented by a character A_{i,j}. If A_{i,j}= #, the room is locked and cannot be entered; if A_{i,j}= ., the room is not locked and can be freely entered.\nTakahashi is currently at the room where A_{i,j}= S, which can also be freely entered.\nEach room in the 1-st row, 1-st column, H-th row or W-th column, has an exit.\nEach of the other rooms (i,j) is connected to four rooms: (i-1,j), (i+1,j), (i,j-1) and (i,j+1).\nTakahashi will use his magic to get out of the building. In one cast, he can do the following:\n\nMove to an adjacent room at most K times, possibly zero. Here, locked rooms cannot be entered.\nThen, select and unlock at most K locked rooms, possibly zero. Those rooms will remain unlocked from then on.\n\nHis objective is to reach a room with an exit. Find the minimum necessary number of casts to do so.\nIt is guaranteed that Takahashi is initially at a room without an exit. Takahashi is locked within a building. This building consists of H×W rooms, arranged in H rows and W columns.\nWe will denote the room at the i-th row and j-th column as (i,j). The state of this room is represented by a character A_{i,j}. If A_{i,j}= #, the room is locked and cannot be entered; if A_{i,j}= ., the room is not locked and can be freely entered.\nTakahashi is currently at the room where A_{i,j}= S, which can also be freely entered. Each room in the 1-st row, 1-st column, H-th row or W-th column, has an exit.\nEach of the other rooms (i,j) is connected to four rooms: (i-1,j), (i+1,j), (i,j-1) and (i,j+1). Takahashi will use his magic to get out of the building. In one cast, he can do the following: His objective is to reach a room with an exit. Find the minimum necessary number of casts to do so. It is guaranteed that Takahashi is initially at a room without an exit. Print the minimum necessary number of casts. Takahashi can move to room (1,2) in one cast. Takahashi cannot move in the first cast, but can unlock room (1,2).\nThen, he can move to room (1,2) in the next cast, achieving the objective in two casts. Takahashi is locked within a building. This building consists of H×W rooms, arranged in H rows and W columns.\nWe will denote the room at the i-th row and j-th column as (i,j). The state of this room is represented by a character A_{i,j}. If A_{i,j}= #, the room is locked and cannot be entered; if A_{i,j}= ., the room is not locked and can be freely entered.\nTakahashi is currently at the room where A_{i,j}= S, which can also be freely entered. Each room in the 1-st row, 1-st column, H-th row or W-th column, has an exit.\nEach of the other rooms (i,j) is connected to four rooms: (i-1,j), (i+1,j), (i,j-1) and (i,j+1). Takahashi will use his magic to get out of the building. In one cast, he can do the following: Move to an adjacent room at most K times, possibly zero. Here, locked rooms cannot be entered.\nThen, select and unlock at most K locked rooms, possibly zero. Those rooms will remain unlocked from then on. His objective is to reach a room with an exit. Find the minimum necessary number of casts to do so. It is guaranteed that Takahashi is initially at a room without an exit.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "string",
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03725.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3 ≤ H ≤ 800\n3 ≤ W ≤ 800\n1 ≤ K ≤ H×W\nEach A_{i,j} is # , .  or S.\nThere uniquely exists (i,j) such that A_{i,j}= S, and it satisfies 2 ≤ i ≤ H-1 and 2 ≤ j ≤ W-1.",
          "ranges": "3 800; 3 800; 800; 800; 3; 3; 1; 2; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 3 3\n#.#\n#S.\n###",
            "output": "1 Takahashi can move to room (1,2) in one cast.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03725.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03725"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03726",
        "title": "The i-th of the N-1 edges connects vertices a_i and b_i.",
        "description": "Score : 900 points Problem StatementThere is a tree with N vertices numbered 1 through N.\nThe i-th of the N-1 edges connects vertices a_i and b_i.\nInitially, each vertex is uncolored.\nTakahashi and Aoki is playing a game by painting the vertices. In this game, they alternately perform the following operation, starting from Takahashi:\n\nSelect a vertex that is not painted yet.\nIf it is Takahashi who is performing this operation, paint the vertex white; paint it black if it is Aoki.\n\nThen, after all the vertices are colored, the following procedure takes place:\n\nRepaint every white vertex that is adjacent to a black vertex, in black.\n\nNote that all such white vertices are repainted simultaneously, not one at a time.\nIf there are still one or more white vertices remaining, Takahashi wins; if all the vertices are now black, Aoki wins.\nDetermine the winner of the game, assuming that both persons play optimally. There is a tree with N vertices numbered 1 through N.\nThe i-th of the N-1 edges connects vertices a_i and b_i. Initially, each vertex is uncolored. Takahashi and Aoki is playing a game by painting the vertices. In this game, they alternately perform the following operation, starting from Takahashi: Then, after all the vertices are colored, the following procedure takes place: Note that all such white vertices are repainted simultaneously, not one at a time. If there are still one or more white vertices remaining, Takahashi wins; if all the vertices are now black, Aoki wins.\nDetermine the winner of the game, assuming that both persons play optimally. Print First if Takahashi wins; print Second if Aoki wins. Below is a possible progress of the game: In this case, the colors of vertices 1, 2 and 3 after the final procedure are black, black and white, resulting in Takahashi's victory. There is a tree with N vertices numbered 1 through N.\nThe i-th of the N-1 edges connects vertices a_i and b_i. Initially, each vertex is uncolored. Takahashi and Aoki is playing a game by painting the vertices. In this game, they alternately perform the following operation, starting from Takahashi: Select a vertex that is not painted yet.\nIf it is Takahashi who is performing this operation, paint the vertex white; paint it black if it is Aoki. Then, after all the vertices are colored, the following procedure takes place: Repaint every white vertex that is adjacent to a black vertex, in black. Note that all such white vertices are repainted simultaneously, not one at a time. If there are still one or more white vertices remaining, Takahashi wins; if all the vertices are now black, Aoki wins.\nDetermine the winner of the game, assuming that both persons play optimally.",
        "difficulty": "Hard",
        "category": "Trees & Graphs",
        "tags": [
          "math",
          "graph",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03726.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 10^5\n1 ≤ a_i,b_i ≤ N\na_i ≠ b_i\nThe input graph is a tree.",
          "ranges": "2 10; 10; 2; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n1 2\n2 3",
            "output": "First Below is a possible progress of the game: First, Takahashi paint vertex 2 white.\nThen, Aoki paint vertex 1 black.\nLastly, Takahashi paint vertex 3 white. In this case, the colors of vertices 1, 2 and 3 after the final procedure are black, black and white, resulting in Takahashi's victory.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03726.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03726"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03727",
        "title": "The i-th of the N-1 edges connects vertices a_i and b_i.",
        "description": "Score : 1400 points Problem StatementThere is a tree with N vertices numbered 1 through N.\nThe i-th of the N-1 edges connects vertices a_i and b_i.\nInitially, each edge is painted blue.\nTakahashi will convert this blue tree into a red tree, by performing the following operation N-1 times:\n\nSelect a simple path that consists of only blue edges, and remove one of those edges.\nThen, span a new red edge between the two endpoints of the selected path.\n\nHis objective is to obtain a tree that has a red edge connecting vertices c_i and d_i, for each i.\nDetermine whether this is achievable. There is a tree with N vertices numbered 1 through N.\nThe i-th of the N-1 edges connects vertices a_i and b_i. Initially, each edge is painted blue.\nTakahashi will convert this blue tree into a red tree, by performing the following operation N-1 times: His objective is to obtain a tree that has a red edge connecting vertices c_i and d_i, for each i. Determine whether this is achievable. Print YES if the objective is achievable; print NO otherwise. The objective is achievable, as below: There is a tree with N vertices numbered 1 through N.\nThe i-th of the N-1 edges connects vertices a_i and b_i. Initially, each edge is painted blue.\nTakahashi will convert this blue tree into a red tree, by performing the following operation N-1 times: Select a simple path that consists of only blue edges, and remove one of those edges.\nThen, span a new red edge between the two endpoints of the selected path. His objective is to obtain a tree that has a red edge connecting vertices c_i and d_i, for each i. Determine whether this is achievable.",
        "difficulty": "Hard",
        "category": "Trees & Graphs",
        "tags": [
          "math",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03727.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 10^5\n1 ≤ a_i,b_i,c_i,d_i ≤ N\na_i ≠ b_i\nc_i ≠ d_i\nBoth input graphs are trees.",
          "ranges": "2 10; 10; 2; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n1 2\n2 3\n1 3\n3 2",
            "output": "YES The objective is achievable, as below: First, select the path connecting vertices 1 and 3, and remove a blue edge 1-2. Then, span a new red edge 1-3.\nNext, select the path connecting vertices 2 and 3, and remove a blue edge 2-3. Then, span a new red edge 2-3.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03727.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03727"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03728",
        "title": "Lastly, rearrange the permutation into (b_1,b_2,...,b_{N-k},a_1,a_2,...,a_k).",
        "description": "Score : 2400 points Problem StatementTakahashi loves sorting.\nHe has a permutation (p_1,p_2,...,p_N) of the integers from 1 through N. Now, he will repeat the following operation until the permutation becomes (1,2,...,N):\n\nFirst, we will define high and low elements in the permutation, as follows. The i-th element in the permutation is high if the maximum element between the 1-st and i-th elements, inclusive, is the i-th element itself, and otherwise the i-th element is low.\nThen, let a_1,a_2,...,a_k be the values of the high elements, and b_1,b_2,...,b_{N-k} be the values of the low elements in the current permutation, in the order they appear in it.\nLastly, rearrange the permutation into (b_1,b_2,...,b_{N-k},a_1,a_2,...,a_k).\n\nHow many operations are necessary until the permutation is sorted? Takahashi loves sorting. He has a permutation (p_1,p_2,...,p_N) of the integers from 1 through N. Now, he will repeat the following operation until the permutation becomes (1,2,...,N): How many operations are necessary until the permutation is sorted? Print the number of operations that are necessary until the permutation is sorted. The initial permutation is (3,5,1,2,4), and each operation changes it as follows: Takahashi loves sorting. He has a permutation (p_1,p_2,...,p_N) of the integers from 1 through N. Now, he will repeat the following operation until the permutation becomes (1,2,...,N): First, we will define high and low elements in the permutation, as follows. The i-th element in the permutation is high if the maximum element between the 1-st and i-th elements, inclusive, is the i-th element itself, and otherwise the i-th element is low.\nThen, let a_1,a_2,...,a_k be the values of the high elements, and b_1,b_2,...,b_{N-k} be the values of the low elements in the current permutation, in the order they appear in it.\nLastly, rearrange the permutation into (b_1,b_2,...,b_{N-k},a_1,a_2,...,a_k). How many operations are necessary until the permutation is sorted?",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03728.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 2×10^5\n(p_1,p_2,...,p_N) is a permutation of the integers from 1 through N.",
          "ranges": "1 2; 2; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n3 5 1 2 4",
            "output": "3 The initial permutation is (3,5,1,2,4), and each operation changes it as follows: In the first operation, the 1-st and 2-nd elements are high, and the 3-rd, 4-th and 5-th are low. The permutation becomes: (1,2,4,3,5).\nIn the second operation, the 1-st, 2-nd, 3-rd and 5-th elements are high, and the 4-th is low. The permutation becomes: (3,1,2,4,5).\nIn the third operation, the 1-st, 4-th and 5-th elements are high, and the 2-nd and 3-rd and 5-th are low. The permutation becomes: (1,2,3,4,5).",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03728.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03728"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03730",
        "title": "It is allowed to select as many integers as you like, and as large integers as you wish.",
        "description": "Score : 200 points Problem StatementWe ask you to select some number of positive integers, and calculate the sum of them.\nIt is allowed to select as many integers as you like, and as large integers as you wish.\nYou have to follow these, however: each selected integer needs to be a multiple of A, and you need to select at least one integer.\nYour objective is to make the sum congruent to C modulo B.\nDetermine whether this is possible.\nIf the objective is achievable, print YES. Otherwise, print NO. We ask you to select some number of positive integers, and calculate the sum of them. It is allowed to select as many integers as you like, and as large integers as you wish.\nYou have to follow these, however: each selected integer needs to be a multiple of A, and you need to select at least one integer. Your objective is to make the sum congruent to C modulo B.\nDetermine whether this is possible. If the objective is achievable, print YES. Otherwise, print NO. Print YES or NO. For example, if you select 7 and 14, the sum 21 is congruent to 1 modulo 5. The sum of even numbers, no matter how many, is never odd. You can select 97, since you may select multiples of 1, that is, all integers. We ask you to select some number of positive integers, and calculate the sum of them. It is allowed to select as many integers as you like, and as large integers as you wish.\nYou have to follow these, however: each selected integer needs to be a multiple of A, and you need to select at least one integer. Your objective is to make the sum congruent to C modulo B.\nDetermine whether this is possible. If the objective is achievable, print YES. Otherwise, print NO.",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03730.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ A ≤ 100\n1 ≤ B ≤ 100\n0 ≤ C < B",
          "ranges": "1 100; 1 100; 100; 100; 1; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "7 5 1",
            "output": "YES For example, if you select 7 and 14, the sum 21 is congruent to 1 modulo 5.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03730.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03730"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03731",
        "title": "Note that it does not mean that the shower emits water for T additional seconds.",
        "description": "Score : 300 points Problem StatementIn a public bath, there is a shower which emits water for T seconds when the switch is pushed.\nIf the switch is pushed when the shower is already emitting water, from that moment it will be emitting water for T seconds.\nNote that it does not mean that the shower emits water for T additional seconds.\nN people will push the switch while passing by the shower.\nThe i-th person will push the switch t_i seconds after the first person pushes it.\nHow long will the shower emit water in total? In a public bath, there is a shower which emits water for T seconds when the switch is pushed. If the switch is pushed when the shower is already emitting water, from that moment it will be emitting water for T seconds.\nNote that it does not mean that the shower emits water for T additional seconds. N people will push the switch while passing by the shower.\nThe i-th person will push the switch t_i seconds after the first person pushes it. How long will the shower emit water in total? Assume that the shower will emit water for a total of X seconds. Print X. Three seconds after the first person pushes the water, the switch is pushed again and the shower emits water for four more seconds, for a total of seven seconds. One second after the shower stops emission of water triggered by the first person, the switch is pushed again. In a public bath, there is a shower which emits water for T seconds when the switch is pushed. If the switch is pushed when the shower is already emitting water, from that moment it will be emitting water for T seconds.\nNote that it does not mean that the shower emits water for T additional seconds. N people will push the switch while passing by the shower.\nThe i-th person will push the switch t_i seconds after the first person pushes it. How long will the shower emit water in total?",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03731.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 200,000\n1 ≤ T ≤ 10^9\n0 = t_1 < t_2 < t_3 < , ..., < t_{N-1} < t_N ≤ 10^9\nT and each t_i are integers.",
          "ranges": "1 200; 1 10; 200; 10; 10; 1; 1; 0; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 4\n0 3",
            "output": "7 Three seconds after the first person pushes the water, the switch is pushed again and the shower emits water for four more seconds, for a total of seven seconds.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03731.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03731"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03732",
        "title": "The i-th item has a weight of w_i and a value of v_i.",
        "description": "Score : 400 points Problem StatementYou have N items and a bag of strength W.\nThe i-th item has a weight of w_i and a value of v_i.\nYou will select some of the items and put them in the bag.\nHere, the total weight of the selected items needs to be at most W.\nYour objective is to maximize the total value of the selected items. You have N items and a bag of strength W.\nThe i-th item has a weight of w_i and a value of v_i. You will select some of the items and put them in the bag.\nHere, the total weight of the selected items needs to be at most W. Your objective is to maximize the total value of the selected items. Print the maximum possible total value of the selected items. The first and third items should be selected. The second and fourth items should be selected. You can take everything. You can take nothing. You have N items and a bag of strength W.\nThe i-th item has a weight of w_i and a value of v_i. You will select some of the items and put them in the bag.\nHere, the total weight of the selected items needs to be at most W. Your objective is to maximize the total value of the selected items.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03732.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 100\n1 ≤ W ≤ 10^9\n1 ≤ w_i ≤ 10^9\nFor each i = 2,3,...,N, w_1 ≤ w_i ≤ w_1 + 3.\n1 ≤ v_i ≤ 10^7\nW, each w_i and v_i are integers.",
          "ranges": "1 100; 1 10; 1 10; 1 10; 100; 10; 10; 2; 10; 1; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 6\n2 1\n3 4\n4 10\n3 4",
            "output": "11 The first and third items should be selected.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03732.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03732"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03733",
        "title": "Note that it does not mean that the shower emits water for T additional seconds.",
        "description": "Score : 300 points Problem StatementIn a public bath, there is a shower which emits water for T seconds when the switch is pushed.\nIf the switch is pushed when the shower is already emitting water, from that moment it will be emitting water for T seconds.\nNote that it does not mean that the shower emits water for T additional seconds.\nN people will push the switch while passing by the shower.\nThe i-th person will push the switch t_i seconds after the first person pushes it.\nHow long will the shower emit water in total? In a public bath, there is a shower which emits water for T seconds when the switch is pushed. If the switch is pushed when the shower is already emitting water, from that moment it will be emitting water for T seconds.\nNote that it does not mean that the shower emits water for T additional seconds. N people will push the switch while passing by the shower.\nThe i-th person will push the switch t_i seconds after the first person pushes it. How long will the shower emit water in total? Assume that the shower will emit water for a total of X seconds. Print X. Three seconds after the first person pushes the water, the switch is pushed again and the shower emits water for four more seconds, for a total of seven seconds. One second after the shower stops emission of water triggered by the first person, the switch is pushed again. In a public bath, there is a shower which emits water for T seconds when the switch is pushed. If the switch is pushed when the shower is already emitting water, from that moment it will be emitting water for T seconds.\nNote that it does not mean that the shower emits water for T additional seconds. N people will push the switch while passing by the shower.\nThe i-th person will push the switch t_i seconds after the first person pushes it. How long will the shower emit water in total?",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03733.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 200,000\n1 ≤ T ≤ 10^9\n0 = t_1 < t_2 < t_3 < , ..., < t_{N-1} < t_N ≤ 10^9\nT and each t_i are integers.",
          "ranges": "1 200; 1 10; 200; 10; 10; 1; 1; 0; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 4\n0 3",
            "output": "7 Three seconds after the first person pushes the water, the switch is pushed again and the shower emits water for four more seconds, for a total of seven seconds.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03733.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03733"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03734",
        "title": "The i-th item has a weight of w_i and a value of v_i.",
        "description": "Score : 400 points Problem StatementYou have N items and a bag of strength W.\nThe i-th item has a weight of w_i and a value of v_i.\nYou will select some of the items and put them in the bag.\nHere, the total weight of the selected items needs to be at most W.\nYour objective is to maximize the total value of the selected items. You have N items and a bag of strength W.\nThe i-th item has a weight of w_i and a value of v_i. You will select some of the items and put them in the bag.\nHere, the total weight of the selected items needs to be at most W. Your objective is to maximize the total value of the selected items. Print the maximum possible total value of the selected items. The first and third items should be selected. The second and fourth items should be selected. You can take everything. You can take nothing. You have N items and a bag of strength W.\nThe i-th item has a weight of w_i and a value of v_i. You will select some of the items and put them in the bag.\nHere, the total weight of the selected items needs to be at most W. Your objective is to maximize the total value of the selected items.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03734.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 100\n1 ≤ W ≤ 10^9\n1 ≤ w_i ≤ 10^9\nFor each i = 2,3,...,N, w_1 ≤ w_i ≤ w_1 + 3.\n1 ≤ v_i ≤ 10^7\nW, each w_i and v_i are integers.",
          "ranges": "1 100; 1 10; 1 10; 1 10; 100; 10; 10; 2; 10; 1; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 6\n2 1\n3 4\n4 10\n3 4",
            "output": "11 The first and third items should be selected.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03734.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03734"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03735",
        "title": "For each of these bags, you will paint one of the balls red, and paint the other blue.",
        "description": "Score : 700 points Problem StatementThere are N bags, each containing two white balls. The i-th box contains two balls with integers x_i and y_i written on them, respectively.\nFor each of these bags, you will paint one of the balls red, and paint the other blue.\nAfterwards, the 2N balls will be classified according to color.\nThen, we will define the following:\n\nR_{max}: the maximum integer written on a ball painted in red\nR_{min}: the minimum integer written on a ball painted in red\nB_{max}: the maximum integer written on a ball painted in blue\nB_{min}: the minimum integer written on a ball painted in blue\n\nFind the minimum possible value of (R_{max} - R_{min}) \\times (B_{max} - B_{min}). There are N bags, each containing two white balls. The i-th box contains two balls with integers x_i and y_i written on them, respectively. For each of these bags, you will paint one of the balls red, and paint the other blue. Afterwards, the 2N balls will be classified according to color. Then, we will define the following: Find the minimum possible value of (R_{max} - R_{min}) \\times (B_{max} - B_{min}). Print the minimum possible value. The optimal solution is to paint the balls with x_1, x_2, y_3 red, and paint the balls with y_1, y_2, x_3 blue. There are N bags, each containing two white balls. The i-th box contains two balls with integers x_i and y_i written on them, respectively. For each of these bags, you will paint one of the balls red, and paint the other blue. Afterwards, the 2N balls will be classified according to color. Then, we will define the following: R_{max}: the maximum integer written on a ball painted in red\nR_{min}: the minimum integer written on a ball painted in red\nB_{max}: the maximum integer written on a ball painted in blue\nB_{min}: the minimum integer written on a ball painted in blue Find the minimum possible value of (R_{max} - R_{min}) \\times (B_{max} - B_{min}).",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03735.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 200,000\n1 ≤ x_i, y_i ≤ 10^9",
          "ranges": "1 200; 200; 10; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n1 2\n3 4\n5 6",
            "output": "15 The optimal solution is to paint the balls with x_1, x_2, y_3 red, and paint the balls with y_1, y_2, x_3 blue.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03735.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03735"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03736",
        "title": "You have two pieces, initially placed on square A and B, respectively.",
        "description": "Score : 900 points Problem StatementThere are N squares in a row. The squares are numbered 1, 2, ..., N from left to right.\nYou have two pieces, initially placed on square A and B, respectively.\nYou will be asked to process Q queries of the following kind, in the order received:\n\nGiven an integer x_i, move one of the two pieces of your choice to square x_i.\n\nHere, it takes you one second to move a piece one square.\nThat is, the time it takes to move a piece from square X to Y is |X-Y| seconds.\nYour objective is to process all the queries in the shortest possible time.\nYou may only move the pieces in response to queries, and you may not move both pieces at the same time.\nAlso, it is not allowed to rearrange the order in which queries are given.\nIt is, however, allowed to have both pieces in the same square at the same time. There are N squares in a row. The squares are numbered 1, 2, ..., N from left to right. You have two pieces, initially placed on square A and B, respectively.\nYou will be asked to process Q queries of the following kind, in the order received: Here, it takes you one second to move a piece one square.\nThat is, the time it takes to move a piece from square X to Y is |X-Y| seconds. Your objective is to process all the queries in the shortest possible time. You may only move the pieces in response to queries, and you may not move both pieces at the same time.\nAlso, it is not allowed to rearrange the order in which queries are given.\nIt is, however, allowed to have both pieces in the same square at the same time. Let the shortest possible time to process all the queries be X seconds. Print X. All the queries can be processed in seven seconds, by: The piece at square 9 should be moved first. The piece at square 1 should be moved first. There are N squares in a row. The squares are numbered 1, 2, ..., N from left to right. You have two pieces, initially placed on square A and B, respectively.\nYou will be asked to process Q queries of the following kind, in the order received: Given an integer x_i, move one of the two pieces of your choice to square x_i. Here, it takes you one second to move a piece one square.\nThat is, the time it takes to move a piece from square X to Y is |X-Y| seconds. Your objective is to process all the queries in the shortest possible time. You may only move the pieces in response to queries, and you may not move both pieces at the same time.\nAlso, it is not allowed to rearrange the order in which queries are given.\nIt is, however, allowed to have both pieces in the same square at the same time.",
        "difficulty": "Hard",
        "category": "Simulation",
        "tags": [
          "math",
          "sorting",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03736.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N, Q ≤ 200,000\n1 ≤ A, B ≤ N\n1 ≤ x_i ≤ N",
          "ranges": "200; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "8 3 1 8\n3 5 1",
            "output": "7 All the queries can be processed in seven seconds, by: moving the piece at square 1 to 3\nmoving the piece at square 8 to 5\nmoving the piece at square 3 to 1",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03736.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03736"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03737",
        "title": "Print the acronym formed from the uppercased initial letters of the words.",
        "description": "Score : 100 points Problem StatementYou are given three words s_1, s_2 and s_3, each composed of lowercase English letters, with spaces in between.\nPrint the acronym formed from the uppercased initial letters of the words. You are given three words s_1, s_2 and s_3, each composed of lowercase English letters, with spaces in between.\nPrint the acronym formed from the uppercased initial letters of the words. Print the answer. The initial letters of atcoder, beginner and contest are a, b and c. Uppercase and concatenate them to obtain ABC. You are given three words s_1, s_2 and s_3, each composed of lowercase English letters, with spaces in between.\nPrint the acronym formed from the uppercased initial letters of the words.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03737.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "s_1, s_2 and s_3 are composed of lowercase English letters.\n1 ≤ |s_i| ≤ 10 (1≤i≤3)",
          "ranges": "1 3; 3; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "atcoder beginner contest",
            "output": "ABC The initial letters of atcoder, beginner and contest are a, b and c. Uppercase and concatenate them to obtain ABC.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03737.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03737"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03738",
        "title": "Problem Statement",
        "description": "Score : 200 points Problem StatementYou are given two positive integers A and B. Compare the magnitudes of these numbers. You are given two positive integers A and B. Compare the magnitudes of these numbers. Print GREATER if A>B, LESS if A<B and EQUAL if A=B. Since 36>24, print GREATER. You are given two positive integers A and B. Compare the magnitudes of these numbers.",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03738.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ A, B ≤ 10^{100}\nNeither A nor B begins with a 0.",
          "ranges": "10; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "36\n24",
            "output": "GREATER Since 36>24, print GREATER.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03738.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03738"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03739",
        "title": "In one operation, you can select a term and either increment or decrement it by one.",
        "description": "Score : 300 points Problem StatementYou are given an integer sequence of length N. The i-th term in the sequence is a_i.\nIn one operation, you can select a term and either increment or decrement it by one.\nAt least how many operations are necessary to satisfy the following conditions?\n\nFor every i (1≤i≤n), the sum of the terms from the 1-st through i-th term is not zero.\nFor every i (1≤i≤n-1), the sign of the sum of the terms from the 1-st through i-th term, is different from the sign of the sum of the terms from the 1-st through (i+1)-th term. You are given an integer sequence of length N. The i-th term in the sequence is a_i.\nIn one operation, you can select a term and either increment or decrement it by one. At least how many operations are necessary to satisfy the following conditions? Print the minimum necessary count of operations. For example, the given sequence can be transformed into 1, -2, 2, -2 by four operations. The sums of the first one, two, three and four terms are 1, -1, 1 and -1, respectively, which satisfy the conditions. The given sequence already satisfies the conditions. You are given an integer sequence of length N. The i-th term in the sequence is a_i.\nIn one operation, you can select a term and either increment or decrement it by one. At least how many operations are necessary to satisfy the following conditions? For every i (1≤i≤n), the sum of the terms from the 1-st through i-th term is not zero.\nFor every i (1≤i≤n-1), the sign of the sum of the terms from the 1-st through i-th term, is different from the sign of the sum of the terms from the 1-st through (i+1)-th term.",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03739.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ n ≤ 10^5\n|a_i| ≤ 10^9\nEach a_i is an integer.",
          "ranges": "2 10; 10; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n1 -3 1 0",
            "output": "4 For example, the given sequence can be transformed into 1, -2, 2, -2 by four operations. The sums of the first one, two, three and four terms are 1, -1, 1 and -1, respectively, which satisfy the conditions.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03739.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03739"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03740",
        "title": "In this game, there are two piles initially consisting of X and Y stones, respectively.",
        "description": "Score : 500 points Problem StatementAlice and Brown loves games. Today, they will play the following game.\nIn this game, there are two piles initially consisting of X and Y stones, respectively.\nAlice and Bob alternately perform the following operation, starting from Alice:\n\nTake 2i stones from one of the piles. Then, throw away i of them, and put the remaining i in the other pile. Here, the integer i (1≤i) can be freely chosen as long as there is a sufficient number of stones in the pile.\n\nThe player who becomes unable to perform the operation, loses the game.\nGiven X and Y, determine the winner of the game, assuming that both players play optimally. Alice and Brown loves games. Today, they will play the following game. In this game, there are two piles initially consisting of X and Y stones, respectively.\nAlice and Bob alternately perform the following operation, starting from Alice: The player who becomes unable to perform the operation, loses the game. Given X and Y, determine the winner of the game, assuming that both players play optimally. Print the winner: either Alice or Brown. Alice can do nothing but taking two stones from the pile containing two stones. As a result, the piles consist of zero and two stones, respectively. Then, Brown will take the two stones, and the piles will consist of one and zero stones, respectively. Alice will be unable to perform the operation anymore, which means Brown's victory. Alice and Brown loves games. Today, they will play the following game. In this game, there are two piles initially consisting of X and Y stones, respectively.\nAlice and Bob alternately perform the following operation, starting from Alice: Take 2i stones from one of the piles. Then, throw away i of them, and put the remaining i in the other pile. Here, the integer i (1≤i) can be freely chosen as long as there is a sufficient number of stones in the pile. The player who becomes unable to perform the operation, loses the game. Given X and Y, determine the winner of the game, assuming that both players play optimally.",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03740.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0 ≤ X, Y ≤ 10^{18}",
          "ranges": "10; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 1",
            "output": "Brown Alice can do nothing but taking two stones from the pile containing two stones. As a result, the piles consist of zero and two stones, respectively. Then, Brown will take the two stones, and the piles will consist of one and zero stones, respectively. Alice will be unable to perform the operation anymore, which means Brown's victory.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03740.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03740"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03741",
        "title": "In one operation, you can select a term and either increment or decrement it by one.",
        "description": "Score : 300 points Problem StatementYou are given an integer sequence of length N. The i-th term in the sequence is a_i.\nIn one operation, you can select a term and either increment or decrement it by one.\nAt least how many operations are necessary to satisfy the following conditions?\n\nFor every i (1≤i≤n), the sum of the terms from the 1-st through i-th term is not zero.\nFor every i (1≤i≤n-1), the sign of the sum of the terms from the 1-st through i-th term, is different from the sign of the sum of the terms from the 1-st through (i+1)-th term. You are given an integer sequence of length N. The i-th term in the sequence is a_i.\nIn one operation, you can select a term and either increment or decrement it by one. At least how many operations are necessary to satisfy the following conditions? Print the minimum necessary count of operations. For example, the given sequence can be transformed into 1, -2, 2, -2 by four operations. The sums of the first one, two, three and four terms are 1, -1, 1 and -1, respectively, which satisfy the conditions. The given sequence already satisfies the conditions. You are given an integer sequence of length N. The i-th term in the sequence is a_i.\nIn one operation, you can select a term and either increment or decrement it by one. At least how many operations are necessary to satisfy the following conditions? For every i (1≤i≤n), the sum of the terms from the 1-st through i-th term is not zero.\nFor every i (1≤i≤n-1), the sign of the sum of the terms from the 1-st through i-th term, is different from the sign of the sum of the terms from the 1-st through (i+1)-th term.",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03741.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ n ≤ 10^5\n|a_i| ≤ 10^9\nEach a_i is an integer.",
          "ranges": "2 10; 10; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n1 -3 1 0",
            "output": "4 For example, the given sequence can be transformed into 1, -2, 2, -2 by four operations. The sums of the first one, two, three and four terms are 1, -1, 1 and -1, respectively, which satisfy the conditions.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03741.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03741"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03742",
        "title": "In this game, there are two piles initially consisting of X and Y stones, respectively.",
        "description": "Score : 500 points Problem StatementAlice and Brown loves games. Today, they will play the following game.\nIn this game, there are two piles initially consisting of X and Y stones, respectively.\nAlice and Bob alternately perform the following operation, starting from Alice:\n\nTake 2i stones from one of the piles. Then, throw away i of them, and put the remaining i in the other pile. Here, the integer i (1≤i) can be freely chosen as long as there is a sufficient number of stones in the pile.\n\nThe player who becomes unable to perform the operation, loses the game.\nGiven X and Y, determine the winner of the game, assuming that both players play optimally. Alice and Brown loves games. Today, they will play the following game. In this game, there are two piles initially consisting of X and Y stones, respectively.\nAlice and Bob alternately perform the following operation, starting from Alice: The player who becomes unable to perform the operation, loses the game. Given X and Y, determine the winner of the game, assuming that both players play optimally. Print the winner: either Alice or Brown. Alice can do nothing but taking two stones from the pile containing two stones. As a result, the piles consist of zero and two stones, respectively. Then, Brown will take the two stones, and the piles will consist of one and zero stones, respectively. Alice will be unable to perform the operation anymore, which means Brown's victory. Alice and Brown loves games. Today, they will play the following game. In this game, there are two piles initially consisting of X and Y stones, respectively.\nAlice and Bob alternately perform the following operation, starting from Alice: Take 2i stones from one of the piles. Then, throw away i of them, and put the remaining i in the other pile. Here, the integer i (1≤i) can be freely chosen as long as there is a sufficient number of stones in the pile. The player who becomes unable to perform the operation, loses the game. Given X and Y, determine the winner of the game, assuming that both players play optimally.",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03742.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0 ≤ X, Y ≤ 10^{18}",
          "ranges": "10; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 1",
            "output": "Brown Alice can do nothing but taking two stones from the pile containing two stones. As a result, the piles consist of zero and two stones, respectively. Then, Brown will take the two stones, and the piles will consist of one and zero stones, respectively. Alice will be unable to perform the operation anymore, which means Brown's victory.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03742.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03742"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03743",
        "title": "She has Q plans to do this, as follows:",
        "description": "Score : 900 points Problem StatementAlice lives on a line. Today, she will travel to some place in a mysterious vehicle.\nInitially, the distance between Alice and her destination is D. When she input a number x to the vehicle, it will travel in the direction of the destination by a distance of x if this move would shorten the distance between the vehicle and the destination, and it will stay at its position otherwise. Note that the vehicle may go past the destination when the distance between the vehicle and the destination is less than x.\nAlice made a list of N numbers. The i-th number in this list is d_i. She will insert these numbers to the vehicle one by one.\nHowever, a mischievous witch appeared. She is thinking of rewriting one number in the list so that Alice will not reach the destination after N moves.\nShe has Q plans to do this, as follows:\n\nRewrite only the q_i-th number in the list with some integer so that Alice will not reach the destination.\n\nWrite a program to determine whether each plan is feasible. Alice lives on a line. Today, she will travel to some place in a mysterious vehicle.\nInitially, the distance between Alice and her destination is D. When she input a number x to the vehicle, it will travel in the direction of the destination by a distance of x if this move would shorten the distance between the vehicle and the destination, and it will stay at its position otherwise. Note that the vehicle may go past the destination when the distance between the vehicle and the destination is less than x. Alice made a list of N numbers. The i-th number in this list is d_i. She will insert these numbers to the vehicle one by one. However, a mischievous witch appeared. She is thinking of rewriting one number in the list so that Alice will not reach the destination after N moves. She has Q plans to do this, as follows: Write a program to determine whether each plan is feasible. Print Q lines. The i-th line should contain YES if the i-th plan is feasible, and NO otherwise. For the first plan, Alice will already arrive at the destination by the first three moves, and therefore the answer is NO.\nFor the second plan, rewriting the third number in the list with 5 will prevent Alice from reaching the destination as shown in the following figure, and thus the answer is YES. Alice will not reach the destination as it is, and therefore all the plans are feasible. Alice lives on a line. Today, she will travel to some place in a mysterious vehicle.\nInitially, the distance between Alice and her destination is D. When she input a number x to the vehicle, it will travel in the direction of the destination by a distance of x if this move would shorten the distance between the vehicle and the destination, and it will stay at its position otherwise. Note that the vehicle may go past the destination when the distance between the vehicle and the destination is less than x. Alice made a list of N numbers. The i-th number in this list is d_i. She will insert these numbers to the vehicle one by one. However, a mischievous witch appeared. She is thinking of rewriting one number in the list so that Alice will not reach the destination after N moves. She has Q plans to do this, as follows: Rewrite only the q_i-th number in the list with some integer so that Alice will not reach the destination. Write a program to determine whether each plan is feasible.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "array",
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03743.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤ N ≤ 5*10^5\n1≤ Q ≤ 5*10^5\n1≤ D ≤ 10^9\n1≤ d_i ≤ 10^9(1≤i≤N)\n1≤ q_i ≤ N(1≤i≤Q)\nD and each d_i are integers.",
          "ranges": "1 5; 1 5; 1 10; 1 10; 5; 5; 10; 10; 1; 1; 1; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 10\n3 4 3 3\n2\n4 3",
            "output": "NO\nYES For the first plan, Alice will already arrive at the destination by the first three moves, and therefore the answer is NO.\nFor the second plan, rewriting the third number in the list with 5 will prevent Alice from reaching the destination as shown in the following figure, and thus the answer is YES.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03743.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03743"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03744",
        "title": "Problem Statement",
        "description": "Score : 900 points Problem StatementYou are in charge of controlling a dam. The dam can store at most L liters of water. Initially, the dam is empty. Some amount of water flows into the dam every morning, and any amount of water may be discharged every night, but this amount needs to be set so that no water overflows the dam the next morning.\nIt is known that v_i liters of water at t_i degrees Celsius will flow into the dam on the morning of the i-th day.\nYou are wondering about the maximum possible temperature of water in the dam at noon of each day, under the condition that there needs to be exactly L liters of water in the dam at that time. For each i, find the maximum possible temperature of water in the dam at noon of the i-th day. Here, consider each maximization separately, that is, the amount of water discharged for the maximization of the temperature on the i-th day, may be different from the amount of water discharged for the maximization of the temperature on the j-th day (j≠i).\nAlso, assume that the temperature of water is not affected by anything but new water that flows into the dam. That is, when V_1 liters of water at T_1 degrees Celsius and V_2 liters of water at T_2 degrees Celsius are mixed together, they will become V_1+V_2 liters of water at \\frac{T_1*V_1+T_2*V_2}{V_1+V_2} degrees Celsius, and the volume and temperature of water are not affected by any other factors. You are in charge of controlling a dam. The dam can store at most L liters of water. Initially, the dam is empty. Some amount of water flows into the dam every morning, and any amount of water may be discharged every night, but this amount needs to be set so that no water overflows the dam the next morning. It is known that v_i liters of water at t_i degrees Celsius will flow into the dam on the morning of the i-th day.\nYou are wondering about the maximum possible temperature of water in the dam at noon of each day, under the condition that there needs to be exactly L liters of water in the dam at that time. For each i, find the maximum possible temperature of water in the dam at noon of the i-th day. Here, consider each maximization separately, that is, the amount of water discharged for the maximization of the temperature on the i-th day, may be different from the amount of water discharged for the maximization of the temperature on the j-th day (j≠i). Also, assume that the temperature of water is not affected by anything but new water that flows into the dam. That is, when V_1 liters of water at T_1 degrees Celsius and V_2 liters of water at T_2 degrees Celsius are mixed together, they will become V_1+V_2 liters of water at \\frac{T_1*V_1+T_2*V_2}{V_1+V_2} degrees Celsius, and the volume and temperature of water are not affected by any other factors. Print N lines. The i-th line should contain the maximum temperature such that it is possible to store L liters of water at that temperature in the dam at noon of the i-th day. Each of these values is accepted if the absolute or relative error is at most 10^{-6}. On the first day, the temperature of water in the dam is always 10 degrees: the temperature of the only water that flows into the dam on the first day. 10 liters of water at 15 degrees of Celsius can be stored on the second day, by discharging 5 liters of water on the night of the first day, and mix the remaining water with the water that flows into the dam on the second day. 10 liters of water at 13.2 degrees of Celsius can be stored on the third day, by discharging 8 liters of water on the night of the first day, and mix the remaining water with the water that flows into the dam on the second and third days. Although the temperature of water may exceed 100 degrees Celsius, we assume that water does not vaporize. You are in charge of controlling a dam. The dam can store at most L liters of water. Initially, the dam is empty. Some amount of water flows into the dam every morning, and any amount of water may be discharged every night, but this amount needs to be set so that no water overflows the dam the next morning. It is known that v_i liters of water at t_i degrees Celsius will flow into the dam on the morning of the i-th day.\nYou are wondering about the maximum possible temperature of water in the dam at noon of each day, under the condition that there needs to be exactly L liters of water in the dam at that time. For each i, find the maximum possible temperature of water in the dam at noon of the i-th day. Here, consider each maximization separately, that is, the amount of water discharged for the maximization of the temperature on the i-th day, may be different from the amount of water discharged for the maximization of the temperature on the j-th day (j≠i). Also, assume that the temperature of water is not affected by anything but new water that flows into the dam. That is, when V_1 liters of water at T_1 degrees Celsius and V_2 liters of water at T_2 degrees Celsius are mixed together, they will become V_1+V_2 liters of water at \\frac{T_1*V_1+T_2*V_2}{V_1+V_2} degrees Celsius, and the volume and temperature of water are not affected by any other factors.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03744.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤ N ≤ 5*10^5\n1≤ L ≤ 10^9\n0≤ t_i ≤ 10^9(1≤i≤N)\n1≤ v_i ≤ L(1≤i≤N)\nv_1 = L\nL, each t_i and v_i are integers.",
          "ranges": "1 5; 1 10; 0 10; 5; 10; 10; 1; 1; 0; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 10\n10 10\n20 5\n4 3",
            "output": "10.0000000\n15.0000000\n13.2000000 On the first day, the temperature of water in the dam is always 10 degrees: the temperature of the only water that flows into the dam on the first day.\n\n\n10 liters of water at 15 degrees of Celsius can be stored on the second day, by discharging 5 liters of water on the night of the first day, and mix the remaining water with the water that flows into the dam on the second day.\n\n\n10 liters of water at 13.2 degrees of Celsius can be stored on the third day, by discharging 8 liters of water on the night of the first day, and mix the remaining water with the water that flows into the dam on the second and third days.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03744.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03744"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03747",
        "title": "On this circumference, there are N ants.",
        "description": "Score : 700 points Problem StatementThere is a circle with a circumference of L.\nEach point on the circumference has a coordinate value, which represents the arc length from a certain reference point clockwise to the point.\nOn this circumference, there are N ants.\nThese ants are numbered 1 through N in order of increasing coordinate, and ant i is at coordinate X_i.\nThe N ants have just started walking.\nFor each ant i, you are given the initial direction W_i. Ant i is initially walking clockwise if W_i is 1; counterclockwise if W_i is 2.\nEvery ant walks at a constant speed of 1 per second.\nSometimes, two ants bump into each other.\nEach of these two ants will then turn around and start walking in the opposite direction.\nFor each ant, find its position after T seconds. There is a circle with a circumference of L.\nEach point on the circumference has a coordinate value, which represents the arc length from a certain reference point clockwise to the point.\nOn this circumference, there are N ants.\nThese ants are numbered 1 through N in order of increasing coordinate, and ant i is at coordinate X_i. The N ants have just started walking.\nFor each ant i, you are given the initial direction W_i. Ant i is initially walking clockwise if W_i is 1; counterclockwise if W_i is 2.\nEvery ant walks at a constant speed of 1 per second.\nSometimes, two ants bump into each other.\nEach of these two ants will then turn around and start walking in the opposite direction. For each ant, find its position after T seconds. Print N lines.\nThe i-th line should contain the coordinate of ant i after T seconds. Here, each coordinate must be between 0 and L-1, inclusive. 1.5 seconds after the ants start walking, ant 1 and 2 bump into each other at coordinate 1.5.\n1 second after that, ant 1 and 3 bump into each other at coordinate 0.5.\n0.5 seconds after that, that is, 3 seconds after the ants start walking, ants 1, 2 and 3 are at coordinates 1, 3 and 0, respectively. There is a circle with a circumference of L.\nEach point on the circumference has a coordinate value, which represents the arc length from a certain reference point clockwise to the point.\nOn this circumference, there are N ants.\nThese ants are numbered 1 through N in order of increasing coordinate, and ant i is at coordinate X_i. The N ants have just started walking.\nFor each ant i, you are given the initial direction W_i. Ant i is initially walking clockwise if W_i is 1; counterclockwise if W_i is 2.\nEvery ant walks at a constant speed of 1 per second.\nSometimes, two ants bump into each other.\nEach of these two ants will then turn around and start walking in the opposite direction. For each ant, find its position after T seconds.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03747.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "All input values are integers.\n1 \\leq N \\leq 10^5\n1 \\leq L \\leq 10^9\n1 \\leq T \\leq 10^9\n0 \\leq X_1 < X_2 < ... < X_N \\leq L - 1\n1 \\leq W_i \\leq 2",
          "ranges": "1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 8 3\n0 1\n3 2\n6 1",
            "output": "1\n3\n0 1.5 seconds after the ants start walking, ant 1 and 2 bump into each other at coordinate 1.5.\n1 second after that, ant 1 and 3 bump into each other at coordinate 0.5.\n0.5 seconds after that, that is, 3 seconds after the ants start walking, ants 1, 2 and 3 are at coordinates 1, 3 and 0, respectively.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03747.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03747"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03749",
        "title": "The distance from the left end of the bar to the i-th mark is X_i.",
        "description": "Score : 1600 points Problem StatementJoisino has a bar of length N, which has M marks on it.\nThe distance from the left end of the bar to the i-th mark is X_i.\nShe will place several squares on this bar.\nHere, the following conditions must be met:\n\nOnly squares with integral length sides can be placed.\nEach square must be placed so that its bottom side touches the bar.\nThe bar must be completely covered by squares.\nThat is, no square may stick out of the bar, and no part of the bar may be left uncovered.\nThe boundary line of two squares may not be directly above a mark.\n\n\n\nExamples of arrangements that satisfy/violate the conditions\n\nThe beauty of an arrangement of squares is defined as the product of the areas of all the squares placed.\nJoisino is interested in the sum of the beauty over all possible arrangements that satisfy the conditions.\nWrite a program to find it.\nSince it can be extremely large, print the sum modulo 10^9+7. Joisino has a bar of length N, which has M marks on it.\nThe distance from the left end of the bar to the i-th mark is X_i. She will place several squares on this bar.\nHere, the following conditions must be met: Examples of arrangements that satisfy/violate the conditions Examples of arrangements that satisfy/violate the conditions The beauty of an arrangement of squares is defined as the product of the areas of all the squares placed.\nJoisino is interested in the sum of the beauty over all possible arrangements that satisfy the conditions.\nWrite a program to find it.\nSince it can be extremely large, print the sum modulo 10^9+7. Print the sum of the beauty over all possible arrangements that satisfy the conditions, modulo 10^9+7. There are two possible arrangements: The sum of the beauty of these arrangements is (1 \\times 1 \\times 2 \\times 2) + (3 \\times 3) = 13. Joisino has a bar of length N, which has M marks on it.\nThe distance from the left end of the bar to the i-th mark is X_i. She will place several squares on this bar.\nHere, the following conditions must be met: Only squares with integral length sides can be placed.\nEach square must be placed so that its bottom side touches the bar.\nThe bar must be completely covered by squares.\nThat is, no square may stick out of the bar, and no part of the bar may be left uncovered.\nThe boundary line of two squares may not be directly above a mark. Examples of arrangements that satisfy/violate the conditions The beauty of an arrangement of squares is defined as the product of the areas of all the squares placed.\nJoisino is interested in the sum of the beauty over all possible arrangements that satisfy the conditions.\nWrite a program to find it.\nSince it can be extremely large, print the sum modulo 10^9+7.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03749.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "All input values are integers.\n1 \\leq N \\leq 10^9\n0 \\leq M \\leq 10^5\n1 \\leq X_1 < X_2 < ... < X_{M-1} < X_M \\leq N-1",
          "ranges": "1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 1\n2",
            "output": "13 There are two possible arrangements: Place a square of side length 1 to the left, and place another square of side length 2 to the right\nPlace a square of side length 3 The sum of the beauty of these arrangements is (1 \\times 1 \\times 2 \\times 2) + (3 \\times 3) = 13.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03749.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03749"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03751",
        "title": "But he couldn't see some parts of the list. Invisible part is denoted ?.",
        "description": "Max Score: 250 Points \n\nProblem Statement\n\t\t\t\t\tMr.X, who the handle name is T, looked at the list which written N handle names, S_1, S_2, ..., S_N. \n\t\t\t\t\tBut he couldn't see some parts of the list. Invisible part is denoted ?. \n\n\t\t\t\t\tPlease calculate all possible index of the handle name of Mr.X when you sort N+1 handle names (S_1, S_2, ..., S_N and T) in lexicographical order. \n\t\t\t\t\tNote: If there are pair of people with same handle name, either one may come first. Subtask 1 [ 130 points ] Subtask 2 [ 120 points ] There are no invisible part, so there are only one possibility.\n\t\t\t\t\tThe sorted handle names are e, petr, tourist, so e comes first. Mr.X, who the handle name is T , looked at the list which written N handle names, S_1, S_2, ..., S_N . But he couldn't see some parts of the list. Invisible part is denoted ? . Please calculate all possible index of the handle name of Mr.X when you sort N+1 handle names ( S_1, S_2, ..., S_N and T ) in lexicographical order. Note: If there are pair of people with same handle name, either one may come first.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "array",
          "sorting",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03751.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10000\n1 ≤ |S_i|, |T| ≤ 20 (|A| is the length of A.)\nS_i consists from lower-case alphabet and ?.\nT consists from lower-case alphabet.",
          "ranges": "1 10000; 10000; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\ntourist\npetr\ne",
            "output": "1",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03751.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03751"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03752",
        "title": "You cannot decrease height of buildings.",
        "description": "Max Score: 350 Points \n\nProblem Statement\n\t\t\t\t\tThere are N buildings along the line. The i-th building from the left is colored in color i, and its height is currently a_i meters. \n\t\t\t\t\tChokudai is a mayor of the city, and he loves colorful thigs. And now he wants to see at least K buildings from the left. \n\n\t\t\t\t\tYou can increase height of buildings, but it costs 1 yens to increase 1 meters. It means you cannot make building that height is not integer. \n\t\t\t\t\tYou cannot decrease height of buildings. \n\t\t\t\t\tCalculate the minimum cost of satisfying Chokudai's objective. \n\t\t\t\t\tNote: \"Building i can see from the left\" means there are no j exists that (height of building j) ≥ (height of building i) and j < i. There are N buildings along the line. The i -th building from the left is colored in color i , and its height is currently a_i meters. Chokudai is a mayor of the city, and he loves colorful thigs. And now he wants to see at least K buildings from the left. You can increase height of buildings, but it costs 1 yens to increase 1 meters. It means you cannot make building that height is not integer. You cannot decrease height of buildings. Calculate the minimum cost of satisfying Chokudai's objective. Note: \"Building i can see from the left\" means there are no j exists that (height of building j ) ≥ (height of building i ) and j < i .",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03752.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ K ≤ N ≤ 15\n1 ≤ a_i ≤ 10^9",
          "ranges": "1 10; 15; 10; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 5\n3949 3774 3598 3469 3424",
            "output": "1541 The optimal solution is (height of buildings from the left) = [3949, 3950, 3951, 3952, 3953] .",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03752.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03752"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03753",
        "title": "Initially, each cell at (i, j) contains the integer 7i + j - 8, and each cell is white.",
        "description": "Max Score: 500 Points \n\nProblem Statement\n\t\t\t\t\tWe have a grid with n rows and 7 columns. We call it a calendar. The cell at i-th row and j-th column is denoted (i, j). \n\n\n\n\t\t\t\t\tInitially, each cell at (i, j) contains the integer 7i + j - 8, and each cell is white. \n\n\t\t\t\t\tSnuke likes painting, so he decided integer m, and did q operations with a calendar. \n\t\t\t\t\t・In i-th operation, he paint black on the cell in which an integer is written such remainder of dividing by m is a_i. \n\n\t\t\t\t\tPlease count the number of connected white parts. \n\t\t\t\t\tNote that if two adjacent cells are white, the cells belong to the same connected part. We have a grid with n rows and 7 columns. We call it a calendar. The cell at i -th row and j -th column is denoted (i, j) . Initially, each cell at (i, j) contains the integer 7i + j - 8 , and each cell is white. Snuke likes painting, so he decided integer m , and did q operations with a calendar. ・In i -th operation, he paint black on the cell in which an integer is written such remainder of dividing by m is a_i . Please count the number of connected white parts. Note that if two adjacent cells are white, the cells belong to the same connected part.",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03753.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "n ≤ 10^{12}\n7n is divisible by m.\n1 ≤ q ≤ m ≤ 10^5\n0 ≤ a_1 < a_2 < ... < a_q < m",
          "ranges": "10; 10; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "7 7 3\n1 3 5",
            "output": "4 The calendar looks like this:",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03753.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03753"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03755",
        "title": "There is a railroad company in Atcoder Kingdom, \"Atcoder Railroad\".",
        "description": "Max Score: 1000 Points \n\nProblem Statement\n\t\t\t\t\tThere is a railroad company in Atcoder Kingdom, \"Atcoder Railroad\". \n\t\t\t\t\tThere are N + 1 stations numbered 0, 1, 2, ..., N along a railway. \n\t\t\t\t\tCurrently, two kinds of train are operated, local and express. \n\t\t\t\t\tA local train stops at every station, and it takes one minute from station i to i + 1, and vice versa. \n\t\t\t\t\tAn express train only stops at station S_0, S_1, S_2, ..., S_{K-1} (0 = S_0 < S_1 < S_2 < ... < S_{K-1} = N). It takes one minute from station S_i to S_{i + 1}, and vice versa. \n\t\t\t\t\tBut the president of Atcoder Railroad, Semiexp said it is not very convenient so he planned to operate one more kind of train, \"semi-express\". \n\t\t\t\t\tThe stations where the semi-express stops (This is T_0, T_1, T_2, ..., T_{L-1}, 0 = T_0 < T_1 < T_2 < ... < T_{L-1} = N) have to follow following conditions: \n\t\t\t\t\tFrom station T_i to T_{i+1} takes 1 minutes, and vice versa. \n\nThe center of Atcoder Kingdom is station 0, and you have to be able to go to station i atmost X minutes.\nIf the express stops at the station, semi-express should stops at the station.\n\n\t\t\t\t\tPrint the number of ways of the set of the station where semi-express stops (sequence T). \n\t\t\t\t\tSince the answer can be large, print the number modulo 10^9 + 7. There is a railroad company in Atcoder Kingdom, \"Atcoder Railroad\". There are N + 1 stations numbered 0, 1, 2, ..., N along a railway. Currently, two kinds of train are operated, local and express. A local train stops at every station, and it takes one minute from station i to i + 1 , and vice versa. An express train only stops at station S_0, S_1, S_2, ..., S_{K-1} (0 = S_0 < S_1 < S_2 < ... < S_{K-1} = N) . It takes one minute from station S_i to S_{i + 1} , and vice versa. But the president of Atcoder Railroad, Semiexp said it is not very convenient so he planned to operate one more kind of train, \"semi-express\". The stations where the semi-express stops (This is T_0, T_1, T_2, ..., T_{L-1} , 0 = T_0 < T_1 < T_2 < ... < T_{L-1} = N ) have to follow following conditions: From station T_i to T_{i+1} takes 1 minutes, and vice versa. The center of Atcoder Kingdom is station 0, and you have to be able to go to station i atmost X minutes.\nIf the express stops at the station, semi-express should stops at the station. Print the number of ways of the set of the station where semi-express stops (sequence T ). Since the answer can be large, print the number modulo 10^9 + 7 .",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03755.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ K ≤ 2500.\n1 ≤ X ≤ 2500.\nS_0 = 0, S_{K-1} = N.\n1 ≤ S_{i + 1} - S_i ≤ 10000.",
          "ranges": "2 2500; 1 2500; 2500; 2500; 0; 10000; 2; 1; 0; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "7 2 3\n0 7",
            "output": "55 The set of trains that stops station 0 and 7 , and can't satisfy the condition is: [0, 7], [0, 1, 7], [0, 1, 2, 7], [0, 1, 6, 7], [0, 1, 2, 6, 7], [0, 1, 2, 3, 6, 7], [0, 1, 2, 5, 6, 7], [0, 1, 2, 3, 5, 6, 7], [0, 1, 2, 3, 4, 5, 6, 7] , 9 ways. Therefore, the number of ways is 2^6 - 9 = 55 .",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03755.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03755"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03757",
        "title": "You have to process Q queries for Atcoder:",
        "description": "Max Score: 1450 Points \n\nProblem Statement\n\t\t\t\t\tThere are N workers in Atcoder company. Each worker is numbered 0 through N - 1, and the boss for worker i is p_i like a tree structure and the salary is currently a_i. (p_i < i, especially p_0 = -1 because worker 0 is a president) \n\t\t\t\t\tIn atcoder, the boss of boss of boss of ... (repeated k times) worker i called \"k-th upper boss\", and \"k-th lower subordinate\" called for vice versa. \n\n\t\t\t\t\tYou have to process Q queries for Atcoder: \n\nQuery 1: You are given v_i, d_i, x_i. Increase the salary of worker v_i, and all j-th (1 ≤ j ≤ d_i) lower subordinates by x_i.\nQuery 2: You are given v_i, d_i. Calculate the sum of salary of worker v_i and all j-th (1 ≤ j ≤ d_i) lower subordinates.\nQuery 3: You are given pr_i, ar_i. Now Atcoder has a new worker c! (c is the current number of workers) The boss is pr_i, and the first salary is ar_i.\n\n\t\t\t\t\tProcess all queries!!! There are N workers in Atcoder company. Each worker is numbered 0 through N - 1 , and the boss for worker i is p_i like a tree structure and the salary is currently a_i . ( p_i < i , especially p_0 = -1 because worker 0 is a president) In atcoder, the boss of boss of boss of ... (repeated k times) worker i called \" k -th upper boss\", and \" k -th lower subordinate\" called for vice versa. You have to process Q queries for Atcoder: Query 1: You are given v_i, d_i, x_i. Increase the salary of worker v_i, and all j-th (1 ≤ j ≤ d_i) lower subordinates by x_i.\nQuery 2: You are given v_i, d_i. Calculate the sum of salary of worker v_i and all j-th (1 ≤ j ≤ d_i) lower subordinates.\nQuery 3: You are given pr_i, ar_i. Now Atcoder has a new worker c! (c is the current number of workers) The boss is pr_i, and the first salary is ar_i. Process all queries!!!",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math",
          "graph",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03757.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "N ≤ 400000\nQ ≤ 50000\np_i < i for all valid i.\nIn each question 1 or 2, worker v_i exists.\nd_i ≤ 400000\n0 ≤ a_i, x_i ≤ 1000",
          "ranges": "400000; 50000; 400000; 1000; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "6 7\n-1 6\n0 5\n0 4\n2 3\n2 2\n1 1\n2 0 1\n1 0 2 1\n2 2 1\n3 3 3\n2 0 3\n3 3 4\n2 1 1",
            "output": "15\n12\n30\n8",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03757.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03757"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03761",
        "title": "He will receive a headline which contains one of the strings S_1,...,S_n tomorrow.",
        "description": "Score : 300 points Problem StatementSnuke loves \"paper cutting\": he cuts out characters from a newspaper headline and rearranges them to form another string.\nHe will receive a headline which contains one of the strings S_1,...,S_n tomorrow.\nHe is excited and already thinking of what string he will create.\nSince he does not know the string on the headline yet, he is interested in strings that can be created regardless of which string the headline contains.\nFind the longest string that can be created regardless of which string among S_1,...,S_n the headline contains.\nIf there are multiple such strings, find the lexicographically smallest one among them. Snuke loves \"paper cutting\": he cuts out characters from a newspaper headline and rearranges them to form another string. He will receive a headline which contains one of the strings S_1,...,S_n tomorrow.\nHe is excited and already thinking of what string he will create.\nSince he does not know the string on the headline yet, he is interested in strings that can be created regardless of which string the headline contains. Find the longest string that can be created regardless of which string among S_1,...,S_n the headline contains.\nIf there are multiple such strings, find the lexicographically smallest one among them. Print the lexicographically smallest string among the longest strings that satisfy the condition.\nIf the answer is an empty string, print an empty line. The strings that can be created from each of cbaa, daacc and acacac, are aa, aac, aca, caa and so forth.\nAmong them, aac, aca and caa are the longest, and the lexicographically smallest of these three is aac. The answer is an empty string. Snuke loves \"paper cutting\": he cuts out characters from a newspaper headline and rearranges them to form another string. He will receive a headline which contains one of the strings S_1,...,S_n tomorrow.\nHe is excited and already thinking of what string he will create.\nSince he does not know the string on the headline yet, he is interested in strings that can be created regardless of which string the headline contains. Find the longest string that can be created regardless of which string among S_1,...,S_n the headline contains.\nIf there are multiple such strings, find the lexicographically smallest one among them.",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "string",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03761.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq n \\leq 50\n1 \\leq |S_i| \\leq 50 for every i = 1, ..., n.\nS_i consists of lowercase English letters (a - z) for every i = 1, ..., n.",
          "ranges": "1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\ncbaa\ndaacc\nacacac",
            "output": "aac The strings that can be created from each of cbaa, daacc and acacac, are aa, aac, aca, caa and so forth.\nAmong them, aac, aca and caa are the longest, and the lexicographically smallest of these three is aac.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03761.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03761"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03763",
        "title": "He will receive a headline which contains one of the strings S_1,...,S_n tomorrow.",
        "description": "Score : 300 points Problem StatementSnuke loves \"paper cutting\": he cuts out characters from a newspaper headline and rearranges them to form another string.\nHe will receive a headline which contains one of the strings S_1,...,S_n tomorrow.\nHe is excited and already thinking of what string he will create.\nSince he does not know the string on the headline yet, he is interested in strings that can be created regardless of which string the headline contains.\nFind the longest string that can be created regardless of which string among S_1,...,S_n the headline contains.\nIf there are multiple such strings, find the lexicographically smallest one among them. Snuke loves \"paper cutting\": he cuts out characters from a newspaper headline and rearranges them to form another string. He will receive a headline which contains one of the strings S_1,...,S_n tomorrow.\nHe is excited and already thinking of what string he will create.\nSince he does not know the string on the headline yet, he is interested in strings that can be created regardless of which string the headline contains. Find the longest string that can be created regardless of which string among S_1,...,S_n the headline contains.\nIf there are multiple such strings, find the lexicographically smallest one among them. Print the lexicographically smallest string among the longest strings that satisfy the condition.\nIf the answer is an empty string, print an empty line. The strings that can be created from each of cbaa, daacc and acacac, are aa, aac, aca, caa and so forth.\nAmong them, aac, aca and caa are the longest, and the lexicographically smallest of these three is aac. The answer is an empty string. Snuke loves \"paper cutting\": he cuts out characters from a newspaper headline and rearranges them to form another string. He will receive a headline which contains one of the strings S_1,...,S_n tomorrow.\nHe is excited and already thinking of what string he will create.\nSince he does not know the string on the headline yet, he is interested in strings that can be created regardless of which string the headline contains. Find the longest string that can be created regardless of which string among S_1,...,S_n the headline contains.\nIf there are multiple such strings, find the lexicographically smallest one among them.",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "string",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03763.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq n \\leq 50\n1 \\leq |S_i| \\leq 50 for every i = 1, ..., n.\nS_i consists of lowercase English letters (a - z) for every i = 1, ..., n.",
          "ranges": "1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\ncbaa\ndaacc\nacacac",
            "output": "aac The strings that can be created from each of cbaa, daacc and acacac, are aa, aac, aca, caa and so forth.\nAmong them, aac, aca and caa are the longest, and the lexicographically smallest of these three is aac.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03763.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03763"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03767",
        "title": "The strength of the i-th participant is represented by an integer a_i.",
        "description": "Score : 300 points Problem StatementThere are 3N participants in AtCoder Group Contest.\nThe strength of the i-th participant is represented by an integer a_i.\nThey will form N teams, each consisting of three participants.\nNo participant may belong to multiple teams.\nThe strength of a team is defined as the second largest strength among its members.\nFor example, a team of participants of strength 1, 5, 2 has a strength 2, and a team of three participants of strength 3, 2, 3 has a strength 3.\nFind the maximum possible sum of the strengths of N teams. There are 3N participants in AtCoder Group Contest.\nThe strength of the i-th participant is represented by an integer a_i.\nThey will form N teams, each consisting of three participants.\nNo participant may belong to multiple teams. The strength of a team is defined as the second largest strength among its members.\nFor example, a team of participants of strength 1, 5, 2 has a strength 2, and a team of three participants of strength 3, 2, 3 has a strength 3. Find the maximum possible sum of the strengths of N teams. Print the answer. The following is one formation of teams that maximizes the sum of the strengths of teams: The sum of the strengths can be quite large. There are 3N participants in AtCoder Group Contest.\nThe strength of the i-th participant is represented by an integer a_i.\nThey will form N teams, each consisting of three participants.\nNo participant may belong to multiple teams. The strength of a team is defined as the second largest strength among its members.\nFor example, a team of participants of strength 1, 5, 2 has a strength 2, and a team of three participants of strength 3, 2, 3 has a strength 3. Find the maximum possible sum of the strengths of N teams.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03767.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10^5\n1 ≤ a_i ≤ 10^{9}\na_i are integers.",
          "ranges": "1 10; 1 10; 10; 10; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\n5 2 8 5 1 5",
            "output": "10 The following is one formation of teams that maximizes the sum of the strengths of teams: Team 1: consists of the first, fourth and fifth participants.\nTeam 2: consists of the second, third and sixth participants.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03767.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03767"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03768",
        "title": "There is a simple undirected graph consisting of N vertices numbered 1 through N, and M edges.",
        "description": "Score : 700 points Problem StatementSquid loves painting vertices in graphs.\nThere is a simple undirected graph consisting of N vertices numbered 1 through N, and M edges.\nInitially, all the vertices are painted in color 0. The i-th edge bidirectionally connects two vertices a_i and b_i. The length of every edge is 1.\nSquid performed Q operations on this graph. In the i-th operation, he repaints all the vertices within a distance of d_i from vertex v_i, in color c_i.\nFind the color of each vertex after the Q operations. Squid loves painting vertices in graphs. There is a simple undirected graph consisting of N vertices numbered 1 through N, and M edges.\nInitially, all the vertices are painted in color 0. The i-th edge bidirectionally connects two vertices a_i and b_i. The length of every edge is 1. Squid performed Q operations on this graph. In the i-th operation, he repaints all the vertices within a distance of d_i from vertex v_i, in color c_i. Find the color of each vertex after the Q operations. Partial Score\n200 points will be awarded for passing the testset satisfying 1 ≤ N,M,Q ≤ 2{,}000. Print the answer in N lines.\nIn the i-th line, print the color of vertex i after the Q operations. Initially, each vertex is painted in color 0.\nIn the first operation, vertices 5 and 6 are repainted in color 1.\nIn the second operation, vertices 1, 2, 3, 4 and 5 are repainted in color 2. The given graph may not be connected. Squid loves painting vertices in graphs. There is a simple undirected graph consisting of N vertices numbered 1 through N, and M edges.\nInitially, all the vertices are painted in color 0. The i-th edge bidirectionally connects two vertices a_i and b_i. The length of every edge is 1. Squid performed Q operations on this graph. In the i-th operation, he repaints all the vertices within a distance of d_i from vertex v_i, in color c_i. Find the color of each vertex after the Q operations.",
        "difficulty": "Hard",
        "category": "Trees & Graphs",
        "tags": [
          "math",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03768.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N,M,Q ≤ 10^5\n1 ≤ a_i,b_i,v_i ≤ N\na_i ≠ b_i\n0 ≤ d_i ≤ 10\n1 ≤ c_i ≤10^5\nd_i and c_i are all integers.\nThere are no self-loops or multiple edges in the given graph.",
          "ranges": "0 10; 1 10; 10; 10; 10; 1; 1; 0; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "7 7\n1 2\n1 3\n1 4\n4 5\n5 6\n5 7\n2 3\n2\n6 1 1\n1 2 2",
            "output": "2\n2\n2\n2\n2\n1\n0 Initially, each vertex is painted in color 0.\nIn the first operation, vertices 5 and 6 are repainted in color 1.\nIn the second operation, vertices 1, 2, 3, 4 and 5 are repainted in color 2.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03768.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03768"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03769",
        "title": "For example, aa and bubobubo are good; an empty string, a, abcabcabc and abba are not good.",
        "description": "Score : 1000 points Problem StatementWe will call a string x good if it satisfies the following condition:\n\nCondition: x can be represented as a concatenation of two copies of another string y of length at least 1.\n\nFor example, aa and bubobubo are good; an empty string, a, abcabcabc and abba are not good.\nEagle and Owl created a puzzle on good strings.\nFind one string s that satisfies the following conditions. It can be proved that such a string always exists under the constraints in this problem.\n\n1 ≤ |s| ≤ 200\nEach character of s is one of the 100 characters represented by the integers 1 through 100.\nAmong the 2^{|s|} subsequences of s, exactly N are good strings. We will call a string x good if it satisfies the following condition: For example, aa and bubobubo are good; an empty string, a, abcabcabc and abba are not good. Eagle and Owl created a puzzle on good strings.\nFind one string s that satisfies the following conditions. It can be proved that such a string always exists under the constraints in this problem. In the first line, print |s|, the length of s.\nIn the second line, print the elements in s in order, with spaces in between. Any string that satisfies the above conditions will be accepted. There are two good strings that appear as subsequences of s: (1,1) and (1,1,1,1). There are six occurrences of (1,1) and one occurrence of (1,1,1,1), for a total of seven. We will call a string x good if it satisfies the following condition: Condition: x can be represented as a concatenation of two copies of another string y of length at least 1. For example, aa and bubobubo are good; an empty string, a, abcabcabc and abba are not good. Eagle and Owl created a puzzle on good strings.\nFind one string s that satisfies the following conditions. It can be proved that such a string always exists under the constraints in this problem. 1 ≤ |s| ≤ 200\nEach character of s is one of the 100 characters represented by the integers 1 through 100.\nAmong the 2^{|s|} subsequences of s, exactly N are good strings.",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "string",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03769.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10^{12}",
          "ranges": "1 10; 10; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "7",
            "output": "4\n1 1 1 1 There are two good strings that appear as subsequences of s: (1,1) and (1,1,1,1). There are six occurrences of (1,1) and one occurrence of (1,1,1,1), for a total of seven.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03769.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03769"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03770",
        "title": "The i-th ball from the left has color c_i and weight w_i.",
        "description": "Score : 1000 points Problem StatementSnuke arranged N colorful balls in a row.\nThe i-th ball from the left has color c_i and weight w_i.\nHe can rearrange the balls by performing the following two operations any number of times, in any order:\n\nOperation 1: Select two balls with the same color. If the total weight of these balls is at most X, swap the positions of these balls.\nOperation 2: Select two balls with different colors. If the total weight of these balls is at most Y, swap the positions of these balls.\n\nHow many different sequences of colors of balls can be obtained? Find the count modulo 10^9 + 7. Snuke arranged N colorful balls in a row.\nThe i-th ball from the left has color c_i and weight w_i. He can rearrange the balls by performing the following two operations any number of times, in any order: How many different sequences of colors of balls can be obtained? Find the count modulo 10^9 + 7. Print the answer. Snuke arranged N colorful balls in a row.\nThe i-th ball from the left has color c_i and weight w_i. He can rearrange the balls by performing the following two operations any number of times, in any order: Operation 1: Select two balls with the same color. If the total weight of these balls is at most X, swap the positions of these balls.\nOperation 2: Select two balls with different colors. If the total weight of these balls is at most Y, swap the positions of these balls. How many different sequences of colors of balls can be obtained? Find the count modulo 10^9 + 7.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "array",
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03770.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 2 × 10^5\n1 ≤ X, Y ≤ 10^9\n1 ≤ c_i ≤ N\n1 ≤ w_i ≤ 10^9\nX, Y, c_i, w_i are all integers.",
          "ranges": "1 2; 1 10; 2; 10; 10; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 7 3\n3 2\n4 3\n2 1\n4 4",
            "output": "2 The sequence of colors (2,4,3,4) can be obtained by swapping the positions of the first and third balls by operation 2.\nIt is also possible to swap the positions of the second and fourth balls by operation 1, but it does not affect the sequence of colors.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03770.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03770"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03771",
        "title": "Camel hopes to visit all these oases.",
        "description": "Score : 1000 points Problem StatementThere are N oases on a number line. The coordinate of the i-th oases from the left is x_i.\nCamel hopes to visit all these oases.\nInitially, the volume of the hump on his back is V. When the volume of the hump is v, water of volume at most v can be stored. Water is only supplied at oases. He can get as much water as he can store at a oasis, and the same oasis can be used any number of times.\nCamel can travel on the line by either walking or jumping:\n\nWalking over a distance of d costs water of volume d from the hump. A walk that leads to a negative amount of stored water cannot be done.\nLet v be the amount of water stored at the moment. When v>0, Camel can jump to any point on the line of his choice. After this move, the volume of the hump becomes v/2 (rounded down to the nearest integer), and the amount of stored water becomes 0.\n\nFor each of the oases, determine whether it is possible to start from that oasis and visit all the oases. There are N oases on a number line. The coordinate of the i-th oases from the left is x_i. Camel hopes to visit all these oases.\nInitially, the volume of the hump on his back is V. When the volume of the hump is v, water of volume at most v can be stored. Water is only supplied at oases. He can get as much water as he can store at a oasis, and the same oasis can be used any number of times. Camel can travel on the line by either walking or jumping: For each of the oases, determine whether it is possible to start from that oasis and visit all the oases. Print N lines. The i-th line should contain Possible if it is possible to start from the i-th oasis and visit all the oases, and Impossible otherwise. It is possible to start from the first oasis and visit all the oases, as follows: A oasis may be visited any number of times. There are N oases on a number line. The coordinate of the i-th oases from the left is x_i. Camel hopes to visit all these oases.\nInitially, the volume of the hump on his back is V. When the volume of the hump is v, water of volume at most v can be stored. Water is only supplied at oases. He can get as much water as he can store at a oasis, and the same oasis can be used any number of times. Camel can travel on the line by either walking or jumping: Walking over a distance of d costs water of volume d from the hump. A walk that leads to a negative amount of stored water cannot be done.\nLet v be the amount of water stored at the moment. When v>0, Camel can jump to any point on the line of his choice. After this move, the volume of the hump becomes v/2 (rounded down to the nearest integer), and the amount of stored water becomes 0. For each of the oases, determine whether it is possible to start from that oasis and visit all the oases.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03771.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N,V ≤ 2 × 10^5\n-10^9 ≤ x_1 < x_2 < ... < x_N ≤ 10^9\nV and x_i are all integers.",
          "ranges": "2; 10; 2; 9"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 2\n1 3 6",
            "output": "Possible\nPossible\nPossible It is possible to start from the first oasis and visit all the oases, as follows: Walk from the first oasis to the second oasis. The amount of stored water becomes 0.\nGet water at the second oasis. The amount of stored water becomes 2.\nJump from the second oasis to the third oasis. The amount of stored water becomes 0, and the volume of the hump becomes 1.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03771.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03771"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03772",
        "title": "b_1 = the median of (a_1)",
        "description": "Score : 2000 points Problem StatementSnuke received an integer sequence a of length 2N-1.\nHe arbitrarily permuted the elements in a, then used it to construct a new integer sequence b of length N, as follows:\n\nb_1 = the median of (a_1)\nb_2 = the median of (a_1, a_2, a_3)\nb_3 = the median of (a_1, a_2, a_3, a_4, a_5)\n:\nb_N = the median of (a_1, a_2, a_3, ..., a_{2N-1})\n\nHow many different sequences can be obtained as b? Find the count modulo 10^{9} + 7. Snuke received an integer sequence a of length 2N-1. He arbitrarily permuted the elements in a, then used it to construct a new integer sequence b of length N, as follows: How many different sequences can be obtained as b? Find the count modulo 10^{9} + 7. Print the answer. There are three sequences that can be obtained as b: (1,2), (2,2) and (3,2). Each of these can be constructed from (1,2,3), (2,1,3) and (3,1,2), respectively. Print the count modulo 10^{9} + 7. Snuke received an integer sequence a of length 2N-1. He arbitrarily permuted the elements in a, then used it to construct a new integer sequence b of length N, as follows: b_1 = the median of (a_1)\nb_2 = the median of (a_1, a_2, a_3)\nb_3 = the median of (a_1, a_2, a_3, a_4, a_5)\n:\nb_N = the median of (a_1, a_2, a_3, ..., a_{2N-1}) How many different sequences can be obtained as b? Find the count modulo 10^{9} + 7.",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "array"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03772.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 50\n1 ≤ a_i ≤ 2N-1\na_i are integers.",
          "ranges": "1 50; 1 2; 50; 2; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\n1 3 2",
            "output": "3 There are three sequences that can be obtained as b: (1,2), (2,2) and (3,2). Each of these can be constructed from (1,2,3), (2,1,3) and (3,1,2), respectively.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03772.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03772"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03778",
        "title": "AtCoDeer will move the second rectangle horizontally so that it connects with the first rectangle.",
        "description": "Score : 200 points Problem StatementAtCoDeer the deer found two rectangles lying on the table, each with height 1 and width W.\nIf we consider the surface of the desk as a two-dimensional plane, the first rectangle covers the vertical range of [0,1] and the horizontal range of [a,a+W], and the second rectangle covers the vertical range of [1,2] and the horizontal range of [b,b+W], as shown in the following figure:\n\nAtCoDeer will move the second rectangle horizontally so that it connects with the first rectangle.\nFind the minimum distance it needs to be moved. AtCoDeer the deer found two rectangles lying on the table, each with height 1 and width W.\nIf we consider the surface of the desk as a two-dimensional plane, the first rectangle covers the vertical range of [0,1] and the horizontal range of [a,a+W], and the second rectangle covers the vertical range of [1,2] and the horizontal range of [b,b+W], as shown in the following figure: AtCoDeer will move the second rectangle horizontally so that it connects with the first rectangle.\nFind the minimum distance it needs to be moved. Print the minimum distance the second rectangle needs to be moved. This input corresponds to the figure in the statement. In this case, the second rectangle should be moved to the left by a distance of 1. The rectangles are already connected, and thus no move is needed. AtCoDeer the deer found two rectangles lying on the table, each with height 1 and width W.\nIf we consider the surface of the desk as a two-dimensional plane, the first rectangle covers the vertical range of [0,1] and the horizontal range of [a,a+W], and the second rectangle covers the vertical range of [1,2] and the horizontal range of [b,b+W], as shown in the following figure: AtCoDeer will move the second rectangle horizontally so that it connects with the first rectangle.\nFind the minimum distance it needs to be moved.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03778.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "All input values are integers.\n1≤W≤10^5\n1≤a,b≤10^5",
          "ranges": "1 10; 10; 10; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 2 6",
            "output": "1 This input corresponds to the figure in the statement. In this case, the second rectangle should be moved to the left by a distance of 1.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03778.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03778"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03779",
        "title": "That is, if his coordinate at time i-1 is x, he can be at coordinate x-i, x or x+i at time i.",
        "description": "Score : 200 points Problem StatementThere is a kangaroo at coordinate 0 on an infinite number line that runs from left to right, at time 0.\nDuring the period between time i-1 and time i, the kangaroo can either stay at his position, or perform a jump of length exactly i to the left or to the right.\nThat is, if his coordinate at time i-1 is x, he can be at coordinate x-i, x or x+i at time i.\nThe kangaroo's nest is at coordinate X, and he wants to travel to coordinate X as fast as possible.\nFind the earliest possible time to reach coordinate X. There is a kangaroo at coordinate 0 on an infinite number line that runs from left to right, at time 0.\nDuring the period between time i-1 and time i, the kangaroo can either stay at his position, or perform a jump of length exactly i to the left or to the right.\nThat is, if his coordinate at time i-1 is x, he can be at coordinate x-i, x or x+i at time i.\nThe kangaroo's nest is at coordinate X, and he wants to travel to coordinate X as fast as possible.\nFind the earliest possible time to reach coordinate X. Print the earliest possible time for the kangaroo to reach coordinate X. The kangaroo can reach his nest at time 3 by jumping to the right three times, which is the earliest possible time. He can reach his nest at time 2 by staying at his position during the first second, and jumping to the right at the next second. There is a kangaroo at coordinate 0 on an infinite number line that runs from left to right, at time 0.\nDuring the period between time i-1 and time i, the kangaroo can either stay at his position, or perform a jump of length exactly i to the left or to the right.\nThat is, if his coordinate at time i-1 is x, he can be at coordinate x-i, x or x+i at time i.\nThe kangaroo's nest is at coordinate X, and he wants to travel to coordinate X as fast as possible.\nFind the earliest possible time to reach coordinate X.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03779.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "X is an integer.\n1≤X≤10^9",
          "ranges": "1 10; 10; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "6",
            "output": "3 The kangaroo can reach his nest at time 3 by jumping to the right three times, which is the earliest possible time.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03779.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03779"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03780",
        "title": "Then, for each card i, he judges whether it is unnecessary or not, as follows:",
        "description": "Score : 600 points Problem StatementAtCoDeer the deer has N cards with positive integers written on them. The number on the i-th card (1≤i≤N) is a_i.\nBecause he loves big numbers, he calls a subset of the cards good when the sum of the numbers written on the cards in the subset, is K or greater.\nThen, for each card i, he judges whether it is unnecessary or not, as follows:\n\nIf, for any good subset of the cards containing card i, the set that can be obtained by eliminating card i from the subset is also good, card i is unnecessary.\nOtherwise, card i is NOT unnecessary.\n\nFind the number of the unnecessary cards. Here, he judges each card independently, and he does not throw away cards that turn out to be unnecessary. AtCoDeer the deer has N cards with positive integers written on them. The number on the i-th card (1≤i≤N) is a_i.\nBecause he loves big numbers, he calls a subset of the cards good when the sum of the numbers written on the cards in the subset, is K or greater. Then, for each card i, he judges whether it is unnecessary or not, as follows: Find the number of the unnecessary cards. Here, he judges each card independently, and he does not throw away cards that turn out to be unnecessary. Partial Score\n300 points will be awarded for passing the test set satisfying N,K≤400. Print the number of the unnecessary cards. There are two good sets: {2,3} and {1,2,3}. Card 1 is only contained in {1,2,3}, and this set without card 1, {2,3}, is also good. Thus, card 1 is unnecessary. For card 2, a good set {2,3} without card 2, {3}, is not good. Thus, card 2 is NOT unnecessary. Neither is card 3 for a similar reason, hence the answer is 1. In this case, there is no good set. Therefore, all the cards are unnecessary. AtCoDeer the deer has N cards with positive integers written on them. The number on the i-th card (1≤i≤N) is a_i.\nBecause he loves big numbers, he calls a subset of the cards good when the sum of the numbers written on the cards in the subset, is K or greater. Then, for each card i, he judges whether it is unnecessary or not, as follows: If, for any good subset of the cards containing card i, the set that can be obtained by eliminating card i from the subset is also good, card i is unnecessary.\nOtherwise, card i is NOT unnecessary. Find the number of the unnecessary cards. Here, he judges each card independently, and he does not throw away cards that turn out to be unnecessary.",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03780.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "All input values are integers.\n1≤N≤5000\n1≤K≤5000\n1≤a_i≤10^9 (1≤i≤N)",
          "ranges": "1 5000; 1 5000; 1 10; 5000; 5000; 10; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 6\n1 4 3",
            "output": "1 There are two good sets: {2,3} and {1,2,3}. Card 1 is only contained in {1,2,3}, and this set without card 1, {2,3}, is also good. Thus, card 1 is unnecessary. For card 2, a good set {2,3} without card 2, {3}, is not good. Thus, card 2 is NOT unnecessary. Neither is card 3 for a similar reason, hence the answer is 1.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03780.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03780"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03781",
        "title": "That is, if his coordinate at time i-1 is x, he can be at coordinate x-i, x or x+i at time i.",
        "description": "Score : 200 points Problem StatementThere is a kangaroo at coordinate 0 on an infinite number line that runs from left to right, at time 0.\nDuring the period between time i-1 and time i, the kangaroo can either stay at his position, or perform a jump of length exactly i to the left or to the right.\nThat is, if his coordinate at time i-1 is x, he can be at coordinate x-i, x or x+i at time i.\nThe kangaroo's nest is at coordinate X, and he wants to travel to coordinate X as fast as possible.\nFind the earliest possible time to reach coordinate X. There is a kangaroo at coordinate 0 on an infinite number line that runs from left to right, at time 0.\nDuring the period between time i-1 and time i, the kangaroo can either stay at his position, or perform a jump of length exactly i to the left or to the right.\nThat is, if his coordinate at time i-1 is x, he can be at coordinate x-i, x or x+i at time i.\nThe kangaroo's nest is at coordinate X, and he wants to travel to coordinate X as fast as possible.\nFind the earliest possible time to reach coordinate X. Print the earliest possible time for the kangaroo to reach coordinate X. The kangaroo can reach his nest at time 3 by jumping to the right three times, which is the earliest possible time. He can reach his nest at time 2 by staying at his position during the first second, and jumping to the right at the next second. There is a kangaroo at coordinate 0 on an infinite number line that runs from left to right, at time 0.\nDuring the period between time i-1 and time i, the kangaroo can either stay at his position, or perform a jump of length exactly i to the left or to the right.\nThat is, if his coordinate at time i-1 is x, he can be at coordinate x-i, x or x+i at time i.\nThe kangaroo's nest is at coordinate X, and he wants to travel to coordinate X as fast as possible.\nFind the earliest possible time to reach coordinate X.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03781.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "X is an integer.\n1≤X≤10^9",
          "ranges": "1 10; 10; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "6",
            "output": "3 The kangaroo can reach his nest at time 3 by jumping to the right three times, which is the earliest possible time.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03781.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03781"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03782",
        "title": "Then, for each card i, he judges whether it is unnecessary or not, as follows:",
        "description": "Score : 600 points Problem StatementAtCoDeer the deer has N cards with positive integers written on them. The number on the i-th card (1≤i≤N) is a_i.\nBecause he loves big numbers, he calls a subset of the cards good when the sum of the numbers written on the cards in the subset, is K or greater.\nThen, for each card i, he judges whether it is unnecessary or not, as follows:\n\nIf, for any good subset of the cards containing card i, the set that can be obtained by eliminating card i from the subset is also good, card i is unnecessary.\nOtherwise, card i is NOT unnecessary.\n\nFind the number of the unnecessary cards. Here, he judges each card independently, and he does not throw away cards that turn out to be unnecessary. AtCoDeer the deer has N cards with positive integers written on them. The number on the i-th card (1≤i≤N) is a_i.\nBecause he loves big numbers, he calls a subset of the cards good when the sum of the numbers written on the cards in the subset, is K or greater. Then, for each card i, he judges whether it is unnecessary or not, as follows: Find the number of the unnecessary cards. Here, he judges each card independently, and he does not throw away cards that turn out to be unnecessary. Partial Score\n300 points will be awarded for passing the test set satisfying N,K≤400. Print the number of the unnecessary cards. There are two good sets: {2,3} and {1,2,3}. Card 1 is only contained in {1,2,3}, and this set without card 1, {2,3}, is also good. Thus, card 1 is unnecessary. For card 2, a good set {2,3} without card 2, {3}, is not good. Thus, card 2 is NOT unnecessary. Neither is card 3 for a similar reason, hence the answer is 1. In this case, there is no good set. Therefore, all the cards are unnecessary. AtCoDeer the deer has N cards with positive integers written on them. The number on the i-th card (1≤i≤N) is a_i.\nBecause he loves big numbers, he calls a subset of the cards good when the sum of the numbers written on the cards in the subset, is K or greater. Then, for each card i, he judges whether it is unnecessary or not, as follows: If, for any good subset of the cards containing card i, the set that can be obtained by eliminating card i from the subset is also good, card i is unnecessary.\nOtherwise, card i is NOT unnecessary. Find the number of the unnecessary cards. Here, he judges each card independently, and he does not throw away cards that turn out to be unnecessary.",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03782.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "All input values are integers.\n1≤N≤5000\n1≤K≤5000\n1≤a_i≤10^9 (1≤i≤N)",
          "ranges": "1 5000; 1 5000; 1 10; 5000; 5000; 10; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 6\n1 4 3",
            "output": "1 There are two good sets: {2,3} and {1,2,3}. Card 1 is only contained in {1,2,3}, and this set without card 1, {2,3}, is also good. Thus, card 1 is unnecessary. For card 2, a good set {2,3} without card 2, {3}, is not good. Thus, card 2 is NOT unnecessary. Neither is card 3 for a similar reason, hence the answer is 1.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03782.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03782"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03783",
        "title": "AtCoDeer will move these rectangles horizontally so that all the rectangles are connected.",
        "description": "Score : 1000 points Problem StatementAtCoDeer the deer found N rectangle lying on the table, each with height 1.\nIf we consider the surface of the desk as a two-dimensional plane, the i-th rectangle i(1≤i≤N) covers the vertical range of [i-1,i] and the horizontal range of [l_i,r_i], as shown in the following figure:\n\nAtCoDeer will move these rectangles horizontally so that all the rectangles are connected.\nFor each rectangle, the cost to move it horizontally by a distance of x, is x.\nFind the minimum cost to achieve connectivity.\nIt can be proved that this value is always an integer under the constraints of the problem. AtCoDeer the deer found N rectangle lying on the table, each with height 1.\nIf we consider the surface of the desk as a two-dimensional plane, the i-th rectangle i(1≤i≤N) covers the vertical range of [i-1,i] and the horizontal range of [l_i,r_i], as shown in the following figure: AtCoDeer will move these rectangles horizontally so that all the rectangles are connected.\nFor each rectangle, the cost to move it horizontally by a distance of x, is x.\nFind the minimum cost to achieve connectivity.\nIt can be proved that this value is always an integer under the constraints of the problem. Partial Score\n300 points will be awarded for passing the test set satisfying 1≤N≤400 and 1≤l_i<r_i≤400. Print the minimum cost to achieve connectivity. The second rectangle should be moved to the left by a distance of 2. The rectangles are already connected, and thus no move is needed. AtCoDeer the deer found N rectangle lying on the table, each with height 1.\nIf we consider the surface of the desk as a two-dimensional plane, the i-th rectangle i(1≤i≤N) covers the vertical range of [i-1,i] and the horizontal range of [l_i,r_i], as shown in the following figure: AtCoDeer will move these rectangles horizontally so that all the rectangles are connected.\nFor each rectangle, the cost to move it horizontally by a distance of x, is x.\nFind the minimum cost to achieve connectivity.\nIt can be proved that this value is always an integer under the constraints of the problem.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03783.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "All input values are integers.\n1≤N≤10^5\n1≤l_i<r_i≤10^9",
          "ranges": "1 10; 10; 10; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n1 3\n5 7\n1 3",
            "output": "2 The second rectangle should be moved to the left by a distance of 2.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03783.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03783"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03784",
        "title": "AtCoDeer the deer came across N people. For convenience, the people are numbered 0 through N-1.",
        "description": "Score : 1300 points Problem StatementThis is an interactive task.\nAtCoDeer the deer came across N people. For convenience, the people are numbered 0 through N-1.\nAmong them, A are honest and the remaining B(=N-A) are unkind.\nAll of these N people know who are honest and who are unkind, but AtCoDeer only knows that there are A honest and B unkind people.\nHe is trying to identify all of the honest people by asking questions to these N people.\nFor one question, AtCoDeer selects a and b (0≤a,b≤N-1), and asks person a the following question: \"Is person b honest?\"\nAn honest person will always answer correctly by \"Yes\" or \"No\".\nAn unkind person, however, will answer by selecting \"Yes\" or \"No\" arbitrarily.\nThat is, the algorithm used by an unkind person may not be simple one such as always lying or giving random fifty-fifty answers.\nAtCoDeer can ask at most 2N questions. He will ask questions one by one, and the responses to the previous questions can be used when deciding the next question to ask.\nIdentify all of the honest people.\nIf it is impossible (more formally, if, for any strategy of asking 2N questions, there exists a strategy for unkind people to answer the questions so that there are two or more possible sets of the honest people), report that fact. This is an interactive task. AtCoDeer the deer came across N people. For convenience, the people are numbered 0 through N-1.\nAmong them, A are honest and the remaining B(=N-A) are unkind.\nAll of these N people know who are honest and who are unkind, but AtCoDeer only knows that there are A honest and B unkind people.\nHe is trying to identify all of the honest people by asking questions to these N people.\nFor one question, AtCoDeer selects a and b (0≤a,b≤N-1), and asks person a the following question: \"Is person b honest?\" An honest person will always answer correctly by \"Yes\" or \"No\".\nAn unkind person, however, will answer by selecting \"Yes\" or \"No\" arbitrarily.\nThat is, the algorithm used by an unkind person may not be simple one such as always lying or giving random fifty-fifty answers. AtCoDeer can ask at most 2N questions. He will ask questions one by one, and the responses to the previous questions can be used when deciding the next question to ask. Identify all of the honest people.\nIf it is impossible (more formally, if, for any strategy of asking 2N questions, there exists a strategy for unkind people to answer the questions so that there are two or more possible sets of the honest people), report that fact. If identifying the honest people is impossible, the program must immediately print the following output and terminate itself: Here, ans is either Y or N.\nY represents \"Yes\"; N represents \"No\". Here, s_i must be 1 if person i is honest, and 0 if person i is unkind. In the following sample, A = 2, B = 1, and the answer is 101. In the following sample, A = 1, B = 2, and the answer is Impossible. This is an interactive task. AtCoDeer the deer came across N people. For convenience, the people are numbered 0 through N-1.\nAmong them, A are honest and the remaining B(=N-A) are unkind.\nAll of these N people know who are honest and who are unkind, but AtCoDeer only knows that there are A honest and B unkind people.\nHe is trying to identify all of the honest people by asking questions to these N people.\nFor one question, AtCoDeer selects a and b (0≤a,b≤N-1), and asks person a the following question: \"Is person b honest?\" An honest person will always answer correctly by \"Yes\" or \"No\".\nAn unkind person, however, will answer by selecting \"Yes\" or \"No\" arbitrarily.\nThat is, the algorithm used by an unkind person may not be simple one such as always lying or giving random fifty-fifty answers. AtCoDeer can ask at most 2N questions. He will ask questions one by one, and the responses to the previous questions can be used when deciding the next question to ask. Identify all of the honest people.\nIf it is impossible (more formally, if, for any strategy of asking 2N questions, there exists a strategy for unkind people to answer the questions so that there are two or more possible sets of the honest people), report that fact.",
        "difficulty": "Hard",
        "category": "Implementation",
        "tags": [
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03784.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤A,B≤2000",
          "ranges": "2000; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "First, A and B are given from Standard Input in the following format: A B If identifying the honest people is impossible, the program must immediately print the following output and terminate itself: Impossible Otherwise, the program shall ask questions.\nEach question must be written to Standard Output in the following format: ? a b Here, a and b must be integers between 0 and N-1 (inclusive).\nThe response to the question will be given from Standard Input in the following format: ans Here, ans is either Y or N.\nY represents \"Yes\"; N represents \"No\". Finally, the answer must be written to Standard Output in the following format: ! s_0s_1...s_{N-1} Here, s_i must be 1 if person i is honest, and 0 if person i is unkind.",
            "output": "First, A and B are given from Standard Input in the following format: A B If identifying the honest people is impossible, the program must immediately print the following output and terminate itself: Impossible Otherwise, the program shall ask questions.\nEach question must be written to Standard Output in the following format: ? a b Here, a and b must be integers between 0 and N-1 (inclusive).\nThe response to the question will be given from Standard Input in the following format: ans Here, ans is either Y or N.\nY represents \"Yes\"; N represents \"No\". Finally, the answer must be written to Standard Output in the following format: ! s_0s_1...s_{N-1} Here, s_i must be 1 if person i is honest, and 0 if person i is unkind.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03784.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03784"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03791",
        "title": "First, you placed N robots onto a number line.",
        "description": "Score : 900 points Problem StatementYou are developing frog-shaped robots, and decided to race them against each other.\nFirst, you placed N robots onto a number line.\nThese robots are numbered 1 through N.\nThe current coordinate of robot i is x_i.\nHere, all x_i are integers, and 0 < x_1 < x_2 < ... < x_N.\nYou will repeatedly perform the following operation:\n\nSelect a robot on the number line. Let the coordinate of the robot be x. Select the destination coordinate, either x-1 or x-2, that is not occupied by another robot. The robot now jumps to the selected coordinate.\n\nWhen the coordinate of a robot becomes 0 or less, the robot is considered finished and will be removed from the number line immediately.\nYou will repeat the operation until all the robots finish the race.\nDepending on your choice in the operation, the N robots can finish the race in different orders.\nIn how many different orders can the N robots finish the race?\nFind the answer modulo 10^9+7. You are developing frog-shaped robots, and decided to race them against each other. First, you placed N robots onto a number line.\nThese robots are numbered 1 through N.\nThe current coordinate of robot i is x_i.\nHere, all x_i are integers, and 0 < x_1 < x_2 < ... < x_N. You will repeatedly perform the following operation: When the coordinate of a robot becomes 0 or less, the robot is considered finished and will be removed from the number line immediately.\nYou will repeat the operation until all the robots finish the race. Depending on your choice in the operation, the N robots can finish the race in different orders.\nIn how many different orders can the N robots finish the race?\nFind the answer modulo 10^9+7. Partial Score\nIn a test set worth 500 points, N ≤ 8. Print the number of the different orders in which the N robots can finish the race, modulo 10^9+7. There are four different orders in which the three robots can finish the race: There are six different orders in which the three robots can finish the race: For example, the order (Robot 3 → Robot 2 → Robot 1) can be achieved as shown in the figure below: Remember to print the answer modulo 10^9+7.\nThis case is not included in the test set for the partial score. You are developing frog-shaped robots, and decided to race them against each other. First, you placed N robots onto a number line.\nThese robots are numbered 1 through N.\nThe current coordinate of robot i is x_i.\nHere, all x_i are integers, and 0 < x_1 < x_2 < ... < x_N. You will repeatedly perform the following operation: Select a robot on the number line. Let the coordinate of the robot be x. Select the destination coordinate, either x-1 or x-2, that is not occupied by another robot. The robot now jumps to the selected coordinate. When the coordinate of a robot becomes 0 or less, the robot is considered finished and will be removed from the number line immediately.\nYou will repeat the operation until all the robots finish the race. Depending on your choice in the operation, the N robots can finish the race in different orders.\nIn how many different orders can the N robots finish the race?\nFind the answer modulo 10^9+7.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03791.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 10^5\nx_i is an integer.\n0 < x_1 < x_2 < ... < x_N ≤ 10^9",
          "ranges": "2 10; 10; 10; 2; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n1 2 3",
            "output": "4 There are four different orders in which the three robots can finish the race: (Robot 1 → Robot 2 → Robot 3)\n(Robot 1 → Robot 3 → Robot 2)\n(Robot 2 → Robot 1 → Robot 3)\n(Robot 2 → Robot 3 → Robot 1)",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03791.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03791"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03792",
        "title": "Initially, each square is either white or black.",
        "description": "Score : 1300 points Problem StatementThere is a square-shaped grid with N vertical rows and N horizontal columns.\nWe will denote the square at the i-th row from the top and the j-th column from the left as (i,\\ j).\nInitially, each square is either white or black.\nThe initial color of the grid is given to you as characters a_{ij}, arranged in a square shape.\nIf the square (i,\\ j) is white, a_{ij} is .. If it is black, a_{ij} is #.\nYou are developing a robot that repaints the grid.\nIt can repeatedly perform the following operation:\n\nSelect two integers i, j (1 ≤ i,\\ j ≤ N). Memorize the colors of the squares (i,\\ 1), (i,\\ 2), ..., (i,\\ N) as c_1, c_2, ..., c_N, respectively. Then, repaint the squares (1,\\ j), (2,\\ j), ..., (N,\\ j) with the colors c_1, c_2, ..., c_N, respectively.\n\nYour objective is to turn all the squares black.\nDetermine whether it is possible, and find the minimum necessary number of operations to achieve it if the answer is positive. There is a square-shaped grid with N vertical rows and N horizontal columns.\nWe will denote the square at the i-th row from the top and the j-th column from the left as (i,\\ j). Initially, each square is either white or black.\nThe initial color of the grid is given to you as characters a_{ij}, arranged in a square shape.\nIf the square (i,\\ j) is white, a_{ij} is .. If it is black, a_{ij} is #. You are developing a robot that repaints the grid.\nIt can repeatedly perform the following operation: Your objective is to turn all the squares black.\nDetermine whether it is possible, and find the minimum necessary number of operations to achieve it if the answer is positive. Partial Score\nIn a test set worth 300 points, N ≤ 3. If it is possible to turn all the squares black, print the minimum necessary number of operations to achieve the objective.\nIf it is impossible, print -1 instead. For example, perform the operation as follows: The transition of the colors of the squares is shown in the figure below: There is a square-shaped grid with N vertical rows and N horizontal columns.\nWe will denote the square at the i-th row from the top and the j-th column from the left as (i,\\ j). Initially, each square is either white or black.\nThe initial color of the grid is given to you as characters a_{ij}, arranged in a square shape.\nIf the square (i,\\ j) is white, a_{ij} is .. If it is black, a_{ij} is #. You are developing a robot that repaints the grid.\nIt can repeatedly perform the following operation: Select two integers i, j (1 ≤ i,\\ j ≤ N). Memorize the colors of the squares (i,\\ 1), (i,\\ 2), ..., (i,\\ N) as c_1, c_2, ..., c_N, respectively. Then, repaint the squares (1,\\ j), (2,\\ j), ..., (N,\\ j) with the colors c_1, c_2, ..., c_N, respectively. Your objective is to turn all the squares black.\nDetermine whether it is possible, and find the minimum necessary number of operations to achieve it if the answer is positive.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "string",
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03792.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 500\na_{ij} is either . or #.",
          "ranges": "2 500; 500; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\n#.\n.#",
            "output": "3 For example, perform the operation as follows: Select i = 1, j = 2.\nSelect i = 1, j = 1.\nSelect i = 1, j = 2. The transition of the colors of the squares is shown in the figure below:",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03792.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03792"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03793",
        "title": "Go back to step 1.",
        "description": "Score : 1300 points Problem StatementYou are developing a robot that processes strings.\nWhen the robot is given a string t consisting of lowercase English letters, it processes the string by following the procedure below:\n\nLet i be the smallest index such that t_i = t_{i + 1}. If such an index does not exist, terminate the procedure.\nIf t_i is z, remove t_i and t_{i + 1} from t. Otherwise, let c be the next letter of t_i in the English alphabet, and replace t_i and t_{i + 1} together with c, reducing the length of t by 1.\nGo back to step 1.\n\nFor example, when the robot is given the string axxxxza, it will be processed as follows: axxxxza → ayxxza → ayyza → azza → aa → b.\nYou are given a string s consisting of lowercase English letters.\nAnswer Q queries. The i-th query is as follows:\n\nAssume that the robot is given a substring of s that runs from the l_i-th character and up to the r_i-th character (inclusive). Will the string be empty after processing? You are developing a robot that processes strings.\nWhen the robot is given a string t consisting of lowercase English letters, it processes the string by following the procedure below: For example, when the robot is given the string axxxxza, it will be processed as follows: axxxxza → ayxxza → ayyza → azza → aa → b. You are given a string s consisting of lowercase English letters.\nAnswer Q queries. The i-th query is as follows: Print Q lines.\nThe i-th line should contain the answer to the i-th query: Yes or No. You are developing a robot that processes strings.\nWhen the robot is given a string t consisting of lowercase English letters, it processes the string by following the procedure below: Let i be the smallest index such that t_i = t_{i + 1}. If such an index does not exist, terminate the procedure.\nIf t_i is z, remove t_i and t_{i + 1} from t. Otherwise, let c be the next letter of t_i in the English alphabet, and replace t_i and t_{i + 1} together with c, reducing the length of t by 1.\nGo back to step 1. For example, when the robot is given the string axxxxza, it will be processed as follows: axxxxza → ayxxza → ayyza → azza → aa → b. You are given a string s consisting of lowercase English letters.\nAnswer Q queries. The i-th query is as follows: Assume that the robot is given a substring of s that runs from the l_i-th character and up to the r_i-th character (inclusive). Will the string be empty after processing?",
        "difficulty": "Hard",
        "category": "Simulation",
        "tags": [
          "string",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03793.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ |s| ≤ 5 × 10^5\ns consists of lowercase English letters.\n1 ≤ Q ≤ 10^5\n1 ≤ l_i ≤ r_i ≤ |s|",
          "ranges": "1 10; 10; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "axxxxza\n2\n1 7\n2 6",
            "output": "No\nYes Regarding the first query, the string will be processed as follows: axxxxza → ayxxza → ayyza → azza → aa → b.\nRegarding the second query, the string will be processed as follows: xxxxz → yxxz → yyz → zz → .",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03793.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03793"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03794",
        "title": "For each 1 ≤ i ≤ N - 1, the i-th edge connects vertices a_i and b_i.",
        "description": "Score : 1800 points Problem StatementThere is a tree T with N vertices, numbered 1 through N.\nFor each 1 ≤ i ≤ N - 1, the i-th edge connects vertices a_i and b_i.\nSnuke is constructing a directed graph T' by arbitrarily assigning direction to each edge in T. (There are 2^{N - 1} different ways to construct T'.)\nFor a fixed T', we will define d(s,\\ t) for each 1 ≤ s,\\ t ≤ N, as follows:\n\nd(s,\\ t) = (The number of edges that must be traversed against the assigned direction when traveling from vertex s to vertex t)\n\nIn particular, d(s,\\ s) = 0 for each 1 ≤ s ≤ N.\nAlso note that, in general, d(s,\\ t) ≠ d(t,\\ s).\nWe will further define D as the following:\n\n\n\nSnuke is constructing T' so that D will be the minimum possible value.\nHow many different ways are there to construct T' so that D will be the minimum possible value, modulo 10^9 + 7? There is a tree T with N vertices, numbered 1 through N.\nFor each 1 ≤ i ≤ N - 1, the i-th edge connects vertices a_i and b_i. Snuke is constructing a directed graph T' by arbitrarily assigning direction to each edge in T. (There are 2^{N - 1} different ways to construct T'.) For a fixed T', we will define d(s,\\ t) for each 1 ≤ s,\\ t ≤ N, as follows: In particular, d(s,\\ s) = 0 for each 1 ≤ s ≤ N.\nAlso note that, in general, d(s,\\ t) ≠ d(t,\\ s). We will further define D as the following: Snuke is constructing T' so that D will be the minimum possible value.\nHow many different ways are there to construct T' so that D will be the minimum possible value, modulo 10^9 + 7? Print the number of the different ways to construct T' so that D will be the minimum possible value, modulo 10^9 + 7. The minimum possible value for D is 1.\nThere are two ways to construct T' to achieve this value, as shown in the following figure: The minimum possible value for D is 2.\nThere are six ways to construct T' to achieve this value, as shown in the following figure: There is a tree T with N vertices, numbered 1 through N.\nFor each 1 ≤ i ≤ N - 1, the i-th edge connects vertices a_i and b_i. Snuke is constructing a directed graph T' by arbitrarily assigning direction to each edge in T. (There are 2^{N - 1} different ways to construct T'.) For a fixed T', we will define d(s,\\ t) for each 1 ≤ s,\\ t ≤ N, as follows: d(s,\\ t) = (The number of edges that must be traversed against the assigned direction when traveling from vertex s to vertex t) In particular, d(s,\\ s) = 0 for each 1 ≤ s ≤ N.\nAlso note that, in general, d(s,\\ t) ≠ d(t,\\ s). We will further define D as the following: Snuke is constructing T' so that D will be the minimum possible value.\nHow many different ways are there to construct T' so that D will be the minimum possible value, modulo 10^9 + 7?",
        "difficulty": "Hard",
        "category": "Trees & Graphs",
        "tags": [
          "math",
          "sorting",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03794.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 1000\n1 ≤ a_i,\\ b_i ≤ N\nThe given graph is a tree.",
          "ranges": "2 1000; 1000; 2; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n1 2\n1 3\n1 4",
            "output": "2 The minimum possible value for D is 1.\nThere are two ways to construct T' to achieve this value, as shown in the following figure:",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03794.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03794"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03795",
        "title": "So far, Snuke has ordered N meals at the restaurant.",
        "description": "Score : 100 points Problem StatementSnuke has a favorite restaurant.\nThe price of any meal served at the restaurant is 800 yen (the currency of Japan), and each time a customer orders 15 meals, the restaurant pays 200 yen back to the customer.\nSo far, Snuke has ordered N meals at the restaurant.\nLet the amount of money Snuke has paid to the restaurant be x yen, and let the amount of money the restaurant has paid back to Snuke be y yen.\nFind x-y. Snuke has a favorite restaurant. The price of any meal served at the restaurant is 800 yen (the currency of Japan), and each time a customer orders 15 meals, the restaurant pays 200 yen back to the customer. So far, Snuke has ordered N meals at the restaurant.\nLet the amount of money Snuke has paid to the restaurant be x yen, and let the amount of money the restaurant has paid back to Snuke be y yen.\nFind x-y. Print the answer. So far, Snuke has paid 16000 yen, and the restaurant has paid back 200 yen. Thus, the answer is 15800. Snuke has paid 48000 yen for 60 meals, and the restaurant has paid back 800 yen. Snuke has a favorite restaurant. The price of any meal served at the restaurant is 800 yen (the currency of Japan), and each time a customer orders 15 meals, the restaurant pays 200 yen back to the customer. So far, Snuke has ordered N meals at the restaurant.\nLet the amount of money Snuke has paid to the restaurant be x yen, and let the amount of money the restaurant has paid back to Snuke be y yen.\nFind x-y.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03795.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 100",
          "ranges": "1 100; 100; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "20",
            "output": "15800 So far, Snuke has paid 16000 yen, and the restaurant has paid back 200 yen. Thus, the answer is 15800.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03795.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03795"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03796",
        "title": "Problem Statement",
        "description": "Score : 200 points Problem StatementSnuke loves working out. He is now exercising N times.\nBefore he starts exercising, his power is 1. After he exercises for the i-th time, his power gets multiplied by i.\nFind Snuke's power after he exercises N times. Since the answer can be extremely large, print the answer modulo 10^{9}+7. Snuke loves working out. He is now exercising N times. Before he starts exercising, his power is 1. After he exercises for the i-th time, his power gets multiplied by i. Find Snuke's power after he exercises N times. Since the answer can be extremely large, print the answer modulo 10^{9}+7. Print the answer modulo 10^{9}+7. Print the answer modulo 10^{9}+7. Snuke loves working out. He is now exercising N times. Before he starts exercising, his power is 1. After he exercises for the i-th time, his power gets multiplied by i. Find Snuke's power after he exercises N times. Since the answer can be extremely large, print the answer modulo 10^{9}+7.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03796.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10^{5}",
          "ranges": "1 10; 10; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3",
            "output": "6 After Snuke exercises for the first time, his power gets multiplied by 1 and becomes 1.\nAfter Snuke exercises for the second time, his power gets multiplied by 2 and becomes 2.\nAfter Snuke exercises for the third time, his power gets multiplied by 3 and becomes 6.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03796.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03796"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03797",
        "title": "Today, he is working on a puzzle using S- and c-shaped pieces.",
        "description": "Score : 300 points Problem StatementSnuke loves puzzles.\nToday, he is working on a puzzle using S- and c-shaped pieces.\nIn this puzzle, you can combine two c-shaped pieces into one S-shaped piece, as shown in the figure below:\n\n\n\nSnuke decided to create as many Scc groups as possible by putting together one S-shaped piece and two c-shaped pieces.\nFind the maximum number of Scc groups that can be created when Snuke has N S-shaped pieces and M c-shaped pieces. Snuke loves puzzles. Today, he is working on a puzzle using S- and c-shaped pieces.\nIn this puzzle, you can combine two c-shaped pieces into one S-shaped piece, as shown in the figure below: Snuke decided to create as many Scc groups as possible by putting together one S-shaped piece and two c-shaped pieces. Find the maximum number of Scc groups that can be created when Snuke has N S-shaped pieces and M c-shaped pieces. Print the answer. Two Scc groups can be created as follows: Snuke loves puzzles. Today, he is working on a puzzle using S- and c-shaped pieces.\nIn this puzzle, you can combine two c-shaped pieces into one S-shaped piece, as shown in the figure below: Snuke decided to create as many Scc groups as possible by putting together one S-shaped piece and two c-shaped pieces. Find the maximum number of Scc groups that can be created when Snuke has N S-shaped pieces and M c-shaped pieces.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03797.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N,M ≤ 10^{12}",
          "ranges": "10; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1 6",
            "output": "2 Two Scc groups can be created as follows: Combine two c-shaped pieces into one S-shaped piece\nCreate two Scc groups, each from one S-shaped piece and two c-shaped pieces",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03797.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03797"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03798",
        "title": "Problem Statement",
        "description": "Score : 500 points Problem StatementSnuke, who loves animals, built a zoo.\nThere are N animals in this zoo. They are conveniently numbered 1 through N, and arranged in a circle.\nThe animal numbered i (2≤i≤N-1) is adjacent to the animals numbered i-1 and i+1. Also, the animal numbered 1 is adjacent to the animals numbered 2 and N, and the animal numbered N is adjacent to the animals numbered N-1 and 1.\nThere are two kinds of animals in this zoo: honest sheep that only speak the truth, and lying wolves that only tell lies.\nSnuke cannot tell the difference between these two species, and asked each animal the following question: \"Are your neighbors of the same species?\" The animal numbered i answered s_i. Here, if s_i is o, the animal said that the two neighboring animals are of the same species, and if s_i is x, the animal said that the two neighboring animals are of different species.\nMore formally, a sheep answered o if the two neighboring animals are both sheep or both wolves, and answered x otherwise.\nSimilarly, a wolf answered x if the two neighboring animals are both sheep or both wolves, and answered o otherwise.\nSnuke is wondering whether there is a valid assignment of species to the animals that is consistent with these responses. If there is such an assignment, show one such assignment. Otherwise, print -1. Snuke, who loves animals, built a zoo. There are N animals in this zoo. They are conveniently numbered 1 through N, and arranged in a circle.\nThe animal numbered i (2≤i≤N-1) is adjacent to the animals numbered i-1 and i+1. Also, the animal numbered 1 is adjacent to the animals numbered 2 and N, and the animal numbered N is adjacent to the animals numbered N-1 and 1. There are two kinds of animals in this zoo: honest sheep that only speak the truth, and lying wolves that only tell lies. Snuke cannot tell the difference between these two species, and asked each animal the following question: \"Are your neighbors of the same species?\" The animal numbered i answered s_i. Here, if s_i is o, the animal said that the two neighboring animals are of the same species, and if s_i is x, the animal said that the two neighboring animals are of different species. More formally, a sheep answered o if the two neighboring animals are both sheep or both wolves, and answered x otherwise.\nSimilarly, a wolf answered x if the two neighboring animals are both sheep or both wolves, and answered o otherwise. Snuke is wondering whether there is a valid assignment of species to the animals that is consistent with these responses. If there is such an assignment, show one such assignment. Otherwise, print -1. If there does not exist an valid assignment that is consistent with s, print -1.\nOtherwise, print an string t in the following format. The output is considered correct if the assignment described by t is consistent with s. For example, if the animals numbered 1, 2, 3, 4, 5 and 6 are respectively a sheep, sheep, sheep, wolf, wolf, and sheep, it is consistent with their responses. Besides, there is another valid assignment of species: a wolf, sheep, wolf, sheep, wolf and wolf. Let us remind you: if the neiboring animals are of the same species, a sheep answers o and a wolf answers x. If the neiboring animals are of different species, a sheep answers x and a wolf answers o. Print -1 if there is no valid assignment of species. Snuke, who loves animals, built a zoo. There are N animals in this zoo. They are conveniently numbered 1 through N, and arranged in a circle.\nThe animal numbered i (2≤i≤N-1) is adjacent to the animals numbered i-1 and i+1. Also, the animal numbered 1 is adjacent to the animals numbered 2 and N, and the animal numbered N is adjacent to the animals numbered N-1 and 1. There are two kinds of animals in this zoo: honest sheep that only speak the truth, and lying wolves that only tell lies. Snuke cannot tell the difference between these two species, and asked each animal the following question: \"Are your neighbors of the same species?\" The animal numbered i answered s_i. Here, if s_i is o, the animal said that the two neighboring animals are of the same species, and if s_i is x, the animal said that the two neighboring animals are of different species. More formally, a sheep answered o if the two neighboring animals are both sheep or both wolves, and answered x otherwise.\nSimilarly, a wolf answered x if the two neighboring animals are both sheep or both wolves, and answered o otherwise. Snuke is wondering whether there is a valid assignment of species to the animals that is consistent with these responses. If there is such an assignment, show one such assignment. Otherwise, print -1.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "string",
          "math",
          "geometry",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03798.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3 ≤ N ≤ 10^{5}\ns is a string of length N consisting of o and x.",
          "ranges": "3 10; 10; 3"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "6\nooxoox",
            "output": "SSSWWS For example, if the animals numbered 1, 2, 3, 4, 5 and 6 are respectively a sheep, sheep, sheep, wolf, wolf, and sheep, it is consistent with their responses. Besides, there is another valid assignment of species: a wolf, sheep, wolf, sheep, wolf and wolf. Let us remind you: if the neiboring animals are of the same species, a sheep answers o and a wolf answers x. If the neiboring animals are of different species, a sheep answers x and a wolf answers o.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03798.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03798"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03799",
        "title": "Today, he is working on a puzzle using S- and c-shaped pieces.",
        "description": "Score : 300 points Problem StatementSnuke loves puzzles.\nToday, he is working on a puzzle using S- and c-shaped pieces.\nIn this puzzle, you can combine two c-shaped pieces into one S-shaped piece, as shown in the figure below:\n\n\n\nSnuke decided to create as many Scc groups as possible by putting together one S-shaped piece and two c-shaped pieces.\nFind the maximum number of Scc groups that can be created when Snuke has N S-shaped pieces and M c-shaped pieces. Snuke loves puzzles. Today, he is working on a puzzle using S- and c-shaped pieces.\nIn this puzzle, you can combine two c-shaped pieces into one S-shaped piece, as shown in the figure below: Snuke decided to create as many Scc groups as possible by putting together one S-shaped piece and two c-shaped pieces. Find the maximum number of Scc groups that can be created when Snuke has N S-shaped pieces and M c-shaped pieces. Print the answer. Two Scc groups can be created as follows: Snuke loves puzzles. Today, he is working on a puzzle using S- and c-shaped pieces.\nIn this puzzle, you can combine two c-shaped pieces into one S-shaped piece, as shown in the figure below: Snuke decided to create as many Scc groups as possible by putting together one S-shaped piece and two c-shaped pieces. Find the maximum number of Scc groups that can be created when Snuke has N S-shaped pieces and M c-shaped pieces.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03799.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N,M ≤ 10^{12}",
          "ranges": "10; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1 6",
            "output": "2 Two Scc groups can be created as follows: Combine two c-shaped pieces into one S-shaped piece\nCreate two Scc groups, each from one S-shaped piece and two c-shaped pieces",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03799.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03799"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03800",
        "title": "Problem Statement",
        "description": "Score : 500 points Problem StatementSnuke, who loves animals, built a zoo.\nThere are N animals in this zoo. They are conveniently numbered 1 through N, and arranged in a circle.\nThe animal numbered i (2≤i≤N-1) is adjacent to the animals numbered i-1 and i+1. Also, the animal numbered 1 is adjacent to the animals numbered 2 and N, and the animal numbered N is adjacent to the animals numbered N-1 and 1.\nThere are two kinds of animals in this zoo: honest sheep that only speak the truth, and lying wolves that only tell lies.\nSnuke cannot tell the difference between these two species, and asked each animal the following question: \"Are your neighbors of the same species?\" The animal numbered i answered s_i. Here, if s_i is o, the animal said that the two neighboring animals are of the same species, and if s_i is x, the animal said that the two neighboring animals are of different species.\nMore formally, a sheep answered o if the two neighboring animals are both sheep or both wolves, and answered x otherwise.\nSimilarly, a wolf answered x if the two neighboring animals are both sheep or both wolves, and answered o otherwise.\nSnuke is wondering whether there is a valid assignment of species to the animals that is consistent with these responses. If there is such an assignment, show one such assignment. Otherwise, print -1. Snuke, who loves animals, built a zoo. There are N animals in this zoo. They are conveniently numbered 1 through N, and arranged in a circle.\nThe animal numbered i (2≤i≤N-1) is adjacent to the animals numbered i-1 and i+1. Also, the animal numbered 1 is adjacent to the animals numbered 2 and N, and the animal numbered N is adjacent to the animals numbered N-1 and 1. There are two kinds of animals in this zoo: honest sheep that only speak the truth, and lying wolves that only tell lies. Snuke cannot tell the difference between these two species, and asked each animal the following question: \"Are your neighbors of the same species?\" The animal numbered i answered s_i. Here, if s_i is o, the animal said that the two neighboring animals are of the same species, and if s_i is x, the animal said that the two neighboring animals are of different species. More formally, a sheep answered o if the two neighboring animals are both sheep or both wolves, and answered x otherwise.\nSimilarly, a wolf answered x if the two neighboring animals are both sheep or both wolves, and answered o otherwise. Snuke is wondering whether there is a valid assignment of species to the animals that is consistent with these responses. If there is such an assignment, show one such assignment. Otherwise, print -1. If there does not exist an valid assignment that is consistent with s, print -1.\nOtherwise, print an string t in the following format. The output is considered correct if the assignment described by t is consistent with s. For example, if the animals numbered 1, 2, 3, 4, 5 and 6 are respectively a sheep, sheep, sheep, wolf, wolf, and sheep, it is consistent with their responses. Besides, there is another valid assignment of species: a wolf, sheep, wolf, sheep, wolf and wolf. Let us remind you: if the neiboring animals are of the same species, a sheep answers o and a wolf answers x. If the neiboring animals are of different species, a sheep answers x and a wolf answers o. Print -1 if there is no valid assignment of species. Snuke, who loves animals, built a zoo. There are N animals in this zoo. They are conveniently numbered 1 through N, and arranged in a circle.\nThe animal numbered i (2≤i≤N-1) is adjacent to the animals numbered i-1 and i+1. Also, the animal numbered 1 is adjacent to the animals numbered 2 and N, and the animal numbered N is adjacent to the animals numbered N-1 and 1. There are two kinds of animals in this zoo: honest sheep that only speak the truth, and lying wolves that only tell lies. Snuke cannot tell the difference between these two species, and asked each animal the following question: \"Are your neighbors of the same species?\" The animal numbered i answered s_i. Here, if s_i is o, the animal said that the two neighboring animals are of the same species, and if s_i is x, the animal said that the two neighboring animals are of different species. More formally, a sheep answered o if the two neighboring animals are both sheep or both wolves, and answered x otherwise.\nSimilarly, a wolf answered x if the two neighboring animals are both sheep or both wolves, and answered o otherwise. Snuke is wondering whether there is a valid assignment of species to the animals that is consistent with these responses. If there is such an assignment, show one such assignment. Otherwise, print -1.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "string",
          "math",
          "geometry",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03800.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3 ≤ N ≤ 10^{5}\ns is a string of length N consisting of o and x.",
          "ranges": "3 10; 10; 3"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "6\nooxoox",
            "output": "SSSWWS For example, if the animals numbered 1, 2, 3, 4, 5 and 6 are respectively a sheep, sheep, sheep, wolf, wolf, and sheep, it is consistent with their responses. Besides, there is another valid assignment of species: a wolf, sheep, wolf, sheep, wolf and wolf. Let us remind you: if the neiboring animals are of the same species, a sheep answers o and a wolf answers x. If the neiboring animals are of different species, a sheep answers x and a wolf answers o.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03800.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03800"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03801",
        "title": "There are N piles of stones, numbered 1 through N.",
        "description": "Score : 700 points Problem StatementSnuke loves constructing integer sequences.\nThere are N piles of stones, numbered 1 through N.\nThe pile numbered i consists of a_i stones.\nSnuke will construct an integer sequence s of length Σa_i, as follows:\n\nAmong the piles with the largest number of stones remaining, let x be the index of the pile with the smallest index. Append x to the end of s.\nSelect a pile with one or more stones remaining, and remove a stone from that pile.\nIf there is a pile with one or more stones remaining, go back to step 1. Otherwise, terminate the process.\n\nWe are interested in the lexicographically smallest sequence that can be constructed. For each of the integers 1,2,3,...,N, how many times does it occur in the lexicographically smallest sequence? Snuke loves constructing integer sequences. There are N piles of stones, numbered 1 through N.\nThe pile numbered i consists of a_i stones. Snuke will construct an integer sequence s of length Σa_i, as follows: We are interested in the lexicographically smallest sequence that can be constructed. For each of the integers 1,2,3,...,N, how many times does it occur in the lexicographically smallest sequence? Print N lines. The i-th line should contain the number of the occurrences of the integer i in the lexicographically smallest sequence that can be constructed. The lexicographically smallest sequence is constructed as follows: The resulting sequence is (2,1,1). In this sequence, 1 occurs twice, and 2 occurs once. Snuke loves constructing integer sequences. There are N piles of stones, numbered 1 through N.\nThe pile numbered i consists of a_i stones. Snuke will construct an integer sequence s of length Σa_i, as follows: Among the piles with the largest number of stones remaining, let x be the index of the pile with the smallest index. Append x to the end of s.\nSelect a pile with one or more stones remaining, and remove a stone from that pile.\nIf there is a pile with one or more stones remaining, go back to step 1. Otherwise, terminate the process. We are interested in the lexicographically smallest sequence that can be constructed. For each of the integers 1,2,3,...,N, how many times does it occur in the lexicographically smallest sequence?",
        "difficulty": "Hard",
        "category": "Simulation",
        "tags": [
          "array",
          "math",
          "graph",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03801.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10^{5}\n1 ≤ a_i ≤ 10^{9}",
          "ranges": "1 10; 1 10; 10; 10; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\n1 2",
            "output": "2\n1 The lexicographically smallest sequence is constructed as follows: Since the pile with the largest number of stones remaining is pile 2, append 2 to the end of s. Then, remove a stone from pile 2.\nSince the piles with the largest number of stones remaining are pile 1 and 2, append 1 to the end of s (we take the smallest index). Then, remove a stone from pile 2.\nSince the pile with the largest number of stones remaining is pile 1, append 1 to the end of s. Then, remove a stone from pile 1. The resulting sequence is (2,1,1). In this sequence, 1 occurs twice, and 2 occurs once.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03801.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03801"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03802",
        "title": "Snuke is placing N flags on a line.",
        "description": "Score : 1200 points Problem StatementSnuke loves flags.\nSnuke is placing N flags on a line.\nThe i-th flag can be placed at either coordinate x_i or coordinate y_i.\nSnuke thinks that the flags look nicer when the smallest distance between two of them, d, is larger. Find the maximum possible value of d. Snuke loves flags. Snuke is placing N flags on a line. The i-th flag can be placed at either coordinate x_i or coordinate y_i. Snuke thinks that the flags look nicer when the smallest distance between two of them, d, is larger. Find the maximum possible value of d. Print the answer. The optimal solution is to place the first flag at coordinate 1, the second flag at coordinate 5 and the third flag at coordinate 9. The smallest distance between two of the flags is 4 in this case. There can be more than one flag at the same position. Snuke loves flags. Snuke is placing N flags on a line. The i-th flag can be placed at either coordinate x_i or coordinate y_i. Snuke thinks that the flags look nicer when the smallest distance between two of them, d, is larger. Find the maximum possible value of d.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "geometry",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03802.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 10^{4}\n1 ≤ x_i, y_i ≤ 10^{9}\nx_i and y_i are integers.",
          "ranges": "2 10; 10; 10; 2; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n1 3\n2 5\n1 9",
            "output": "4 The optimal solution is to place the first flag at coordinate 1, the second flag at coordinate 5 and the third flag at coordinate 9. The smallest distance between two of the flags is 4 in this case.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03802.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03802"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03826",
        "title": "Print the area of the rectangle with the larger area.",
        "description": "Score : 100 points Problem StatementThere are two rectangles.\nThe lengths of the vertical sides of the first rectangle are A, and the lengths of the horizontal sides of the first rectangle are B.\nThe lengths of the vertical sides of the second rectangle are C, and the lengths of the horizontal sides of the second rectangle are D.\nPrint the area of the rectangle with the larger area.\nIf the two rectangles have equal areas, print that area. There are two rectangles.\nThe lengths of the vertical sides of the first rectangle are A, and the lengths of the horizontal sides of the first rectangle are B.\nThe lengths of the vertical sides of the second rectangle are C, and the lengths of the horizontal sides of the second rectangle are D. Print the area of the rectangle with the larger area.\nIf the two rectangles have equal areas, print that area. Print the area of the rectangle with the larger area.\nIf the two rectangles have equal areas, print that area. The first rectangle has an area of 3×5=15, and the second rectangle has an area of 2×7=14.\nThus, the output should be 15, the larger area. There are two rectangles.\nThe lengths of the vertical sides of the first rectangle are A, and the lengths of the horizontal sides of the first rectangle are B.\nThe lengths of the vertical sides of the second rectangle are C, and the lengths of the horizontal sides of the second rectangle are D. Print the area of the rectangle with the larger area.\nIf the two rectangles have equal areas, print that area.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03826.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "All input values are integers.\n1≤A≤10^4\n1≤B≤10^4\n1≤C≤10^4\n1≤D≤10^4",
          "ranges": "1 10; 1 10; 1 10; 1 10; 10; 10; 10; 10; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 5 2 7",
            "output": "15 The first rectangle has an area of 3×5=15, and the second rectangle has an area of 2×7=14.\nThus, the output should be 15, the larger area.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03826.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03826"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03827",
        "title": "Initially, x=0.",
        "description": "Score : 200 points Problem StatementYou have an integer variable x.\nInitially, x=0.\nSome person gave you a string S of length N, and using the string you performed the following operation N times.\nIn the i-th operation, you incremented the value of x by 1 if S_i=I, and decremented the value of x by 1 if S_i=D.\nFind the maximum value taken by x during the operations (including before the first operation, and after the last operation). You have an integer variable x.\nInitially, x=0. Some person gave you a string S of length N, and using the string you performed the following operation N times.\nIn the i-th operation, you incremented the value of x by 1 if S_i=I, and decremented the value of x by 1 if S_i=D. Find the maximum value taken by x during the operations (including before the first operation, and after the last operation). Print the maximum value taken by x during the operations. After each operation, the value of x becomes 1, 2, 1, 2 and 1, respectively. Thus, the output should be 2, the maximum value. The initial value x=0 is the maximum value taken by x, thus the output should be 0. You have an integer variable x.\nInitially, x=0. Some person gave you a string S of length N, and using the string you performed the following operation N times.\nIn the i-th operation, you incremented the value of x by 1 if S_i=I, and decremented the value of x by 1 if S_i=D. Find the maximum value taken by x during the operations (including before the first operation, and after the last operation).",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "string",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03827.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤N≤100\n|S|=N\nNo characters except I and D occur in S.",
          "ranges": "1 100; 100; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\nIIDID",
            "output": "2 After each operation, the value of x becomes 1, 2, 1, 2 and 1, respectively. Thus, the output should be 2, the maximum value.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03827.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03827"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03828",
        "title": "Find the number of the positive divisors of N!, modulo 10^9+7.",
        "description": "Score : 300 points Problem StatementYou are given an integer N.\nFind the number of the positive divisors of N!, modulo 10^9+7. You are given an integer N.\nFind the number of the positive divisors of N!, modulo 10^9+7. Print the number of the positive divisors of N!, modulo 10^9+7. There are four divisors of 3! =6: 1, 2, 3 and 6. Thus, the output should be 4. You are given an integer N.\nFind the number of the positive divisors of N!, modulo 10^9+7.",
        "difficulty": "Hard",
        "category": "Implementation",
        "tags": [
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03828.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤N≤10^3",
          "ranges": "1 10; 10; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3",
            "output": "4 There are four divisors of 3! =6: 1, 2, 3 and 6. Thus, the output should be 4.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03828.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03828"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03829",
        "title": "The towns are numbered 1 through N, in order from west to east.",
        "description": "Score : 500 points Problem StatementThere are N towns on a line running east-west.\nThe towns are numbered 1 through N, in order from west to east.\nEach point on the line has a one-dimensional coordinate, and a point that is farther east has a greater coordinate value.\nThe coordinate of town i is X_i.\nYou are now at town 1, and you want to visit all the other towns.\nYou have two ways to travel:\n\n\nWalk on the line.\nYour fatigue level increases by A each time you travel a distance of 1, regardless of direction.\n\n\nTeleport to any location of your choice.\nYour fatigue level increases by B, regardless of the distance covered.\n\n\nFind the minimum possible total increase of your fatigue level when you visit all the towns in these two ways. There are N towns on a line running east-west.\nThe towns are numbered 1 through N, in order from west to east.\nEach point on the line has a one-dimensional coordinate, and a point that is farther east has a greater coordinate value.\nThe coordinate of town i is X_i. You are now at town 1, and you want to visit all the other towns.\nYou have two ways to travel: Walk on the line.\nYour fatigue level increases by A each time you travel a distance of 1, regardless of direction. Teleport to any location of your choice.\nYour fatigue level increases by B, regardless of the distance covered. Find the minimum possible total increase of your fatigue level when you visit all the towns in these two ways. Print the minimum possible total increase of your fatigue level when you visit all the towns. From town 1, walk a distance of 1 to town 2, then teleport to town 3, then walk a distance of 2 to town 4.\nThe total increase of your fatigue level in this case is 2×1+5+2×2=11, which is the minimum possible value. From town 1, walk all the way to town 7.\nThe total increase of your fatigue level in this case is 84, which is the minimum possible value. Visit all the towns in any order by teleporting six times.\nThe total increase of your fatigue level in this case is 12, which is the minimum possible value. There are N towns on a line running east-west.\nThe towns are numbered 1 through N, in order from west to east.\nEach point on the line has a one-dimensional coordinate, and a point that is farther east has a greater coordinate value.\nThe coordinate of town i is X_i. You are now at town 1, and you want to visit all the other towns.\nYou have two ways to travel: Walk on the line.\nYour fatigue level increases by A each time you travel a distance of 1, regardless of direction.\n\n\nTeleport to any location of your choice.\nYour fatigue level increases by B, regardless of the distance covered. Find the minimum possible total increase of your fatigue level when you visit all the towns in these two ways.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03829.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "All input values are integers.\n2≤N≤10^5\n1≤X_i≤10^9\nFor all i(1≤i≤N-1), X_i<X_{i+1}.\n1≤A≤10^9\n1≤B≤10^9",
          "ranges": "2 10; 1 10; 1 10; 1 10; 10; 10; 10; 10; 2; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 2 5\n1 2 5 7",
            "output": "11 From town 1, walk a distance of 1 to town 2, then teleport to town 3, then walk a distance of 2 to town 4.\nThe total increase of your fatigue level in this case is 2×1+5+2×2=11, which is the minimum possible value.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03829.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03829"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03830",
        "title": "Find the number of the positive divisors of N!, modulo 10^9+7.",
        "description": "Score : 300 points Problem StatementYou are given an integer N.\nFind the number of the positive divisors of N!, modulo 10^9+7. You are given an integer N.\nFind the number of the positive divisors of N!, modulo 10^9+7. Print the number of the positive divisors of N!, modulo 10^9+7. There are four divisors of 3! =6: 1, 2, 3 and 6. Thus, the output should be 4. You are given an integer N.\nFind the number of the positive divisors of N!, modulo 10^9+7.",
        "difficulty": "Hard",
        "category": "Implementation",
        "tags": [
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03830.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤N≤10^3",
          "ranges": "1 10; 10; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3",
            "output": "4 There are four divisors of 3! =6: 1, 2, 3 and 6. Thus, the output should be 4.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03830.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03830"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03831",
        "title": "The towns are numbered 1 through N, in order from west to east.",
        "description": "Score : 500 points Problem StatementThere are N towns on a line running east-west.\nThe towns are numbered 1 through N, in order from west to east.\nEach point on the line has a one-dimensional coordinate, and a point that is farther east has a greater coordinate value.\nThe coordinate of town i is X_i.\nYou are now at town 1, and you want to visit all the other towns.\nYou have two ways to travel:\n\n\nWalk on the line.\nYour fatigue level increases by A each time you travel a distance of 1, regardless of direction.\n\n\nTeleport to any location of your choice.\nYour fatigue level increases by B, regardless of the distance covered.\n\n\nFind the minimum possible total increase of your fatigue level when you visit all the towns in these two ways. There are N towns on a line running east-west.\nThe towns are numbered 1 through N, in order from west to east.\nEach point on the line has a one-dimensional coordinate, and a point that is farther east has a greater coordinate value.\nThe coordinate of town i is X_i. You are now at town 1, and you want to visit all the other towns.\nYou have two ways to travel: Walk on the line.\nYour fatigue level increases by A each time you travel a distance of 1, regardless of direction. Teleport to any location of your choice.\nYour fatigue level increases by B, regardless of the distance covered. Find the minimum possible total increase of your fatigue level when you visit all the towns in these two ways. Print the minimum possible total increase of your fatigue level when you visit all the towns. From town 1, walk a distance of 1 to town 2, then teleport to town 3, then walk a distance of 2 to town 4.\nThe total increase of your fatigue level in this case is 2×1+5+2×2=11, which is the minimum possible value. From town 1, walk all the way to town 7.\nThe total increase of your fatigue level in this case is 84, which is the minimum possible value. Visit all the towns in any order by teleporting six times.\nThe total increase of your fatigue level in this case is 12, which is the minimum possible value. There are N towns on a line running east-west.\nThe towns are numbered 1 through N, in order from west to east.\nEach point on the line has a one-dimensional coordinate, and a point that is farther east has a greater coordinate value.\nThe coordinate of town i is X_i. You are now at town 1, and you want to visit all the other towns.\nYou have two ways to travel: Walk on the line.\nYour fatigue level increases by A each time you travel a distance of 1, regardless of direction.\n\n\nTeleport to any location of your choice.\nYour fatigue level increases by B, regardless of the distance covered. Find the minimum possible total increase of your fatigue level when you visit all the towns in these two ways.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03831.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "All input values are integers.\n2≤N≤10^5\n1≤X_i≤10^9\nFor all i(1≤i≤N-1), X_i<X_{i+1}.\n1≤A≤10^9\n1≤B≤10^9",
          "ranges": "2 10; 1 10; 1 10; 1 10; 10; 10; 10; 10; 2; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 2 5\n1 2 5 7",
            "output": "11 From town 1, walk a distance of 1 to town 2, then teleport to town 3, then walk a distance of 2 to town 4.\nThe total increase of your fatigue level in this case is 2×1+5+2×2=11, which is the minimum possible value.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03831.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03831"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03832",
        "title": "We want to divide them into some number of groups, under the following two conditions:",
        "description": "Score : 600 points Problem StatementThere are N people, conveniently numbered 1 through N.\nWe want to divide them into some number of groups, under the following two conditions:\n\n\nEvery group contains between A and B people, inclusive.\n\n\nLet F_i be the number of the groups containing exactly i people. Then, for all i, either F_i=0 or C≤F_i≤D holds.\n\n\nFind the number of these ways to divide the people into groups.\nHere, two ways to divide them into groups is considered different if and only if there exists two people such that they belong to the same group in exactly one of the two ways.\nSince the number of these ways can be extremely large, print the count modulo 10^9+7. There are N people, conveniently numbered 1 through N.\nWe want to divide them into some number of groups, under the following two conditions: Every group contains between A and B people, inclusive. Let F_i be the number of the groups containing exactly i people. Then, for all i, either F_i=0 or C≤F_i≤D holds. Find the number of these ways to divide the people into groups.\nHere, two ways to divide them into groups is considered different if and only if there exists two people such that they belong to the same group in exactly one of the two ways.\nSince the number of these ways can be extremely large, print the count modulo 10^9+7. Print the number of ways to divide the people into groups under the conditions, modulo 10^9+7. There are four ways to divide the people: The following way to divide the people does not count: (1),(2),(3). This is because it only satisfies the first condition and not the second. The only ways to divide the people under the conditions are the ones where there are two groups of two people, and one group of three people.\nThere are 105 such ways. The answer can be 0. There are N people, conveniently numbered 1 through N.\nWe want to divide them into some number of groups, under the following two conditions: Every group contains between A and B people, inclusive.\n\n\nLet F_i be the number of the groups containing exactly i people. Then, for all i, either F_i=0 or C≤F_i≤D holds. Find the number of these ways to divide the people into groups.\nHere, two ways to divide them into groups is considered different if and only if there exists two people such that they belong to the same group in exactly one of the two ways.\nSince the number of these ways can be extremely large, print the count modulo 10^9+7.",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03832.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤N≤10^3\n1≤A≤B≤N\n1≤C≤D≤N",
          "ranges": "1 10; 10; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 1 3 1 2",
            "output": "4 There are four ways to divide the people: (1,2),(3)\n(1,3),(2)\n(2,3),(1)\n(1,2,3) The following way to divide the people does not count: (1),(2),(3). This is because it only satisfies the first condition and not the second.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03832.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03832"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03833",
        "title": "Joisino has M tickets, numbered 1 through M.",
        "description": "Score : 1000 points Problem StatementThere are N barbecue restaurants along a street.\nThe restaurants are numbered 1 through N from west to east, and the distance between restaurant i and restaurant i+1 is A_i.\nJoisino has M tickets, numbered 1 through M.\nEvery barbecue restaurant offers barbecue meals in exchange for these tickets.\nRestaurant i offers a meal of deliciousness B_{i,j} in exchange for ticket j.\nEach ticket can only be used once, but any number of tickets can be used at a restaurant.\nJoisino wants to have M barbecue meals by starting from a restaurant of her choice, then repeatedly traveling to another barbecue restaurant and using unused tickets at the restaurant at her current location.\nHer eventual happiness is calculated by the following formula: \"(The total deliciousness of the meals eaten) - (The total distance traveled)\".\nFind her maximum possible eventual happiness. There are N barbecue restaurants along a street.\nThe restaurants are numbered 1 through N from west to east, and the distance between restaurant i and restaurant i+1 is A_i. Joisino has M tickets, numbered 1 through M.\nEvery barbecue restaurant offers barbecue meals in exchange for these tickets.\nRestaurant i offers a meal of deliciousness B_{i,j} in exchange for ticket j.\nEach ticket can only be used once, but any number of tickets can be used at a restaurant. Joisino wants to have M barbecue meals by starting from a restaurant of her choice, then repeatedly traveling to another barbecue restaurant and using unused tickets at the restaurant at her current location.\nHer eventual happiness is calculated by the following formula: \"(The total deliciousness of the meals eaten) - (The total distance traveled)\".\nFind her maximum possible eventual happiness. Print Joisino's maximum possible eventual happiness. The eventual happiness can be maximized by the following strategy: start from restaurant 1 and use tickets 1 and 3, then move to restaurant 2 and use tickets 2 and 4. There are N barbecue restaurants along a street.\nThe restaurants are numbered 1 through N from west to east, and the distance between restaurant i and restaurant i+1 is A_i. Joisino has M tickets, numbered 1 through M.\nEvery barbecue restaurant offers barbecue meals in exchange for these tickets.\nRestaurant i offers a meal of deliciousness B_{i,j} in exchange for ticket j.\nEach ticket can only be used once, but any number of tickets can be used at a restaurant. Joisino wants to have M barbecue meals by starting from a restaurant of her choice, then repeatedly traveling to another barbecue restaurant and using unused tickets at the restaurant at her current location.\nHer eventual happiness is calculated by the following formula: \"(The total deliciousness of the meals eaten) - (The total distance traveled)\".\nFind her maximum possible eventual happiness.",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math",
          "sorting",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03833.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "All input values are integers.\n2≤N≤5×10^3\n1≤M≤200\n1≤A_i≤10^9\n1≤B_{i,j}≤10^9",
          "ranges": "2 5; 1 200; 1 10; 5; 200; 10; 2; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 4\n1 4\n2 2 5 1\n1 3 3 2\n2 2 5 1",
            "output": "11 The eventual happiness can be maximized by the following strategy: start from restaurant 1 and use tickets 1 and 3, then move to restaurant 2 and use tickets 2 and 4.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03833.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03833"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03835",
        "title": "Three variable X, Y and Z takes integer values satisfying 0≤X,Y,Z≤K.",
        "description": "Score : 200 points Problem StatementYou are given two integers K and S.\nThree variable X, Y and Z takes integer values satisfying 0≤X,Y,Z≤K.\nHow many different assignments of values to X, Y and Z are there such that X + Y + Z = S? You are given two integers K and S.\nThree variable X, Y and Z takes integer values satisfying 0≤X,Y,Z≤K.\nHow many different assignments of values to X, Y and Z are there such that X + Y + Z = S? Print the number of the triples of X, Y and Z that satisfy the condition. There are six triples of X, Y and Z that satisfy the condition: The maximum value of X + Y + Z is 15, achieved by one triple of X, Y and Z. You are given two integers K and S.\nThree variable X, Y and Z takes integer values satisfying 0≤X,Y,Z≤K.\nHow many different assignments of values to X, Y and Z are there such that X + Y + Z = S?",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03835.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2≤K≤2500 \n0≤S≤3K \nK and S are integers.",
          "ranges": "2 2500; 0 3; 2500; 3; 2; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 2",
            "output": "6 There are six triples of X, Y and Z that satisfy the condition: X = 0, Y = 0, Z = 2 \nX = 0, Y = 2, Z = 0 \nX = 2, Y = 0, Z = 0 \nX = 0, Y = 1, Z = 1 \nX = 1, Y = 0, Z = 1 \nX = 1, Y = 1, Z = 0",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03835.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03835"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03836",
        "title": "Here, both the x- and y-coordinates before and after each movement must be integers.",
        "description": "Score : 300 points Problem StatementDolphin resides in two-dimensional Cartesian plane, with the positive x-axis pointing right and the positive y-axis pointing up.\nCurrently, he is located at the point (sx,sy). In each second, he can move up, down, left or right by a distance of 1.\nHere, both the x- and y-coordinates before and after each movement must be integers.\nHe will first visit the point (tx,ty) where sx < tx and sy < ty, then go back to the point (sx,sy), then visit the point (tx,ty) again, and lastly go back to the point (sx,sy).\nHere, during the whole travel, he is not allowed to pass through the same point more than once, except the points (sx,sy) and (tx,ty).\nUnder this condition, find a shortest path for him. Dolphin resides in two-dimensional Cartesian plane, with the positive x-axis pointing right and the positive y-axis pointing up.\nCurrently, he is located at the point (sx,sy). In each second, he can move up, down, left or right by a distance of 1.\nHere, both the x- and y-coordinates before and after each movement must be integers.\nHe will first visit the point (tx,ty) where sx < tx and sy < ty, then go back to the point (sx,sy), then visit the point (tx,ty) again, and lastly go back to the point (sx,sy).\nHere, during the whole travel, he is not allowed to pass through the same point more than once, except the points (sx,sy) and (tx,ty).\nUnder this condition, find a shortest path for him. Print a string S that represents a shortest path for Dolphin.\nThe i-th character in S should correspond to his i-th movement.\nThe directions of the movements should be indicated by the following characters: If there exist multiple shortest paths under the condition, print any of them. One possible shortest path is: Dolphin resides in two-dimensional Cartesian plane, with the positive x-axis pointing right and the positive y-axis pointing up.\nCurrently, he is located at the point (sx,sy). In each second, he can move up, down, left or right by a distance of 1.\nHere, both the x- and y-coordinates before and after each movement must be integers.\nHe will first visit the point (tx,ty) where sx < tx and sy < ty, then go back to the point (sx,sy), then visit the point (tx,ty) again, and lastly go back to the point (sx,sy).\nHere, during the whole travel, he is not allowed to pass through the same point more than once, except the points (sx,sy) and (tx,ty).\nUnder this condition, find a shortest path for him.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "string",
          "geometry",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03836.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "-1000 ≤ sx < tx ≤ 1000 \n-1000 ≤ sy < ty ≤ 1000 \nsx,sy,tx and ty are integers.",
          "ranges": "1000; 1000; 1000; 1000"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "0 0 1 2",
            "output": "UURDDLLUUURRDRDDDLLU One possible shortest path is: Going from (sx,sy) to (tx,ty) for the first time: (0,0) → (0,1) → (0,2) → (1,2)\nGoing from (tx,ty) to (sx,sy) for the first time: (1,2) → (1,1) → (1,0) → (0,0)\nGoing from (sx,sy) to (tx,ty) for the second time: (0,0) → (-1,0) → (-1,1) → (-1,2) → (-1,3) → (0,3) → (1,3) → (1,2)\nGoing from (tx,ty) to (sx,sy) for the second time: (1,2) → (2,2) → (2,1) → (2,0) → (2,-1) → (1,-1) → (0,-1) → (0,0)",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03836.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03836"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03837",
        "title": "The i-th (1≤i≤M) edge connects vertex a_i and vertex b_i with a distance of c_i.",
        "description": "Score : 400 points Problem StatementYou are given an undirected connected weighted graph with N vertices and M edges that contains neither self-loops nor double edges.\nThe i-th (1≤i≤M) edge connects vertex a_i and vertex b_i with a distance of c_i.\nHere, a self-loop is an edge where a_i = b_i (1≤i≤M), and double edges are two edges where (a_i,b_i)=(a_j,b_j) or (a_i,b_i)=(b_j,a_j) (1≤i<j≤M).\nA connected graph is a graph where there is a path between every pair of different vertices.\nFind the number of the edges that are not contained in any shortest path between any pair of different vertices. You are given an undirected connected weighted graph with N vertices and M edges that contains neither self-loops nor double edges.\nThe i-th (1≤i≤M) edge connects vertex a_i and vertex b_i with a distance of c_i.\nHere, a self-loop is an edge where a_i = b_i (1≤i≤M), and double edges are two edges where (a_i,b_i)=(a_j,b_j) or (a_i,b_i)=(b_j,a_j) (1≤i<j≤M).\nA connected graph is a graph where there is a path between every pair of different vertices.\nFind the number of the edges that are not contained in any shortest path between any pair of different vertices. Print the number of the edges in the graph that are not contained in any shortest path between any pair of different vertices. In the given graph, the shortest paths between all pairs of different vertices are as follows: Thus, the only edge that is not contained in any shortest path, is the edge of length 3 connecting vertex 2 and vertex 3, hence the output should be 1. Every edge is contained in some shortest path between some pair of different vertices. You are given an undirected connected weighted graph with N vertices and M edges that contains neither self-loops nor double edges.\nThe i-th (1≤i≤M) edge connects vertex a_i and vertex b_i with a distance of c_i.\nHere, a self-loop is an edge where a_i = b_i (1≤i≤M), and double edges are two edges where (a_i,b_i)=(a_j,b_j) or (a_i,b_i)=(b_j,a_j) (1≤i<j≤M).\nA connected graph is a graph where there is a path between every pair of different vertices.\nFind the number of the edges that are not contained in any shortest path between any pair of different vertices.",
        "difficulty": "Hard",
        "category": "Trees & Graphs",
        "tags": [
          "math",
          "graph",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03837.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2≤N≤100 \nN-1≤M≤min(N(N-1)/2,1000) \n1≤a_i,b_i≤N \n1≤c_i≤1000\nc_i is an integer.\nThe given graph contains neither self-loops nor double edges.\nThe given graph is connected.",
          "ranges": "2 100; 1 1000; 100; 1000; 2; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 3\n1 2 1\n1 3 1\n2 3 3",
            "output": "1 In the given graph, the shortest paths between all pairs of different vertices are as follows: The shortest path from vertex 1 to vertex 2 is: vertex 1 → vertex 2, with the length of 1.\nThe shortest path from vertex 1 to vertex 3 is: vertex 1 → vertex 3, with the length of 1.\nThe shortest path from vertex 2 to vertex 1 is: vertex 2 → vertex 1, with the length of 1.\nThe shortest path from vertex 2 to vertex 3 is: vertex 2 → vertex 1 → vertex 3, with the length of 2.\nThe shortest path from vertex 3 to vertex 1 is: vertex 3 → vertex 1, with the length of 1.\nThe shortest path from vertex 3 to vertex 2 is: vertex 3 → vertex 1 → vertex 2, with the length of 2. Thus, the only edge that is not contained in any shortest path, is the edge of length 3 connecting vertex 2 and vertex 3, hence the output should be 1.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03837.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03837"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03839",
        "title": "The i-th square from the left contains an integer a_i.",
        "description": "Score : 400 points Problem StatementThere are N squares aligned in a row.\nThe i-th square from the left contains an integer a_i.\nInitially, all the squares are white.\nSnuke will perform the following operation some number of times:\n\nSelect K consecutive squares. Then, paint all of them white, or paint all of them black. Here, the colors of the squares are overwritten.\n\nAfter Snuke finishes performing the operation, the score will be calculated as the sum of the integers contained in the black squares.\nFind the maximum possible score. There are N squares aligned in a row.\nThe i-th square from the left contains an integer a_i. Initially, all the squares are white.\nSnuke will perform the following operation some number of times: After Snuke finishes performing the operation, the score will be calculated as the sum of the integers contained in the black squares.\nFind the maximum possible score. Print the maximum possible score. Paint the following squares black: the second, third and fourth squares from the left. One possible way to obtain the maximum score is as follows: There are N squares aligned in a row.\nThe i-th square from the left contains an integer a_i. Initially, all the squares are white.\nSnuke will perform the following operation some number of times: Select K consecutive squares. Then, paint all of them white, or paint all of them black. Here, the colors of the squares are overwritten. After Snuke finishes performing the operation, the score will be calculated as the sum of the integers contained in the black squares.\nFind the maximum possible score.",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03839.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤N≤10^5\n1≤K≤N\na_i is an integer.\n|a_i|≤10^9",
          "ranges": "1 10; 10; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 3\n-10 10 -10 10 -10",
            "output": "10 Paint the following squares black: the second, third and fourth squares from the left.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03839.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03839"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03840",
        "title": "Here, the following rules must be followed:",
        "description": "Score : 600 points Problem StatementA tetromino is a figure formed by joining four squares edge to edge.\nWe will refer to the following seven kinds of tetromino as I-, O-, T-, J-, L-, S- and Z-tetrominos, respectively:\n\n\n\nSnuke has many tetrominos. The number of I-, O-, T-, J-, L-, S- and Z-tetrominos in his possession are a_I, a_O, a_T, a_J, a_L, a_S and a_Z, respectively.\nSnuke will join K of his tetrominos to form a rectangle that is two squares tall and 2K squares wide.\nHere, the following rules must be followed:\n\nWhen placing each tetromino, rotation is allowed, but reflection is not.\nEach square in the rectangle must be covered by exactly one tetromino.\nNo part of each tetromino may be outside the rectangle.\n\nSnuke wants to form as large a rectangle as possible.\nFind the maximum possible value of K. A tetromino is a figure formed by joining four squares edge to edge.\nWe will refer to the following seven kinds of tetromino as I-, O-, T-, J-, L-, S- and Z-tetrominos, respectively: Snuke has many tetrominos. The number of I-, O-, T-, J-, L-, S- and Z-tetrominos in his possession are a_I, a_O, a_T, a_J, a_L, a_S and a_Z, respectively.\nSnuke will join K of his tetrominos to form a rectangle that is two squares tall and 2K squares wide.\nHere, the following rules must be followed: Snuke wants to form as large a rectangle as possible.\nFind the maximum possible value of K. Print the maximum possible value of K. If no rectangle can be formed, print 0. One possible way to form the largest rectangle is shown in the following figure: No rectangle can be formed. A tetromino is a figure formed by joining four squares edge to edge.\nWe will refer to the following seven kinds of tetromino as I-, O-, T-, J-, L-, S- and Z-tetrominos, respectively: Snuke has many tetrominos. The number of I-, O-, T-, J-, L-, S- and Z-tetrominos in his possession are a_I, a_O, a_T, a_J, a_L, a_S and a_Z, respectively.\nSnuke will join K of his tetrominos to form a rectangle that is two squares tall and 2K squares wide.\nHere, the following rules must be followed: When placing each tetromino, rotation is allowed, but reflection is not.\nEach square in the rectangle must be covered by exactly one tetromino.\nNo part of each tetromino may be outside the rectangle. Snuke wants to form as large a rectangle as possible.\nFind the maximum possible value of K.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03840.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0≤a_I,a_O,a_T,a_J,a_L,a_S,a_Z≤10^9\na_I+a_O+a_T+a_J+a_L+a_S+a_Z≥1",
          "ranges": "10; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 1 1 0 0 0 0",
            "output": "3 One possible way to form the largest rectangle is shown in the following figure:",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03840.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03840"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03841",
        "title": "a is N^2 in length, containing N copies of each of the integers 1, 2, ..., N.",
        "description": "Score : 800 points Problem StatementYou are given an integer sequence x of length N.\nDetermine if there exists an integer sequence a that satisfies all of the following conditions, and if it exists, construct an instance of a.\n\na is N^2 in length, containing N copies of each of the integers 1, 2, ..., N.\nFor each 1 ≤ i ≤ N, the i-th occurrence of the integer i from the left in a is the x_i-th element of a from the left. You are given an integer sequence x of length N.\nDetermine if there exists an integer sequence a that satisfies all of the following conditions, and if it exists, construct an instance of a. If there does not exist an integer sequence a that satisfies all the conditions, print No.\nIf there does exist such an sequence a, print Yes in the first line, then print an instance of a in the second line, with spaces inbetween. For example, the second occurrence of the integer 2 from the left in a in the output is the fifth element of a from the left.\nSimilarly, the condition is satisfied for the integers 1 and 3. You are given an integer sequence x of length N.\nDetermine if there exists an integer sequence a that satisfies all of the following conditions, and if it exists, construct an instance of a. a is N^2 in length, containing N copies of each of the integers 1, 2, ..., N.\nFor each 1 ≤ i ≤ N, the i-th occurrence of the integer i from the left in a is the x_i-th element of a from the left.",
        "difficulty": "Hard",
        "category": "Implementation",
        "tags": [
          "array",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03841.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 500\n1 ≤ x_i ≤ N^2\nAll x_i are distinct.",
          "ranges": "1 500; 500; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n1 5 9",
            "output": "Yes\n1 1 1 2 2 2 3 3 3 For example, the second occurrence of the integer 2 from the left in a in the output is the fifth element of a from the left.\nSimilarly, the condition is satisfied for the integers 1 and 3.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03841.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03841"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03842",
        "title": "How many permutations p of the integers 1 through N satisfy the following condition?",
        "description": "Score : 1400 points Problem StatementYou are given an integer sequence a of length N.\nHow many permutations p of the integers 1 through N satisfy the following condition?\n\nFor each 1 ≤ i ≤ N, at least one of the following holds: p_i = a_i and p_{p_i} = a_i.\n\nFind the count modulo 10^9 + 7. You are given an integer sequence a of length N.\nHow many permutations p of the integers 1 through N satisfy the following condition? Find the count modulo 10^9 + 7. Print the number of the permutations p that satisfy the condition, modulo 10^9 + 7. The following four permutations satisfy the condition: For example, (1, 3, 2) satisfies the condition because p_1 = 1, p_{p_2} = 2 and p_{p_3} = 3. The following one permutation satisfies the condition: The following two permutations satisfy the condition: You are given an integer sequence a of length N.\nHow many permutations p of the integers 1 through N satisfy the following condition? For each 1 ≤ i ≤ N, at least one of the following holds: p_i = a_i and p_{p_i} = a_i. Find the count modulo 10^9 + 7.",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03842.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10^5\na_i is an integer.\n1 ≤ a_i ≤ N",
          "ranges": "1 10; 10; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n1 2 3",
            "output": "4 The following four permutations satisfy the condition: (1, 2, 3)\n(1, 3, 2)\n(3, 2, 1)\n(2, 1, 3) For example, (1, 3, 2) satisfies the condition because p_1 = 1, p_{p_2} = 2 and p_{p_3} = 3.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03842.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03842"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03843",
        "title": "The vertices are numbered 1 through N.",
        "description": "Score : 1900 points Problem StatementThere is a tree with N vertices.\nThe vertices are numbered 1 through N.\nFor each 1 ≤ i ≤ N - 1, the i-th edge connects vertices a_i and b_i.\nThe lengths of all the edges are 1.\nSnuke likes some of the vertices.\nThe information on his favorite vertices are given to you as a string s of length N.\nFor each 1 ≤ i ≤ N, s_i is 1 if Snuke likes vertex i, and 0 if he does not like vertex i.\nInitially, all the vertices are white.\nSnuke will perform the following operation exactly once:\n\nSelect a vertex v that he likes, and a non-negative integer d. Then, paint all the vertices black whose distances from v are at most d.\n\nFind the number of the possible combinations of colors of the vertices after the operation. There is a tree with N vertices.\nThe vertices are numbered 1 through N.\nFor each 1 ≤ i ≤ N - 1, the i-th edge connects vertices a_i and b_i.\nThe lengths of all the edges are 1. Snuke likes some of the vertices.\nThe information on his favorite vertices are given to you as a string s of length N.\nFor each 1 ≤ i ≤ N, s_i is 1 if Snuke likes vertex i, and 0 if he does not like vertex i. Initially, all the vertices are white.\nSnuke will perform the following operation exactly once: Find the number of the possible combinations of colors of the vertices after the operation. Partial Score\nIn the test set worth 1300 points, s consists only of 1. Print the number of the possible combinations of colors of the vertices after the operation. The following four combinations of colors of the vertices are possible: This case satisfies the additional constraint for the partial score. There is a tree with N vertices.\nThe vertices are numbered 1 through N.\nFor each 1 ≤ i ≤ N - 1, the i-th edge connects vertices a_i and b_i.\nThe lengths of all the edges are 1. Snuke likes some of the vertices.\nThe information on his favorite vertices are given to you as a string s of length N.\nFor each 1 ≤ i ≤ N, s_i is 1 if Snuke likes vertex i, and 0 if he does not like vertex i. Initially, all the vertices are white.\nSnuke will perform the following operation exactly once: Select a vertex v that he likes, and a non-negative integer d. Then, paint all the vertices black whose distances from v are at most d. Find the number of the possible combinations of colors of the vertices after the operation.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "string",
          "math",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03843.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 2×10^5\n1 ≤ a_i, b_i ≤ N\nThe given graph is a tree.\n|s| = N\ns consists of 0 and 1.\ns contains at least one occurrence of 1.",
          "ranges": "2 2; 2; 2; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n1 2\n1 3\n1 4\n1100",
            "output": "4 The following four combinations of colors of the vertices are possible:",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03843.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03843"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03861",
        "title": "Among the integers between a and b, inclusive, how many are divisible by x?",
        "description": "Score : 200 points Problem StatementYou are given nonnegative integers a and b (a ≤ b), and a positive integer x.\nAmong the integers between a and b, inclusive, how many are divisible by x? You are given nonnegative integers a and b (a ≤ b), and a positive integer x.\nAmong the integers between a and b, inclusive, how many are divisible by x? Print the number of the integers between a and b, inclusive, that are divisible by x. There are three integers between 4 and 8, inclusive, that are divisible by 2: 4, 6 and 8. There are six integers between 0 and 5, inclusive, that are divisible by 1: 0, 1, 2, 3, 4 and 5. There are no integer between 9 and 9, inclusive, that is divisible by 2. Watch out for integer overflows. You are given nonnegative integers a and b (a ≤ b), and a positive integer x.\nAmong the integers between a and b, inclusive, how many are divisible by x?",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03861.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0 ≤ a ≤ b ≤ 10^{18}\n1 ≤ x ≤ 10^{18}",
          "ranges": "1 10; 10; 10; 0; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 8 2",
            "output": "3 There are three integers between 4 and 8, inclusive, that are divisible by 2: 4, 6 and 8.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03861.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03861"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03862",
        "title": "Initially, the i-th box from the left contains a_i candies.",
        "description": "Score : 300 points Problem StatementThere are N boxes arranged in a row.\nInitially, the i-th box from the left contains a_i candies.\nSnuke can perform the following operation any number of times:\n\nChoose a box containing at least one candy, and eat one of the candies in the chosen box.\n\nHis objective is as follows:\n\nAny two neighboring boxes contain at most x candies in total.\n\nFind the minimum number of operations required to achieve the objective. There are N boxes arranged in a row.\nInitially, the i-th box from the left contains a_i candies. Snuke can perform the following operation any number of times: His objective is as follows: Find the minimum number of operations required to achieve the objective. Print the minimum number of operations required to achieve the objective. Eat one candy in the second box.\nThen, the number of candies in each box becomes (2, 1, 2). For example, eat six candies in the second box, two in the fourth box, and three in the sixth box.\nThen, the number of candies in each box becomes (1, 0, 1, 0, 0, 1). The objective is already achieved without performing operations. All the candies need to be eaten. There are N boxes arranged in a row.\nInitially, the i-th box from the left contains a_i candies. Snuke can perform the following operation any number of times: Choose a box containing at least one candy, and eat one of the candies in the chosen box. His objective is as follows: Any two neighboring boxes contain at most x candies in total. Find the minimum number of operations required to achieve the objective.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03862.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 10^5\n0 ≤ a_i ≤ 10^9\n0 ≤ x ≤ 10^9",
          "ranges": "2 10; 0 10; 0 10; 10; 10; 10; 2; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 3\n2 2 2",
            "output": "1 Eat one candy in the second box.\nThen, the number of candies in each box becomes (2, 1, 2).",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03862.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03862"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03864",
        "title": "Initially, the i-th box from the left contains a_i candies.",
        "description": "Score : 300 points Problem StatementThere are N boxes arranged in a row.\nInitially, the i-th box from the left contains a_i candies.\nSnuke can perform the following operation any number of times:\n\nChoose a box containing at least one candy, and eat one of the candies in the chosen box.\n\nHis objective is as follows:\n\nAny two neighboring boxes contain at most x candies in total.\n\nFind the minimum number of operations required to achieve the objective. There are N boxes arranged in a row.\nInitially, the i-th box from the left contains a_i candies. Snuke can perform the following operation any number of times: His objective is as follows: Find the minimum number of operations required to achieve the objective. Print the minimum number of operations required to achieve the objective. Eat one candy in the second box.\nThen, the number of candies in each box becomes (2, 1, 2). For example, eat six candies in the second box, two in the fourth box, and three in the sixth box.\nThen, the number of candies in each box becomes (1, 0, 1, 0, 0, 1). The objective is already achieved without performing operations. All the candies need to be eaten. There are N boxes arranged in a row.\nInitially, the i-th box from the left contains a_i candies. Snuke can perform the following operation any number of times: Choose a box containing at least one candy, and eat one of the candies in the chosen box. His objective is as follows: Any two neighboring boxes contain at most x candies in total. Find the minimum number of operations required to achieve the objective.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03864.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 ≤ N ≤ 10^5\n0 ≤ a_i ≤ 10^9\n0 ≤ x ≤ 10^9",
          "ranges": "2 10; 0 10; 0 10; 10; 10; 10; 2; 0; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 3\n2 2 2",
            "output": "1 Eat one candy in the second box.\nThen, the number of candies in each box becomes (2, 1, 2).",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03864.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03864"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03866",
        "title": "He can move in arbitrary directions with speed 1.",
        "description": "Score : 600 points Problem StatementOn the xy-plane, Snuke is going to travel from the point (x_s, y_s) to the point (x_t, y_t).\nHe can move in arbitrary directions with speed 1.\nHere, we will consider him as a point without size.\nThere are N circular barriers deployed on the plane.\nThe center and the radius of the i-th barrier are (x_i, y_i) and r_i, respectively.\nThe barriers may overlap or contain each other.\nA point on the plane is exposed to cosmic rays if the point is not within any of the barriers.\nSnuke wants to avoid exposure to cosmic rays as much as possible during the travel.\nFind the minimum possible duration of time he is exposed to cosmic rays during the travel. On the xy-plane, Snuke is going to travel from the point (x_s, y_s) to the point (x_t, y_t).\nHe can move in arbitrary directions with speed 1.\nHere, we will consider him as a point without size. There are N circular barriers deployed on the plane.\nThe center and the radius of the i-th barrier are (x_i, y_i) and r_i, respectively.\nThe barriers may overlap or contain each other. A point on the plane is exposed to cosmic rays if the point is not within any of the barriers. Snuke wants to avoid exposure to cosmic rays as much as possible during the travel.\nFind the minimum possible duration of time he is exposed to cosmic rays during the travel. Print the minimum possible duration of time Snuke is exposed to cosmic rays during the travel.\nThe output is considered correct if the absolute or relative error is at most 10^{-9}. An optimal route is as follows: An optimal route is as follows: An optimal route is as follows: On the xy-plane, Snuke is going to travel from the point (x_s, y_s) to the point (x_t, y_t).\nHe can move in arbitrary directions with speed 1.\nHere, we will consider him as a point without size. There are N circular barriers deployed on the plane.\nThe center and the radius of the i-th barrier are (x_i, y_i) and r_i, respectively.\nThe barriers may overlap or contain each other. A point on the plane is exposed to cosmic rays if the point is not within any of the barriers. Snuke wants to avoid exposure to cosmic rays as much as possible during the travel.\nFind the minimum possible duration of time he is exposed to cosmic rays during the travel.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03866.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "All input values are integers.\n-10^9 ≤ x_s, y_s, x_t, y_t ≤ 10^9\n(x_s, y_s) ≠ (x_t, y_t)\n1≤N≤1,000\n-10^9 ≤ x_i, y_i ≤ 10^9\n1 ≤ r_i ≤ 10^9",
          "ranges": "1 1; 1 10; 10; 1; 10; 10; 9; 1; 9; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "-2 -2 2 2\n1\n0 0 1",
            "output": "3.6568542495 An optimal route is as follows:",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03866.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03866"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03867",
        "title": "First, Takahashi will provide a sequence of integers a, satisfying all of the following conditions:",
        "description": "Score : 1000 points Problem StatementTakahashi and Aoki are going to together construct a sequence of integers.\nFirst, Takahashi will provide a sequence of integers a, satisfying all of the following conditions:\n\nThe length of a is N.\nEach element in a is an integer between 1 and K, inclusive.\na is a palindrome, that is, reversing the order of elements in a will result in the same sequence as the original.\n\nThen, Aoki will perform the following operation an arbitrary number of times:\n\nMove the first element in a to the end of a.\n\nHow many sequences a can be obtained after this procedure, modulo 10^9+7? Takahashi and Aoki are going to together construct a sequence of integers. First, Takahashi will provide a sequence of integers a, satisfying all of the following conditions: Then, Aoki will perform the following operation an arbitrary number of times: How many sequences a can be obtained after this procedure, modulo 10^9+7? Print the number of the sequences a that can be obtained after the procedure, modulo 10^9+7. The following six sequences can be obtained: Takahashi and Aoki are going to together construct a sequence of integers. First, Takahashi will provide a sequence of integers a, satisfying all of the following conditions: The length of a is N.\nEach element in a is an integer between 1 and K, inclusive.\na is a palindrome, that is, reversing the order of elements in a will result in the same sequence as the original. Then, Aoki will perform the following operation an arbitrary number of times: Move the first element in a to the end of a. How many sequences a can be obtained after this procedure, modulo 10^9+7?",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03867.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤N≤10^9\n1≤K≤10^9",
          "ranges": "1 10; 1 10; 10; 10; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 2",
            "output": "6 The following six sequences can be obtained: (1, 1, 1, 1)\n(1, 1, 2, 2)\n(1, 2, 2, 1)\n(2, 2, 1, 1)\n(2, 1, 1, 2)\n(2, 2, 2, 2)",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03867.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03867"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03868",
        "title": "There are N computers and N sockets in a one-dimensional world.",
        "description": "Score : 500 points Problem Statement\nThere are N computers and N sockets in a one-dimensional world.\nThe coordinate of the i-th computer is a_i, and the coordinate of the i-th socket is b_i.\nIt is guaranteed that these 2N coordinates are pairwise distinct.\nSnuke wants to connect each computer to a socket using a cable.\nEach socket can be connected to only one computer.\nIn how many ways can he minimize the total length of the cables?\nCompute the answer modulo 10^9+7. There are N computers and N sockets in a one-dimensional world.\nThe coordinate of the i-th computer is a_i, and the coordinate of the i-th socket is b_i.\nIt is guaranteed that these 2N coordinates are pairwise distinct. Snuke wants to connect each computer to a socket using a cable.\nEach socket can be connected to only one computer. In how many ways can he minimize the total length of the cables?\nCompute the answer modulo 10^9+7. Print the number of ways to minimize the total length of the cables, modulo 10^9+7. There are two optimal connections: 0-20, 10-30 and 0-30, 10-20.\nIn both connections the total length of the cables is 40. #nck {\n      width: 30px;\n      height: auto;\n   } There are N computers and N sockets in a one-dimensional world.\nThe coordinate of the i-th computer is a_i, and the coordinate of the i-th socket is b_i.\nIt is guaranteed that these 2N coordinates are pairwise distinct. Snuke wants to connect each computer to a socket using a cable.\nEach socket can be connected to only one computer. In how many ways can he minimize the total length of the cables?\nCompute the answer modulo 10^9+7.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03868.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10^5\n0 ≤ a_i, b_i ≤ 10^9\nThe coordinates are integers.\nThe coordinates are pairwise distinct.",
          "ranges": "1 10; 10; 10; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\n0\n10\n20\n30",
            "output": "2 There are two optimal connections: 0-20, 10-30 and 0-30, 10-20.\nIn both connections the total length of the cables is 40.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03868.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03868"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03869",
        "title": "Snuke received a triangle as a birthday present.",
        "description": "Score : 500 points Problem Statement\nSnuke received a triangle as a birthday present.\nThe coordinates of the three vertices were (x_1, y_1), (x_2, y_2), and (x_3, y_3).\nHe wants to draw two circles with the same radius inside the triangle such that the two circles do not overlap (but they may touch).\nCompute the maximum possible radius of the circles. Snuke received a triangle as a birthday present.\nThe coordinates of the three vertices were (x_1, y_1), (x_2, y_2), and (x_3, y_3). He wants to draw two circles with the same radius inside the triangle such that the two circles do not overlap (but they may touch).\nCompute the maximum possible radius of the circles. Print the maximum possible radius of the circles.\nThe absolute error or the relative error must be at most 10^{-9}. #nck {\n      width: 30px;\n      height: auto;\n   } Snuke received a triangle as a birthday present.\nThe coordinates of the three vertices were (x_1, y_1), (x_2, y_2), and (x_3, y_3). He wants to draw two circles with the same radius inside the triangle such that the two circles do not overlap (but they may touch).\nCompute the maximum possible radius of the circles.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "geometry",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03869.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0 ≤ x_i, y_i ≤ 1000\nThe coordinates are integers.\nThe three points are not on the same line.",
          "ranges": "1000; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "0 0\n1 1\n2 0",
            "output": "0.292893218813",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03869.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03869"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03870",
        "title": "A cheetah and a cheater are going to play the game of Nim.",
        "description": "Score : 500 points Problem Statement\nA cheetah and a cheater are going to play the game of Nim.\nIn this game they use N piles of stones.\nInitially the i-th pile contains a_i stones.\nThe players take turns alternately, and the cheetah plays first.\nIn each turn, the player chooses one of the piles, and takes one or more stones from the pile.\nThe player who can't make a move loses.\nHowever, before the game starts, the cheater wants to cheat a bit to make sure that he can win regardless of the moves by the cheetah.\nFrom each pile, the cheater takes zero or one stone and eats it before the game.\nIn case there are multiple ways to guarantee his winning, he wants to minimize the number of stones he eats.\nCompute the number of stones the cheater will eat.\nIn case there is no way for the cheater to win the game even with the cheating, print -1 instead. A cheetah and a cheater are going to play the game of Nim.\nIn this game they use N piles of stones.\nInitially the i-th pile contains a_i stones.\nThe players take turns alternately, and the cheetah plays first.\nIn each turn, the player chooses one of the piles, and takes one or more stones from the pile.\nThe player who can't make a move loses. However, before the game starts, the cheater wants to cheat a bit to make sure that he can win regardless of the moves by the cheetah.\nFrom each pile, the cheater takes zero or one stone and eats it before the game.\nIn case there are multiple ways to guarantee his winning, he wants to minimize the number of stones he eats. Compute the number of stones the cheater will eat.\nIn case there is no way for the cheater to win the game even with the cheating, print -1 instead. Print the answer. The only way for the cheater to win the game is to take stones from all piles and eat them. #nck {\n      width: 30px;\n      height: auto;\n   } A cheetah and a cheater are going to play the game of Nim.\nIn this game they use N piles of stones.\nInitially the i-th pile contains a_i stones.\nThe players take turns alternately, and the cheetah plays first.\nIn each turn, the player chooses one of the piles, and takes one or more stones from the pile.\nThe player who can't make a move loses. However, before the game starts, the cheater wants to cheat a bit to make sure that he can win regardless of the moves by the cheetah.\nFrom each pile, the cheater takes zero or one stone and eats it before the game.\nIn case there are multiple ways to guarantee his winning, he wants to minimize the number of stones he eats. Compute the number of stones the cheater will eat.\nIn case there is no way for the cheater to win the game even with the cheating, print -1 instead.",
        "difficulty": "Hard",
        "category": "Simulation",
        "tags": [
          "math",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03870.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10^5\n2 ≤ a_i ≤ 10^9",
          "ranges": "1 10; 2 10; 10; 10; 1; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n2\n3\n4",
            "output": "3 The only way for the cheater to win the game is to take stones from all piles and eat them.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03870.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03870"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03871",
        "title": "There are two (6-sided) dice: a red die and a blue die.",
        "description": "Score : 1000 points Problem Statement\nThere are two (6-sided) dice: a red die and a blue die.\nWhen a red die is rolled, it shows i with probability p_i percents, and when a blue die is rolled, it shows j with probability q_j percents.\nPetr and tourist are playing the following game.\nBoth players know the probabilistic distributions of the two dice.\nFirst, Petr chooses a die in his will (without showing it to tourist), rolls it, and tells tourist the number it shows.\nThen, tourist guesses the color of the chosen die.\nIf he guesses the color correctly, tourist wins. Otherwise Petr wins.\nIf both players play optimally, what is the probability that tourist wins the game? There are two (6-sided) dice: a red die and a blue die.\nWhen a red die is rolled, it shows i with probability p_i percents, and when a blue die is rolled, it shows j with probability q_j percents. Petr and tourist are playing the following game.\nBoth players know the probabilistic distributions of the two dice.\nFirst, Petr chooses a die in his will (without showing it to tourist), rolls it, and tells tourist the number it shows.\nThen, tourist guesses the color of the chosen die.\nIf he guesses the color correctly, tourist wins. Otherwise Petr wins. If both players play optimally, what is the probability that tourist wins the game? Print the probability that tourist wins.\nThe absolute error or the relative error must be at most 10^{-9}. tourist can always win the game: If the number is at most 4, the color is definitely red. Otherwise the color is definitely blue. #nck {\n      width: 30px;\n      height: auto;\n   } There are two (6-sided) dice: a red die and a blue die.\nWhen a red die is rolled, it shows i with probability p_i percents, and when a blue die is rolled, it shows j with probability q_j percents. Petr and tourist are playing the following game.\nBoth players know the probabilistic distributions of the two dice.\nFirst, Petr chooses a die in his will (without showing it to tourist), rolls it, and tells tourist the number it shows.\nThen, tourist guesses the color of the chosen die.\nIf he guesses the color correctly, tourist wins. Otherwise Petr wins. If both players play optimally, what is the probability that tourist wins the game?",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "math",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03871.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0 ≤ p_i, q_i ≤ 100\np_1 + ... + p_6 = q_1 + ... + q_6 = 100\nAll values in the input are integers.",
          "ranges": "100; 100; 0; 6; 6"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "25 25 25 25 0 0\n0 0 0 0 50 50",
            "output": "1.000000000000 tourist can always win the game: If the number is at most 4, the color is definitely red. Otherwise the color is definitely blue.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03871.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03871"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03872",
        "title": "There are N cities in a two-dimensional plane.",
        "description": "Score : 1000 points Problem Statement\nThere are N cities in a two-dimensional plane.\nThe coordinates of the i-th city is (x_i, y_i).\nInitially, the amount of water stored in the i-th city is a_i liters.\nSnuke can carry any amount of water from a city to another city.\nHowever, water leaks out a bit while he carries it.\nIf he carries l liters of water from the s-th city to the t-th city, only max(l-d_{s,t}, 0) liters of water remains when he arrives at the destination.\nHere d_{s,t} denotes the (Euclidean) distance between the s-th city and the t-th city.\nHe can perform arbitrary number of operations of this type.\nSnuke wants to maximize the minimum amount of water among the N cities.\nFind the maximum X such that he can distribute at least X liters of water to each city. There are N cities in a two-dimensional plane.\nThe coordinates of the i-th city is (x_i, y_i).\nInitially, the amount of water stored in the i-th city is a_i liters. Snuke can carry any amount of water from a city to another city.\nHowever, water leaks out a bit while he carries it.\nIf he carries l liters of water from the s-th city to the t-th city, only max(l-d_{s,t}, 0) liters of water remains when he arrives at the destination.\nHere d_{s,t} denotes the (Euclidean) distance between the s-th city and the t-th city.\nHe can perform arbitrary number of operations of this type. Snuke wants to maximize the minimum amount of water among the N cities.\nFind the maximum X such that he can distribute at least X liters of water to each city. Print the maximum of the minimum amount of water among the N cities.\nThe absolute error or the relative error must be at most 10^{-9}. The optimal solution is to carry 3.5 liters of water from the 1st city to the 2nd city.\nAfter the operation, both the 1st and the 2nd cities will have 6.5 liters of water, and the 3rd city will have 8 liters of water. #nck {\n      width: 30px;\n      height: auto;\n   } There are N cities in a two-dimensional plane.\nThe coordinates of the i-th city is (x_i, y_i).\nInitially, the amount of water stored in the i-th city is a_i liters. Snuke can carry any amount of water from a city to another city.\nHowever, water leaks out a bit while he carries it.\nIf he carries l liters of water from the s-th city to the t-th city, only max(l-d_{s,t}, 0) liters of water remains when he arrives at the destination.\nHere d_{s,t} denotes the (Euclidean) distance between the s-th city and the t-th city.\nHe can perform arbitrary number of operations of this type. Snuke wants to maximize the minimum amount of water among the N cities.\nFind the maximum X such that he can distribute at least X liters of water to each city.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03872.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 15\n0 ≤ x_i, y_i, a_i ≤ 10^9\nAll values in the input are integers.\nNo two cities are at the same position.",
          "ranges": "1 15; 15; 10; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n0 0 10\n2 0 5\n0 5 8",
            "output": "6.500000000000 The optimal solution is to carry 3.5 liters of water from the 1st city to the 2nd city.\nAfter the operation, both the 1st and the 2nd cities will have 6.5 liters of water, and the 3rd city will have 8 liters of water.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03872.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03872"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03873",
        "title": "Snuke received N intervals as a birthday present.",
        "description": "Score : 1000 points Problem Statement\nSnuke received N intervals as a birthday present.\nThe i-th interval was [-L_i, R_i].\nIt is guaranteed that both L_i and R_i are positive.\nIn other words, the origin is strictly inside each interval.\nSnuke doesn't like overlapping intervals, so he decided to move some intervals.\nFor any positive integer d, if he pays d dollars, he can choose one of the intervals and move it by the distance of d.\nThat is, if the chosen segment is [a, b], he can change it to either [a+d, b+d] or [a-d, b-d].\nHe can repeat this type of operation arbitrary number of times.\nAfter the operations, the intervals must be pairwise disjoint (however, they may touch at a point).\nFormally, for any two intervals, the length of the intersection must be zero.\nCompute the minimum cost required to achieve his goal. Snuke received N intervals as a birthday present.\nThe i-th interval was [-L_i, R_i].\nIt is guaranteed that both L_i and R_i are positive.\nIn other words, the origin is strictly inside each interval. Snuke doesn't like overlapping intervals, so he decided to move some intervals.\nFor any positive integer d, if he pays d dollars, he can choose one of the intervals and move it by the distance of d.\nThat is, if the chosen segment is [a, b], he can change it to either [a+d, b+d] or [a-d, b-d]. He can repeat this type of operation arbitrary number of times.\nAfter the operations, the intervals must be pairwise disjoint (however, they may touch at a point).\nFormally, for any two intervals, the length of the intersection must be zero. Compute the minimum cost required to achieve his goal. Print the minimum cost required to achieve his goal. One optimal solution is as follows: The total cost is 8 + 1 + 2 + 11 = 22 dollars. #nck {\n      width: 30px;\n      height: auto;\n   } Snuke received N intervals as a birthday present.\nThe i-th interval was [-L_i, R_i].\nIt is guaranteed that both L_i and R_i are positive.\nIn other words, the origin is strictly inside each interval. Snuke doesn't like overlapping intervals, so he decided to move some intervals.\nFor any positive integer d, if he pays d dollars, he can choose one of the intervals and move it by the distance of d.\nThat is, if the chosen segment is [a, b], he can change it to either [a+d, b+d] or [a-d, b-d]. He can repeat this type of operation arbitrary number of times.\nAfter the operations, the intervals must be pairwise disjoint (however, they may touch at a point).\nFormally, for any two intervals, the length of the intersection must be zero. Compute the minimum cost required to achieve his goal.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03873.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 5000\n1 ≤ L_i, R_i ≤ 10^9\nAll values in the input are integers.",
          "ranges": "1 5000; 5000; 10; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n2 7\n2 5\n4 1\n7 5",
            "output": "22 One optimal solution is as follows: Move the interval [-2, 7] to [6, 15] with 8 dollars\nMove the interval [-2, 5] to [-1, 6] with 1 dollars\nMove the interval [-4, 1] to [-6, -1] with 2 dollars\nMove the interval [-7, 5] to [-18, -6] with 11 dollars The total cost is 8 + 1 + 2 + 11 = 22 dollars.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03873.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03873"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03874",
        "title": "Welcome to CODE FESTIVAL 2016!",
        "description": "Score : 1000 points Problem Statement\nWelcome to CODE FESTIVAL 2016!\nIn order to celebrate this contest, find a string s that satisfies the following conditions:\n\nThe length of s is between 1 and 5000, inclusive.\ns consists of uppercase letters.\ns contains exactly K occurrences of the string \"FESTIVAL\" as a subsequence.\nIn other words, there are exactly K tuples of integers (i_0, i_1, ..., i_7) such that 0 ≤ i_0 < i_1 < ... < i_7 ≤ |s|-1 and s[i_0]='F', s[i_1]='E', ..., s[i_7]='L'.\n\nIt can be proved that under the given constraints, the solution always exists.\nIn case there are multiple possible solutions, you can output any. Welcome to CODE FESTIVAL 2016!\nIn order to celebrate this contest, find a string s that satisfies the following conditions: It can be proved that under the given constraints, the solution always exists.\nIn case there are multiple possible solutions, you can output any. Print a string that satisfies the conditions. #nck {\n      width: 30px;\n      height: auto;\n   } Welcome to CODE FESTIVAL 2016!\nIn order to celebrate this contest, find a string s that satisfies the following conditions: The length of s is between 1 and 5000, inclusive.\ns consists of uppercase letters.\ns contains exactly K occurrences of the string \"FESTIVAL\" as a subsequence.\nIn other words, there are exactly K tuples of integers (i_0, i_1, ..., i_7) such that 0 ≤ i_0 < i_1 < ... < i_7 ≤ |s|-1 and s[i_0]='F', s[i_1]='E', ..., s[i_7]='L'. It can be proved that under the given constraints, the solution always exists.\nIn case there are multiple possible solutions, you can output any.",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "string",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03874.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ K ≤ 10^{18}",
          "ranges": "1 10; 10; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "7",
            "output": "FESSSSSSSTIVAL",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03874.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03874"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03875",
        "title": "Snuke received two matrices A and B as birthday presents.",
        "description": "Score : 1500 points Problem Statement\nSnuke received two matrices A and B as birthday presents.\nEach of the matrices is an N by N matrix that consists of only 0 and 1.\nThen he computed the product of the two matrices, C = AB.\nSince he performed all computations in modulo two, C was also an N by N matrix that consists of only 0 and 1.\nFor each 1 ≤ i, j ≤ N, you are given c_{i, j}, the (i, j)-element of the matrix C.\nHowever, Snuke accidentally ate the two matrices A and B, and now he only knows C.\nCompute the number of possible (ordered) pairs of the two matrices A and B, modulo 10^9+7. Snuke received two matrices A and B as birthday presents.\nEach of the matrices is an N by N matrix that consists of only 0 and 1. Then he computed the product of the two matrices, C = AB.\nSince he performed all computations in modulo two, C was also an N by N matrix that consists of only 0 and 1.\nFor each 1 ≤ i, j ≤ N, you are given c_{i, j}, the (i, j)-element of the matrix C. However, Snuke accidentally ate the two matrices A and B, and now he only knows C.\nCompute the number of possible (ordered) pairs of the two matrices A and B, modulo 10^9+7. Print the number of possible (ordered) pairs of two matrices A and B (modulo 10^9+7). #nck {\n      width: 30px;\n      height: auto;\n   } Snuke received two matrices A and B as birthday presents.\nEach of the matrices is an N by N matrix that consists of only 0 and 1. Then he computed the product of the two matrices, C = AB.\nSince he performed all computations in modulo two, C was also an N by N matrix that consists of only 0 and 1.\nFor each 1 ≤ i, j ≤ N, you are given c_{i, j}, the (i, j)-element of the matrix C. However, Snuke accidentally ate the two matrices A and B, and now he only knows C.\nCompute the number of possible (ordered) pairs of the two matrices A and B, modulo 10^9+7.",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03875.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 300\nc_{i, j} is either 0 or 1.",
          "ranges": "1 300; 300; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\n0 1\n1 0",
            "output": "6",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03875.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03875"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03876",
        "title": "Construct an N-gon that satisfies the following conditions:",
        "description": "Score : 1500 points Problem Statement\nConstruct an N-gon that satisfies the following conditions:\n\nThe polygon is simple (see notes for the definition).\nEach edge of the polygon is parallel to one of the coordinate axes.\nEach coordinate is an integer between 0 and 10^9, inclusive.\nThe vertices are numbered 1 through N in counter-clockwise order.\nThe internal angle at the i-th vertex is exactly a_i degrees.\n\nIn case there are multiple possible answers, you can output any. Construct an N-gon that satisfies the following conditions: In case there are multiple possible answers, you can output any. NotesA polygon is called simple if each edge has a positive length, and no two edges have a common point (except for adjacent edges touching at a vertex). A polygon is called simple if each edge has a positive length, and no two edges have a common point (except for adjacent edges touching at a vertex). In case the answer exists, print the answer in the following format: Here (x_i, y_i) are the coordinates of the i-th vertex. In case the answer doesn't exist, print a single -1. #nck {\n      width: 30px;\n      height: auto;\n   } Construct an N-gon that satisfies the following conditions: The polygon is simple (see notes for the definition).\nEach edge of the polygon is parallel to one of the coordinate axes.\nEach coordinate is an integer between 0 and 10^9, inclusive.\nThe vertices are numbered 1 through N in counter-clockwise order.\nThe internal angle at the i-th vertex is exactly a_i degrees. In case there are multiple possible answers, you can output any.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03876.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3 ≤ N ≤ 1000\na_i is either 90 or 270.",
          "ranges": "3 1000; 1000; 3"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "8\n90\n90\n270\n90\n90\n90\n270\n90",
            "output": "0 0\n2 0\n2 1\n3 1\n3 2\n1 2\n1 1\n0 1",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03876.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03876"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03877",
        "title": "Consider all integers between 1 and 2N, inclusive.",
        "description": "Score : 1500 points Problem Statement\nConsider all integers between 1 and 2N, inclusive.\nSnuke wants to divide these integers into N pairs such that:\n\nEach integer between 1 and 2N is contained in exactly one of the pairs.\nIn exactly A pairs, the difference between the two integers is 1.\nIn exactly B pairs, the difference between the two integers is 2.\nIn exactly C pairs, the difference between the two integers is 3.\n\nNote that the constraints guarantee that N = A + B + C, thus no pair can have the difference of 4 or more.\nCompute the number of ways to do this, modulo 10^9+7. Consider all integers between 1 and 2N, inclusive.\nSnuke wants to divide these integers into N pairs such that: Note that the constraints guarantee that N = A + B + C, thus no pair can have the difference of 4 or more. Compute the number of ways to do this, modulo 10^9+7. Print the answer. There are two possibilities: 1-2, 3-5, 4-6 or 1-3, 2-4, 5-6. #nck {\n      width: 30px;\n      height: auto;\n   } Consider all integers between 1 and 2N, inclusive.\nSnuke wants to divide these integers into N pairs such that: Each integer between 1 and 2N is contained in exactly one of the pairs.\nIn exactly A pairs, the difference between the two integers is 1.\nIn exactly B pairs, the difference between the two integers is 2.\nIn exactly C pairs, the difference between the two integers is 3. Note that the constraints guarantee that N = A + B + C, thus no pair can have the difference of 4 or more. Compute the number of ways to do this, modulo 10^9+7.",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03877.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 5000\n0 ≤ A, B, C\nA + B + C = N",
          "ranges": "1 5000; 5000; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 1 2 0",
            "output": "2 There are two possibilities: 1-2, 3-5, 4-6 or 1-3, 2-4, 5-6.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03877.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03877"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03878",
        "title": "There are N computers and N sockets in a one-dimensional world.",
        "description": "Score : 500 points Problem Statement\nThere are N computers and N sockets in a one-dimensional world.\nThe coordinate of the i-th computer is a_i, and the coordinate of the i-th socket is b_i.\nIt is guaranteed that these 2N coordinates are pairwise distinct.\nSnuke wants to connect each computer to a socket using a cable.\nEach socket can be connected to only one computer.\nIn how many ways can he minimize the total length of the cables?\nCompute the answer modulo 10^9+7. There are N computers and N sockets in a one-dimensional world.\nThe coordinate of the i-th computer is a_i, and the coordinate of the i-th socket is b_i.\nIt is guaranteed that these 2N coordinates are pairwise distinct. Snuke wants to connect each computer to a socket using a cable.\nEach socket can be connected to only one computer. In how many ways can he minimize the total length of the cables?\nCompute the answer modulo 10^9+7. Print the number of ways to minimize the total length of the cables, modulo 10^9+7. There are two optimal connections: 0-20, 10-30 and 0-30, 10-20.\nIn both connections the total length of the cables is 40. #nck {\n      width: 30px;\n      height: auto;\n   } There are N computers and N sockets in a one-dimensional world.\nThe coordinate of the i-th computer is a_i, and the coordinate of the i-th socket is b_i.\nIt is guaranteed that these 2N coordinates are pairwise distinct. Snuke wants to connect each computer to a socket using a cable.\nEach socket can be connected to only one computer. In how many ways can he minimize the total length of the cables?\nCompute the answer modulo 10^9+7.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03878.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10^5\n0 ≤ a_i, b_i ≤ 10^9\nThe coordinates are integers.\nThe coordinates are pairwise distinct.",
          "ranges": "1 10; 10; 10; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\n0\n10\n20\n30",
            "output": "2 There are two optimal connections: 0-20, 10-30 and 0-30, 10-20.\nIn both connections the total length of the cables is 40.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03878.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03878"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03879",
        "title": "Snuke received a triangle as a birthday present.",
        "description": "Score : 500 points Problem Statement\nSnuke received a triangle as a birthday present.\nThe coordinates of the three vertices were (x_1, y_1), (x_2, y_2), and (x_3, y_3).\nHe wants to draw two circles with the same radius inside the triangle such that the two circles do not overlap (but they may touch).\nCompute the maximum possible radius of the circles. Snuke received a triangle as a birthday present.\nThe coordinates of the three vertices were (x_1, y_1), (x_2, y_2), and (x_3, y_3). He wants to draw two circles with the same radius inside the triangle such that the two circles do not overlap (but they may touch).\nCompute the maximum possible radius of the circles. Print the maximum possible radius of the circles.\nThe absolute error or the relative error must be at most 10^{-9}. #nck {\n      width: 30px;\n      height: auto;\n   } Snuke received a triangle as a birthday present.\nThe coordinates of the three vertices were (x_1, y_1), (x_2, y_2), and (x_3, y_3). He wants to draw two circles with the same radius inside the triangle such that the two circles do not overlap (but they may touch).\nCompute the maximum possible radius of the circles.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "geometry",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03879.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0 ≤ x_i, y_i ≤ 1000\nThe coordinates are integers.\nThe three points are not on the same line.",
          "ranges": "1000; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "0 0\n1 1\n2 0",
            "output": "0.292893218813",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03879.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03879"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03880",
        "title": "A cheetah and a cheater are going to play the game of Nim.",
        "description": "Score : 500 points Problem Statement\nA cheetah and a cheater are going to play the game of Nim.\nIn this game they use N piles of stones.\nInitially the i-th pile contains a_i stones.\nThe players take turns alternately, and the cheetah plays first.\nIn each turn, the player chooses one of the piles, and takes one or more stones from the pile.\nThe player who can't make a move loses.\nHowever, before the game starts, the cheater wants to cheat a bit to make sure that he can win regardless of the moves by the cheetah.\nFrom each pile, the cheater takes zero or one stone and eats it before the game.\nIn case there are multiple ways to guarantee his winning, he wants to minimize the number of stones he eats.\nCompute the number of stones the cheater will eat.\nIn case there is no way for the cheater to win the game even with the cheating, print -1 instead. A cheetah and a cheater are going to play the game of Nim.\nIn this game they use N piles of stones.\nInitially the i-th pile contains a_i stones.\nThe players take turns alternately, and the cheetah plays first.\nIn each turn, the player chooses one of the piles, and takes one or more stones from the pile.\nThe player who can't make a move loses. However, before the game starts, the cheater wants to cheat a bit to make sure that he can win regardless of the moves by the cheetah.\nFrom each pile, the cheater takes zero or one stone and eats it before the game.\nIn case there are multiple ways to guarantee his winning, he wants to minimize the number of stones he eats. Compute the number of stones the cheater will eat.\nIn case there is no way for the cheater to win the game even with the cheating, print -1 instead. Print the answer. The only way for the cheater to win the game is to take stones from all piles and eat them. #nck {\n      width: 30px;\n      height: auto;\n   } A cheetah and a cheater are going to play the game of Nim.\nIn this game they use N piles of stones.\nInitially the i-th pile contains a_i stones.\nThe players take turns alternately, and the cheetah plays first.\nIn each turn, the player chooses one of the piles, and takes one or more stones from the pile.\nThe player who can't make a move loses. However, before the game starts, the cheater wants to cheat a bit to make sure that he can win regardless of the moves by the cheetah.\nFrom each pile, the cheater takes zero or one stone and eats it before the game.\nIn case there are multiple ways to guarantee his winning, he wants to minimize the number of stones he eats. Compute the number of stones the cheater will eat.\nIn case there is no way for the cheater to win the game even with the cheating, print -1 instead.",
        "difficulty": "Hard",
        "category": "Simulation",
        "tags": [
          "math",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03880.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10^5\n2 ≤ a_i ≤ 10^9",
          "ranges": "1 10; 2 10; 10; 10; 1; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n2\n3\n4",
            "output": "3 The only way for the cheater to win the game is to take stones from all piles and eat them.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03880.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03880"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03881",
        "title": "There are two (6-sided) dice: a red die and a blue die.",
        "description": "Score : 1000 points Problem Statement\nThere are two (6-sided) dice: a red die and a blue die.\nWhen a red die is rolled, it shows i with probability p_i percents, and when a blue die is rolled, it shows j with probability q_j percents.\nPetr and tourist are playing the following game.\nBoth players know the probabilistic distributions of the two dice.\nFirst, Petr chooses a die in his will (without showing it to tourist), rolls it, and tells tourist the number it shows.\nThen, tourist guesses the color of the chosen die.\nIf he guesses the color correctly, tourist wins. Otherwise Petr wins.\nIf both players play optimally, what is the probability that tourist wins the game? There are two (6-sided) dice: a red die and a blue die.\nWhen a red die is rolled, it shows i with probability p_i percents, and when a blue die is rolled, it shows j with probability q_j percents. Petr and tourist are playing the following game.\nBoth players know the probabilistic distributions of the two dice.\nFirst, Petr chooses a die in his will (without showing it to tourist), rolls it, and tells tourist the number it shows.\nThen, tourist guesses the color of the chosen die.\nIf he guesses the color correctly, tourist wins. Otherwise Petr wins. If both players play optimally, what is the probability that tourist wins the game? Print the probability that tourist wins.\nThe absolute error or the relative error must be at most 10^{-9}. tourist can always win the game: If the number is at most 4, the color is definitely red. Otherwise the color is definitely blue. #nck {\n      width: 30px;\n      height: auto;\n   } There are two (6-sided) dice: a red die and a blue die.\nWhen a red die is rolled, it shows i with probability p_i percents, and when a blue die is rolled, it shows j with probability q_j percents. Petr and tourist are playing the following game.\nBoth players know the probabilistic distributions of the two dice.\nFirst, Petr chooses a die in his will (without showing it to tourist), rolls it, and tells tourist the number it shows.\nThen, tourist guesses the color of the chosen die.\nIf he guesses the color correctly, tourist wins. Otherwise Petr wins. If both players play optimally, what is the probability that tourist wins the game?",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "math",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03881.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "0 ≤ p_i, q_i ≤ 100\np_1 + ... + p_6 = q_1 + ... + q_6 = 100\nAll values in the input are integers.",
          "ranges": "100; 100; 0; 6; 6"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "25 25 25 25 0 0\n0 0 0 0 50 50",
            "output": "1.000000000000 tourist can always win the game: If the number is at most 4, the color is definitely red. Otherwise the color is definitely blue.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03881.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03881"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03882",
        "title": "There are N cities in a two-dimensional plane.",
        "description": "Score : 1000 points Problem Statement\nThere are N cities in a two-dimensional plane.\nThe coordinates of the i-th city is (x_i, y_i).\nInitially, the amount of water stored in the i-th city is a_i liters.\nSnuke can carry any amount of water from a city to another city.\nHowever, water leaks out a bit while he carries it.\nIf he carries l liters of water from the s-th city to the t-th city, only max(l-d_{s,t}, 0) liters of water remains when he arrives at the destination.\nHere d_{s,t} denotes the (Euclidean) distance between the s-th city and the t-th city.\nHe can perform arbitrary number of operations of this type.\nSnuke wants to maximize the minimum amount of water among the N cities.\nFind the maximum X such that he can distribute at least X liters of water to each city. There are N cities in a two-dimensional plane.\nThe coordinates of the i-th city is (x_i, y_i).\nInitially, the amount of water stored in the i-th city is a_i liters. Snuke can carry any amount of water from a city to another city.\nHowever, water leaks out a bit while he carries it.\nIf he carries l liters of water from the s-th city to the t-th city, only max(l-d_{s,t}, 0) liters of water remains when he arrives at the destination.\nHere d_{s,t} denotes the (Euclidean) distance between the s-th city and the t-th city.\nHe can perform arbitrary number of operations of this type. Snuke wants to maximize the minimum amount of water among the N cities.\nFind the maximum X such that he can distribute at least X liters of water to each city. Print the maximum of the minimum amount of water among the N cities.\nThe absolute error or the relative error must be at most 10^{-9}. The optimal solution is to carry 3.5 liters of water from the 1st city to the 2nd city.\nAfter the operation, both the 1st and the 2nd cities will have 6.5 liters of water, and the 3rd city will have 8 liters of water. #nck {\n      width: 30px;\n      height: auto;\n   } There are N cities in a two-dimensional plane.\nThe coordinates of the i-th city is (x_i, y_i).\nInitially, the amount of water stored in the i-th city is a_i liters. Snuke can carry any amount of water from a city to another city.\nHowever, water leaks out a bit while he carries it.\nIf he carries l liters of water from the s-th city to the t-th city, only max(l-d_{s,t}, 0) liters of water remains when he arrives at the destination.\nHere d_{s,t} denotes the (Euclidean) distance between the s-th city and the t-th city.\nHe can perform arbitrary number of operations of this type. Snuke wants to maximize the minimum amount of water among the N cities.\nFind the maximum X such that he can distribute at least X liters of water to each city.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03882.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 15\n0 ≤ x_i, y_i, a_i ≤ 10^9\nAll values in the input are integers.\nNo two cities are at the same position.",
          "ranges": "1 15; 15; 10; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n0 0 10\n2 0 5\n0 5 8",
            "output": "6.500000000000 The optimal solution is to carry 3.5 liters of water from the 1st city to the 2nd city.\nAfter the operation, both the 1st and the 2nd cities will have 6.5 liters of water, and the 3rd city will have 8 liters of water.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03882.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03882"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03883",
        "title": "Snuke received N intervals as a birthday present.",
        "description": "Score : 1000 points Problem Statement\nSnuke received N intervals as a birthday present.\nThe i-th interval was [-L_i, R_i].\nIt is guaranteed that both L_i and R_i are positive.\nIn other words, the origin is strictly inside each interval.\nSnuke doesn't like overlapping intervals, so he decided to move some intervals.\nFor any positive integer d, if he pays d dollars, he can choose one of the intervals and move it by the distance of d.\nThat is, if the chosen segment is [a, b], he can change it to either [a+d, b+d] or [a-d, b-d].\nHe can repeat this type of operation arbitrary number of times.\nAfter the operations, the intervals must be pairwise disjoint (however, they may touch at a point).\nFormally, for any two intervals, the length of the intersection must be zero.\nCompute the minimum cost required to achieve his goal. Snuke received N intervals as a birthday present.\nThe i-th interval was [-L_i, R_i].\nIt is guaranteed that both L_i and R_i are positive.\nIn other words, the origin is strictly inside each interval. Snuke doesn't like overlapping intervals, so he decided to move some intervals.\nFor any positive integer d, if he pays d dollars, he can choose one of the intervals and move it by the distance of d.\nThat is, if the chosen segment is [a, b], he can change it to either [a+d, b+d] or [a-d, b-d]. He can repeat this type of operation arbitrary number of times.\nAfter the operations, the intervals must be pairwise disjoint (however, they may touch at a point).\nFormally, for any two intervals, the length of the intersection must be zero. Compute the minimum cost required to achieve his goal. Print the minimum cost required to achieve his goal. One optimal solution is as follows: The total cost is 8 + 1 + 2 + 11 = 22 dollars. #nck {\n      width: 30px;\n      height: auto;\n   } Snuke received N intervals as a birthday present.\nThe i-th interval was [-L_i, R_i].\nIt is guaranteed that both L_i and R_i are positive.\nIn other words, the origin is strictly inside each interval. Snuke doesn't like overlapping intervals, so he decided to move some intervals.\nFor any positive integer d, if he pays d dollars, he can choose one of the intervals and move it by the distance of d.\nThat is, if the chosen segment is [a, b], he can change it to either [a+d, b+d] or [a-d, b-d]. He can repeat this type of operation arbitrary number of times.\nAfter the operations, the intervals must be pairwise disjoint (however, they may touch at a point).\nFormally, for any two intervals, the length of the intersection must be zero. Compute the minimum cost required to achieve his goal.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03883.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 5000\n1 ≤ L_i, R_i ≤ 10^9\nAll values in the input are integers.",
          "ranges": "1 5000; 5000; 10; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n2 7\n2 5\n4 1\n7 5",
            "output": "22 One optimal solution is as follows: Move the interval [-2, 7] to [6, 15] with 8 dollars\nMove the interval [-2, 5] to [-1, 6] with 1 dollars\nMove the interval [-4, 1] to [-6, -1] with 2 dollars\nMove the interval [-7, 5] to [-18, -6] with 11 dollars The total cost is 8 + 1 + 2 + 11 = 22 dollars.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03883.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03883"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03884",
        "title": "Welcome to CODE FESTIVAL 2016!",
        "description": "Score : 1000 points Problem Statement\nWelcome to CODE FESTIVAL 2016!\nIn order to celebrate this contest, find a string s that satisfies the following conditions:\n\nThe length of s is between 1 and 5000, inclusive.\ns consists of uppercase letters.\ns contains exactly K occurrences of the string \"FESTIVAL\" as a subsequence.\nIn other words, there are exactly K tuples of integers (i_0, i_1, ..., i_7) such that 0 ≤ i_0 < i_1 < ... < i_7 ≤ |s|-1 and s[i_0]='F', s[i_1]='E', ..., s[i_7]='L'.\n\nIt can be proved that under the given constraints, the solution always exists.\nIn case there are multiple possible solutions, you can output any. Welcome to CODE FESTIVAL 2016!\nIn order to celebrate this contest, find a string s that satisfies the following conditions: It can be proved that under the given constraints, the solution always exists.\nIn case there are multiple possible solutions, you can output any. Print a string that satisfies the conditions. #nck {\n      width: 30px;\n      height: auto;\n   } Welcome to CODE FESTIVAL 2016!\nIn order to celebrate this contest, find a string s that satisfies the following conditions: The length of s is between 1 and 5000, inclusive.\ns consists of uppercase letters.\ns contains exactly K occurrences of the string \"FESTIVAL\" as a subsequence.\nIn other words, there are exactly K tuples of integers (i_0, i_1, ..., i_7) such that 0 ≤ i_0 < i_1 < ... < i_7 ≤ |s|-1 and s[i_0]='F', s[i_1]='E', ..., s[i_7]='L'. It can be proved that under the given constraints, the solution always exists.\nIn case there are multiple possible solutions, you can output any.",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "string",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03884.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ K ≤ 10^{18}",
          "ranges": "1 10; 10; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "7",
            "output": "FESSSSSSSTIVAL",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03884.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03884"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03885",
        "title": "Snuke received two matrices A and B as birthday presents.",
        "description": "Score : 1500 points Problem Statement\nSnuke received two matrices A and B as birthday presents.\nEach of the matrices is an N by N matrix that consists of only 0 and 1.\nThen he computed the product of the two matrices, C = AB.\nSince he performed all computations in modulo two, C was also an N by N matrix that consists of only 0 and 1.\nFor each 1 ≤ i, j ≤ N, you are given c_{i, j}, the (i, j)-element of the matrix C.\nHowever, Snuke accidentally ate the two matrices A and B, and now he only knows C.\nCompute the number of possible (ordered) pairs of the two matrices A and B, modulo 10^9+7. Snuke received two matrices A and B as birthday presents.\nEach of the matrices is an N by N matrix that consists of only 0 and 1. Then he computed the product of the two matrices, C = AB.\nSince he performed all computations in modulo two, C was also an N by N matrix that consists of only 0 and 1.\nFor each 1 ≤ i, j ≤ N, you are given c_{i, j}, the (i, j)-element of the matrix C. However, Snuke accidentally ate the two matrices A and B, and now he only knows C.\nCompute the number of possible (ordered) pairs of the two matrices A and B, modulo 10^9+7. Print the number of possible (ordered) pairs of two matrices A and B (modulo 10^9+7). #nck {\n      width: 30px;\n      height: auto;\n   } Snuke received two matrices A and B as birthday presents.\nEach of the matrices is an N by N matrix that consists of only 0 and 1. Then he computed the product of the two matrices, C = AB.\nSince he performed all computations in modulo two, C was also an N by N matrix that consists of only 0 and 1.\nFor each 1 ≤ i, j ≤ N, you are given c_{i, j}, the (i, j)-element of the matrix C. However, Snuke accidentally ate the two matrices A and B, and now he only knows C.\nCompute the number of possible (ordered) pairs of the two matrices A and B, modulo 10^9+7.",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03885.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 300\nc_{i, j} is either 0 or 1.",
          "ranges": "1 300; 300; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\n0 1\n1 0",
            "output": "6",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03885.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03885"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03886",
        "title": "Construct an N-gon that satisfies the following conditions:",
        "description": "Score : 1500 points Problem Statement\nConstruct an N-gon that satisfies the following conditions:\n\nThe polygon is simple (see notes for the definition).\nEach edge of the polygon is parallel to one of the coordinate axes.\nEach coordinate is an integer between 0 and 10^9, inclusive.\nThe vertices are numbered 1 through N in counter-clockwise order.\nThe internal angle at the i-th vertex is exactly a_i degrees.\n\nIn case there are multiple possible answers, you can output any. Construct an N-gon that satisfies the following conditions: In case there are multiple possible answers, you can output any. NotesA polygon is called simple if each edge has a positive length, and no two edges have a common point (except for adjacent edges touching at a vertex). A polygon is called simple if each edge has a positive length, and no two edges have a common point (except for adjacent edges touching at a vertex). In case the answer exists, print the answer in the following format: Here (x_i, y_i) are the coordinates of the i-th vertex. In case the answer doesn't exist, print a single -1. #nck {\n      width: 30px;\n      height: auto;\n   } Construct an N-gon that satisfies the following conditions: The polygon is simple (see notes for the definition).\nEach edge of the polygon is parallel to one of the coordinate axes.\nEach coordinate is an integer between 0 and 10^9, inclusive.\nThe vertices are numbered 1 through N in counter-clockwise order.\nThe internal angle at the i-th vertex is exactly a_i degrees. In case there are multiple possible answers, you can output any.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03886.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3 ≤ N ≤ 1000\na_i is either 90 or 270.",
          "ranges": "3 1000; 1000; 3"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "8\n90\n90\n270\n90\n90\n90\n270\n90",
            "output": "0 0\n2 0\n2 1\n3 1\n3 2\n1 2\n1 1\n0 1",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03886.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03886"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03887",
        "title": "Consider all integers between 1 and 2N, inclusive.",
        "description": "Score : 1500 points Problem Statement\nConsider all integers between 1 and 2N, inclusive.\nSnuke wants to divide these integers into N pairs such that:\n\nEach integer between 1 and 2N is contained in exactly one of the pairs.\nIn exactly A pairs, the difference between the two integers is 1.\nIn exactly B pairs, the difference between the two integers is 2.\nIn exactly C pairs, the difference between the two integers is 3.\n\nNote that the constraints guarantee that N = A + B + C, thus no pair can have the difference of 4 or more.\nCompute the number of ways to do this, modulo 10^9+7. Consider all integers between 1 and 2N, inclusive.\nSnuke wants to divide these integers into N pairs such that: Note that the constraints guarantee that N = A + B + C, thus no pair can have the difference of 4 or more. Compute the number of ways to do this, modulo 10^9+7. Print the answer. There are two possibilities: 1-2, 3-5, 4-6 or 1-3, 2-4, 5-6. #nck {\n      width: 30px;\n      height: auto;\n   } Consider all integers between 1 and 2N, inclusive.\nSnuke wants to divide these integers into N pairs such that: Each integer between 1 and 2N is contained in exactly one of the pairs.\nIn exactly A pairs, the difference between the two integers is 1.\nIn exactly B pairs, the difference between the two integers is 2.\nIn exactly C pairs, the difference between the two integers is 3. Note that the constraints guarantee that N = A + B + C, thus no pair can have the difference of 4 or more. Compute the number of ways to do this, modulo 10^9+7.",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03887.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 5000\n0 ≤ A, B, C\nA + B + C = N",
          "ranges": "1 5000; 5000; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 1 2 0",
            "output": "2 There are two possibilities: 1-2, 3-5, 4-6 or 1-3, 2-4, 5-6.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03887.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03887"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03936",
        "title": "One day, square1001 puts $250$ bombs in this field. In each cell, there is 1 or 0 bomb.",
        "description": "There is a $50 \\times 50$ field. The cell at $i$-th row and $j$-th column is denoted $(i, j)$ (0-indexed). One day, square1001 puts $250$ bombs in this field. In each cell, there is 1 or 0 bomb. You want to know where the bombs are by asking some questions. You can ask this question many times. You can ask the number of bombs in the rectangular area in which upper-left cell is $(a, b)$ and lower-right cell is $(c, d)$. Please find all bombs' positions asking as few questions as possible. Note: This problem Input/Output type is special. Please read Input/Output. If you want to use scanf/printf , you have to write fflush(stdout) .",
        "difficulty": "Hard",
        "category": "Implementation",
        "tags": [
          "math",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03936.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "$H, W = 50$\n$N = 250$\n$1,000,000,000 \\le K \\le 1,000,010,000$ ($K$ is random)",
          "ranges": "50; 250"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "In the case of the following arrangement, this input / output is conceivable. This case is $H,W=4$, so this example is not include in testcases. H=4, W=4, N=4\n1001\n0000\n0010\n0100 Example of Input・Output Input from program\nOutput\n\n\n4 4 4 1000000007\n \n\n\n \n? 0 0 0 1\n\n\n1\n \n\n\n \n? 0 1 0 2\n\n\n0\n \n\n\n \n? 0 3 1 3\n\n\n1\n \n\n\n \n? 2 1 3 2\n\n\n2\n \n\n\n \n? 2 2 2 2\n\n\n1\n \n\n\n \n! 9225 These question is not always meaningful.",
            "output": "The first line input is following this format: $H \\ W \\ N \\ K$ $H, W$ is field size. In this problem, $H = 50$ and $W = 50$.\n$N$ is the number of bombs in the field. In this problem, $N = 250$.\n$K$ is modulo. This integer uses to answer the state of the field. After this input, You can ask some questions, following this output format: $? \\ a \\ b \\ c \\ d$ It means that you want to ask the number of bombs in the rectangular area which upper-left cell is $(a, b)$ and lower-right cell is $(c, d)$. You can know the value of the question, from input in this format: $p$ $p$ is the result of your question. Finally, you have to output the answer following this format: $! \\ ans$ The value of $ans$ is $\\sum_{i=0}^{H-1} \\sum_{j=0}^{W-1} r_{i, j} 2^{iW + j}$ mod $K$.\n\t\t\t\t\t\t\tNote: $r_{i, j}$ is the number of bombs in cell $(i, j)$.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03936.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03936"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03940",
        "title": "Problem Statement",
        "description": "Score : 1200 points Problem Statement\nImagine a game played on a line. Initially, the player is located at position 0 with N candies in his possession, and the exit is at position E. There are also N bears in the game. The i-th bear is located at x_i. The maximum moving speed of the player is 1 while the bears do not move at all.\nWhen the player gives a candy to a bear, it will provide a coin after T units of time. More specifically, if the i-th bear is given a candy at time t, it will put a coin at its position at time t+T. The purpose of this game is to give candies to all the bears, pick up all the coins, and go to the exit. Note that the player can only give a candy to a bear if the player is at the exact same position of the bear. Also, each bear will only produce a coin once. If the player visits the position of a coin after or at the exact same time that the coin is put down, the player can pick up the coin. Coins do not disappear until collected by the player.\nShik is an expert of this game. He can give candies to bears and pick up coins instantly. You are given the configuration of the game. Please calculate the minimum time Shik needs to collect all the coins and go to the exit. Imagine a game played on a line. Initially, the player is located at position 0 with N candies in his possession, and the exit is at position E. There are also N bears in the game. The i-th bear is located at x_i. The maximum moving speed of the player is 1 while the bears do not move at all. When the player gives a candy to a bear, it will provide a coin after T units of time. More specifically, if the i-th bear is given a candy at time t, it will put a coin at its position at time t+T. The purpose of this game is to give candies to all the bears, pick up all the coins, and go to the exit. Note that the player can only give a candy to a bear if the player is at the exact same position of the bear. Also, each bear will only produce a coin once. If the player visits the position of a coin after or at the exact same time that the coin is put down, the player can pick up the coin. Coins do not disappear until collected by the player. Shik is an expert of this game. He can give candies to bears and pick up coins instantly. You are given the configuration of the game. Please calculate the minimum time Shik needs to collect all the coins and go to the exit. Partial Scores\nIn test cases worth 600 points, N \\leq 2,000. Print an integer denoting the answer. The optimal strategy is to wait for the coin after treating each bear. The total time spent on waiting is 3 and moving is 9. So the answer is 3 + 9 = 12. #nck {\n      width: 30px;\n      height: auto;\n   } Imagine a game played on a line. Initially, the player is located at position 0 with N candies in his possession, and the exit is at position E. There are also N bears in the game. The i-th bear is located at x_i. The maximum moving speed of the player is 1 while the bears do not move at all. When the player gives a candy to a bear, it will provide a coin after T units of time. More specifically, if the i-th bear is given a candy at time t, it will put a coin at its position at time t+T. The purpose of this game is to give candies to all the bears, pick up all the coins, and go to the exit. Note that the player can only give a candy to a bear if the player is at the exact same position of the bear. Also, each bear will only produce a coin once. If the player visits the position of a coin after or at the exact same time that the coin is put down, the player can pick up the coin. Coins do not disappear until collected by the player. Shik is an expert of this game. He can give candies to bears and pick up coins instantly. You are given the configuration of the game. Please calculate the minimum time Shik needs to collect all the coins and go to the exit.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "sorting",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03940.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq N \\leq 100,000\n1 \\leq T, E \\leq 10^9\n0 < x_i < E\nx_i < x_{i+1} for 1 \\leq i < N\nAll input values are integers.",
          "ranges": "0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 9 1\n1 3 8",
            "output": "12 The optimal strategy is to wait for the coin after treating each bear. The total time spent on waiting is 3 and moving is 9. So the answer is 3 + 9 = 12.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03940.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03940"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03941",
        "title": "During the whole travel, all roads of the country must be passed through exactly twice.",
        "description": "Score : 1400 points Problem Statement\nIn the country there are N cities numbered 1 through N, which are connected by N-1 bidirectional roads. In terms of graph theory, there is a unique simple path connecting every pair of cities. That is, the N cities form a tree. Besides, if we view city 1 as the root of this tree, the tree will be a full binary tree (a tree is a full binary tree if and only if every non-leaf vertex in the tree has exactly two children). Roads are numbered 1 through N-1. The i-th road connects city i+1 and city a_i. When you pass through road i, the toll you should pay is v_i (if v_i is 0, it indicates the road does not require a toll).\nA company in city 1 will give each employee a family travel and cover a large part of the tolls incurred. Each employee can design the travel by themselves. That is, which cities he/she wants to visit in each day and which city to stay at each night. However, there are some constraints. More details are as follows:\n\n\nThe travel must start and end at city 1. If there are m leaves in the tree formed by the cities, then the number of days in the travel must be m+1. At the end of each day, except for the last day, the employee must stay at some hotel in a leaf city. During the whole travel, the employee must stay at all leaf cities exactly once.\n\n\nDuring the whole travel, all roads of the country must be passed through exactly twice.\n\n\nThe amount that the employee must pay for tolls by him/herself is the maximum total toll incurred in a single day during the travel, except the first day and the last day. The remaining tolls will be covered by the company.\n\n\nShik, as an employee of this company, has only one hope for his travel. He hopes that the amount he must pay for tolls by himself will be as small as possible. Please help Shik to design the travel which satisfies his hope. In the country there are N cities numbered 1 through N, which are connected by N-1 bidirectional roads. In terms of graph theory, there is a unique simple path connecting every pair of cities. That is, the N cities form a tree. Besides, if we view city 1 as the root of this tree, the tree will be a full binary tree (a tree is a full binary tree if and only if every non-leaf vertex in the tree has exactly two children). Roads are numbered 1 through N-1. The i-th road connects city i+1 and city a_i. When you pass through road i, the toll you should pay is v_i (if v_i is 0, it indicates the road does not require a toll). A company in city 1 will give each employee a family travel and cover a large part of the tolls incurred. Each employee can design the travel by themselves. That is, which cities he/she wants to visit in each day and which city to stay at each night. However, there are some constraints. More details are as follows: The travel must start and end at city 1. If there are m leaves in the tree formed by the cities, then the number of days in the travel must be m+1. At the end of each day, except for the last day, the employee must stay at some hotel in a leaf city. During the whole travel, the employee must stay at all leaf cities exactly once. During the whole travel, all roads of the country must be passed through exactly twice. The amount that the employee must pay for tolls by him/herself is the maximum total toll incurred in a single day during the travel, except the first day and the last day. The remaining tolls will be covered by the company. Shik, as an employee of this company, has only one hope for his travel. He hopes that the amount he must pay for tolls by himself will be as small as possible. Please help Shik to design the travel which satisfies his hope. Print an integer denoting the minimum amount Shik must pay by himself for tolls incurred during the travel. There are 4 leaves in the tree formed by the cities (cities 4, 5, 6, and 7), so the travel must be 5 days long. There are 4! = 24 possible arrangements of the leaf cities to stay during the travel, but some of them are invalid. For example, (4,5,6,7) and (6,7,5,4) are valid orders, but (5,6,7,4) is invalid because the route passes 4 times through the road connecting city 1 and city 2. The figure below shows the routes of the travel for these arrangements. For all valid orders, day 3 is the day with the maximum total incurred toll of 4, passing through 4 roads. The following figure shows the route of the travel for one possible arrangement of the stayed cities for the solution. Note that the tolls incurred in the first day and the last day are always covered by the company. #nck {\n      width: 30px;\n      height: auto;\n   } In the country there are N cities numbered 1 through N, which are connected by N-1 bidirectional roads. In terms of graph theory, there is a unique simple path connecting every pair of cities. That is, the N cities form a tree. Besides, if we view city 1 as the root of this tree, the tree will be a full binary tree (a tree is a full binary tree if and only if every non-leaf vertex in the tree has exactly two children). Roads are numbered 1 through N-1. The i-th road connects city i+1 and city a_i. When you pass through road i, the toll you should pay is v_i (if v_i is 0, it indicates the road does not require a toll). A company in city 1 will give each employee a family travel and cover a large part of the tolls incurred. Each employee can design the travel by themselves. That is, which cities he/she wants to visit in each day and which city to stay at each night. However, there are some constraints. More details are as follows: The travel must start and end at city 1. If there are m leaves in the tree formed by the cities, then the number of days in the travel must be m+1. At the end of each day, except for the last day, the employee must stay at some hotel in a leaf city. During the whole travel, the employee must stay at all leaf cities exactly once.\n\n\nDuring the whole travel, all roads of the country must be passed through exactly twice.\n\n\nThe amount that the employee must pay for tolls by him/herself is the maximum total toll incurred in a single day during the travel, except the first day and the last day. The remaining tolls will be covered by the company. Shik, as an employee of this company, has only one hope for his travel. He hopes that the amount he must pay for tolls by himself will be as small as possible. Please help Shik to design the travel which satisfies his hope.",
        "difficulty": "Hard",
        "category": "Trees & Graphs",
        "tags": [
          "math",
          "sorting",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03941.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2 < N < 131,072\n1 \\leq a_i \\leq i for all i\n0 \\leq v_i \\leq 131,072\nv_i is an integer\nThe given tree is a full binary tree",
          "ranges": "2 131; 131; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "7\n1 1\n1 1\n2 1\n2 1\n3 1\n3 1",
            "output": "4 There are 4 leaves in the tree formed by the cities (cities 4, 5, 6, and 7), so the travel must be 5 days long. There are 4! = 24 possible arrangements of the leaf cities to stay during the travel, but some of them are invalid. For example, (4,5,6,7) and (6,7,5,4) are valid orders, but (5,6,7,4) is invalid because the route passes 4 times through the road connecting city 1 and city 2. The figure below shows the routes of the travel for these arrangements. For all valid orders, day 3 is the day with the maximum total incurred toll of 4, passing through 4 roads.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03941.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03941"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03951",
        "title": "The length of the string is at least N.",
        "description": "Score : 200 points Problem StatementSnuke is interested in strings that satisfy the following conditions:\n\nThe length of the string is at least N.\nThe first N characters equal to the string s.\nThe last N characters equal to the string t.\n\nFind the length of the shortest string that satisfies the conditions. Snuke is interested in strings that satisfy the following conditions: Find the length of the shortest string that satisfies the conditions. Print the length of the shortest string that satisfies the conditions. The shortest string is abcde. The shortest string is az. The shortest string is expr. Snuke is interested in strings that satisfy the following conditions: The length of the string is at least N.\nThe first N characters equal to the string s.\nThe last N characters equal to the string t. Find the length of the shortest string that satisfies the conditions.",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "string"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03951.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤N≤100\nThe lengths of s and t are both N.\ns and t consist of lowercase English letters.",
          "ranges": "1 100; 100; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\nabc\ncde",
            "output": "5 The shortest string is abcde.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03951.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03951"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03952",
        "title": "The steps are numbered 1 through N from top to bottom.",
        "description": "Score : 400 points Problem StatementWe have a pyramid with N steps, built with blocks.\nThe steps are numbered 1 through N from top to bottom.\nFor each 1≤i≤N, step i consists of 2i-1 blocks aligned horizontally.\nThe pyramid is built so that the blocks at the centers of the steps are aligned vertically.\n\n\nA pyramid with N=4 steps\n\nSnuke wrote a permutation of (1, 2, ..., 2N-1) into the blocks of step N.\nThen, he wrote integers into all remaining blocks, under the following rule:\n\nThe integer written into a block b must be equal to the median of the three integers written into the three blocks directly under b, or to the lower left or lower right of b.\n\n\n\nWriting integers into the blocks\n\nAfterwards, he erased all integers written into the blocks.\nNow, he only remembers that the integer written into the block of step 1 was x.\nConstruct a permutation of (1, 2, ..., 2N-1) that could have been written into the blocks of step N, or declare that Snuke's memory is incorrect and such a permutation does not exist. We have a pyramid with N steps, built with blocks.\nThe steps are numbered 1 through N from top to bottom.\nFor each 1≤i≤N, step i consists of 2i-1 blocks aligned horizontally.\nThe pyramid is built so that the blocks at the centers of the steps are aligned vertically. A pyramid with N=4 steps A pyramid with N=4 steps Snuke wrote a permutation of (1, 2, ..., 2N-1) into the blocks of step N.\nThen, he wrote integers into all remaining blocks, under the following rule: Writing integers into the blocks Writing integers into the blocks Afterwards, he erased all integers written into the blocks.\nNow, he only remembers that the integer written into the block of step 1 was x. Construct a permutation of (1, 2, ..., 2N-1) that could have been written into the blocks of step N, or declare that Snuke's memory is incorrect and such a permutation does not exist. If no permutation of (1, 2, ..., 2N-1) could have been written into the blocks of step N, print No. Otherwise, print Yes in the first line, then print 2N-1 lines in addition. The i-th of these 2N-1 lines should contain the i-th element of a possible permutation. This case corresponds to the figure in the problem statement. No matter what permutation was written into the blocks of step N, the integer written into the block of step 1 would be 2. We have a pyramid with N steps, built with blocks.\nThe steps are numbered 1 through N from top to bottom.\nFor each 1≤i≤N, step i consists of 2i-1 blocks aligned horizontally.\nThe pyramid is built so that the blocks at the centers of the steps are aligned vertically. A pyramid with N=4 steps Snuke wrote a permutation of (1, 2, ..., 2N-1) into the blocks of step N.\nThen, he wrote integers into all remaining blocks, under the following rule: The integer written into a block b must be equal to the median of the three integers written into the three blocks directly under b, or to the lower left or lower right of b. Writing integers into the blocks Afterwards, he erased all integers written into the blocks.\nNow, he only remembers that the integer written into the block of step 1 was x. Construct a permutation of (1, 2, ..., 2N-1) that could have been written into the blocks of step N, or declare that Snuke's memory is incorrect and such a permutation does not exist.",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03952.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2≤N≤10^5\n1≤x≤2N-1",
          "ranges": "2 10; 1 2; 10; 2; 2; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4 4",
            "output": "Yes\n1\n6\n3\n7\n4\n5\n2 This case corresponds to the figure in the problem statement.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03952.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03952"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03953",
        "title": "The rabbits are conveniently numbered 1 through N.",
        "description": "Score : 800 points Problem StatementThere are N rabbits on a number line.\nThe rabbits are conveniently numbered 1 through N.\nThe coordinate of the initial position of rabbit i is x_i.\nThe rabbits will now take exercise on the number line, by performing sets described below.\nA set consists of M jumps. The j-th jump of a set is performed by rabbit a_j (2≤a_j≤N-1).\nFor this jump, either rabbit a_j-1 or rabbit a_j+1 is chosen with equal probability (let the chosen rabbit be rabbit x), then rabbit a_j will jump to the symmetric point of its current position with respect to rabbit x.\nThe rabbits will perform K sets in succession.\nFor each rabbit, find the expected value of the coordinate of its eventual position after K sets are performed. There are N rabbits on a number line.\nThe rabbits are conveniently numbered 1 through N.\nThe coordinate of the initial position of rabbit i is x_i. The rabbits will now take exercise on the number line, by performing sets described below.\nA set consists of M jumps. The j-th jump of a set is performed by rabbit a_j (2≤a_j≤N-1).\nFor this jump, either rabbit a_j-1 or rabbit a_j+1 is chosen with equal probability (let the chosen rabbit be rabbit x), then rabbit a_j will jump to the symmetric point of its current position with respect to rabbit x. The rabbits will perform K sets in succession.\nFor each rabbit, find the expected value of the coordinate of its eventual position after K sets are performed. Print N lines.\nThe i-th line should contain the expected value of the coordinate of the eventual position of rabbit i after K sets are performed.\nThe output is considered correct if the absolute or relative error is at most 10^{-9}. Rabbit 2 will perform the jump.\nIf rabbit 1 is chosen, the coordinate of the destination will be -2.\nIf rabbit 3 is chosen, the coordinate of the destination will be 4.\nThus, the expected value of the coordinate of the eventual position of rabbit 2 is 0.5×(-2)+0.5×4=1.0. x_i may not be distinct. There are N rabbits on a number line.\nThe rabbits are conveniently numbered 1 through N.\nThe coordinate of the initial position of rabbit i is x_i. The rabbits will now take exercise on the number line, by performing sets described below.\nA set consists of M jumps. The j-th jump of a set is performed by rabbit a_j (2≤a_j≤N-1).\nFor this jump, either rabbit a_j-1 or rabbit a_j+1 is chosen with equal probability (let the chosen rabbit be rabbit x), then rabbit a_j will jump to the symmetric point of its current position with respect to rabbit x. The rabbits will perform K sets in succession.\nFor each rabbit, find the expected value of the coordinate of its eventual position after K sets are performed.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "math",
          "geometry",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03953.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3≤N≤10^5\nx_i is an integer.\n|x_i|≤10^9\n1≤M≤10^5\n2≤a_j≤N-1\n1≤K≤10^{18}",
          "ranges": "3 10; 1 10; 1 10; 10; 10; 10; 3; 1; 2; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3\n-1 0 2\n1 1\n2",
            "output": "-1.0\n1.0\n2.0 Rabbit 2 will perform the jump.\nIf rabbit 1 is chosen, the coordinate of the destination will be -2.\nIf rabbit 3 is chosen, the coordinate of the destination will be 4.\nThus, the expected value of the coordinate of the eventual position of rabbit 2 is 0.5×(-2)+0.5×4=1.0.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03953.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03953"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03954",
        "title": "The steps are numbered 1 through N from top to bottom.",
        "description": "Score : 1300 points Problem StatementWe have a pyramid with N steps, built with blocks.\nThe steps are numbered 1 through N from top to bottom.\nFor each 1≤i≤N, step i consists of 2i-1 blocks aligned horizontally.\nThe pyramid is built so that the blocks at the centers of the steps are aligned vertically.\n\n\nA pyramid with N=4 steps\n\nSnuke wrote a permutation of (1, 2, ..., 2N-1) into the blocks of step N.\nThen, he wrote integers into all remaining blocks, under the following rule:\n\nThe integer written into a block b must be equal to the median of the three integers written into the three blocks directly under b, or to the lower left or lower right of b.\n\n\n\nWriting integers into the blocks\n\nAfterwards, he erased all integers written into the blocks.\nNow, he only remembers that the permutation written into the blocks of step N was (a_1, a_2, ..., a_{2N-1}).\nFind the integer written into the block of step 1. We have a pyramid with N steps, built with blocks.\nThe steps are numbered 1 through N from top to bottom.\nFor each 1≤i≤N, step i consists of 2i-1 blocks aligned horizontally.\nThe pyramid is built so that the blocks at the centers of the steps are aligned vertically. A pyramid with N=4 steps A pyramid with N=4 steps Snuke wrote a permutation of (1, 2, ..., 2N-1) into the blocks of step N.\nThen, he wrote integers into all remaining blocks, under the following rule: Writing integers into the blocks Writing integers into the blocks Afterwards, he erased all integers written into the blocks.\nNow, he only remembers that the permutation written into the blocks of step N was (a_1, a_2, ..., a_{2N-1}). Find the integer written into the block of step 1. Print the integer written into the block of step 1. This case corresponds to the figure in the problem statement. We have a pyramid with N steps, built with blocks.\nThe steps are numbered 1 through N from top to bottom.\nFor each 1≤i≤N, step i consists of 2i-1 blocks aligned horizontally.\nThe pyramid is built so that the blocks at the centers of the steps are aligned vertically. A pyramid with N=4 steps Snuke wrote a permutation of (1, 2, ..., 2N-1) into the blocks of step N.\nThen, he wrote integers into all remaining blocks, under the following rule: The integer written into a block b must be equal to the median of the three integers written into the three blocks directly under b, or to the lower left or lower right of b. Writing integers into the blocks Afterwards, he erased all integers written into the blocks.\nNow, he only remembers that the permutation written into the blocks of step N was (a_1, a_2, ..., a_{2N-1}). Find the integer written into the block of step 1.",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03954.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2≤N≤10^5\n(a_1, a_2, ..., a_{2N-1}) is a permutation of (1, 2, ..., 2N-1).",
          "ranges": "2 10; 10; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n1 6 3 7 4 5 2",
            "output": "4 This case corresponds to the figure in the problem statement.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03954.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03954"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03955",
        "title": "The cell at the i-th row and j-th column is denoted (i, j).",
        "description": "Score : 1500 points Problem StatementWe have a grid with 3 rows and N columns.\nThe cell at the i-th row and j-th column is denoted (i, j).\nInitially, each cell (i, j) contains the integer i+3j-3.\n\n\nA grid with N=5 columns\n\nSnuke can perform the following operation any number of times:\n\nChoose a 3×3 subrectangle of the grid. The placement of integers within the subrectangle is now rotated by 180°.\n\n\n\nAn example sequence of operations (each chosen subrectangle is colored blue)\n\nSnuke's objective is to manipulate the grid so that each cell (i, j) contains the integer a_{i,j}.\nDetermine whether it is achievable. We have a grid with 3 rows and N columns.\nThe cell at the i-th row and j-th column is denoted (i, j).\nInitially, each cell (i, j) contains the integer i+3j-3. A grid with N=5 columns A grid with N=5 columns Snuke can perform the following operation any number of times: An example sequence of operations (each chosen subrectangle is colored blue) An example sequence of operations (each chosen subrectangle is colored blue) Snuke's objective is to manipulate the grid so that each cell (i, j) contains the integer a_{i,j}.\nDetermine whether it is achievable. If Snuke's objective is achievable, print Yes. Otherwise, print No. This case corresponds to the figure in the problem statement. The objective is already achieved with the initial placement of the integers. We have a grid with 3 rows and N columns.\nThe cell at the i-th row and j-th column is denoted (i, j).\nInitially, each cell (i, j) contains the integer i+3j-3. A grid with N=5 columns Snuke can perform the following operation any number of times: Choose a 3×3 subrectangle of the grid. The placement of integers within the subrectangle is now rotated by 180°. An example sequence of operations (each chosen subrectangle is colored blue) Snuke's objective is to manipulate the grid so that each cell (i, j) contains the integer a_{i,j}.\nDetermine whether it is achievable.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "array",
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03955.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "5≤N≤10^5\n1≤a_{i,j}≤3N\nAll a_{i,j} are distinct.",
          "ranges": "5 10; 10; 5; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n9 6 15 12 1\n8 5 14 11 2\n7 4 13 10 3",
            "output": "Yes This case corresponds to the figure in the problem statement.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03955.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03955"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03956",
        "title": "The cell at the i-th row and j-th column is denoted (i, j).",
        "description": "Score : 1700 points Problem StatementWe have a grid with N rows and N columns.\nThe cell at the i-th row and j-th column is denoted (i, j).\nInitially, M of the cells are painted black, and all other cells are white.\nSpecifically, the cells (a_1, b_1), (a_2, b_2), ..., (a_M, b_M) are painted black.\nSnuke will try to paint as many white cells black as possible, according to the following rule:\n\nIf two cells (x, y) and (y, z) are both black and a cell (z, x) is white for integers 1≤x,y,z≤N, paint the cell (z, x) black.\n\nFind the number of black cells when no more white cells can be painted black. We have a grid with N rows and N columns.\nThe cell at the i-th row and j-th column is denoted (i, j). Initially, M of the cells are painted black, and all other cells are white.\nSpecifically, the cells (a_1, b_1), (a_2, b_2), ..., (a_M, b_M) are painted black. Snuke will try to paint as many white cells black as possible, according to the following rule: Find the number of black cells when no more white cells can be painted black. Print the number of black cells when no more white cells can be painted black. It is possible to paint one white cell black, as follows: It is possible to paint two white cells black, as follows: No white cells can be painted black. We have a grid with N rows and N columns.\nThe cell at the i-th row and j-th column is denoted (i, j). Initially, M of the cells are painted black, and all other cells are white.\nSpecifically, the cells (a_1, b_1), (a_2, b_2), ..., (a_M, b_M) are painted black. Snuke will try to paint as many white cells black as possible, according to the following rule: If two cells (x, y) and (y, z) are both black and a cell (z, x) is white for integers 1≤x,y,z≤N, paint the cell (z, x) black. Find the number of black cells when no more white cells can be painted black.",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03956.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤N≤10^5\n1≤M≤10^5\n1≤a_i,b_i≤N\nAll pairs (a_i, b_i) are distinct.",
          "ranges": "1 10; 1 10; 10; 10; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 2\n1 2\n2 3",
            "output": "3 It is possible to paint one white cell black, as follows: Since cells (1, 2) and (2, 3) are both black and a cell (3, 1) is white, paint the cell (3, 1) black.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03956.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03956"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03958",
        "title": "Mr. Takahashi would like to eat one cake per day, taking K days to eat them all.",
        "description": "Score : 200 points Problem StatementThere are K pieces of cakes.\nMr. Takahashi would like to eat one cake per day, taking K days to eat them all.\nThere are T types of cake, and the number of the cakes of type i (1 ≤ i ≤ T) is a_i.  \nEating the same type of cake two days in a row would be no fun,\nso Mr. Takahashi would like to decide the order for eating cakes that minimizes the number of days on which he has to eat the same type of cake as the day before.  \nCompute the minimum number of days on which the same type of cake as the previous day will be eaten. There are K pieces of cakes.\nMr. Takahashi would like to eat one cake per day, taking K days to eat them all. There are T types of cake, and the number of the cakes of type i (1 ≤ i ≤ T) is a_i. Eating the same type of cake two days in a row would be no fun,\nso Mr. Takahashi would like to decide the order for eating cakes that minimizes the number of days on which he has to eat the same type of cake as the day before. Compute the minimum number of days on which the same type of cake as the previous day will be eaten. Print the minimum number of days on which the same type of cake as the previous day will be eaten. For example, if Mr. Takahashi eats cakes in the order of 2, 1, 2, 3, 1, 3, 1, he can avoid eating the same type of cake as the previous day. There are 6 cakes.\nFor example, if Mr. Takahashi eats cakes in the order of 2, 3, 2, 2, 1, 2, he has to eat the same type of cake (i.e., type 2) as the previous day only on the fourth day.\nSince this is the minimum number, the answer is 1. Since Mr. Takahashi has only one type of cake, he has no choice but to eat the same type of cake as the previous day from the second day and after. There are K pieces of cakes.\nMr. Takahashi would like to eat one cake per day, taking K days to eat them all. There are T types of cake, and the number of the cakes of type i (1 ≤ i ≤ T) is a_i. Eating the same type of cake two days in a row would be no fun,\nso Mr. Takahashi would like to decide the order for eating cakes that minimizes the number of days on which he has to eat the same type of cake as the day before. Compute the minimum number of days on which the same type of cake as the previous day will be eaten.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03958.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ K ≤ 10000\n1 ≤ T ≤ 100\n1 ≤ a_i ≤ 100\na_1 + a_2 + ... + a_T = K",
          "ranges": "1 10000; 1 100; 1 100; 10000; 100; 100; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "7 3\n3 2 2",
            "output": "0 For example, if Mr. Takahashi eats cakes in the order of 2, 1, 2, 3, 1, 3, 1, he can avoid eating the same type of cake as the previous day.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03958.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03958"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03959",
        "title": "Mr. Takahashi traversed the range from the west and Mr. Aoki from the east.",
        "description": "Score : 400 points Problem StatementMountaineers Mr. Takahashi and Mr. Aoki recently trekked across a certain famous mountain range.\nThe mountain range consists of N mountains, extending from west to east in a straight line as Mt. 1, Mt. 2, ..., Mt. N.\nMr. Takahashi traversed the range from the west and Mr. Aoki from the east.  \nThe height of Mt. i is h_i, but they have forgotten the value of each h_i.\nInstead, for each i (1 ≤ i ≤ N), they recorded the maximum height of the mountains climbed up to the time they reached the peak of Mt. i (including Mt. i).\nMr. Takahashi's record is T_i and Mr. Aoki's record is A_i.  \nWe know that the height of each mountain h_i is a positive integer.\nCompute the number of the possible sequences of the mountains' heights, modulo 10^9 + 7.\nNote that the records may be incorrect and thus there may be no possible sequence of the mountains' heights.\nIn such a case, output 0. Mountaineers Mr. Takahashi and Mr. Aoki recently trekked across a certain famous mountain range.\nThe mountain range consists of N mountains, extending from west to east in a straight line as Mt. 1, Mt. 2, ..., Mt. N.\nMr. Takahashi traversed the range from the west and Mr. Aoki from the east. The height of Mt. i is h_i, but they have forgotten the value of each h_i.\nInstead, for each i (1 ≤ i ≤ N), they recorded the maximum height of the mountains climbed up to the time they reached the peak of Mt. i (including Mt. i).\nMr. Takahashi's record is T_i and Mr. Aoki's record is A_i. We know that the height of each mountain h_i is a positive integer.\nCompute the number of the possible sequences of the mountains' heights, modulo 10^9 + 7. Note that the records may be incorrect and thus there may be no possible sequence of the mountains' heights.\nIn such a case, output 0. Print the number of possible sequences of the mountains' heights, modulo 10^9 + 7. The possible sequences of the mountains' heights are: for a total of four sequences. The records are contradictory, since Mr. Takahashi recorded 2 as the highest peak after climbing all the mountains but Mr. Aoki recorded 3. Don't forget to compute the number modulo 10^9 + 7. Some mountain ranges consist of only one mountain. Mountaineers Mr. Takahashi and Mr. Aoki recently trekked across a certain famous mountain range.\nThe mountain range consists of N mountains, extending from west to east in a straight line as Mt. 1, Mt. 2, ..., Mt. N.\nMr. Takahashi traversed the range from the west and Mr. Aoki from the east. The height of Mt. i is h_i, but they have forgotten the value of each h_i.\nInstead, for each i (1 ≤ i ≤ N), they recorded the maximum height of the mountains climbed up to the time they reached the peak of Mt. i (including Mt. i).\nMr. Takahashi's record is T_i and Mr. Aoki's record is A_i. We know that the height of each mountain h_i is a positive integer.\nCompute the number of the possible sequences of the mountains' heights, modulo 10^9 + 7. Note that the records may be incorrect and thus there may be no possible sequence of the mountains' heights.\nIn such a case, output 0.",
        "difficulty": "Hard",
        "category": "Implementation",
        "tags": [
          "array",
          "math",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03959.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 10^5\n1 ≤ T_i ≤ 10^9\n1 ≤ A_i ≤ 10^9\nT_i ≤ T_{i+1} (1 ≤ i ≤ N - 1)\nA_i ≥ A_{i+1} (1 ≤ i ≤ N - 1)",
          "ranges": "1 10; 1 10; 1 10; 10; 10; 10; 1; 1; 1; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5\n1 3 3 3 3\n3 3 2 2 2",
            "output": "4 The possible sequences of the mountains' heights are: 1, 3, 2, 2, 2 \n1, 3, 2, 1, 2 \n1, 3, 1, 2, 2 \n1, 3, 1, 1, 2 for a total of four sequences.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03959.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03959"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03960",
        "title": "Each block has a color represented by a lowercase English letter (a-z).",
        "description": "Score : 800 points Problem StatementMr. Takahashi has in his room an art object with H rows and W columns, made up of H \\times W blocks.\nEach block has a color represented by a lowercase English letter (a-z).\nThe color of the block at the i-th row and j-th column is c_{i,j}.  \nMr. Takahashi would like to dismantle the object, finding it a bit kitschy for his tastes.\nThe dismantling is processed by repeating the following operation:  \n\nChoose one of the W columns and push down that column one row.\nThe block at the bottom of that column disappears.\n\nEach time the operation is performed, a cost is incurred.\nSince blocks of the same color have a property to draw each other together, the cost of the operation is the number of the pairs of blocks (p, q) such that:\n\nThe block p is in the selected column.\nThe two blocks p and q are horizontally adjacent (before pushing down the column).\nThe two blocks p and q have the same color.\n\nMr. Takahashi dismantles the object by repeating the operation H \\times W times to get rid of all the blocks.\nCompute the minimum total cost to dismantle the object. Mr. Takahashi has in his room an art object with H rows and W columns, made up of H \\times W blocks.\nEach block has a color represented by a lowercase English letter (a-z).\nThe color of the block at the i-th row and j-th column is c_{i,j}. Mr. Takahashi would like to dismantle the object, finding it a bit kitschy for his tastes.\nThe dismantling is processed by repeating the following operation: Each time the operation is performed, a cost is incurred.\nSince blocks of the same color have a property to draw each other together, the cost of the operation is the number of the pairs of blocks (p, q) such that: Mr. Takahashi dismantles the object by repeating the operation H \\times W times to get rid of all the blocks.\nCompute the minimum total cost to dismantle the object. Partial Score\nIn test cases worth 300 points, W = 3. Print the minimum total cost to dismantle the object. For example, the total cost of 2 can be achieved by performing the operation as follows and this is the minimum value. The total cost of 0 can be achieved by first pushing down all blocks of the middle column, then all of the left column, and all of the right column. The total cost of 0 can be achieved by the following operations: Mr. Takahashi has in his room an art object with H rows and W columns, made up of H \\times W blocks.\nEach block has a color represented by a lowercase English letter (a-z).\nThe color of the block at the i-th row and j-th column is c_{i,j}. Mr. Takahashi would like to dismantle the object, finding it a bit kitschy for his tastes.\nThe dismantling is processed by repeating the following operation: Choose one of the W columns and push down that column one row.\nThe block at the bottom of that column disappears. Each time the operation is performed, a cost is incurred.\nSince blocks of the same color have a property to draw each other together, the cost of the operation is the number of the pairs of blocks (p, q) such that: The block p is in the selected column.\nThe two blocks p and q are horizontally adjacent (before pushing down the column).\nThe two blocks p and q have the same color. Mr. Takahashi dismantles the object by repeating the operation H \\times W times to get rid of all the blocks.\nCompute the minimum total cost to dismantle the object.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03960.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ H ≤ 300\n2 ≤ W ≤ 300\nAll characters c_{i,j} are lowercase English letters (a-z).",
          "ranges": "1 300; 2 300; 300; 300; 1; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 3\nrrr\nbrg",
            "output": "2 For example, the total cost of 2 can be achieved by performing the operation as follows and this is the minimum value.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03960.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03960"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03961",
        "title": "His memory of the permutation is described by a sequence P_1, P_2, ..., P_N.",
        "description": "Score : 1200 points Problem StatementOne day Mr. Takahashi picked up a dictionary containing all of the N! permutations of integers 1 through N.\nThe dictionary has N! pages, and page i (1 ≤ i ≤ N!) contains the i-th permutation in the lexicographical order.\nMr. Takahashi wanted to look up a certain permutation of length N in this dictionary, but he forgot some part of it.\nHis memory of the permutation is described by a sequence P_1, P_2, ..., P_N.\nIf P_i = 0, it means that he forgot the i-th element of the permutation; otherwise, it means that he remembered the i-th element of the permutation and it is P_i.\nHe decided to look up all the possible permutations in the dictionary.\nCompute the sum of the page numbers of the pages he has to check, modulo 10^9 + 7. One day Mr. Takahashi picked up a dictionary containing all of the N! permutations of integers 1 through N.\nThe dictionary has N! pages, and page i (1 ≤ i ≤ N!) contains the i-th permutation in the lexicographical order. Mr. Takahashi wanted to look up a certain permutation of length N in this dictionary, but he forgot some part of it. His memory of the permutation is described by a sequence P_1, P_2, ..., P_N.\nIf P_i = 0, it means that he forgot the i-th element of the permutation; otherwise, it means that he remembered the i-th element of the permutation and it is P_i. He decided to look up all the possible permutations in the dictionary.\nCompute the sum of the page numbers of the pages he has to check, modulo 10^9 + 7. Partial Score\nIn test cases worth 500 points, 1 ≤ N ≤ 3000. Print the sum of the page numbers of the pages he has to check, as modulo 10^9 + 7. The possible permutations are [1, 2, 3, 4] and [4, 2, 3, 1].\nSince the former is on page 1 and the latter is on page 22, the answer is 23. Since all permutations of length 3 are possible, the answer is 1 + 2 + 3 + 4 + 5 + 6 = 21. Mr. Takahashi remembered all the elements of the permutation. The dictionary consists of one page. One day Mr. Takahashi picked up a dictionary containing all of the N! permutations of integers 1 through N.\nThe dictionary has N! pages, and page i (1 ≤ i ≤ N!) contains the i-th permutation in the lexicographical order. Mr. Takahashi wanted to look up a certain permutation of length N in this dictionary, but he forgot some part of it. His memory of the permutation is described by a sequence P_1, P_2, ..., P_N.\nIf P_i = 0, it means that he forgot the i-th element of the permutation; otherwise, it means that he remembered the i-th element of the permutation and it is P_i. He decided to look up all the possible permutations in the dictionary.\nCompute the sum of the page numbers of the pages he has to check, modulo 10^9 + 7.",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "math",
          "sorting",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03961.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≤ N ≤ 500000\n0 ≤ P_i ≤ N\nP_i ≠ P_j if i ≠ j (1 ≤ i, j ≤ N), P_i ≠ 0 and P_j ≠ 0.",
          "ranges": "1 500000; 500000; 1; 0; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n0 2 3 0",
            "output": "23 The possible permutations are [1, 2, 3, 4] and [4, 2, 3, 1].\nSince the former is on page 1 and the latter is on page 22, the answer is 23.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03961.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03961"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03983",
        "title": "Eli- 1 started a part-time job handing out leaflets for N seconds.",
        "description": "Score : 300 points Problem Statement\n\n          Eli- 1 started a part-time job handing out leaflets for N seconds. \n          Eli- 1 wants to hand out as many leaflets as possible with her special ability, Cloning.  \n          Eli- gen can perform two kinds of actions below. \n\t\n\n Clone herself and generate Eli- (gen + 1) .  (one Eli- gen (cloning) and one Eli- (gen + 1) (cloned) exist as a result of Eli-gen 's cloning.)\n            This action takes gen \\times C ( C is a coefficient related to cloning. ) seconds. \n Hand out one leaflet. This action takes one second regardress of the generation ( =gen ). \n\n\n          They can not hand out leaflets while cloning. \n          Given N and C , find the maximum number of leaflets Eli- 1 and her clones can hand out in total modulo 1000000007 (= 10^9 + 7). Eli- 1 started a part-time job handing out leaflets for N seconds. \n          Eli- 1 wants to hand out as many leaflets as possible with her special ability, Cloning.  \n          Eli- gen can perform two kinds of actions below. They can not hand out leaflets while cloning. \n          Given N and C , find the maximum number of leaflets Eli- 1 and her clones can hand out in total modulo 1000000007 (= 10^9 + 7). The input consists of multiple test cases. On line 1 ,  Q that represents the number of test cases is given. \n            Each test case is given on the next Q lines.\n            For the test case q ( 1 \\leq q \\leq Q ) , N_q and \n            C_q are given separated by a single space. \n            N_q and C_q represent the working time and the coefficient related to cloning for test case q respectively. For each test case, Print the maximum number of leaflets Eli- 1 and her clones can hand out modulo 1000000007 ( = 10^9 + 7 ). Partial Scores\n 30 points will be awarded for passing the test set satisfying the condition: Q = 1 . \nAnother 270 points will be awarded for passing the test set without addtional constraints and you can get 300 points in total. 30 points will be awarded for passing the test set satisfying the condition: Q = 1 . Another 270 points will be awarded for passing the test set without addtional constraints and you can get 300 points in total. For the first test case, while only 20 leaflets can be handed out without cloning,\n\t  24 leaflets can be handed out by cloning first and two people handing out12 leaflets each. For the second test case, since two people can only hand out 8 leaflets each if Eli- 1 clones, she should hand out 20 leaflets without cloning. One way of handing out 67 leaflets is like the following image. Each black line means cloning, and each red line means handing out. This case satisfies the constraint of the partial score. Note that the value modulo 1000000007 ( 10^9 + 7 ) must be printed. This case satisfies the constraint of the partial score. Eli- 1 started a part-time job handing out leaflets for N seconds. \n          Eli- 1 wants to hand out as many leaflets as possible with her special ability, Cloning.  \n          Eli- gen can perform two kinds of actions below. Clone herself and generate Eli- (gen + 1) .  (one Eli- gen (cloning) and one Eli- (gen + 1) (cloned) exist as a result of Eli-gen 's cloning.)\n            This action takes gen \\times C ( C is a coefficient related to cloning. ) seconds. \n Hand out one leaflet. This action takes one second regardress of the generation ( =gen ). They can not hand out leaflets while cloning. \n          Given N and C , find the maximum number of leaflets Eli- 1 and her clones can hand out in total modulo 1000000007 (= 10^9 + 7).",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03983.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 \\leq Q \\leq 100000 = 10^5 \n 1 \\leq N_q \\leq 100000 = 10^5 \n 1 \\leq C_q \\leq 20000 = 2 \\times 10^4",
          "ranges": "10; 10; 2; 100000; 100000; 20000"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\n20 8\n20 12",
            "output": "24\n20 For the first test case, while only 20 leaflets can be handed out without cloning,\n\t  24 leaflets can be handed out by cloning first and two people handing out12 leaflets each. For the second test case, since two people can only hand out 8 leaflets each if Eli- 1 clones, she should hand out 20 leaflets without cloning.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03983.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03983"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03993",
        "title": "The i-th (1≤i≤N) rabbit likes rabbit a_i.",
        "description": "Score : 200 points Problem StatementThere are N rabbits, numbered 1 through N.\nThe i-th (1≤i≤N) rabbit likes rabbit a_i.\nNote that no rabbit can like itself, that is, a_i≠i.\nFor a pair of rabbits i and j (i＜j), we call the pair (i，j) a friendly pair if the following condition is met.\n\nRabbit i likes rabbit j and rabbit j likes rabbit i.\n\nCalculate the number of the friendly pairs. There are N rabbits, numbered 1 through N. The i-th (1≤i≤N) rabbit likes rabbit a_i.\nNote that no rabbit can like itself, that is, a_i≠i. For a pair of rabbits i and j (i＜j), we call the pair (i，j) a friendly pair if the following condition is met. Calculate the number of the friendly pairs. Print the number of the friendly pairs. There are two friendly pairs: (1，2) and (3，4). There are no friendly pairs. There is one friendly pair: (1，5). There are N rabbits, numbered 1 through N. The i-th (1≤i≤N) rabbit likes rabbit a_i.\nNote that no rabbit can like itself, that is, a_i≠i. For a pair of rabbits i and j (i＜j), we call the pair (i，j) a friendly pair if the following condition is met. Rabbit i likes rabbit j and rabbit j likes rabbit i. Calculate the number of the friendly pairs.",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03993.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2≤N≤10^5\n1≤a_i≤N\na_i≠i",
          "ranges": "2 10; 10; 2; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "4\n2 1 4 3",
            "output": "2 There are two friendly pairs: (1，2) and (3，4).",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03993.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03993"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03994",
        "title": "He repeats the following operation on s exactly K times.",
        "description": "Score : 400 points Problem StatementMr. Takahashi has a string s consisting of lowercase English letters.\nHe repeats the following operation on s exactly K times.\n\nChoose an arbitrary letter on s and change that letter to the next alphabet. Note that the next letter of z is a.\n\nFor example, if you perform an operation for the second letter on aaz, aaz becomes abz.\nIf you then perform an operation for the third letter on abz, abz becomes aba.\nMr. Takahashi wants to have the lexicographically smallest string after performing exactly K operations on s.\nFind the such string. Mr. Takahashi has a string s consisting of lowercase English letters.\nHe repeats the following operation on s exactly K times. For example, if you perform an operation for the second letter on aaz, aaz becomes abz.\nIf you then perform an operation for the third letter on abz, abz becomes aba. Mr. Takahashi wants to have the lexicographically smallest string after performing exactly K operations on s.\nFind the such string. Print the lexicographically smallest string after performing exactly K operations on s. For example, you can perform the following operations: xyz, yyz, zyz, ayz, aya. You have to perform exactly K operations. Mr. Takahashi has a string s consisting of lowercase English letters.\nHe repeats the following operation on s exactly K times. Choose an arbitrary letter on s and change that letter to the next alphabet. Note that the next letter of z is a. For example, if you perform an operation for the second letter on aaz, aaz becomes abz.\nIf you then perform an operation for the third letter on abz, abz becomes aba. Mr. Takahashi wants to have the lexicographically smallest string after performing exactly K operations on s.\nFind the such string.",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "string",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03994.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤|s|≤10^5\nAll letters in s are lowercase English letters.\n1≤K≤10^9",
          "ranges": "1 10; 10; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "xyz\n4",
            "output": "aya For example, you can perform the following operations: xyz, yyz, zyz, ayz, aya.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03994.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03994"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03995",
        "title": "We call the cell in the r-th row and c-th column (r，c).",
        "description": "Score : 800 points Problem StatementThere is a grid with R rows and C columns.\nWe call the cell in the r-th row and c-th column (r，c).\nMr. Takahashi wrote non-negative integers into N of the cells, that is, he wrote a non-negative integer a_i into (r_i，c_i) for each i (1≤i≤N).\nAfter that he fell asleep.\nMr. Aoki found the grid and tries to surprise Mr. Takahashi by writing integers into all remaining cells.\nThe grid must meet the following conditions to really surprise Mr. Takahashi.\n\nCondition 1: Each cell contains a non-negative integer.\nCondition 2: For any 2×2 square formed by cells on the grid, the sum of the top left and bottom right integers must always equal to the sum of the top right and bottom left integers.\n\nDetermine whether it is possible to meet those conditions by properly writing integers into all remaining cells. There is a grid with R rows and C columns.\nWe call the cell in the r-th row and c-th column (r，c). Mr. Takahashi wrote non-negative integers into N of the cells, that is, he wrote a non-negative integer a_i into (r_i，c_i) for each i (1≤i≤N).\nAfter that he fell asleep. Mr. Aoki found the grid and tries to surprise Mr. Takahashi by writing integers into all remaining cells.\nThe grid must meet the following conditions to really surprise Mr. Takahashi. Determine whether it is possible to meet those conditions by properly writing integers into all remaining cells. Print Yes if it is possible to meet the conditions by properly writing integers into all remaining cells.\nOtherwise, print No. You can write integers as follows. There are two 2×2 squares on the grid, formed by the following cells: You have to write 40 into the empty cell to meet the condition on the left square, but then it does not satisfy the condition on the right square. You have to write -10 into the empty cell to meet condition 2, but then it does not satisfy condition 1. You can write integers as follows. All cells already contain a integer and condition 2 is not satisfied. There is a grid with R rows and C columns.\nWe call the cell in the r-th row and c-th column (r，c). Mr. Takahashi wrote non-negative integers into N of the cells, that is, he wrote a non-negative integer a_i into (r_i，c_i) for each i (1≤i≤N).\nAfter that he fell asleep. Mr. Aoki found the grid and tries to surprise Mr. Takahashi by writing integers into all remaining cells.\nThe grid must meet the following conditions to really surprise Mr. Takahashi. Condition 1: Each cell contains a non-negative integer.\nCondition 2: For any 2×2 square formed by cells on the grid, the sum of the top left and bottom right integers must always equal to the sum of the top right and bottom left integers. Determine whether it is possible to meet those conditions by properly writing integers into all remaining cells.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03995.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2≤R，C≤10^5\n1≤N≤10^5\n1≤r_i≤R\n1≤c_i≤C\n(r_i，c_i) ≠ (r_j，c_j) (i≠j)\na_i is an integer.\n0≤a_i≤10^9",
          "ranges": "1 10; 0 10; 10; 10; 10; 2; 1; 1; 1; 0"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 2\n3\n1 1 0\n1 2 10\n2 1 20",
            "output": "Yes You can write integers as follows.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03995.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03995"
      }
    },
    {
      "basicInfo": {
        "questionId": "p03996",
        "title": "The length of each array is M and initially each array contains integers (1，2，...，M) in this order.",
        "description": "Score : 1200 points Problem StatementThere are N arrays.\nThe length of each array is M and initially each array contains integers (1，2，...，M) in this order.\nMr. Takahashi has decided to perform Q operations on those N arrays.\nFor the i-th (1≤i≤Q) time, he performs the following operation.\n\nChoose an arbitrary array from the N arrays and move the integer a_i (1≤a_i≤M) to the front of that array. For example, after performing the operation on a_i=2 and the array (5，4，3，2，1), this array becomes (2，5，4，3，1).\n\nMr. Takahashi wants to make N arrays exactly the same after performing the Q operations.\nDetermine if it is possible or not. There are N arrays.\nThe length of each array is M and initially each array contains integers (1，2，...，M) in this order. Mr. Takahashi has decided to perform Q operations on those N arrays.\nFor the i-th (1≤i≤Q) time, he performs the following operation. Mr. Takahashi wants to make N arrays exactly the same after performing the Q operations.\nDetermine if it is possible or not. Print Yes if it is possible to make N arrays exactly the same after performing the Q operations.\nOtherwise, print No. You can perform the operations as follows. You can perform the operations as follows. There are N arrays.\nThe length of each array is M and initially each array contains integers (1，2，...，M) in this order. Mr. Takahashi has decided to perform Q operations on those N arrays.\nFor the i-th (1≤i≤Q) time, he performs the following operation. Choose an arbitrary array from the N arrays and move the integer a_i (1≤a_i≤M) to the front of that array. For example, after performing the operation on a_i=2 and the array (5，4，3，2，1), this array becomes (2，5，4，3，1). Mr. Takahashi wants to make N arrays exactly the same after performing the Q operations.\nDetermine if it is possible or not.",
        "difficulty": "Hard",
        "category": "Arrays & Strings",
        "tags": [
          "array",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03996.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2≤N≤10^5\n2≤M≤10^5\n1≤Q≤10^5\n1≤a_i≤M",
          "ranges": "2 10; 2 10; 1 10; 10; 10; 10; 2; 2; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 2\n3\n2 1 2",
            "output": "Yes You can perform the operations as follows.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p03996.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p03996"
      }
    },
    {
      "basicInfo": {
        "questionId": "p04005",
        "title": "There is at least one red block and at least one blue block.",
        "description": "Score : 200 points Problem StatementWe have a rectangular parallelepiped of size A×B×C, built with blocks of size 1×1×1. Snuke will paint each of the A×B×C blocks either red or blue, so that:\n\nThere is at least one red block and at least one blue block.\nThe union of all red blocks forms a rectangular parallelepiped.\nThe union of all blue blocks forms a rectangular parallelepiped.\n\nSnuke wants to minimize the difference between the number of red blocks and the number of blue blocks. Find the minimum possible difference. We have a rectangular parallelepiped of size A×B×C, built with blocks of size 1×1×1. Snuke will paint each of the A×B×C blocks either red or blue, so that: Snuke wants to minimize the difference between the number of red blocks and the number of blue blocks. Find the minimum possible difference. Print the minimum possible difference between the number of red blocks and the number of blue blocks. For example, Snuke can paint the blocks as shown in the diagram below.\nThere are 9 red blocks and 18 blue blocks, thus the difference is 9. For example, Snuke can paint the blocks as shown in the diagram below.\nThere are 8 red blocks and 8 blue blocks, thus the difference is 0. For example, Snuke can paint the blocks as shown in the diagram below.\nThere are 45 red blocks and 30 blue blocks, thus the difference is 9. We have a rectangular parallelepiped of size A×B×C, built with blocks of size 1×1×1. Snuke will paint each of the A×B×C blocks either red or blue, so that: There is at least one red block and at least one blue block.\nThe union of all red blocks forms a rectangular parallelepiped.\nThe union of all blue blocks forms a rectangular parallelepiped. Snuke wants to minimize the difference between the number of red blocks and the number of blue blocks. Find the minimum possible difference.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p04005.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2≤A,B,C≤10^9",
          "ranges": "10; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 3 3",
            "output": "9 For example, Snuke can paint the blocks as shown in the diagram below.\nThere are 9 red blocks and 18 blue blocks, thus the difference is 9.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p04005.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p04005"
      }
    },
    {
      "basicInfo": {
        "questionId": "p04006",
        "title": "Slimes come in N colors. Those colors are conveniently numbered 1 through N.",
        "description": "Score : 400 points Problem StatementSnuke lives in another world, where slimes are real creatures and kept by some people.\nSlimes come in N colors. Those colors are conveniently numbered 1 through N.\nSnuke currently has no slime. His objective is to have slimes of all the colors together.\nSnuke can perform the following two actions:\n\n\nSelect a color i (1≤i≤N), such that he does not currently have a slime in color i, and catch a slime in color i. This action takes him a_i seconds.\n\n\nCast a spell, which changes the color of all the slimes that he currently has. The color of a slime in color i (1≤i≤N-1) will become color i+1, and the color of a slime in color N will become color 1. This action takes him x seconds.\n\n\nFind the minimum time that Snuke needs to have slimes in all N colors. Snuke lives in another world, where slimes are real creatures and kept by some people.\nSlimes come in N colors. Those colors are conveniently numbered 1 through N.\nSnuke currently has no slime. His objective is to have slimes of all the colors together. Snuke can perform the following two actions: Select a color i (1≤i≤N), such that he does not currently have a slime in color i, and catch a slime in color i. This action takes him a_i seconds. Cast a spell, which changes the color of all the slimes that he currently has. The color of a slime in color i (1≤i≤N-1) will become color i+1, and the color of a slime in color N will become color 1. This action takes him x seconds. Find the minimum time that Snuke needs to have slimes in all N colors. Find the minimum time that Snuke needs to have slimes in all N colors. Snuke can act as follows: Snuke can act as follows: Snuke can act as follows: Snuke lives in another world, where slimes are real creatures and kept by some people.\nSlimes come in N colors. Those colors are conveniently numbered 1 through N.\nSnuke currently has no slime. His objective is to have slimes of all the colors together. Snuke can perform the following two actions: Select a color i (1≤i≤N), such that he does not currently have a slime in color i, and catch a slime in color i. This action takes him a_i seconds.\n\n\nCast a spell, which changes the color of all the slimes that he currently has. The color of a slime in color i (1≤i≤N-1) will become color i+1, and the color of a slime in color N will become color 1. This action takes him x seconds. Find the minimum time that Snuke needs to have slimes in all N colors.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p04006.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2≤N≤2,000\na_i are integers.\n1≤a_i≤10^9\nx is an integer.\n1≤x≤10^9",
          "ranges": "2 2; 1 10; 1 10; 2; 10; 10; 2; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 10\n1 100",
            "output": "12 Snuke can act as follows: Catch a slime in color 1. This takes 1 second.\nCast the spell. The color of the slime changes: 1 → 2. This takes 10 seconds.\nCatch a slime in color 1. This takes 1 second.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p04006.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p04006"
      }
    },
    {
      "basicInfo": {
        "questionId": "p04007",
        "title": "Ciel painted some of the cells blue in her paper. Here, the cells painted blue were 4-connected.",
        "description": "Score : 700 points Problem StatementSnuke and Ciel went to a strange stationery store. Each of them got a transparent graph paper with H rows and W columns.\nSnuke painted some of the cells red in his paper. Here, the cells painted red were 4-connected, that is, it was possible to traverse from any red cell to any other red cell, by moving to vertically or horizontally adjacent red cells only.\nCiel painted some of the cells blue in her paper. Here, the cells painted blue were 4-connected.\nAfterwards, they precisely overlaid the two sheets in the same direction. Then, the intersection of the red cells and the blue cells appeared purple.\nYou are given a matrix of letters a_{ij} (1≤i≤H, 1≤j≤W) that describes the positions of the purple cells. If the cell at the i-th row and j-th column is purple, then a_{ij} is #, otherwise a_{ij} is .. Here, it is guaranteed that no outermost cell is purple. That is, if i=1, H or j = 1, W, then a_{ij} is ..\nFind a pair of the set of the positions of the red cells and the blue cells that is consistent with the situation described. It can be shown that a solution always exists. Snuke and Ciel went to a strange stationery store. Each of them got a transparent graph paper with H rows and W columns. Snuke painted some of the cells red in his paper. Here, the cells painted red were 4-connected, that is, it was possible to traverse from any red cell to any other red cell, by moving to vertically or horizontally adjacent red cells only. Ciel painted some of the cells blue in her paper. Here, the cells painted blue were 4-connected. Afterwards, they precisely overlaid the two sheets in the same direction. Then, the intersection of the red cells and the blue cells appeared purple. You are given a matrix of letters a_{ij} (1≤i≤H, 1≤j≤W) that describes the positions of the purple cells. If the cell at the i-th row and j-th column is purple, then a_{ij} is #, otherwise a_{ij} is .. Here, it is guaranteed that no outermost cell is purple. That is, if i=1, H or j = 1, W, then a_{ij} is .. Find a pair of the set of the positions of the red cells and the blue cells that is consistent with the situation described. It can be shown that a solution always exists. Print a pair of the set of the positions of the red cells and the blue cells that is consistent with the situation, as follows: The description of the positions of the red or blue cells should follow the format of the description of the positions of the purple cells. One possible pair of the set of the positions of the red cells and the blue cells is as follows: One possible pair of the set of the positions of the red cells and the blue cells is as follows: Snuke and Ciel went to a strange stationery store. Each of them got a transparent graph paper with H rows and W columns. Snuke painted some of the cells red in his paper. Here, the cells painted red were 4-connected, that is, it was possible to traverse from any red cell to any other red cell, by moving to vertically or horizontally adjacent red cells only. Ciel painted some of the cells blue in her paper. Here, the cells painted blue were 4-connected. Afterwards, they precisely overlaid the two sheets in the same direction. Then, the intersection of the red cells and the blue cells appeared purple. You are given a matrix of letters a_{ij} (1≤i≤H, 1≤j≤W) that describes the positions of the purple cells. If the cell at the i-th row and j-th column is purple, then a_{ij} is #, otherwise a_{ij} is .. Here, it is guaranteed that no outermost cell is purple. That is, if i=1, H or j = 1, W, then a_{ij} is .. Find a pair of the set of the positions of the red cells and the blue cells that is consistent with the situation described. It can be shown that a solution always exists.",
        "difficulty": "Hard",
        "category": "Trees & Graphs",
        "tags": [
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p04007.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3≤H,W≤500\na_{ij} is # or ..\nIf i=1,H or j=1,W, then a_{ij} is ..\nAt least one of a_{ij} is #.",
          "ranges": "500; 1; 1; 3"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 5\n.....\n.#.#.\n.....\n.#.#.\n.....",
            "output": ".....\n#####\n#....\n#####\n.....\n\n.###.\n.#.#.\n.#.#.\n.#.#.\n..... One possible pair of the set of the positions of the red cells and the blue cells is as follows:",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p04007.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p04007"
      }
    },
    {
      "basicInfo": {
        "questionId": "p04008",
        "title": "Town 1 is the capital.",
        "description": "Score : 800 points Problem StatementThere are N towns in Snuke Kingdom, conveniently numbered 1 through N.\nTown 1 is the capital.\nEach town in the kingdom has a Teleporter, a facility that instantly transports a person to another place.\nThe destination of the Teleporter of town i is town a_i (1≤a_i≤N).\nIt is guaranteed that one can get to the capital from any town by using the Teleporters some number of times.\nKing Snuke loves the integer K.\nThe selfish king wants to change the destination of the Teleporters so that the following holds:\n\nStarting from any town, one will be at the capital after using the Teleporters exactly K times in total.\n\nFind the minimum number of the Teleporters whose destinations need to be changed in order to satisfy the king's desire. There are N towns in Snuke Kingdom, conveniently numbered 1 through N.\nTown 1 is the capital. Each town in the kingdom has a Teleporter, a facility that instantly transports a person to another place.\nThe destination of the Teleporter of town i is town a_i (1≤a_i≤N).\nIt is guaranteed that one can get to the capital from any town by using the Teleporters some number of times. King Snuke loves the integer K.\nThe selfish king wants to change the destination of the Teleporters so that the following holds: Find the minimum number of the Teleporters whose destinations need to be changed in order to satisfy the king's desire. Print the minimum number of the Teleporters whose destinations need to be changed in order to satisfy King Snuke's desire. Change the destinations of the Teleporters to a = (1,1,1). There is no need to change the destinations of the Teleporters, since the king's desire is already satisfied. For example, change the destinations of the Teleporters to a = (1,1,2,1,1,2,2,4). There are N towns in Snuke Kingdom, conveniently numbered 1 through N.\nTown 1 is the capital. Each town in the kingdom has a Teleporter, a facility that instantly transports a person to another place.\nThe destination of the Teleporter of town i is town a_i (1≤a_i≤N).\nIt is guaranteed that one can get to the capital from any town by using the Teleporters some number of times. King Snuke loves the integer K.\nThe selfish king wants to change the destination of the Teleporters so that the following holds: Starting from any town, one will be at the capital after using the Teleporters exactly K times in total. Find the minimum number of the Teleporters whose destinations need to be changed in order to satisfy the king's desire.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p04008.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2≤N≤10^5\n1≤a_i≤N\nOne can get to the capital from any town by using the Teleporters some number of times.\n1≤K≤10^9",
          "ranges": "2 10; 1 10; 10; 10; 2; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 1\n2 3 1",
            "output": "2 Change the destinations of the Teleporters to a = (1,1,1).",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p04008.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p04008"
      }
    },
    {
      "basicInfo": {
        "questionId": "p04009",
        "title": ". : This cell is empty.",
        "description": "Score : 1400 points Problem StatementWe have a grid with H rows and W columns.\nThe state of the cell at the i-th (1≤i≤H) row and j-th (1≤j≤W) column is represented by a letter a_{ij}, as follows:\n\n. : This cell is empty.\no : This cell contains a robot.\nE : This cell contains the exit. E occurs exactly once in the whole grid.\n\nSnuke is trying to salvage as many robots as possible, by performing the following operation some number of times:\n\nSelect one of the following directions: up, down, left, right. All remaining robots will move one cell in the selected direction, except when a robot would step outside the grid, in which case the robot will explode and immediately disappear from the grid. If a robot moves to the cell that contains the exit, the robot will be salvaged and immediately removed from the grid.\n\nFind the maximum number of robots that can be salvaged. We have a grid with H rows and W columns.\nThe state of the cell at the i-th (1≤i≤H) row and j-th (1≤j≤W) column is represented by a letter a_{ij}, as follows: Snuke is trying to salvage as many robots as possible, by performing the following operation some number of times: Find the maximum number of robots that can be salvaged. Print the maximum number of robots that can be salvaged. For example, select left, up, right. Select right, right, right, down, down. We have a grid with H rows and W columns.\nThe state of the cell at the i-th (1≤i≤H) row and j-th (1≤j≤W) column is represented by a letter a_{ij}, as follows: . : This cell is empty.\no : This cell contains a robot.\nE : This cell contains the exit. E occurs exactly once in the whole grid. Snuke is trying to salvage as many robots as possible, by performing the following operation some number of times: Select one of the following directions: up, down, left, right. All remaining robots will move one cell in the selected direction, except when a robot would step outside the grid, in which case the robot will explode and immediately disappear from the grid. If a robot moves to the cell that contains the exit, the robot will be salvaged and immediately removed from the grid. Find the maximum number of robots that can be salvaged.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p04009.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2≤H,W≤100\na_{ij} is ., o or E.\nE occurs exactly once in the whole grid.",
          "ranges": "100; 2"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 3\no.o\n.Eo\nooo",
            "output": "3 For example, select left, up, right.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p04009.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p04009"
      }
    },
    {
      "basicInfo": {
        "questionId": "p04010",
        "title": "Here, N-1≤M≤N holds and the graph is connected.",
        "description": "Score : 2200 points Problem StatementYou are given an undirected graph with N vertices and M edges.\nHere, N-1≤M≤N holds and the graph is connected.\nThere are no self-loops or multiple edges in this graph.\nThe vertices are numbered 1 through N, and the edges are numbered 1 through M.\nEdge i connects vertices a_i and b_i.\nThe color of each vertex can be either white or black.\nInitially, all the vertices are white.\nSnuke is trying to turn all the vertices black by performing the following operation some number of times:\n\nSelect a pair of adjacent vertices with the same color, and invert the colors of those vertices. That is, if the vertices are both white, then turn them black, and vice versa.\n\nDetermine if it is possible to turn all the vertices black. If the answer is positive, find the minimum number of times the operation needs to be performed in order to achieve the objective. You are given an undirected graph with N vertices and M edges.\nHere, N-1≤M≤N holds and the graph is connected.\nThere are no self-loops or multiple edges in this graph. The vertices are numbered 1 through N, and the edges are numbered 1 through M.\nEdge i connects vertices a_i and b_i. The color of each vertex can be either white or black.\nInitially, all the vertices are white.\nSnuke is trying to turn all the vertices black by performing the following operation some number of times: Determine if it is possible to turn all the vertices black. If the answer is positive, find the minimum number of times the operation needs to be performed in order to achieve the objective. Partial Score\nIn the test set worth 1500 points, M=N-1. If it is possible to turn all the vertices black, print the minimum number of times the operation needs to be performed in order to achieve the objective.\nOtherwise, print -1 instead. For example, it is possible to perform the operations as shown in the following diagram: It is not possible to turn all the vertices black. This case is not included in the test set for the partial score. This case is not included in the test set for the partial score. You are given an undirected graph with N vertices and M edges.\nHere, N-1≤M≤N holds and the graph is connected.\nThere are no self-loops or multiple edges in this graph. The vertices are numbered 1 through N, and the edges are numbered 1 through M.\nEdge i connects vertices a_i and b_i. The color of each vertex can be either white or black.\nInitially, all the vertices are white.\nSnuke is trying to turn all the vertices black by performing the following operation some number of times: Select a pair of adjacent vertices with the same color, and invert the colors of those vertices. That is, if the vertices are both white, then turn them black, and vice versa. Determine if it is possible to turn all the vertices black. If the answer is positive, find the minimum number of times the operation needs to be performed in order to achieve the objective.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p04010.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2≤N≤10^5\nN-1≤M≤N\n1≤a_i,b_i≤N\nThere are no self-loops or multiple edges in the given graph.\nThe given graph is connected.",
          "ranges": "2 10; 10; 2; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "6 5\n1 2\n1 3\n1 4\n2 5\n2 6",
            "output": "5 For example, it is possible to perform the operations as shown in the following diagram:",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p04010.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p04010"
      }
    },
    {
      "basicInfo": {
        "questionId": "p04033",
        "title": "Problem Statement",
        "description": "Problem StatementYou are given two integers a and b (a≤b). Determine if the product of the integers a, a+1, …, b is positive, negative or zero. You are given two integers a and b (a≤b). Determine if the product of the integers a, a+1, …, b is positive, negative or zero. Partial Score\nIn test cases worth 100 points, -10≤a≤b≤10. If the product is positive, print Positive. If it is negative, print Negative. If it is zero, print Zero. 1×2×3=6 is positive. (-3)×(-2)×(-1)=-6 is negative. (-1)×0×1=0. You are given two integers a and b (a≤b). Determine if the product of the integers a, a+1, …, b is positive, negative or zero.",
        "difficulty": "Hard",
        "category": "Geometry",
        "tags": [
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p04033.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "a and b are integers.\n-10^9≤a≤b≤10^9",
          "ranges": "10; 9"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1 3",
            "output": "Positive 1×2×3=6 is positive.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p04033.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p04033"
      }
    },
    {
      "basicInfo": {
        "questionId": "p04034",
        "title": "Find the number of boxes that may contain the red ball after all operations are performed.",
        "description": "Problem StatementWe have N boxes, numbered 1 through N. At first, box 1 contains one red ball, and each of the other boxes contains one white ball.\nSnuke will perform the following M operations, one by one. In the i-th operation, he randomly picks one ball from box x_i, then he puts it into box y_i.\nFind the number of boxes that may contain the red ball after all operations are performed. We have N boxes, numbered 1 through N. At first, box 1 contains one red ball, and each of the other boxes contains one white ball. Snuke will perform the following M operations, one by one. In the i-th operation, he randomly picks one ball from box x_i, then he puts it into box y_i. Find the number of boxes that may contain the red ball after all operations are performed. Print the number of boxes that may contain the red ball after all operations are performed. Just after the first operation, box 1 is empty, box 2 contains one red ball and one white ball, and box 3 contains one white ball. Now, consider the second operation. If Snuke picks the red ball from box 2, the red ball will go into box 3. If he picks the white ball instead, the red ball will stay in box 2.\nThus, the number of boxes that may contain the red ball after all operations, is 2. All balls will go into box 3. We have N boxes, numbered 1 through N. At first, box 1 contains one red ball, and each of the other boxes contains one white ball. Snuke will perform the following M operations, one by one. In the i-th operation, he randomly picks one ball from box x_i, then he puts it into box y_i. Find the number of boxes that may contain the red ball after all operations are performed.",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p04034.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2≤N≤10^5\n1≤M≤10^5\n1≤x_i,y_i≤N\nx_i≠y_i\nJust before the i-th operation is performed, box x_i contains at least 1 ball.",
          "ranges": "2 10; 1 10; 10; 10; 2; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 2\n1 2\n2 3",
            "output": "2 Just after the first operation, box 1 is empty, box 2 contains one red ball and one white ball, and box 3 contains one white ball. Now, consider the second operation. If Snuke picks the red ball from box 2, the red ball will go into box 3. If he picks the white ball instead, the red ball will stay in box 2.\nThus, the number of boxes that may contain the red ball after all operations, is 2.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p04034.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p04034"
      }
    },
    {
      "basicInfo": {
        "questionId": "p04035",
        "title": "Choose a (connected) rope with a total length of at least L, then untie one of its knots.",
        "description": "Problem StatementWe have N pieces of ropes, numbered 1 through N. The length of piece i is a_i.\nAt first, for each i (1≤i≤N-1), piece i and piece i+1 are tied at the ends, forming one long rope with N-1 knots. Snuke will try to untie all of the knots by performing the following operation repeatedly:\n\nChoose a (connected) rope with a total length of at least L, then untie one of its knots.\n\nIs it possible to untie all of the N-1 knots by properly applying this operation? If the answer is positive, find one possible order to untie the knots. We have N pieces of ropes, numbered 1 through N. The length of piece i is a_i. At first, for each i (1≤i≤N-1), piece i and piece i+1 are tied at the ends, forming one long rope with N-1 knots. Snuke will try to untie all of the knots by performing the following operation repeatedly: Is it possible to untie all of the N-1 knots by properly applying this operation? If the answer is positive, find one possible order to untie the knots. If it is not possible to untie all of the N-1 knots, print Impossible. If it is possible to untie all of the knots, print Possible, then print another N-1 lines that describe a possible order to untie the knots. The j-th of those N-1 lines should contain the index of the knot that is untied in the j-th operation. Here, the index of the knot connecting piece i and piece i+1 is i. If there is more than one solution, output any. If the knot 1 is untied first, the knot 2 will become impossible to untie. Another example of a possible solution is 3, 4, 1, 2. We have N pieces of ropes, numbered 1 through N. The length of piece i is a_i. At first, for each i (1≤i≤N-1), piece i and piece i+1 are tied at the ends, forming one long rope with N-1 knots. Snuke will try to untie all of the knots by performing the following operation repeatedly: Choose a (connected) rope with a total length of at least L, then untie one of its knots. Is it possible to untie all of the N-1 knots by properly applying this operation? If the answer is positive, find one possible order to untie the knots.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "math",
          "sorting",
          "implementation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p04035.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "2≤N≤10^5\n1≤L≤10^9\n1≤a_i≤10^9\nAll input values are integers.",
          "ranges": "2 10; 1 10; 1 10; 10; 10; 10; 2; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "3 50\n30 20 10",
            "output": "Possible\n2\n1 If the knot 1 is untied first, the knot 2 will become impossible to untie.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p04035.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p04035"
      }
    },
    {
      "basicInfo": {
        "questionId": "p04036",
        "title": "One brother starts from vertex x_i, and the other starts from vertex y_i.",
        "description": "Problem StatementWe have an undirected graph with N vertices and M edges. The vertices are numbered 1 through N, and the edges are numbered 1 through M. Edge i connects vertices a_i and b_i. The graph is connected.\nOn this graph, Q pairs of brothers are participating in an activity called Stamp Rally. The Stamp Rally for the i-th pair will be as follows:\n\nOne brother starts from vertex x_i, and the other starts from vertex y_i.\nThe two explore the graph along the edges to visit z_i vertices in total, including the starting vertices. Here, a vertex is counted only once, even if it is visited multiple times, or visited by both brothers.\nThe score is defined as the largest index of the edges traversed by either of them. Their objective is to minimize this value.\n\nFind the minimum possible score for each pair. We have an undirected graph with N vertices and M edges. The vertices are numbered 1 through N, and the edges are numbered 1 through M. Edge i connects vertices a_i and b_i. The graph is connected. On this graph, Q pairs of brothers are participating in an activity called Stamp Rally. The Stamp Rally for the i-th pair will be as follows: Find the minimum possible score for each pair. Print Q lines. The i-th line should contain the minimum possible score for the i-th pair of brothers. We have an undirected graph with N vertices and M edges. The vertices are numbered 1 through N, and the edges are numbered 1 through M. Edge i connects vertices a_i and b_i. The graph is connected. On this graph, Q pairs of brothers are participating in an activity called Stamp Rally. The Stamp Rally for the i-th pair will be as follows: One brother starts from vertex x_i, and the other starts from vertex y_i.\nThe two explore the graph along the edges to visit z_i vertices in total, including the starting vertices. Here, a vertex is counted only once, even if it is visited multiple times, or visited by both brothers.\nThe score is defined as the largest index of the edges traversed by either of them. Their objective is to minimize this value. Find the minimum possible score for each pair.",
        "difficulty": "Hard",
        "category": "Trees & Graphs",
        "tags": [
          "math",
          "sorting",
          "graph"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p04036.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "3≤N≤10^5\nN−1≤M≤10^5\n1≤a_i<b_i≤N\nThe given graph is connected.\n1≤Q≤10^5\n1≤x_j<y_j≤N\n3≤z_j≤N",
          "ranges": "3 10; 1 10; 1 10; 10; 10; 10; 3; 1; 1; 1; 1; 3"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "5 6\n2 3\n4 5\n1 2\n1 3\n1 4\n1 5\n6\n2 4 3\n2 4 4\n2 4 5\n1 3 3\n1 3 4\n1 3 5",
            "output": "1\n2\n3\n1\n5\n5",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p04036.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p04036"
      }
    },
    {
      "basicInfo": {
        "questionId": "p04037",
        "title": "Choose a pile with the largest number of candies remaining, then eat all candies of that pile.",
        "description": "Problem StatementThere are N piles of candies on the table. The piles are numbered 1 through N. At first, pile i contains a_i candies.\nSnuke and Ciel are playing a game. They take alternating turns. Snuke goes first. In each turn, the current player must perform one of the following two operations:\n\nChoose a pile with the largest number of candies remaining, then eat all candies of that pile.\nFrom each pile with one or more candies remaining, eat one candy.\n\nThe player who eats the last candy on the table, loses the game. Determine which player will win if both players play the game optimally. There are N piles of candies on the table. The piles are numbered 1 through N. At first, pile i contains a_i candies. Snuke and Ciel are playing a game. They take alternating turns. Snuke goes first. In each turn, the current player must perform one of the following two operations: The player who eats the last candy on the table, loses the game. Determine which player will win if both players play the game optimally. If Snuke will win, print First. If Ciel will win, print Second. At the beginning of the game, pile 2 contains the most candies. If Snuke eats all candies of this pile, Ciel has no choice but to eat the last candy. If Snuke eats one candy from each pile, Ciel is again left with the last candy. There are N piles of candies on the table. The piles are numbered 1 through N. At first, pile i contains a_i candies. Snuke and Ciel are playing a game. They take alternating turns. Snuke goes first. In each turn, the current player must perform one of the following two operations: Choose a pile with the largest number of candies remaining, then eat all candies of that pile.\nFrom each pile with one or more candies remaining, eat one candy. The player who eats the last candy on the table, loses the game. Determine which player will win if both players play the game optimally.",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math",
          "simulation"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p04037.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤N≤10^5\n1≤a_i≤10^9",
          "ranges": "1 10; 1 10; 10; 10; 1; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2\n1 3",
            "output": "First At the beginning of the game, pile 2 contains the most candies. If Snuke eats all candies of this pile, Ciel has no choice but to eat the last candy.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p04037.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p04037"
      }
    },
    {
      "basicInfo": {
        "questionId": "p04038",
        "title": "Problem Statement",
        "description": "Problem StatementSnuke loves colorful balls. He has a total of N×K balls, K in each of his favorite N colors. The colors are numbered 1 through N.\nHe will arrange all of the balls in a row from left to right, in arbitrary order. Then, for each of the N colors, he will paint the leftmost ball of that color into color 0, a color different from any of the N original colors.\nAfter painting, how many sequences of the colors of the balls are possible? Find this number modulo 10^9+7. Snuke loves colorful balls. He has a total of N×K balls, K in each of his favorite N colors. The colors are numbered 1 through N. He will arrange all of the balls in a row from left to right, in arbitrary order. Then, for each of the N colors, he will paint the leftmost ball of that color into color 0, a color different from any of the N original colors. After painting, how many sequences of the colors of the balls are possible? Find this number modulo 10^9+7. Print the number of the possible sequences of the colors of the balls after painting, modulo 10^9+7. The following 4 sequences are possible: The following 1 sequence is possible: Snuke loves colorful balls. He has a total of N×K balls, K in each of his favorite N colors. The colors are numbered 1 through N. He will arrange all of the balls in a row from left to right, in arbitrary order. Then, for each of the N colors, he will paint the leftmost ball of that color into color 0, a color different from any of the N original colors. After painting, how many sequences of the colors of the balls are possible? Find this number modulo 10^9+7.",
        "difficulty": "Hard",
        "category": "Sorting & Searching",
        "tags": [
          "array",
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p04038.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1≤N,K≤2,000",
          "ranges": "2; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "2 2",
            "output": "4 The following 4 sequences are possible: (0,1,0,2)\n(0,0,1,2)\n(0,2,0,1)\n(0,0,2,1)",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p04038.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p04038"
      }
    },
    {
      "basicInfo": {
        "questionId": "p04039",
        "title": "She is shopping, and now paying at the cashier.",
        "description": "Score : 300 points Problem StatementIroha is very particular about numbers. There are K digits that she dislikes: D_1, D_2, ..., D_K.\nShe is shopping, and now paying at the cashier.\nHer total is N yen (the currency of Japan), thus she has to hand at least N yen to the cashier (and possibly receive the change).\nHowever, as mentioned before, she is very particular about numbers. When she hands money to the cashier, the decimal notation of the amount must not contain any digits that she dislikes. Under this condition, she will hand the minimum amount of money.\nFind the amount of money that she will hand to the cashier. Iroha is very particular about numbers. There are K digits that she dislikes: D_1, D_2, ..., D_K. She is shopping, and now paying at the cashier.\nHer total is N yen (the currency of Japan), thus she has to hand at least N yen to the cashier (and possibly receive the change). However, as mentioned before, she is very particular about numbers. When she hands money to the cashier, the decimal notation of the amount must not contain any digits that she dislikes. Under this condition, she will hand the minimum amount of money. Find the amount of money that she will hand to the cashier. Print the amount of money that Iroha will hand to the cashier. She dislikes all digits except 0 and 2. The smallest integer equal to or greater than N=1000 whose decimal notation contains only 0 and 2, is 2000. Iroha is very particular about numbers. There are K digits that she dislikes: D_1, D_2, ..., D_K. She is shopping, and now paying at the cashier.\nHer total is N yen (the currency of Japan), thus she has to hand at least N yen to the cashier (and possibly receive the change). However, as mentioned before, she is very particular about numbers. When she hands money to the cashier, the decimal notation of the amount must not contain any digits that she dislikes. Under this condition, she will hand the minimum amount of money. Find the amount of money that she will hand to the cashier.",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p04039.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≦ N < 10000\n 1 ≦ K < 10\n 0 ≦ D_1 < D_2 < … < D_K≦9\n\\{D_1,D_2,...,D_K\\} ≠ \\{1,2,3,4,5,6,7,8,9\\}",
          "ranges": "10000; 10; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1000 8\n1 3 4 5 6 7 8 9",
            "output": "2000 She dislikes all digits except 0 and 2. The smallest integer equal to or greater than N=1000 whose decimal notation contains only 0 and 2, is 2000.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p04039.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p04039"
      }
    },
    {
      "basicInfo": {
        "questionId": "p04045",
        "title": "She is shopping, and now paying at the cashier.",
        "description": "Score : 300 points Problem StatementIroha is very particular about numbers. There are K digits that she dislikes: D_1, D_2, ..., D_K.\nShe is shopping, and now paying at the cashier.\nHer total is N yen (the currency of Japan), thus she has to hand at least N yen to the cashier (and possibly receive the change).\nHowever, as mentioned before, she is very particular about numbers. When she hands money to the cashier, the decimal notation of the amount must not contain any digits that she dislikes. Under this condition, she will hand the minimum amount of money.\nFind the amount of money that she will hand to the cashier. Iroha is very particular about numbers. There are K digits that she dislikes: D_1, D_2, ..., D_K. She is shopping, and now paying at the cashier.\nHer total is N yen (the currency of Japan), thus she has to hand at least N yen to the cashier (and possibly receive the change). However, as mentioned before, she is very particular about numbers. When she hands money to the cashier, the decimal notation of the amount must not contain any digits that she dislikes. Under this condition, she will hand the minimum amount of money. Find the amount of money that she will hand to the cashier. Print the amount of money that Iroha will hand to the cashier. She dislikes all digits except 0 and 2. The smallest integer equal to or greater than N=1000 whose decimal notation contains only 0 and 2, is 2000. Iroha is very particular about numbers. There are K digits that she dislikes: D_1, D_2, ..., D_K. She is shopping, and now paying at the cashier.\nHer total is N yen (the currency of Japan), thus she has to hand at least N yen to the cashier (and possibly receive the change). However, as mentioned before, she is very particular about numbers. When she hands money to the cashier, the decimal notation of the amount must not contain any digits that she dislikes. Under this condition, she will hand the minimum amount of money. Find the amount of money that she will hand to the cashier.",
        "difficulty": "Hard",
        "category": "Math & Logic",
        "tags": [
          "math",
          "sorting"
        ],
        "source": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p04045.html"
      },
      "constraints": {
        "timeLimit": null,
        "memoryLimit": null,
        "inputConstraints": {
          "description": "1 ≦ N < 10000\n 1 ≦ K < 10\n 0 ≦ D_1 < D_2 < … < D_K≦9\n\\{D_1,D_2,...,D_K\\} ≠ \\{1,2,3,4,5,6,7,8,9\\}",
          "ranges": "10000; 10; 1"
        },
        "languageRestrictions": []
      },
      "examples": {
        "sampleCases": [
          {
            "input": "1000 8\n1 3 4 5 6 7 8 9",
            "output": "2000 She dislikes all digits except 0 and 2. The smallest integer equal to or greater than N=1000 whose decimal notation contains only 0 and 2, is 2000.",
            "explanation": ""
          }
        ],
        "testCases": []
      },
      "codeTemplates": {
        "python": "def solve():\n    # Read input\n    # Process data\n    # Output result\n    pass\n\nif __name__ == \"__main__\":\n    solve()",
        "cpp": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Read input\n    // Process data\n    // Output result\n    return 0;\n}",
        "java": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        // Read input\n        // Process data\n        // Output result\n        sc.close();\n    }\n}",
        "javascript": "function solve() {\n    // Read input\n    // Process data\n    // Output result\n}\n\nsolve();"
      },
      "metadata": {
        "extractedFrom": "/Users/eliyoung/Project_CodeNet/doc/problem_descriptions/p04045.html",
        "confidence": 1.0,
        "notes": "Extracted from Project CodeNet problem p04045"
      }
    }
  ]
}